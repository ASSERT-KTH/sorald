<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594144207864" clover="4.4.1">
   <project name="svm-parent 0.0.1-SNAPSHOT (Aggregated)" timestamp="1594144203554">
      <metrics coveredelements="781" complexity="2313" loc="13485" methods="1627" classes="369" statements="3283" packages="52" coveredconditionals="178" coveredmethods="88" elements="5638" ncloc="10562" files="337" conditionals="728" coveredstatements="515"/>
      <package name="com.lexicalscope.svm.j.instruction.symbolic.pc">
         <metrics coveredelements="0" complexity="14" loc="66" methods="13" classes="1" statements="13" coveredconditionals="0" coveredmethods="0" elements="28" ncloc="52" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/pc/PcBuilder.java" name="PcBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="66" coveredmethods="0" methods="13" elements="28" classes="1" ncloc="52" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="PcBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="13" elements="28" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="icmpEq(ISymbol,ISymbol) : ICmpEqSymbol" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmplt(ISymbol,ISymbol) : BoolSymbol" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmplt(int,ISymbol) : BoolSymbol" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert(BoolSymbol) : BoolSymbol" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmpgt(ISymbol,ISymbol) : BoolSymbol" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmpgt(ISymbol,int) : BoolSymbol" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmpge(ISymbol,ISymbol) : BoolSymbol" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmple(ISymbol,ISymbol) : BoolSymbol" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="asISymbol(Object) : ISymbol" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line complexity="1" visibility="public" signature="and(BoolSymbol,BoolSymbol) : BoolSymbol" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(BoolSymbol,BoolSymbol) : BoolSymbol" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="truth() : BoolSymbol" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="falsity() : BoolSymbol" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.symbolic.symbols">
         <metrics coveredelements="0" complexity="269" loc="1297" methods="174" classes="43" statements="353" coveredconditionals="0" coveredmethods="0" elements="669" ncloc="1034" files="43" conditionals="142" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/AbstractBoolSymbol.java" name="AbstractBoolSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="34" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="27" statements="13" conditionals="8" coveredstatements="0"/>
            <class name="AbstractBoolSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="26" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="isTT() : boolean" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFF() : boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="and(BoolSymbol) : BoolSymbol" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="14" type="cond"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="16" type="cond"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="or(BoolSymbol) : BoolSymbol" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : BoolSymbol" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/AbstractUnaryBoolSymbol.java" name="AbstractUnaryBoolSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="23" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="19" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="AbstractUnaryBoolSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractUnaryBoolSymbol(ISymbol)" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/AndSymbol.java" name="AndSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="56" coveredmethods="0" methods="5" elements="56" classes="1" ncloc="50" statements="27" conditionals="24" coveredstatements="0"/>
            <class name="AndSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="5" elements="56" statements="27" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="AndSymbol(BoolSymbol,BoolSymbol)" num="7" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="8" type="cond"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/BoolSymbol.java" name="BoolSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="12" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BoolSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/DivSymbol.java" name="DivSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="35" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="DivSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DivSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/EqSymbol.java" name="EqSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="EqSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EqSymbol(ISymbol)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/FalseSymbol.java" name="FalseSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="36" coveredmethods="0" methods="8" elements="15" classes="1" ncloc="26" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="FalseSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="15" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="FalseSymbol()" num="7" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isTT() : boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFF() : boolean" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(BoolSymbol) : BoolSymbol" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(BoolSymbol) : BoolSymbol" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : BoolSymbol" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/GeSymbol.java" name="GeSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="GeSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GeSymbol(ISymbol)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/GtSymbol.java" name="GtSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="GtSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GtSymbol(ISymbol)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IAddSymbol.java" name="IAddSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="37" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="IAddSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IAddSymbol(ISymbol,ISymbol)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IAndSymbol.java" name="IAndSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="35" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="IAndSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IAndSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IArrayAndLengthSymbols.java" name="IArrayAndLengthSymbols.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="20" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="IArrayAndLengthSymbols">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IArrayAndLengthSymbols(IArraySymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArraySymbol() : IArraySymbol" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLengthSymbol() : ISymbol" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IArraySelectSymbol.java" name="IArraySelectSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="38" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="32" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="IArraySelectSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IArraySelectSymbol(IArraySymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IArrayStoreSymbol.java" name="IArrayStoreSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="41" coveredmethods="0" methods="5" elements="21" classes="1" ncloc="35" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="IArrayStoreSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="21" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IArrayStoreSymbol(IArraySymbol,ISymbol,ISymbol)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IArraySymbol.java" name="IArraySymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IArraySymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IArrayTerminalSymbol.java" name="IArrayTerminalSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="36" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="29" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="IArrayTerminalSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="16" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IArrayTerminalSymbol(int)" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : int" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IArrayZeroedSymbol.java" name="IArrayZeroedSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="23" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="IArrayZeroedSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="4" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="9" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ICmpEqSymbol.java" name="ICmpEqSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="39" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="30" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ICmpEqSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="26" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ICmpEqSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ICmpGeSymbol.java" name="ICmpGeSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="40" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="31" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="ICmpGeSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="28" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ICmpGeSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="8" type="cond"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ICmpGtSymbol.java" name="ICmpGtSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="39" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="30" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ICmpGtSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="26" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ICmpGtSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ICmpLeSymbol.java" name="ICmpLeSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="39" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="30" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ICmpLeSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="26" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ICmpLeSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ICmpLtSymbol.java" name="ICmpLtSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="44" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="36" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ICmpLtSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="26" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ICmpLtSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ICmpNeSymbol.java" name="ICmpNeSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="39" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="30" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ICmpNeSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="26" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ICmpNeSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IConstSymbol.java" name="IConstSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="37" coveredmethods="0" methods="6" elements="17" classes="1" ncloc="30" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="IConstSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="17" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IConstSymbol(int)" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="val() : int" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IMulSymbol.java" name="IMulSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="37" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="IMulSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IMulSymbol(ISymbol,ISymbol)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/INegSymbol.java" name="INegSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="35" coveredmethods="0" methods="5" elements="15" classes="1" ncloc="27" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="INegSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="15" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="INegSymbol(ISymbol)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/IRemSymbol.java" name="IRemSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="40" coveredmethods="0" methods="5" elements="34" classes="1" ncloc="31" statements="15" conditionals="14" coveredstatements="0"/>
            <class name="IRemSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="5" elements="34" statements="15" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IRemSymbol(ISymbol,ISymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="14" type="cond"/>
            <line num="15" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="15" type="cond"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="20" type="cond"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ISymbol.java" name="ISymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="6" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ISymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/ITerminalSymbol.java" name="ITerminalSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="39" coveredmethods="0" methods="7" elements="18" classes="1" ncloc="30" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="ITerminalSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="18" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ITerminalSymbol(int)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ITerminalSymbol(String)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Object" num="38" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/LeSymbol.java" name="LeSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LeSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LeSymbol(ISymbol)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/LtSymbol.java" name="LtSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LtSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LtSymbol(ISymbol)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/NeSymbol.java" name="NeSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="NeSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NeSymbol(ISymbol)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/NotSymbol.java" name="NotSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="33" coveredmethods="0" methods="5" elements="15" classes="1" ncloc="27" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="NotSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="15" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NotSymbol(BoolSymbol)" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/OSymbol.java" name="OSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/OTerminalSymbol.java" name="OTerminalSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="41" coveredmethods="0" methods="6" elements="21" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="OTerminalSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="21" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OTerminalSymbol(int,String)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OTerminalSymbol(String,String)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="klass() : String" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/OrSymbol.java" name="OrSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="55" coveredmethods="0" methods="5" elements="54" classes="1" ncloc="49" statements="27" conditionals="22" coveredstatements="0"/>
            <class name="OrSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="5" elements="54" statements="27" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OrSymbol(BoolSymbol,BoolSymbol)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/StateBuilder.java" name="StateBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="34" coveredmethods="0" methods="7" elements="14" classes="1" ncloc="26" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="StateBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="iarraySymbol() : IArraySymbol" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iarrayZeroed() : IArraySymbol" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="intSymbol() : ITerminalSymbol" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="intConst(int) : IConstSymbol" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayStore(IArraySymbol,ISymbol,ISymbol) : IArraySymbol" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraySelect(IArraySymbol,ISymbol) : IArraySelectSymbol" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iadd(ISymbol,ISymbol) : IAddSymbol" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/SubSymbol.java" name="SubSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="37" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="SubSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SubSymbol(ISymbol,ISymbol)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/Symbol.java" name="Symbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Symbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/SymbolFactory.java" name="SymbolFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SymbolFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/SymbolMatchers.java" name="SymbolMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="33" coveredmethods="0" methods="3" elements="12" classes="1" ncloc="27" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="SymbolMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="symbolEquivalentTo(int) : Matcher&lt;Symbol&gt;" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="matchesSafely(Symbol,Description) : boolean" num="19" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/SymbolVisitor.java" name="SymbolVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="34" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SymbolVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/symbols/TrueSymbol.java" name="TrueSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="36" coveredmethods="0" methods="8" elements="15" classes="1" ncloc="26" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="TrueSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="15" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TrueSymbol()" num="7" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isTT() : boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFF() : boolean" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(SymbolVisitor&lt;T, E&gt;) : T" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(BoolSymbol) : BoolSymbol" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(BoolSymbol) : BoolSymbol" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : BoolSymbol" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.symbolic">
         <metrics coveredelements="0" complexity="4" loc="32" methods="4" classes="2" statements="3" coveredconditionals="0" coveredmethods="0" elements="7" ncloc="23" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/PcMatchers.java" name="PcMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="14" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PcMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="pcIs(BoolSymbol) : Matcher&lt;BoolSymbol&gt;" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jsymbols/src/main/java/com/lexicalscope/svm/j/instruction/symbolic/PcMetaKey.java" name="PcMetaKey.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="18" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PcMetaKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="PcMetaKey()" num="9" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="valueType() : Class&lt;BoolSymbol&gt;" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.versions">
         <metrics coveredelements="0" complexity="3" loc="20" methods="3" classes="1" statements="4" coveredconditionals="0" coveredmethods="0" elements="7" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-versions-inline/src/main/java/com/lexicalscope/svm/versions/Version.java" name="Version.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="20" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Version">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="atMost(int) : boolean" num="6" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="at(int) : Version" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm.search">
         <metrics coveredelements="0" complexity="15" loc="80" methods="10" classes="1" statements="22" coveredconditionals="0" coveredmethods="0" elements="42" ncloc="66" files="1" conditionals="10" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/search/DepthFirstStateSearch.java" name="DepthFirstStateSearch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="80" coveredmethods="0" methods="10" elements="42" classes="1" ncloc="66" statements="22" conditionals="10" coveredstatements="0"/>
            <class name="DepthFirstStateSearch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="10" elements="42" statements="22" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="firstResult() : S" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="18" type="cond"/>
            <line complexity="3" visibility="public" signature="reachedLeaf() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pendingState() : S" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fork(S,S[]) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forkDisjoined(S,S[]) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="roundRobin() : void" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="consider(S) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="results() : Collection&lt;S&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goal() : void" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="pending() : Deque&lt;S&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm">
         <metrics coveredelements="11" complexity="18" loc="155" methods="14" classes="8" statements="26" coveredconditionals="0" coveredmethods="2" elements="44" ncloc="111" files="8" conditionals="4" coveredstatements="9"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/SearchLimits.java" name="SearchLimits.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SearchLimits">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/StateCountSearchLimit.java" name="StateCountSearchLimit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="StateCountSearchLimit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="withinLimits() : boolean" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="searchedState() : void" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/StateSearch.java" name="StateSearch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StateSearch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/TerminationException.java" name="TerminationException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="9" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TerminationException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="fillInStackTrace() : Throwable" num="5" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/TimerSearchLimit.java" name="TimerSearchLimit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="46" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="TimerSearchLimit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimerSearchLimit(long)" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="limitByTime(int) : TimerSearchLimit" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="withinLimits() : boolean" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="searchedState() : void" num="37" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/Vm.java" name="Vm.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Vm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/VmImpl.java" name="VmImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="8" loc="42" coveredmethods="2" methods="5" elements="20" classes="1" ncloc="35" statements="13" conditionals="2" coveredstatements="9"/>
            <class name="VmImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="8" coveredmethods="2" methods="5" elements="20" statements="13" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="VmImpl(StateSearch&lt;S&gt;)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VmImpl(StateSearch&lt;S&gt;,SearchLimits)" num="13" count="3" type="method"/>
            <line num="14" count="3" type="stmt"/>
            <line num="15" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="execute() : S" num="18" count="3" type="method"/>
            <line num="20" count="3" type="stmt"/>
            <line num="21" count="3" type="stmt"/>
            <line num="22" count="3" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="result() : S" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="results() : Collection&lt;S&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/main/java/com/lexicalscope/svm/vm/VmState.java" name="VmState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VmState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.icompare.working">
         <metrics coveredelements="0" complexity="5" loc="25" methods="3" classes="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="14" ncloc="20" files="2" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/icompare/working/InsidePartition.java" name="InsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="13" coveredmethods="0" methods="1" elements="10" classes="1" ncloc="12" statements="5" conditionals="4" coveredstatements="0"/>
            <class name="InsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="10" statements="5" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="compare(int,int) : int" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="5" type="cond"/>
            <line num="6" count="0" type="stmt"/>
            <line num="7" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="7" type="cond"/>
            <line num="8" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/icompare/working/OutsidePartition.java" name="OutsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="8" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="OutsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="entry(int,int) : int" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callSomeMethods(int,int) : int" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.router.broken">
         <metrics coveredelements="0" complexity="10" loc="38" methods="4" classes="2" statements="15" coveredconditionals="0" coveredmethods="0" elements="27" ncloc="34" files="2" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/router/broken/ExampleServing.java" name="ExampleServing.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="31" coveredmethods="0" methods="3" elements="25" classes="1" ncloc="28" statements="14" conditionals="8" coveredstatements="0"/>
            <class name="ExampleServing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="25" statements="14" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="main(int) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="serve(int) : void" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="15" type="cond"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/router/broken/Router.java" name="Router.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Router">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="matchRoute(String) : String" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.router.working">
         <metrics coveredelements="0" complexity="10" loc="38" methods="4" classes="2" statements="15" coveredconditionals="0" coveredmethods="0" elements="27" ncloc="34" files="2" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/router/working/ExampleServing.java" name="ExampleServing.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="31" coveredmethods="0" methods="3" elements="25" classes="1" ncloc="28" statements="14" conditionals="8" coveredstatements="0"/>
            <class name="ExampleServing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="25" statements="14" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="main(int) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="serve(int) : void" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="15" type="cond"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/router/working/Router.java" name="Router.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Router">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="matchRoute(String) : String" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.doubler.working">
         <metrics coveredelements="0" complexity="3" loc="19" methods="3" classes="2" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" ncloc="14" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/doubler/working/InsidePartition.java" name="InsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="doubleIt(int) : int" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/doubler/working/OutsidePartition.java" name="OutsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="8" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="OutsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="entry(int) : int" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callSomeMethods(int) : int" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.icompare.broken">
         <metrics coveredelements="0" complexity="5" loc="25" methods="3" classes="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="14" ncloc="20" files="2" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/icompare/broken/InsidePartition.java" name="InsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="13" coveredmethods="0" methods="1" elements="10" classes="1" ncloc="12" statements="5" conditionals="4" coveredstatements="0"/>
            <class name="InsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="10" statements="5" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="compare(int,int) : int" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="5" type="cond"/>
            <line num="6" count="0" type="stmt"/>
            <line num="7" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="7" type="cond"/>
            <line num="8" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/icompare/broken/OutsidePartition.java" name="OutsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="8" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="OutsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="entry(int,int) : int" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callSomeMethods(int,int) : int" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.doubler.broken">
         <metrics coveredelements="0" complexity="3" loc="18" methods="3" classes="2" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" ncloc="14" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/doubler/broken/InsidePartition.java" name="InsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="doubleIt(int) : int" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/doubler/broken/OutsidePartition.java" name="OutsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="11" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="8" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="OutsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="entry(int) : int" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callSomeMethods(int) : int" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.isort.broken">
         <metrics coveredelements="0" complexity="8" loc="93" methods="5" classes="2" statements="13" coveredconditionals="0" coveredmethods="0" elements="24" ncloc="34" files="2" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/isort/broken/OutsidePartition.java" name="OutsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="18" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="14" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="OutsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="entry(int[]) : void" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line num="7" count="0" type="stmt"/>
            <line num="8" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="10" type="cond"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entryPoint(int[]) : void" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/isort/broken/SortedList.java" name="SortedList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="75" coveredmethods="0" methods="3" elements="14" classes="1" ncloc="20" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="SortedList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="add(int) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="9" type="cond"/>
            <line num="10" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="10" type="cond"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : int" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples">
         <metrics coveredelements="0" complexity="0" loc="15" methods="0" classes="3" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="10" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/ExamplesMarker.java" name="ExamplesMarker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExamplesMarker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/ExamplesOneMarker.java" name="ExamplesOneMarker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExamplesOneMarker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/ExamplesTwoMarker.java" name="ExamplesTwoMarker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExamplesTwoMarker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.examples.loop.broken">
         <metrics coveredelements="0" complexity="4" loc="24" methods="3" classes="2" statements="5" coveredconditionals="0" coveredmethods="0" elements="10" ncloc="19" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-one/src/main/java/com/lexicalscope/svm/examples/loop/broken/LoopInsidePartition.java" name="LoopInsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="LoopInsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="method(int) : void" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-examples-two/src/main/java/com/lexicalscope/svm/examples/loop/broken/LoopOutsidePartition.java" name="LoopOutsidePartition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="2" elements="8" classes="1" ncloc="13" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="LoopOutsidePartition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="entry(int) : void" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="9" type="cond"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entryPoint(int) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.state">
         <metrics coveredelements="0" complexity="0" loc="5" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="4" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-snapshot/src/main/java/com/lexicalscope/svm/state/Snapshotable.java" name="Snapshotable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Snapshotable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.natives">
         <metrics coveredelements="0" complexity="51" loc="468" methods="47" classes="23" statements="60" coveredconditionals="0" coveredmethods="0" elements="115" ncloc="373" files="23" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/AbstractNativeMethodDef.java" name="AbstractNativeMethodDef.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="23" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractNativeMethodDef">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractNativeMethodDef(String,String,String)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractNativeMethodDef(KlassInternalName,String,String)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : SMethodDescriptor" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/DefaultNativeMethods.java" name="DefaultNativeMethods.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="83" coveredmethods="0" methods="6" elements="33" classes="1" ncloc="73" statements="19" conditionals="8" coveredstatements="0"/>
            <class name="DefaultNativeMethods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="33" statements="19" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultNativeMethods(Map&lt;SMethodDescriptor, NativeMethodDef&gt;)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="resolveNative(InstructionSource,SMethodDescriptor) : MethodBody" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="natives() : NativeMethods" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nativeMethodList() : List&lt;NativeMethodDef&gt;" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addNative(NativeMethodDef) : void" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="natives(List&lt;NativeMethodDef&gt;) : NativeMethods" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_class_getClassLoader0.java" name="Java_lang_class_getClassLoader0.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_class_getClassLoader0">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_class_getClassLoader0()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_class_getComponentType.java" name="Java_lang_class_getComponentType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="22" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_class_getComponentType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_class_getComponentType()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_double_doubleToRawLongBits.java" name="Java_lang_double_doubleToRawLongBits.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="18" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_double_doubleToRawLongBits">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_double_doubleToRawLongBits()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_float_floatToRawIntBits.java" name="Java_lang_float_floatToRawIntBits.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="23" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_float_floatToRawIntBits">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_float_floatToRawIntBits()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_integer_valueOf.java" name="Java_lang_integer_valueOf.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="25" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_integer_valueOf">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_integer_valueOf()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_object_getClass.java" name="Java_lang_object_getClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="21" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_object_getClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_object_getClass()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_object_hashCode.java" name="Java_lang_object_hashCode.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_object_hashCode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_object_hashCode()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_reflect_array_newArray.java" name="Java_lang_reflect_array_newArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_reflect_array_newArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_reflect_array_newArray()" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_runtime_freeMemory.java" name="Java_lang_runtime_freeMemory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_runtime_freeMemory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_runtime_freeMemory()" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_system_arraycopy.java" name="Java_lang_system_arraycopy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_system_arraycopy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_system_arraycopy()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_system_currentTimeMillis.java" name="Java_lang_system_currentTimeMillis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_system_currentTimeMillis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_system_currentTimeMillis()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_system_identityHashCode.java" name="Java_lang_system_identityHashCode.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_system_identityHashCode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_system_identityHashCode()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_system_nanoTime.java" name="Java_lang_system_nanoTime.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_system_nanoTime">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_system_nanoTime()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_lang_thread_currentThread.java" name="Java_lang_thread_currentThread.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_lang_thread_currentThread">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_lang_thread_currentThread()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Java_security_accessController_doPrivileged.java" name="Java_security_accessController_doPrivileged.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Java_security_accessController_doPrivileged">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Java_security_accessController_doPrivileged()" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/NativeMethodDef.java" name="NativeMethodDef.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NativeMethodDef">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/NativeMethods.java" name="NativeMethods.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NativeMethods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Sun_misc_unsafe_addressSize.java" name="Sun_misc_unsafe_addressSize.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="18" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Sun_misc_unsafe_addressSize">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Sun_misc_unsafe_addressSize()" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Sun_misc_unsafe_arrayBaseOffset.java" name="Sun_misc_unsafe_arrayBaseOffset.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Sun_misc_unsafe_arrayBaseOffset">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Sun_misc_unsafe_arrayBaseOffset()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Sun_misc_unsafe_arrayIndexScale.java" name="Sun_misc_unsafe_arrayIndexScale.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Sun_misc_unsafe_arrayIndexScale">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Sun_misc_unsafe_arrayIndexScale()" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jnatives/src/main/java/com/lexicalscope/svm/j/natives/Sun_reflect_reflection_getCallerClass.java" name="Sun_reflect_reflection_getCallerClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Sun_reflect_reflection_getCallerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Sun_reflect_reflection_getCallerClass()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructions(InstructionSource) : MethodBody" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.classloading.linking">
         <metrics coveredelements="0" complexity="21" loc="139" methods="10" classes="2" statements="42" coveredconditionals="0" coveredmethods="0" elements="68" ncloc="115" files="2" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/linking/LinkedMethod.java" name="LinkedMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="LinkedMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinkedMethod(int,int,Instruction)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxLocals() : int" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxStack() : int" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entryPoint() : Instruction" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/linking/MethodLinker.java" name="MethodLinker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="112" coveredmethods="0" methods="6" elements="58" classes="1" ncloc="94" statements="36" conditionals="16" coveredstatements="0"/>
            <class name="MethodLinker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="6" elements="58" statements="36" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodLinker(MethodNode,SMethodDescriptor,AbstractInsnNode,InstructionSource,MethodInstrumentor)" num="30" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="linkBytecodeMethod() : LinkedMethod" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="nextInstruction(InstructionInternal) : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noOp() : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="connectUpJumpsWithTargets() : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="instructionFor(AbstractInsnNode,InstructionSource.InstructionSink) : void" num="97" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.classloading">
         <metrics coveredelements="0" complexity="112" loc="778" methods="74" classes="18" statements="181" coveredconditionals="0" coveredmethods="0" elements="315" ncloc="616" files="17" conditionals="60" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/AsmSClassLoader.java" name="AsmSClassLoader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="71" coveredmethods="0" methods="9" elements="24" classes="1" ncloc="59" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="AsmSClassLoader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="24" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AsmSClassLoader(InstructionSource,Instrumentation,NativeMethods,ClassSource)" num="27" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsmSClassLoader()" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="AsmSClassLoader(InstructionFactory)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="load(KlassInternalName) : SClass" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="load(Class&lt;?&gt;) : SClass" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveNative(SMethodDescriptor) : MethodBody" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instrument(SMethodDescriptor,Instruction) : Instruction" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="virtualMethod(Class&lt;?&gt;,String,String) : SMethod" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredMethod(Class&lt;?&gt;,String,String) : SMethod" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/AsmSMethod.java" name="AsmSMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="113" coveredmethods="0" methods="11" elements="53" classes="1" ncloc="94" statements="34" conditionals="8" coveredstatements="0"/>
            <class name="AsmSMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="11" elements="53" statements="34" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AsmSMethod(SClassLoader,SMethodDescriptor,InstructionSource,MethodNode)" num="30" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxLocals() : int" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxStack() : int" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entry() : Instruction" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="link() : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="linkNativeMethod() : LinkedMethod" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getEntryPoint() : AbstractInsnNode" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argSize() : int" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : SMethodDescriptor" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="parameterNames() : List&lt;String&gt;" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/ByteCodeReader.java" name="ByteCodeReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ByteCodeReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/CachingByteCodeReader.java" name="CachingByteCodeReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="31" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="25" statements="6" conditionals="4" coveredstatements="0"/>
            <class name="CachingByteCodeReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="12" statements="6" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CachingByteCodeReader(InstructionSource,ClassSource)" num="15" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="load(SClassLoader,KlassInternalName) : SClass" num="21" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/ClassLoaded.java" name="ClassLoaded.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassLoaded">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/ClassSource.java" name="ClassSource.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassSource">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/ClasspathClassRepository.java" name="ClasspathClassRepository.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="34" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="25" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="ClasspathClassRepository">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="12" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ClasspathClassRepository()" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClasspathClassRepository(ClassLoader)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadFromRepository(String) : URL" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="loadFromRepository(KlassInternalName) : URL" num="25" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classpathClassRepostory(Class&lt;?&gt;) : ClasspathClassRepository" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/CowMap.java" name="CowMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="104" coveredmethods="0" methods="16" elements="49" classes="2" ncloc="85" statements="25" conditionals="8" coveredstatements="0"/>
            <class name="CowMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="15" elements="47" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="CowMap.MapInternal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CowMap()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CowMap(CowMap&lt;K, V&gt;)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsValue(Object) : boolean" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : V" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="put(K,V) : V" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove(Object) : V" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="putAll(Map&lt;? extends K, ? extends V&gt;) : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="clear() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keySet() : Set&lt;K&gt;" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : Collection&lt;V&gt;" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Entry&lt;K, V&gt;&gt;" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="copy() : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MapInternal(Map&lt;K, V&gt;)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/DuplicateClassDefinitionException.java" name="DuplicateClassDefinitionException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="10" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DuplicateClassDefinitionException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DuplicateClassDefinitionException(SClass)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/JarClassRepository.java" name="JarClassRepository.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="51" coveredmethods="0" methods="6" elements="25" classes="1" ncloc="42" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="JarClassRepository">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="6" elements="25" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JarClassRepository(Class&lt;?&gt;,String)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JarClassRepository(URL,String)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="loadFromRepository(KlassInternalName) : URL" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadFromLibDirectoryInSameJarFileAs(Class&lt;?&gt;) : JarClassRepository" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="urlOfJarFile(Class&lt;?&gt;) : URL" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/MethodInstrumentor.java" name="MethodInstrumentor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodInstrumentor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/MissingClassDefinitionException.java" name="MissingClassDefinitionException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="14" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MissingClassDefinitionException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MissingClassDefinitionException(KlassInternalName,Map&lt;KlassInternalName, SClass&gt;)" num="9" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/ResourceByteCodeReader.java" name="ResourceByteCodeReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="108" coveredmethods="0" methods="4" elements="53" classes="1" ncloc="94" statements="35" conditionals="14" coveredstatements="0"/>
            <class name="ResourceByteCodeReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="4" elements="53" statements="35" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ResourceByteCodeReader(InstructionSource,ClassSource)" num="27" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="load(SClassLoader,KlassInternalName) : AsmSClass" num="34" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="loadLocalVersion(KlassInternalName) : URL" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="loadClassBytecodeFromUrl(URL) : ClassNode" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/SClassLoader.java" name="SClassLoader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SClassLoader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/SClassLoadingFailException.java" name="SClassLoadingFailException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="SClassLoadingFailException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SClassLoadingFailException(KlassInternalName,Exception)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SClassLoadingFailException(String,Exception)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/SClassNotFoundException.java" name="SClassNotFoundException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="9" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SClassNotFoundException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SClassNotFoundException(KlassInternalName)" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/StaticsImpl.java" name="StaticsImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="162" coveredmethods="0" methods="16" elements="77" classes="1" ncloc="124" statements="43" conditionals="18" coveredstatements="0"/>
            <class name="StaticsImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="16" elements="77" statements="43" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticsImpl(SClassLoader)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="StaticsImpl(SClassLoader,CowMap&lt;KlassInternalName, SClass&gt;,CowMap&lt;SClass, ObjectRef&gt;,CowMap&lt;SClass, ObjectRef&gt;)" num="37" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : Statics" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="defineClass(KlassInternalName) : List&lt;SClass&gt;" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="definePrimitiveClass(KlassInternalName) : SClass" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cache(SClass) : SClass" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cache(KlassInternalName,SClass) : SClass" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDefined(KlassInternalName) : boolean" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="load(KlassInternalName) : SClass" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="staticsAt(SClass,ObjectRef) : void" num="124" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="whereMyStaticsAt(SClass) : ObjectRef" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="classAt(SClass,ObjectRef) : void" num="137" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="whereMyClassAt(SClass) : ObjectRef" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whereMyClassAt(KlassInternalName) : ObjectRef" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classClass() : SClass" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticsMarker(SClass) : StaticsMarker" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.classloading.asm">
         <metrics coveredelements="0" complexity="51" loc="382" methods="41" classes="5" statements="75" coveredconditionals="0" coveredmethods="0" elements="132" ncloc="308" files="5" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/asm/AsmFieldDesc.java" name="AsmFieldDesc.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AsmFieldDesc">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AsmFieldDesc(FieldNode)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="desc() : String" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStatic() : boolean" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/asm/AsmSClass.java" name="AsmSClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="191" coveredmethods="0" methods="27" elements="81" classes="1" ncloc="156" statements="44" conditionals="10" coveredstatements="0"/>
            <class name="AsmSClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="27" elements="81" statements="44" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="AsmSClass(URL,KlassInternalName,SClass,List&lt;SClass&gt;,DeclaredFields,DeclaredMethods,SClass)" num="40" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="virtualMethod(SMethodDescriptor) : SMethod" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredMethod(SMethodName) : SMethod" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasStaticInitialiser() : boolean" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allocateSize() : int" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldIndex(SFieldName) : int" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldIndex(String) : int" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldAtIndex(int) : SField" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasField(SFieldName) : boolean" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fieldInit() : List&lt;Object&gt;" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticFieldCount() : int" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticFieldIndex(SFieldName) : int" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasStaticField(SFieldName) : boolean" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : KlassInternalName" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="superclass() : SClass" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="statics() : Allocatable" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allocateSize() : int" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instanceOf(SClass) : boolean" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadedFrom() : URL" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isArray() : boolean" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isKlassKlass() : boolean" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fields() : Fields" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="superTypes() : Collection&lt;SClass&gt;" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methods() : Methods" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="componentType() : SClass" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/asm/AsmSClassBuilder.java" name="AsmSClassBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="89" coveredmethods="0" methods="7" elements="28" classes="1" ncloc="72" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="AsmSClassBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="28" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AsmSClassBuilder(SClassLoader,InstructionSource,SClass)" num="28" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withFields(List&lt;FieldNode&gt;) : AsmSClassBuilder" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="withField(SField) : void" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="withMethods(List&lt;MethodNode&gt;) : AsmSClassBuilder" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withName(KlassInternalName) : AsmSClassBuilder" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredFields() : DeclaredFields" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredMethods() : DeclaredMethods" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/asm/AsmSClassFactory.java" name="AsmSClassFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="42" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="34" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="AsmSClassFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="newSClass(SClassLoader,InstructionSource,URL,ClassNode,SClass,List&lt;SClass&gt;,SClass) : AsmSClass" num="16" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/main/java/com/lexicalscope/svm/classloading/asm/ClassNodeAdapter.java" name="ClassNodeAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="38" coveredmethods="0" methods="3" elements="12" classes="1" ncloc="30" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="ClassNodeAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ClassNodeAdapter(ClassNode)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fields() : List&lt;FieldNode&gt;" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methods() : List&lt;MethodNode&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm.j">
         <metrics coveredelements="32" complexity="278" loc="1788" methods="247" classes="23" statements="323" coveredconditionals="4" coveredmethods="9" elements="604" ncloc="1407" files="21" conditionals="34" coveredstatements="19"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/EntryPoint.java" name="EntryPoint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="26" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="EntryPoint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EntryPoint(Instruction,int)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entryPoint() : Instruction" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argSize() : int" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/HeapMatchers.java" name="HeapMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="47" coveredmethods="0" methods="6" elements="20" classes="2" ncloc="39" statements="10" conditionals="4" coveredstatements="0"/>
            <class name="HeapMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="14" statements="6" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="HeapMatchers.HeapLocation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HeapLocation(ObjectRef,SClass,String)" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="heapLocation(ObjectRef,SClass,String) : HeapLocation" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(HeapLocation,Object) : Matcher&lt;? super Heap&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="describeTo(Description) : void" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line complexity="2" visibility="protected" signature="matchesSafely(Heap,Description) : boolean" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/Instruction.java" name="Instruction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="24" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Instruction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/InstructionCode.java" name="InstructionCode.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="138" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="117" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="InstructionCode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="isReturn() : boolean" num="134" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isMethodExit() : boolean" num="135" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isMethodCall() : boolean" num="136" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDynamicMethodCall() : boolean" num="137" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/InstructionMatchers.java" name="InstructionMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="52" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="40" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="InstructionMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="instructionSequence(InstructionCode) : Matcher&lt;Instruction&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionSequence(Matcher&lt;Instruction&gt;) : Matcher&lt;Iterable&lt;Instruction&gt;&gt;" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionCodes(InstructionCode) : List&lt;Matcher&lt;Instruction&gt;&gt;" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionCode(Matcher&lt;InstructionCode&gt;) : Matcher&lt;Instruction&gt;" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Instruction) : InstructionCode" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionLine(Matcher&lt;Integer&gt;) : Matcher&lt;Instruction&gt;" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Instruction) : Integer" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionAt(InstructionCode,int) : Matcher&lt;Instruction&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/InstructionQuery.java" name="InstructionQuery.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="75" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="62" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstructionQuery">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InstructionQuery.MethodArguments">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/InstructionQueryAdapter.java" name="InstructionQueryAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="55" loc="226" coveredmethods="0" methods="55" elements="110" classes="1" ncloc="170" statements="55" conditionals="0" coveredstatements="0"/>
            <class name="InstructionQueryAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="55" coveredmethods="0" methods="55" elements="110" statements="55" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defaultResult() : T" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nativ3() : T" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="synthetic() : T" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodentry(SMethodDescriptor) : T" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodexit() : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraycopy() : T" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraylength() : T" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayload() : T" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraystore() : T" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newarray() : T" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="branch() : T" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="f2i() : T" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iinc() : T" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="i2f() : T" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="i2l() : T" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="i2c() : T" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkcast() : T" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getstatic() : T" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance0f() : T" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="l2i() : T" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lcmp() : T" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lushr() : T" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokevirtual(SMethodDescriptor,MethodArguments) : T" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokestatic(SMethodDescriptor,MethodArguments) : T" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokespecial(SMethodDescriptor,MethodArguments) : T" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeinterface(SMethodDescriptor,MethodArguments) : T" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aconst_null() : T" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getfield(SFieldName) : T" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putfield(SFieldName) : T" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="binaryop() : T" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nularyop() : T" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unaryop() : T" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectpoolload() : T" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringpoolload() : T" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="load(int) : T" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="store(int) : T" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dup_x1() : T" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : T" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="r3turn(SMethodDescriptor,int) : T" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dup() : T" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifacmpeq() : T" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifle() : T" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifacmpne() : T" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifeq() : T" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iflt() : T" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifne() : T" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifnonnull() : T" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifnull() : T" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="icmp() : T" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifgt() : T" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="got0() : T" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifge() : T" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putstatic() : T" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadarg(Object) : T" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newobject(KlassInternalName) : T" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/JState.java" name="JState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="82" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="65" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/JStateAdaptor.java" name="JStateAdaptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="56" loc="293" coveredmethods="0" methods="56" elements="112" classes="1" ncloc="234" statements="56" conditionals="0" coveredstatements="0"/>
            <class name="JStateAdaptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="56" coveredmethods="0" methods="56" elements="112" statements="56" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JStateAdaptor(JState)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : JState" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stack() : Stack" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pushFrame(StackFrame) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="popFrame(int) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousFrame() : StackFrame" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentFrame() : StackFrame" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="terminate() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="advanceToNextInstruction() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="advanceTo(Instruction) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionNext() : Instruction" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionJmpTarget() : Instruction" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instruction() : Instruction" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local(int) : Object" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local(int,Object) : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fork(JState[]) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forkDisjoined(JState[]) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fork() : JState[]" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goal() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whereMyStaticsAt(SClass) : ObjectRef" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticsAt(SClass,ObjectRef) : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whereMyClassAt(KlassInternalName) : ObjectRef" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classAt(SClass,ObjectRef) : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticsMarker(SClass) : StaticsMarker" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defineClass(KlassInternalName) : List&lt;SClass&gt;" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="definePrimitiveClass(KlassInternalName) : SClass" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDefined(KlassInternalName) : boolean" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadKlassFor(KlassInternalName) : SClass" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newObject(Allocatable) : ObjectRef" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode(ObjectRef) : Object" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullPointer() : ObjectRef" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(ObjectRef,int,Object) : void" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(ObjectRef,int) : Object" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classClass() : SClass" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentThreadIs(Object) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentThread() : Object" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="push(Object) : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek(int) : Object[]" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : Object" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop(int) : Object[]" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : Object" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="locals(int) : Object[]" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pushDoubleWord(Object) : void" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="popDoubleWord() : Object" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekOperand() : Object" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeta(MetaKey&lt;T&gt;) : T" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeta(MetaKey&lt;T&gt;,T) : void" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceMeta(MetaKey&lt;T&gt;,MetaFactory&lt;T&gt;) : void" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrameMeta(MetaKey&lt;T&gt;) : T" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFrameMeta(MetaKey&lt;T&gt;,T) : void" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsFrameMeta(MetaKey&lt;?&gt;) : boolean" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeFrameMeta(MetaKey&lt;?&gt;) : void" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trace() : SStackTrace" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendentTag() : StateTag" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/JStateImpl.java" name="JStateImpl.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="67" loc="355" coveredmethods="4" methods="59" elements="141" classes="1" ncloc="282" statements="74" conditionals="8" coveredstatements="11"/>
            <class name="JStateImpl">
               <metrics coveredelements="17" coveredconditionals="2" complexity="67" coveredmethods="4" methods="59" elements="141" statements="74" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="JStateImpl(StateTag,StateSearch&lt;JState&gt;,Statics,Stack,Heap,SnapshotableMetaState)" num="28" count="3" type="method"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="eval() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instruction() : Instruction" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="stackFrame() : StackFrame" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stack() : Stack" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fork() : JState[]" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeta(MetaKey&lt;T&gt;) : T" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeta(MetaKey&lt;T&gt;,T) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceMeta(MetaKey&lt;T&gt;,MetaFactory&lt;T&gt;) : void" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="snapshot() : JStateImpl" num="93" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="94" type="cond"/>
            <line complexity="1" visibility="public" signature="trace() : SStackTrace" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="113" count="1" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line complexity="1" visibility="public" signature="peekOperand() : Object" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullPointer() : ObjectRef" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="push(Object) : void" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : Object" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop(int) : Object[]" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : Object" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek(int) : Object[]" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="locals(int) : Object[]" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode(ObjectRef) : Object" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="advanceTo(Instruction) : void" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(ObjectRef,int) : Object" num="178" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(ObjectRef,int,Object) : void" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="popDoubleWord() : Object" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pushDoubleWord(Object) : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionJmpTarget() : Instruction" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionNext() : Instruction" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="advanceToNextInstruction() : void" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadKlassFor(KlassInternalName) : SClass" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentThread() : Object" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentThreadIs(Object) : void" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDefined(KlassInternalName) : boolean" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="definePrimitiveClass(KlassInternalName) : SClass" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defineClass(KlassInternalName) : List&lt;SClass&gt;" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classClass() : SClass" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classAt(SClass,ObjectRef) : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newObject(Allocatable) : ObjectRef" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticsAt(SClass,ObjectRef) : void" num="259" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticsMarker(SClass) : StaticsMarker" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousFrame() : StackFrame" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentFrame() : StackFrame" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="terminate() : void" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whereMyClassAt(KlassInternalName) : ObjectRef" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whereMyStaticsAt(SClass) : ObjectRef" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local(int,Object) : void" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fork(JState[]) : void" num="300" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forkDisjoined(JState[]) : void" num="312" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goal() : void" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="popFrame(int) : void" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local(int) : Object" num="326" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pushFrame(StackFrame) : void" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendentTag() : StateTag" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrameMeta(MetaKey&lt;T&gt;) : T" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFrameMeta(MetaKey&lt;T&gt;,T) : void" num="344" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsFrameMeta(MetaKey&lt;?&gt;) : boolean" num="348" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeFrameMeta(MetaKey&lt;?&gt;) : void" num="352" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/JavaConstants.java" name="JavaConstants.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JavaConstants">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/KlassInternalName.java" name="KlassInternalName.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="33" loc="119" coveredmethods="5" methods="15" elements="85" classes="1" ncloc="100" statements="52" conditionals="18" coveredstatements="8"/>
            <class name="KlassInternalName">
               <metrics coveredelements="15" coveredconditionals="2" complexity="33" coveredmethods="5" methods="15" elements="85" statements="52" conditionals="18" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="KlassInternalName(String)" num="15" count="2" type="method"/>
            <line falsecount="0" truecount="2" num="16" type="cond"/>
            <line num="17" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="internalName(String) : KlassInternalName" num="20" count="2" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="internalName(Class&lt;?&gt;) : KlassInternalName" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="internalName(List&lt;String&gt;) : List&lt;KlassInternalName&gt;" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="componentType() : String" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line complexity="1" visibility="private" signature="arrayContentClassName() : String" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isArrayClass() : boolean" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="toClassName(String) : String" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="string() : String" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(KlassInternalName) : int" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="83" type="cond"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="2" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyKlass() : Matcher&lt;KlassInternalName&gt;" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchingKlass(Class&lt;?&gt;) : Matcher&lt;KlassInternalName&gt;" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/MethodBody.java" name="MethodBody.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="20" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="MethodBody">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodBody(Instruction,int,int)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxLocals() : int" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxStack() : int" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entryPoint() : Instruction" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/MethodResolver.java" name="MethodResolver.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodResolver">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/Op.java" name="Op.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Op">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/SVirtualMethodName.java" name="SVirtualMethodName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SVirtualMethodName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/StateMatchers.java" name="StateMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="169" coveredmethods="0" methods="31" elements="71" classes="1" ncloc="143" statements="40" conditionals="0" coveredstatements="0"/>
            <class name="StateMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="31" elements="71" statements="40" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="operandEqual(Object) : Matcher&lt;JState&gt;" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="operandMatching(Matcher&lt;Object&gt;) : Matcher&lt;JState&gt;" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(JState,Description) : boolean" num="31" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionEqual(Instruction) : Matcher&lt;? super JState&gt;" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(JState,Description) : boolean" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="terminalInstruction() : Matcher&lt;? super JState&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(JState,Description) : boolean" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stackSize(int) : Matcher&lt;? super JState&gt;" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(JState,Description) : boolean" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalTerminiationWithResult(Object) : Matcher&lt;? super JState&gt;" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalTerminiationWithResultMatching(Matcher&lt;Object&gt;) : Matcher&lt;? super JState&gt;" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalTerminiation() : Matcher&lt;? super JState&gt;" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entryPoint() : Matcher&lt;JState&gt;" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentMethodIs(SMethodName) : Matcher&lt;JState&gt;" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="currentMethod(Matcher&lt;? super SMethodDescriptor&gt;) : Matcher&lt;JState&gt;" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(JState) : SMethodDescriptor" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="metaIs(MetaKey&lt;T&gt;,Matcher&lt;? super T&gt;) : Matcher&lt;JState&gt;" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(JState) : T" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnVoid() : Matcher&lt;JState&gt;" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnOne() : Matcher&lt;JState&gt;" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lineNumber(int) : Matcher&lt;JState&gt;" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="terminate() : Matcher&lt;JState&gt;" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lineNumber(Matcher&lt;Integer&gt;) : Matcher&lt;JState&gt;" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(JState) : Integer" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionCode(InstructionCode) : Matcher&lt;JState&gt;" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="instructionCode(Matcher&lt;InstructionCode&gt;) : Matcher&lt;JState&gt;" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(JState) : InstructionCode" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/StateTag.java" name="StateTag.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StateTag">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/Statics.java" name="Statics.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Statics">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/StaticsMarker.java" name="StaticsMarker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="43" coveredmethods="0" methods="6" elements="21" classes="1" ncloc="34" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="StaticsMarker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="21" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticsMarker(SClass,SClass)" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="virtualMethod(SMethodDescriptor) : SMethod" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredMethod(SMethodName) : SMethod" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="klass() : SClass" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/Vop.java" name="Vop.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Vop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm.j.queries">
         <metrics coveredelements="0" complexity="11" loc="71" methods="11" classes="2" statements="11" coveredconditionals="0" coveredmethods="0" elements="22" ncloc="50" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/queries/IsConstructorCall.java" name="IsConstructorCall.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="34" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="IsConstructorCall">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IsConstructorCall(Class&lt;?&gt;)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsConstructorCall(KlassInternalName)" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsConstructorCall(Matcher&lt;KlassInternalName&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokespecial(SMethodDescriptor,MethodArguments) : Boolean" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defaultResult() : Boolean" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/queries/IsNewInstruction.java" name="IsNewInstruction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="37" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="26" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="IsNewInstruction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IsNewInstruction(Class&lt;?&gt;)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsNewInstruction(KlassInternalName)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsNewInstruction(String)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IsNewInstruction(Matcher&lt;KlassInternalName&gt;)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newobject(KlassInternalName) : Boolean" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defaultResult() : Boolean" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm.j.klass">
         <metrics coveredelements="0" complexity="76" loc="524" methods="67" classes="12" statements="108" coveredconditionals="0" coveredmethods="0" elements="191" ncloc="407" files="12" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/DeclaredFields.java" name="DeclaredFields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="51" coveredmethods="0" methods="9" elements="21" classes="1" ncloc="40" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="DeclaredFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="21" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="addDynamic(SField) : void" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addStatic(SField) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dynamicCount() : int" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dynamicFields() : List&lt;SField&gt;" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticCount() : int" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticFieldsToString() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldInit() : List&lt;Object&gt;" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticFieldIndex(SFieldName) : Integer" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsStaticField(SFieldName) : boolean" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/DeclaredMethods.java" name="DeclaredMethods.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="DeclaredMethods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="add(SMethod) : void" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methods() : Map&lt;SMethodDescriptor, SMethod&gt;" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/FieldDesc.java" name="FieldDesc.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="6" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldDesc">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/Fields.java" name="Fields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="70" coveredmethods="0" methods="10" elements="34" classes="1" ncloc="56" statements="20" conditionals="4" coveredstatements="0"/>
            <class name="Fields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="10" elements="34" statements="20" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Fields()" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Fields(ArrayList&lt;SField&gt;,LinkedHashMap&lt;SFieldName, Integer&gt;)" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexOf(SFieldName) : int" num="24" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexOf(String) : int" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : SField" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(SFieldName) : boolean" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Fields" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extend(KlassInternalName,DeclaredFields) : Fields" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count() : int" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/Methods.java" name="Methods.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="50" coveredmethods="0" methods="6" elements="22" classes="1" ncloc="41" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="Methods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="22" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Methods(KlassInternalName,Map&lt;SMethodDescriptor, SMethod&gt;,Map&lt;SVirtualMethodName, SMethod&gt;)" num="15" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Methods(KlassInternalName)" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extend(KlassInternalName,DeclaredMethods) : Methods" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="resolve(SMethodDescriptor) : SMethod" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="findDefined(SMethodName) : SMethod" num="42" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasStatic(SMethodName) : boolean" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SClass.java" name="SClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="32" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SClassMatchers.java" name="SClassMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="136" coveredmethods="0" methods="25" elements="63" classes="1" ncloc="111" statements="36" conditionals="2" coveredstatements="0"/>
            <class name="SClassMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="25" elements="63" statements="36" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="withIndex(int) : int" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasField(String,int) : Matcher&lt;? super SClass&gt;" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasFieldAtIndex(int,String) : Matcher&lt;? super SClass&gt;" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasStaticField(String,int) : Matcher&lt;? super SClass&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasField(SClass,String,int) : Matcher&lt;? super SClass&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSuperclass(Matcher&lt;SClass&gt;) : Matcher&lt;? super SClass&gt;" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nameIs(Class&lt;?&gt;) : Matcher&lt;SClass&gt;" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name(String) : Matcher&lt;SClass&gt;" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name(KlassInternalName) : Matcher&lt;SClass&gt;" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstanceOf(SClass) : Matcher&lt;? super SClass&gt;" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadedFromSamePlaceAs(Class&lt;?&gt;) : Matcher&lt;? super SClass&gt;" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SClass,Description) : boolean" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SField.java" name="SField.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="35" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="26" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="SField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SField(SFieldName,FieldDesc,Object)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="desc() : String" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStatic() : boolean" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : SFieldName" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : Object" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SFieldName.java" name="SFieldName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="49" coveredmethods="0" methods="6" elements="27" classes="1" ncloc="40" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="SFieldName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="27" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SFieldName(KlassInternalName,String)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compareTo(SFieldName) : int" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SMethod.java" name="SMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="20" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SMethodDescriptor.java" name="SMethodDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SMethodDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/klass/SMethodDescriptorMatchers.java" name="SMethodDescriptorMatchers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SMethodDescriptorMatchers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="anyMethod() : Matcher&lt;SMethodDescriptor&gt;" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SMethodDescriptor,Description) : boolean" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm.j.code">
         <metrics coveredelements="34" complexity="47" loc="251" methods="35" classes="3" statements="66" coveredconditionals="3" coveredmethods="9" elements="121" ncloc="204" files="3" conditionals="20" coveredstatements="22"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/code/AsmSMethodName.java" name="AsmSMethodName.java">
            <metrics coveredelements="26" coveredconditionals="3" complexity="34" loc="177" coveredmethods="6" methods="26" elements="87" classes="1" ncloc="145" statements="47" conditionals="14" coveredstatements="17"/>
            <class name="AsmSMethodName">
               <metrics coveredelements="26" coveredconditionals="3" complexity="34" coveredmethods="6" methods="26" elements="87" statements="47" conditionals="14" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="AsmSMethodName(String,String,String)" num="25" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsmSMethodName(KlassInternalName,String,String)" num="33" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="calcHashCode() : int" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="48" type="cond"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="indexesOfObjectArgs(String) : int[]" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnIsObject() : boolean" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsmSMethodName(Class&lt;?&gt;,String,String)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVoidMethod() : boolean" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compareTo(AsmSMethodName) : int" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="qualifiedName() : String" num="104" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="klassName() : KlassInternalName" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="desc() : String" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argSize() : int" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectArgIndexes() : int[]" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnCount() : int" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="virtualName() : SVirtualMethodName" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticInitialiser(KlassInternalName) : SMethodDescriptor" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultConstructor(KlassInternalName) : SMethodDescriptor" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultConstructor(Class&lt;?&gt;) : SMethodDescriptor" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="method(Class&lt;?&gt;,String,String) : SMethodDescriptor" num="159" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isConstructor() : boolean" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredOn(KlassInternalName) : boolean" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredOn(Matcher&lt;KlassInternalName&gt;) : boolean" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/code/AsmSVirtualMethodName.java" name="AsmSVirtualMethodName.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="13" loc="69" coveredmethods="3" methods="9" elements="34" classes="1" ncloc="56" statements="19" conditionals="6" coveredstatements="5"/>
            <class name="AsmSVirtualMethodName">
               <metrics coveredelements="8" coveredconditionals="0" complexity="13" coveredmethods="3" methods="9" elements="34" statements="19" conditionals="6" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="AsmSVirtualMethodName(String,String)" num="13" count="2" type="method"/>
            <line num="14" count="2" type="stmt"/>
            <line num="15" count="2" type="stmt"/>
            <line num="16" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsmSVirtualMethodName(SMethodDescriptor)" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVoidMethod() : boolean" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compareTo(SVirtualMethodName) : int" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="50" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="desc() : String" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/main/java/com/lexicalscope/svm/vm/j/code/Staticness.java" name="Staticness.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Staticness">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="java.lang">
         <metrics coveredelements="0" complexity="6" loc="38" methods="5" classes="3" statements="6" coveredconditionals="0" coveredmethods="0" elements="13" ncloc="28" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jlib/src/main/java/java/lang/Integer.java" name="Integer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="24" coveredmethods="0" methods="3" elements="10" classes="2" ncloc="19" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="Integer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Integer.IntegerCache">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Integer(int)" num="4" count="0" type="method"/>
            <line complexity="2" visibility="package" signature="&lt;clinit&gt;, line 12()" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="IntegerCache()" num="22" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jlib/src/main/java/java/lang/Thread.java" name="Thread.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Thread">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="run() : void" num="4" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getId() : long" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.z3.plugin">
         <metrics coveredelements="0" complexity="1" loc="82" methods="1" classes="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" ncloc="33" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-z3-plugin/src/main/java/com/lexicalscope/svm/z3/plugin/Z3Mojo.java" name="Z3Mojo.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="82" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="33" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Z3Mojo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="execute() : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.rcbittrie">
         <metrics coveredelements="572" complexity="250" loc="666" methods="36" classes="10" statements="453" coveredconditionals="158" coveredmethods="33" elements="661" ncloc="521" files="1" conditionals="172" coveredstatements="381"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-trie/src/main/java/com/lexicalscope/rcbittrie/BitTrie.java" name="BitTrie.java">
            <metrics coveredelements="572" coveredconditionals="158" complexity="250" loc="666" coveredmethods="33" methods="36" elements="661" classes="10" ncloc="521" statements="453" conditionals="172" coveredstatements="381"/>
            <class name="BitTrie">
               <metrics coveredelements="528" coveredconditionals="156" complexity="228" coveredmethods="14" methods="16" elements="611" statements="427" conditionals="168" coveredstatements="358"/>
            </class>
            <class name="BitTrie.Node1">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node2">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node3">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node4">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node5">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node6">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node7">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.Node8">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BitTrie.BitTrieIterator">
               <metrics coveredelements="12" coveredconditionals="2" complexity="6" coveredmethods="3" methods="4" elements="18" statements="10" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="2" visibility="package" signature="&lt;clinit&gt;, line 65()" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="254" num="68" type="cond"/>
            <line num="70" count="254" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node1()" num="96" count="50" type="method"/>
            <line num="97" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node1(Object[])" num="100" count="58" type="method"/>
            <line num="101" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node2()" num="109" count="33" type="method"/>
            <line num="110" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node2(Node1[])" num="113" count="40" type="method"/>
            <line num="114" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node3()" num="122" count="21" type="method"/>
            <line num="123" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node3(Node2[])" num="126" count="27" type="method"/>
            <line num="127" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node4()" num="135" count="18" type="method"/>
            <line num="136" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node4(Node3[])" num="139" count="23" type="method"/>
            <line num="140" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node5()" num="148" count="15" type="method"/>
            <line num="149" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node5(Node4[])" num="152" count="19" type="method"/>
            <line num="153" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node6()" num="161" count="12" type="method"/>
            <line num="162" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node6(Node5[])" num="165" count="15" type="method"/>
            <line num="166" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node7()" num="174" count="9" type="method"/>
            <line num="175" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node7(Node6[])" num="178" count="11" type="method"/>
            <line num="179" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node8()" num="187" count="5" type="method"/>
            <line num="188" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="Node8(Node7[])" num="192" count="6" type="method"/>
            <line num="193" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="BitTrie()" num="212" count="10" type="method"/>
            <line num="212" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="BitTrie(int)" num="213" count="51" type="method"/>
            <line num="214" count="51" type="stmt"/>
            <line num="215" count="51" type="stmt"/>
            <line complexity="3" visibility="public" signature="allocate(int) : int" num="226" count="5" type="method"/>
            <line num="227" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="5" type="stmt"/>
            <line num="232" count="5" type="stmt"/>
            <line falsecount="5" truecount="103" num="232" type="cond"/>
            <line num="233" count="103" type="stmt"/>
            <line num="235" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="insert(int,Object) : Object" num="246" count="119" type="method"/>
            <line num="247" count="119" type="stmt"/>
            <line falsecount="119" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="119" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullPointer() : int" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="insert(Object) : int" num="261" count="298" type="method"/>
            <line num="262" count="298" type="stmt"/>
            <line falsecount="297" truecount="1" num="262" type="cond"/>
            <line num="263" count="1" type="stmt"/>
            <line num="266" count="297" type="stmt"/>
            <line falsecount="6" truecount="291" num="266" type="cond"/>
            <line num="267" count="291" type="stmt"/>
            <line num="269" count="297" type="stmt"/>
            <line num="276" count="297" type="stmt"/>
            <line complexity="98" visibility="private" signature="insertAt(int,Object) : Object" num="279" count="416" type="method"/>
            <line falsecount="0" truecount="416" num="280" type="cond"/>
            <line num="282" count="416" type="stmt"/>
            <line num="283" count="416" type="stmt"/>
            <line num="284" count="416" type="stmt"/>
            <line num="285" count="416" type="stmt"/>
            <line num="286" count="416" type="stmt"/>
            <line num="287" count="416" type="stmt"/>
            <line num="288" count="416" type="stmt"/>
            <line num="289" count="416" type="stmt"/>
            <line num="291" count="416" type="stmt"/>
            <line num="292" count="416" type="stmt"/>
            <line num="293" count="3" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="5" type="stmt"/>
            <line num="296" count="10" type="stmt"/>
            <line num="297" count="10" type="stmt"/>
            <line num="298" count="10" type="stmt"/>
            <line num="298" count="5" type="stmt"/>
            <line num="298" count="5" type="stmt"/>
            <line num="298" count="5" type="stmt"/>
            <line falsecount="5" truecount="5" num="298" type="cond"/>
            <line num="299" count="10" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="299" count="8" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line falsecount="9" truecount="1" num="299" type="cond"/>
            <line falsecount="1" truecount="8" num="299" type="cond"/>
            <line falsecount="7" truecount="1" num="299" type="cond"/>
            <line num="300" count="10" type="stmt"/>
            <line num="301" count="10" type="stmt"/>
            <line num="301" count="6" type="stmt"/>
            <line falsecount="4" truecount="6" num="301" type="cond"/>
            <line num="303" count="10" type="stmt"/>
            <line num="304" count="10" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="304" count="16" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line falsecount="9" truecount="1" num="304" type="cond"/>
            <line falsecount="1" truecount="16" num="304" type="cond"/>
            <line falsecount="15" truecount="1" num="304" type="cond"/>
            <line num="305" count="2" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="5" type="stmt"/>
            <line num="309" count="17" type="stmt"/>
            <line num="310" count="17" type="stmt"/>
            <line falsecount="10" truecount="7" num="310" type="cond"/>
            <line num="311" count="7" type="stmt"/>
            <line num="312" count="7" type="stmt"/>
            <line num="312" count="3" type="stmt"/>
            <line num="312" count="3" type="stmt"/>
            <line num="312" count="3" type="stmt"/>
            <line falsecount="4" truecount="3" num="312" type="cond"/>
            <line num="313" count="7" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="313" count="16" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line falsecount="6" truecount="1" num="313" type="cond"/>
            <line falsecount="1" truecount="16" num="313" type="cond"/>
            <line falsecount="15" truecount="1" num="313" type="cond"/>
            <line num="314" count="7" type="stmt"/>
            <line num="315" count="17" type="stmt"/>
            <line num="315" count="9" type="stmt"/>
            <line falsecount="8" truecount="9" num="315" type="cond"/>
            <line num="317" count="17" type="stmt"/>
            <line num="318" count="17" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="318" count="32" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line falsecount="15" truecount="2" num="318" type="cond"/>
            <line falsecount="2" truecount="32" num="318" type="cond"/>
            <line falsecount="30" truecount="2" num="318" type="cond"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="5" type="stmt"/>
            <line num="323" count="24" type="stmt"/>
            <line num="324" count="24" type="stmt"/>
            <line falsecount="17" truecount="7" num="324" type="cond"/>
            <line num="325" count="7" type="stmt"/>
            <line num="326" count="7" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line falsecount="4" truecount="3" num="326" type="cond"/>
            <line num="327" count="7" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="327" count="16" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line falsecount="6" truecount="1" num="327" type="cond"/>
            <line falsecount="1" truecount="16" num="327" type="cond"/>
            <line falsecount="15" truecount="1" num="327" type="cond"/>
            <line num="328" count="7" type="stmt"/>
            <line num="329" count="24" type="stmt"/>
            <line num="329" count="12" type="stmt"/>
            <line falsecount="12" truecount="12" num="329" type="cond"/>
            <line num="331" count="24" type="stmt"/>
            <line num="332" count="24" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line num="332" count="48" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line falsecount="21" truecount="3" num="332" type="cond"/>
            <line falsecount="3" truecount="48" num="332" type="cond"/>
            <line falsecount="45" truecount="3" num="332" type="cond"/>
            <line num="333" count="2" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="5" type="stmt"/>
            <line num="337" count="31" type="stmt"/>
            <line num="338" count="31" type="stmt"/>
            <line falsecount="24" truecount="7" num="338" type="cond"/>
            <line num="339" count="7" type="stmt"/>
            <line num="340" count="7" type="stmt"/>
            <line num="340" count="3" type="stmt"/>
            <line num="340" count="3" type="stmt"/>
            <line num="340" count="3" type="stmt"/>
            <line falsecount="4" truecount="3" num="340" type="cond"/>
            <line num="341" count="7" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="341" count="16" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line falsecount="6" truecount="1" num="341" type="cond"/>
            <line falsecount="1" truecount="16" num="341" type="cond"/>
            <line falsecount="15" truecount="1" num="341" type="cond"/>
            <line num="342" count="7" type="stmt"/>
            <line num="343" count="31" type="stmt"/>
            <line num="343" count="15" type="stmt"/>
            <line falsecount="16" truecount="15" num="343" type="cond"/>
            <line num="345" count="31" type="stmt"/>
            <line num="346" count="31" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line num="346" count="64" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line falsecount="27" truecount="4" num="346" type="cond"/>
            <line falsecount="4" truecount="64" num="346" type="cond"/>
            <line falsecount="60" truecount="4" num="346" type="cond"/>
            <line num="347" count="2" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="5" type="stmt"/>
            <line num="351" count="38" type="stmt"/>
            <line num="352" count="38" type="stmt"/>
            <line falsecount="31" truecount="7" num="352" type="cond"/>
            <line num="353" count="7" type="stmt"/>
            <line num="354" count="7" type="stmt"/>
            <line num="354" count="3" type="stmt"/>
            <line num="354" count="3" type="stmt"/>
            <line num="354" count="3" type="stmt"/>
            <line falsecount="4" truecount="3" num="354" type="cond"/>
            <line num="355" count="7" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="355" count="16" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line falsecount="6" truecount="1" num="355" type="cond"/>
            <line falsecount="1" truecount="16" num="355" type="cond"/>
            <line falsecount="15" truecount="1" num="355" type="cond"/>
            <line num="356" count="7" type="stmt"/>
            <line num="357" count="38" type="stmt"/>
            <line num="357" count="18" type="stmt"/>
            <line falsecount="20" truecount="18" num="357" type="cond"/>
            <line num="359" count="38" type="stmt"/>
            <line num="360" count="38" type="stmt"/>
            <line num="360" count="5" type="stmt"/>
            <line num="360" count="5" type="stmt"/>
            <line num="360" count="5" type="stmt"/>
            <line num="360" count="5" type="stmt"/>
            <line num="360" count="80" type="stmt"/>
            <line num="360" count="5" type="stmt"/>
            <line falsecount="33" truecount="5" num="360" type="cond"/>
            <line falsecount="5" truecount="80" num="360" type="cond"/>
            <line falsecount="75" truecount="5" num="360" type="cond"/>
            <line num="361" count="2" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="5" type="stmt"/>
            <line num="365" count="45" type="stmt"/>
            <line num="366" count="45" type="stmt"/>
            <line falsecount="38" truecount="7" num="366" type="cond"/>
            <line num="367" count="7" type="stmt"/>
            <line num="368" count="7" type="stmt"/>
            <line num="368" count="3" type="stmt"/>
            <line num="368" count="3" type="stmt"/>
            <line num="368" count="3" type="stmt"/>
            <line falsecount="4" truecount="3" num="368" type="cond"/>
            <line num="369" count="7" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="369" count="16" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line falsecount="6" truecount="1" num="369" type="cond"/>
            <line falsecount="1" truecount="16" num="369" type="cond"/>
            <line falsecount="15" truecount="1" num="369" type="cond"/>
            <line num="370" count="7" type="stmt"/>
            <line num="371" count="45" type="stmt"/>
            <line num="371" count="21" type="stmt"/>
            <line falsecount="24" truecount="21" num="371" type="cond"/>
            <line num="373" count="45" type="stmt"/>
            <line num="374" count="45" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line num="374" count="96" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line falsecount="39" truecount="6" num="374" type="cond"/>
            <line falsecount="6" truecount="96" num="374" type="cond"/>
            <line falsecount="90" truecount="6" num="374" type="cond"/>
            <line num="375" count="2" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="178" type="stmt"/>
            <line num="378" count="76" type="stmt"/>
            <line num="379" count="301" type="stmt"/>
            <line num="380" count="301" type="stmt"/>
            <line falsecount="45" truecount="256" num="380" type="cond"/>
            <line num="381" count="256" type="stmt"/>
            <line num="382" count="256" type="stmt"/>
            <line num="382" count="12" type="stmt"/>
            <line num="382" count="12" type="stmt"/>
            <line num="382" count="12" type="stmt"/>
            <line falsecount="244" truecount="12" num="382" type="cond"/>
            <line num="383" count="256" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="383" count="16" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line falsecount="255" truecount="1" num="383" type="cond"/>
            <line falsecount="1" truecount="16" num="383" type="cond"/>
            <line falsecount="15" truecount="1" num="383" type="cond"/>
            <line num="384" count="256" type="stmt"/>
            <line num="385" count="301" type="stmt"/>
            <line num="385" count="37" type="stmt"/>
            <line falsecount="264" truecount="37" num="385" type="cond"/>
            <line num="387" count="301" type="stmt"/>
            <line num="388" count="301" type="stmt"/>
            <line num="388" count="7" type="stmt"/>
            <line num="388" count="7" type="stmt"/>
            <line num="388" count="7" type="stmt"/>
            <line falsecount="294" truecount="7" num="388" type="cond"/>
            <line num="389" count="51" type="stmt"/>
            <line num="390" count="24" type="stmt"/>
            <line num="391" count="16" type="stmt"/>
            <line num="392" count="14" type="stmt"/>
            <line num="393" count="10" type="stmt"/>
            <line num="396" count="416" type="stmt"/>
            <line falsecount="301" truecount="115" num="396" type="cond"/>
            <line num="397" count="115" type="stmt"/>
            <line num="398" count="115" type="stmt"/>
            <line num="398" count="13" type="stmt"/>
            <line num="398" count="13" type="stmt"/>
            <line falsecount="102" truecount="13" num="398" type="cond"/>
            <line num="399" count="115" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line falsecount="114" truecount="1" num="399" type="cond"/>
            <line num="400" count="115" type="stmt"/>
            <line num="403" count="416" type="stmt"/>
            <line num="404" count="416" type="stmt"/>
            <line num="405" count="416" type="stmt"/>
            <line falsecount="0" truecount="416" num="407" type="cond"/>
            <line num="408" count="416" type="stmt"/>
            <line complexity="1" visibility="private" signature="summary(int) : String" num="411" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="invariant() : boolean" num="415" count="832" type="method"/>
            <line num="416" count="832" type="stmt"/>
            <line complexity="42" visibility="public" signature="get(int) : Object" num="420" count="88" type="method"/>
            <line num="421" count="88" type="stmt"/>
            <line num="421" count="4" type="stmt"/>
            <line num="421" count="84" type="stmt"/>
            <line falsecount="84" truecount="4" num="421" type="cond"/>
            <line num="422" count="84" type="stmt"/>
            <line num="423" count="84" type="stmt"/>
            <line num="424" count="84" type="stmt"/>
            <line num="425" count="84" type="stmt"/>
            <line num="426" count="84" type="stmt"/>
            <line num="427" count="84" type="stmt"/>
            <line num="428" count="84" type="stmt"/>
            <line num="430" count="84" type="stmt"/>
            <line num="431" count="2" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="6" type="stmt"/>
            <line num="434" count="8" type="stmt"/>
            <line num="435" count="2" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="6" type="stmt"/>
            <line num="439" count="16" type="stmt"/>
            <line falsecount="8" truecount="8" num="439" type="cond"/>
            <line num="440" count="8" type="stmt"/>
            <line num="442" count="16" type="stmt"/>
            <line num="443" count="2" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="6" type="stmt"/>
            <line num="447" count="24" type="stmt"/>
            <line falsecount="16" truecount="8" num="447" type="cond"/>
            <line num="448" count="8" type="stmt"/>
            <line num="450" count="24" type="stmt"/>
            <line num="451" count="2" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="6" type="stmt"/>
            <line num="455" count="32" type="stmt"/>
            <line falsecount="24" truecount="8" num="455" type="cond"/>
            <line num="456" count="8" type="stmt"/>
            <line num="458" count="32" type="stmt"/>
            <line num="459" count="2" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="6" type="stmt"/>
            <line num="463" count="40" type="stmt"/>
            <line falsecount="32" truecount="8" num="463" type="cond"/>
            <line num="464" count="8" type="stmt"/>
            <line num="466" count="40" type="stmt"/>
            <line num="467" count="2" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="6" type="stmt"/>
            <line num="471" count="48" type="stmt"/>
            <line falsecount="40" truecount="8" num="471" type="cond"/>
            <line falsecount="0" truecount="8" num="472" type="cond"/>
            <line num="473" count="8" type="stmt"/>
            <line num="474" count="48" type="stmt"/>
            <line num="475" count="48" type="stmt"/>
            <line num="476" count="2" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="4" type="stmt"/>
            <line num="479" count="13" type="stmt"/>
            <line num="480" count="67" type="stmt"/>
            <line falsecount="48" truecount="19" num="480" type="cond"/>
            <line num="481" count="19" type="stmt"/>
            <line num="483" count="67" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="487" count="6" type="stmt"/>
            <line num="488" count="3" type="stmt"/>
            <line num="489" count="84" type="stmt"/>
            <line falsecount="67" truecount="17" num="489" type="cond"/>
            <line num="490" count="17" type="stmt"/>
            <line num="492" count="84" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="level(int) : int" num="498" count="342" type="method"/>
            <line num="499" count="342" type="stmt"/>
            <line num="501" count="342" type="stmt"/>
            <line falsecount="0" truecount="0" num="501" type="cond"/>
            <line num="503" count="37" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="507" count="305" type="stmt"/>
            <line falsecount="0" truecount="0" num="507" type="cond"/>
            <line complexity="33" visibility="public" signature="depth() : int" num="511" count="38" type="method"/>
            <line num="512" count="38" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="2" type="stmt"/>
            <line num="518" count="2" type="stmt"/>
            <line num="519" count="6" type="stmt"/>
            <line num="520" count="4" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="2" type="stmt"/>
            <line num="523" count="12" type="stmt"/>
            <line num="524" count="2" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="2" type="stmt"/>
            <line num="528" count="4" type="stmt"/>
            <line num="529" count="2" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="2" type="stmt"/>
            <line num="533" count="4" type="stmt"/>
            <line num="534" count="2" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="2" type="stmt"/>
            <line num="538" count="4" type="stmt"/>
            <line num="539" count="2" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="2" type="stmt"/>
            <line num="543" count="4" type="stmt"/>
            <line num="544" count="2" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="2" type="stmt"/>
            <line num="548" count="4" type="stmt"/>
            <line num="549" count="2" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="2" type="stmt"/>
            <line num="552" count="4" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="34" visibility="public" signature="copy() : BitTrie" num="557" count="9" type="method"/>
            <line num="558" count="9" type="stmt"/>
            <line num="559" count="9" type="stmt"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="1" type="stmt"/>
            <line num="565" count="2" type="stmt"/>
            <line num="566" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="566" type="cond"/>
            <line num="567" count="2" type="stmt"/>
            <line num="569" count="2" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="1" type="stmt"/>
            <line num="575" count="1" type="stmt"/>
            <line num="576" count="1" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="1" type="stmt"/>
            <line num="582" count="1" type="stmt"/>
            <line num="583" count="1" type="stmt"/>
            <line num="584" count="1" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="1" type="stmt"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="1" type="stmt"/>
            <line num="591" count="1" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="1" type="stmt"/>
            <line num="596" count="1" type="stmt"/>
            <line num="597" count="1" type="stmt"/>
            <line num="598" count="1" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="1" type="stmt"/>
            <line num="604" count="1" type="stmt"/>
            <line num="605" count="1" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="1" type="stmt"/>
            <line num="616" count="1" type="stmt"/>
            <line num="617" count="1" type="stmt"/>
            <line num="619" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Object&gt;" num="622" count="6" type="method"/>
            <line num="624" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="627" count="1" type="method"/>
            <line num="629" count="1" type="stmt"/>
            <line num="630" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BitTrieIterator(BitTrie,int)" num="638" count="6" type="method"/>
            <line num="639" count="6" type="stmt"/>
            <line num="640" count="6" type="stmt"/>
            <line num="641" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="644" count="14" type="method"/>
            <line num="646" count="14" type="stmt"/>
            <line complexity="3" visibility="public" signature="next() : Object" num="649" count="14" type="method"/>
            <line num="651" count="14" type="stmt"/>
            <line falsecount="13" truecount="0" num="651" type="cond"/>
            <line num="652" count="0" type="stmt"/>
            <line num="654" count="13" type="stmt"/>
            <line falsecount="12" truecount="0" num="654" type="cond"/>
            <line num="655" count="0" type="stmt"/>
            <line num="657" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="660" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.branchPredicates">
         <metrics coveredelements="0" complexity="51" loc="321" methods="49" classes="19" statements="55" coveredconditionals="0" coveredmethods="0" elements="106" ncloc="250" files="19" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Got0.java" name="Got0.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Got0">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/ICmpBranchPredicate.java" name="ICmpBranchPredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ICmpBranchPredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ICmpBranchPredicate(ICmpOp)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/ICmpOp.java" name="ICmpOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ICmpOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifacmpeq.java" name="Ifacmpeq.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="Ifacmpeq">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifacmpne.java" name="Ifacmpne.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="24" coveredmethods="0" methods="3" elements="10" classes="1" ncloc="19" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="Ifacmpne">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="eval(JState) : Boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="13" type="cond"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifeq.java" name="Ifeq.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifeq">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifge.java" name="Ifge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifgt.java" name="Ifgt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifgt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ificmpeq.java" name="Ificmpeq.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Ificmpeq">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cmp(int,int) : Boolean" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ificmpge.java" name="Ificmpge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Ificmpge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cmp(int,int) : Boolean" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ificmpgt.java" name="Ificmpgt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Ificmpgt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cmp(int,int) : Boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ificmple.java" name="Ificmple.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Ificmple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cmp(int,int) : Boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ificmplt.java" name="Ificmplt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Ificmplt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cmp(int,int) : Boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ificmpne.java" name="Ificmpne.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="12" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Ificmpne">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="5" count="0" type="method"/>
            <line num="6" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cmp(int,int) : Boolean" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifle.java" name="Ifle.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifle">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Iflt.java" name="Iflt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Iflt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifne.java" name="Ifne.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifne">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifnonnull.java" name="Ifnonnull.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifnonnull">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branchPredicates/Ifnull.java" name="Ifnull.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Ifnull">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : Boolean" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.instrumentation">
         <metrics coveredelements="0" complexity="18" loc="175" methods="14" classes="10" statements="27" coveredconditionals="0" coveredmethods="0" elements="49" ncloc="137" files="10" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/CompositeMethodInstrumentor.java" name="CompositeMethodInstrumentor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="24" coveredmethods="0" methods="2" elements="9" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="CompositeMethodInstrumentor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompositeMethodInstrumentor(InstructionFinder,InstructionInstrumentor)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instrument(InstructionSource,SMethodDescriptor,Instruction) : Instruction" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/InstructionCollector.java" name="InstructionCollector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="19" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="InstructionCollector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="candidate(Instruction) : void" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Instruction&gt;" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/InstructionCounting.java" name="InstructionCounting.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="34" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="InstructionCounting">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="candidate(Instruction) : void" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count() : int" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="countIs(int) : Matcher&lt;? super InstructionCounting&gt;" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(InstructionCounting,Description) : boolean" num="26" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/InstructionFinder.java" name="InstructionFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstructionFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/InstructionInstrumentor.java" name="InstructionInstrumentor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstructionInstrumentor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/Instrumentation.java" name="Instrumentation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Instrumentation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/InstrumentationBuilder.java" name="InstrumentationBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="25" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="20" statements="4" conditionals="6" coveredstatements="0"/>
            <class name="InstrumentationBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="12" statements="4" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="instrument(Matcher&lt;? super SMethodDescriptor&gt;,MethodInstrumentor) : void" num="13" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="14" type="cond"/>
            <line falsecount="0" truecount="0" num="15" type="cond"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="instrumentation(InstructionSource) : Instrumentation" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="20" type="cond"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/MethodInstrumentor.java" name="MethodInstrumentor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodInstrumentor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/MultimapInstrumentationContext.java" name="MultimapInstrumentationContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="32" coveredmethods="0" methods="2" elements="11" classes="1" ncloc="26" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="MultimapInstrumentationContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MultimapInstrumentationContext(InstructionSource,ListMultimap&lt;Matcher&lt;? super SMethodDescriptor&gt;, MethodInstrumentor&gt;)" num="16" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="instrument(SMethodDescriptor,Instruction) : Instruction" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/NullInstrumentation.java" name="NullInstrumentation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="10" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NullInstrumentation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="instrument(SMethodDescriptor,Instruction) : Instruction" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.array">
         <metrics coveredelements="0" complexity="53" loc="316" methods="41" classes="12" statements="61" coveredconditionals="0" coveredmethods="0" elements="114" ncloc="239" files="10" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/ArrayConstructor.java" name="ArrayConstructor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/ArrayCopyOp.java" name="ArrayCopyOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="30" coveredmethods="0" methods="3" elements="15" classes="1" ncloc="24" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="ArrayCopyOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="15" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="16" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/ArrayLengthOp.java" name="ArrayLengthOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="20" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ArrayLengthOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/ArrayLoadOp.java" name="ArrayLoadOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="72" coveredmethods="0" methods="11" elements="28" classes="2" ncloc="53" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="ArrayLoadOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="11" elements="28" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="ArrayLoadOp.ValueTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="transformForLoad(Object) : Object" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="transformForLoad(Object) : Object" num="22" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayLoadOp(ValueTransform)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="loadFromHeap(JState,ObjectRef,int) : Object" num="42" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="inBounds(JState,int,ObjectRef) : boolean" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="caLoad() : ArrayLoadOp" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aaLoad() : ArrayLoadOp" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iaLoad() : ArrayLoadOp" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/ArrayStoreOp.java" name="ArrayStoreOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="69" coveredmethods="0" methods="11" elements="27" classes="2" ncloc="53" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="ArrayStoreOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="11" elements="27" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ArrayStoreOp.ValueTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="transformForStore(Object) : Object" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformForStore(Object) : Object" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayStoreOp(ValueTransform)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="storeInHeap(JState,ObjectRef,int,Object) : void" num="41" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="boundsCheck(JState,ObjectRef,int) : boolean" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="caStore() : ArrayStoreOp" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aaStore() : ArrayStoreOp" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iaStore() : ArrayStoreOp" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/InitStrategy.java" name="InitStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InitStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/NewArrayOp.java" name="NewArrayOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="38" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="NewArrayOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NewArrayOp(ArrayConstructor)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NewArrayOp(Object,ArrayConstructor)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="NewArrayOp(InitStrategy,ArrayConstructor)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/NewConcArray.java" name="NewConcArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="40" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="31" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="NewConcArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="17" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="newConcreteArray(JState,int,InitStrategy) : void" num="11" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allocateSize() : int" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initArrayPreamble(JState,ObjectRef,Object) : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newArray(JState,InitStrategy) : void" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/PrimitiveInitStrategy.java" name="PrimitiveInitStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="23" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="17" statements="2" conditionals="2" coveredstatements="0"/>
            <class name="PrimitiveInitStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="public" signature="PrimitiveInitStrategy(Object)" num="8" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="9" type="cond"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialValue(JState) : Object" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/array/ReferenceInitStrategy.java" name="ReferenceInitStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="9" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ReferenceInitStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialValue(JState) : Object" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.object">
         <metrics coveredelements="0" complexity="50" loc="369" methods="43" classes="16" statements="89" coveredconditionals="0" coveredmethods="0" elements="138" ncloc="282" files="12" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/AConstNullOp.java" name="AConstNullOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AConstNullOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/AddressToHashCodeOp.java" name="AddressToHashCodeOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="20" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AddressToHashCodeOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/ConcFieldConversionFactory.java" name="ConcFieldConversionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="48" coveredmethods="0" methods="8" elements="18" classes="5" ncloc="38" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="ConcFieldConversionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConcFieldConversionFactory.IntToInt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ConcFieldConversionFactory.NoConversion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConcFieldConversionFactory.IntToChar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConcFieldConversionFactory.CharToInt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="convert(Object) : Object" num="6" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="7" type="cond"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(Object) : Object" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(Object) : Object" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(Object) : Object" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noConversion() : NoConversion" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="intToInt() : IntToInt" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="intToChar() : IntToChar" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charToInt() : FieldConversion" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/FieldConversion.java" name="FieldConversion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldConversion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/FieldConversionFactory.java" name="FieldConversionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldConversionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/GetClassOp.java" name="GetClassOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="31" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="GetClassOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="klassFromHeap(JState) : SClass" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="klassFromHeap(JState,ObjectRef) : SClass" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/GetComponentClassOp.java" name="GetComponentClassOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="23" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="GetComponentClassOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="13" type="cond"/>
            <line num="14" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/GetFieldOp.java" name="GetFieldOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="62" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="47" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="GetFieldOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="26" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GetFieldOp(FieldConversionFactory,FieldInsnNode)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="conversionForGetField(FieldConversionFactory,FieldInsnNode) : FieldConversion" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/NewObjectOp.java" name="NewObjectOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="49" coveredmethods="0" methods="5" elements="22" classes="1" ncloc="37" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="NewObjectOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="22" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NewObjectOp(KlassInternalName)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : ObjectRef" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="allocateObject(JState,SClass) : ObjectRef" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/PartitionTagMetaKey.java" name="PartitionTagMetaKey.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PartitionTagMetaKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="PartitionTagMetaKey()" num="8" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="valueType() : Class&lt;Object&gt;" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/PutFieldOp.java" name="PutFieldOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="63" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="48" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="PutFieldOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="27" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PutFieldOp(FieldConversionFactory,FieldInsnNode)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="conversionForGetField(FieldConversionFactory,FieldInsnNode) : FieldConversion" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/object/SymbolCounterMetaKey.java" name="SymbolCounterMetaKey.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="SymbolCounterMetaKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SymbolCounterMetaKey()" num="8" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="valueType() : Class&lt;Integer&gt;" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.instrumentation.finders">
         <metrics coveredelements="0" complexity="8" loc="58" methods="4" classes="4" statements="8" coveredconditionals="0" coveredmethods="0" elements="20" ncloc="47" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/instrumentation/finders/FindConstructorCall.java" name="FindConstructorCall.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="58" coveredmethods="0" methods="4" elements="20" classes="4" ncloc="47" statements="8" conditionals="8" coveredstatements="0"/>
            <class name="FindConstructorCall">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FindConstructorCall.SearchState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FindConstructorCall.LookingForNew">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FindConstructorCall.LookingForConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="10" statements="3" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="matchInstruction(Instruction,InstructionInstrumentor) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="matchInstruction(Instruction,InstructionInstrumentor) : void" num="29" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line complexity="1" visibility="public" signature="FindConstructorCall(Matcher&lt;KlassInternalName&gt;)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findInstruction(Instruction,InstructionInstrumentor) : void" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.fl0at">
         <metrics coveredelements="22" complexity="22" loc="151" methods="18" classes="8" statements="32" coveredconditionals="6" coveredmethods="2" elements="58" ncloc="111" files="8" conditionals="8" coveredstatements="14"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/F2IOp.java" name="F2IOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="F2IOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FAddOp.java" name="FAddOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FAddOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FCmpGOperator.java" name="FCmpGOperator.java">
            <metrics coveredelements="11" coveredconditionals="3" complexity="4" loc="27" coveredmethods="1" methods="2" elements="15" classes="1" ncloc="20" statements="9" conditionals="4" coveredstatements="7"/>
            <class name="FCmpGOperator">
               <metrics coveredelements="11" coveredconditionals="3" complexity="4" coveredmethods="1" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="3" visibility="public" signature="eval(Object,Object) : Object" num="8" count="5" type="method"/>
            <line num="9" count="5" type="stmt"/>
            <line num="10" count="5" type="stmt"/>
            <line num="11" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="11" type="cond"/>
            <line num="12" count="0" type="stmt"/>
            <line num="16" count="5" type="stmt"/>
            <line num="17" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="17" type="cond"/>
            <line num="18" count="4" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FCmpLOperator.java" name="FCmpLOperator.java">
            <metrics coveredelements="11" coveredconditionals="3" complexity="4" loc="27" coveredmethods="1" methods="2" elements="15" classes="1" ncloc="20" statements="9" conditionals="4" coveredstatements="7"/>
            <class name="FCmpLOperator">
               <metrics coveredelements="11" coveredconditionals="3" complexity="4" coveredmethods="1" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="3" visibility="public" signature="eval(Object,Object) : Object" num="8" count="5" type="method"/>
            <line num="9" count="5" type="stmt"/>
            <line num="10" count="5" type="stmt"/>
            <line num="11" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="11" type="cond"/>
            <line num="12" count="0" type="stmt"/>
            <line num="16" count="5" type="stmt"/>
            <line num="17" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="17" type="cond"/>
            <line num="18" count="4" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FConstOperator.java" name="FConstOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="FConstOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FConstOperator(float)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval() : Object" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FDivOp.java" name="FDivOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FDivOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FMulOp.java" name="FMulOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FMulOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/FSubOp.java" name="FSubOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FSubOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.method">
         <metrics coveredelements="0" complexity="52" loc="273" methods="49" classes="9" statements="59" coveredconditionals="0" coveredmethods="0" elements="114" ncloc="212" files="1" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/method/MethodCallInstruction.java" name="MethodCallInstruction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="52" loc="273" coveredmethods="0" methods="49" elements="114" classes="9" ncloc="212" statements="59" conditionals="6" coveredstatements="0"/>
            <class name="MethodCallInstruction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="7" elements="23" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.Resolution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.MethodInvokation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.VirtualMethodInvokation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.InterfaceMethodInvokation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.SpecialMethodInvokation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.ClassDefaultConstructorMethodInvokation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.StaticMethodInvokation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodCallInstruction.MethodCallOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="15" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Resolution(KlassInternalName,SMethod)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Resolution(SMethod)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekArgs(JState,SMethodDescriptor) : Object[]" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args(JState,SMethodDescriptor) : Object[]" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="argSize(SMethodDescriptor) : int" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMethod(Object[],SMethodDescriptor,JState) : Resolution" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : MethodScope" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(SMethodDescriptor,InstructionQuery&lt;T&gt;) : T" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekArgs(JState,SMethodDescriptor) : Object[]" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args(JState,SMethodDescriptor) : Object[]" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="argSize(SMethodDescriptor) : int" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMethod(Object[],SMethodDescriptor,JState) : Resolution" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : MethodScope" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(SMethodDescriptor,InstructionQuery&lt;T&gt;) : T" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="resolveVirtualMethod(Object[],SMethodDescriptor,JState) : Resolution" num="110" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="receiver(Object[],SMethodName,JState) : MethodResolver" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekArgs(JState,SMethodDescriptor) : Object[]" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args(JState,SMethodDescriptor) : Object[]" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="argSize(SMethodDescriptor) : int" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMethod(Object[],SMethodDescriptor,JState) : Resolution" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : MethodScope" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(SMethodDescriptor,InstructionQuery&lt;T&gt;) : T" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassDefaultConstructorMethodInvokation(KlassInternalName)" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args(JState,SMethodDescriptor) : Object[]" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekArgs(JState,SMethodDescriptor) : Object[]" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMethod(Object[],SMethodDescriptor,JState) : Resolution" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : MethodScope" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(SMethodDescriptor,InstructionQuery&lt;T&gt;) : T" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekArgs(JState,SMethodDescriptor) : Object[]" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args(JState,SMethodDescriptor) : Object[]" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="argSize(SMethodDescriptor) : int" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMethod(Object[],SMethodDescriptor,JState) : Resolution" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : MethodScope" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(SMethodDescriptor,InstructionQuery&lt;T&gt;) : T" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MethodCallOp(SMethodDescriptor,MethodInvokation)" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMethodName() : SMethodDescriptor" num="229" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokevirtual(SMethodDescriptor,InstructionSource.InstructionSink) : void" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeinterface(SMethodDescriptor,InstructionSource.InstructionSink) : void" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokespecial(SMethodDescriptor,InstructionSource.InstructionSink) : void" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeconstructorofclassobjects(KlassInternalName,InstructionSource.InstructionSink) : void" num="265" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokestatic(SMethodDescriptor,InstructionSource.InstructionSink,InstructionSource) : void" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction">
         <metrics coveredelements="56" complexity="87" loc="489" methods="80" classes="9" statements="109" coveredconditionals="4" coveredmethods="15" elements="203" ncloc="373" files="9" conditionals="14" coveredstatements="37"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/InstructionInternal.java" name="InstructionInternal.java">
            <metrics coveredelements="52" coveredconditionals="4" complexity="35" loc="192" coveredmethods="13" methods="29" elements="97" classes="1" ncloc="150" statements="56" conditionals="12" coveredstatements="35"/>
            <class name="InstructionInternal">
               <metrics coveredelements="52" coveredconditionals="4" complexity="35" coveredmethods="13" methods="29" elements="97" statements="56" conditionals="12" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="InstructionInternal(Vop,InstructionCode,int)" num="37" count="49" type="method"/>
            <line num="38" count="49" type="stmt"/>
            <line num="39" count="49" type="stmt"/>
            <line num="40" count="49" type="stmt"/>
            <line num="42" count="49" type="stmt"/>
            <line num="43" count="49" type="stmt"/>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="46" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="append(Instruction) : Instruction" num="51" count="75" type="method"/>
            <line num="52" count="75" type="stmt"/>
            <line falsecount="40" truecount="35" num="52" type="cond"/>
            <line num="53" count="35" type="stmt"/>
            <line num="54" count="35" type="stmt"/>
            <line num="56" count="40" type="stmt"/>
            <line num="58" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Instruction" num="61" count="16" type="method"/>
            <line num="62" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasNext() : boolean" num="65" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jmpTarget() : Instruction" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="jmpTarget(Instruction) : void" num="74" count="4" type="method"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="code() : InstructionCode" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevIs(Instruction) : void" num="87" count="41" type="method"/>
            <line num="88" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextIs(Instruction) : void" num="91" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="insertNext(Instruction) : void" num="95" count="5" type="method"/>
            <line num="96" count="5" type="stmt"/>
            <line num="97" count="5" type="stmt"/>
            <line num="98" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="insertHere(Instruction) : void" num="101" count="3" type="method"/>
            <line num="102" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="102" type="cond"/>
            <line num="103" count="3" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="op() : Vop" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceOp(Vop) : void" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="replaceWith(Instruction) : void" num="121" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="123" type="cond"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="prev() : Instruction" num="135" count="13" type="method"/>
            <line num="136" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="targetOf() : Collection&lt;Instruction&gt;" num="139" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="targetOf(Instruction) : void" num="143" count="4" type="method"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Instruction&gt;" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : Instruction" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="173" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(MetaKey&lt;T&gt;) : T" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(MetaKey&lt;T&gt;,T) : void" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(MetaKey&lt;?&gt;) : boolean" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(MetaKey&lt;?&gt;) : void" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/LinearOp.java" name="LinearOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="LinearOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearOp(Vop)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/MethodCallVop.java" name="MethodCallVop.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodCallVop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/MethodEntryVop.java" name="MethodEntryVop.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="7" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="MethodEntryVop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodEntryVop(SMethodDescriptor)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="15" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/NoOp.java" name="NoOp.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="5" loc="27" coveredmethods="1" methods="5" elements="9" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="NoOp">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="NoOp()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NoOp(String)" num="14" count="49" type="method"/>
            <line num="15" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="18" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/TerminateInstruction.java" name="TerminateInstruction.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="31" loc="153" coveredmethods="1" methods="30" elements="66" classes="1" ncloc="117" statements="34" conditionals="2" coveredstatements="1"/>
            <class name="TerminateInstruction">
               <metrics coveredelements="2" coveredconditionals="0" complexity="31" coveredmethods="1" methods="30" elements="66" statements="34" conditionals="2" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="targetOf() : Collection&lt;Instruction&gt;" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="targetOf(Instruction) : void" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="append(Instruction) : Instruction" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="insertNext(Instruction) : void" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceWith(Instruction) : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jmpTarget(Instruction) : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Instruction" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jmpTarget() : Instruction" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="64" count="35" type="method"/>
            <line num="66" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="code() : InstructionCode" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevIs(Instruction) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextIs(Instruction) : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prev() : Instruction" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="insertHere(Instruction) : void" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Instruction&gt;" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Instruction" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="op() : Vop" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceOp(Vop) : void" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(MetaKey&lt;T&gt;) : T" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(MetaKey&lt;T&gt;,T) : void" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(MetaKey&lt;?&gt;) : boolean" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(MetaKey&lt;?&gt;) : void" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/TerminationMetaKey.java" name="TerminationMetaKey.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="TerminationMetaKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TerminationMetaKey()" num="10" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="valueType() : Class&lt;Boolean&gt;" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/UnsupportedInstruction.java" name="UnsupportedInstruction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="28" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnsupportedInstruction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedInstruction(AbstractInsnNode)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/UnsupportedInstructionException.java" name="UnsupportedInstructionException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="9" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnsupportedInstructionException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedInstructionException(AbstractInsnNode)" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete">
         <metrics coveredelements="0" complexity="4" loc="26" methods="3" classes="1" statements="5" coveredconditionals="0" coveredmethods="0" elements="10" ncloc="19" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/LoadConstantArg.java" name="LoadConstantArg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="3" elements="10" classes="1" ncloc="19" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="LoadConstantArg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LoadConstantArg(Object)" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="16" type="cond"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.klass">
         <metrics coveredelements="0" complexity="61" loc="459" methods="44" classes="8" statements="129" coveredconditionals="0" coveredmethods="0" elements="207" ncloc="363" files="8" conditionals="34" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/CheckCastOp.java" name="CheckCastOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="45" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="33" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="CheckCastOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="20" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CheckCastOp(KlassInternalName)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/DefineClassOp.java" name="DefineClassOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="77" coveredmethods="0" methods="8" elements="40" classes="1" ncloc="63" statements="24" conditionals="8" coveredstatements="0"/>
            <class name="DefineClassOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="8" elements="40" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DefineClassOp(KlassInternalName)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DefineClassOp(List&lt;KlassInternalName&gt;)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="eval(JState) : List&lt;SClass&gt;" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line complexity="1" visibility="package" signature="allocateClass(JState,SClass) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="allocateStatics(JState,StaticsMarker,SClass) : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="allocate(JState,SClass) : void" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/DefinePrimitiveClassesOp.java" name="DefinePrimitiveClassesOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="70" coveredmethods="0" methods="7" elements="34" classes="1" ncloc="55" statements="23" conditionals="4" coveredstatements="0"/>
            <class name="DefinePrimitiveClassesOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="34" statements="23" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 19()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 30()" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DefinePrimitiveClassesOp(DefineClassOp)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="eval(JState) : List&lt;SClass&gt;" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;S&gt;) : S" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="primitivesContains(KlassInternalName) : boolean" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/GetPrimitiveClass.java" name="GetPrimitiveClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="54" coveredmethods="0" methods="6" elements="30" classes="1" ncloc="46" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="GetPrimitiveClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="30" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="inGameStringToRealLifeString(JState,ObjectRef) : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="extractCharArray(JState,ObjectRef,int) : char[]" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="extractArray(JState,ObjectRef) : Object[]" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="toCharArray(Object[]) : char[]" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/GetStaticOp.java" name="GetStaticOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="43" coveredmethods="0" methods="5" elements="14" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="GetStaticOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GetStaticOp(FieldInsnNode)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldKey(FieldInsnNode) : String" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/InstanceOfOp.java" name="InstanceOfOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="51" coveredmethods="0" methods="4" elements="25" classes="1" ncloc="38" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="InstanceOfOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="25" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InstanceOfOp(KlassInternalName)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/LoadingOp.java" name="LoadingOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="70" coveredmethods="0" methods="6" elements="24" classes="1" ncloc="57" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="LoadingOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="24" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="LoadingOp(List&lt;KlassInternalName&gt;,InstructionSource)" num="26" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LoadingOp(Op&lt;List&lt;SClass&gt;&gt;,InstructionSource)" num="32" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LoadingOp(KlassInternalName,InstructionSource)" num="39" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="eval(JState) : void" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/klass/PutStaticOp.java" name="PutStaticOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="49" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="39" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="PutStaticOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PutStaticOp(FieldInsnNode)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.factory">
         <metrics coveredelements="0" complexity="306" loc="1546" methods="176" classes="10" statements="467" coveredconditionals="0" coveredmethods="0" elements="663" ncloc="1284" files="9" conditionals="20" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/AbstractInstructionSink.java" name="AbstractInstructionSink.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="29" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="22" statements="3" conditionals="4" coveredstatements="0"/>
            <class name="AbstractInstructionSink">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="11" statements="3" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="line(int) : void" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nextOp(Vop,InstructionCode) : void" num="16" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="linearOp(Vop,InstructionCode) : void" num="21" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noOp() : void" num="26" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/BaseInstructionSource.java" name="BaseInstructionSource.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="136" loc="687" coveredmethods="0" methods="117" elements="293" classes="1" ncloc="554" statements="174" conditionals="2" coveredstatements="0"/>
            <class name="BaseInstructionSource">
               <metrics coveredelements="0" coveredconditionals="0" complexity="136" coveredmethods="0" methods="117" elements="293" statements="174" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BaseInstructionSource(InstructionFactory)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodentry(SMethodDescriptor,InstructionSink) : InstructionSource" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokevirtual(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeinterface(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokespecial(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokestatic(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeconstructorofclassobjects(KlassInternalName,InstructionSource.InstructionSink) : InstructionSource" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="got0(InstructionSource.InstructionSink) : InstructionSource" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifacmpne(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifacmpeq(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpge(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpgt(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmplt(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmple(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpne(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpeq(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifnonnull(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifnull(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifne(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifeq(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iflt(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifle(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifgt(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifge(JumpInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="sink(Vop,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkcast(TypeInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance0f(TypeInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anewarray(InstructionSource.InstructionSink) : InstructionSource" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reflectionnewarray(InstructionSource.InstructionSink) : InstructionSource" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iinc(IincInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newarray(int,InstructionSource.InstructionSink) : InstructionSource" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="initialFieldValue(int) : Object" num="227" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bipush(int,InstructionSource.InstructionSink) : InstructionSource" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sipush(int,InstructionSource.InstructionSink) : InstructionSource" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ldcdouble(double,InstructionSource.InstructionSink) : InstructionSource" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ldcfloat(float,InstructionSource.InstructionSink) : InstructionSource" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ldclong(long,InstructionSource.InstructionSink) : InstructionSource" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ldcint(int,InstructionSource.InstructionSink) : InstructionSource" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop(InstructionSource.InstructionSink) : InstructionSource" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lcmp(InstructionSource.InstructionSink) : InstructionSource" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fcmpl(InstructionSource.InstructionSink) : InstructionSource" num="300" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fcmpg(InstructionSource.InstructionSink) : InstructionSource" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="f2i(InstructionSource.InstructionSink) : InstructionSource" num="310" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="i2f(InstructionSource.InstructionSink) : InstructionSource" num="315" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="l2i(InstructionSource.InstructionSink) : InstructionSource" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="i2c(InstructionSource.InstructionSink) : InstructionSource" num="325" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="i2l(InstructionSource.InstructionSink) : InstructionSource" num="330" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lushr(InstructionSource.InstructionSink) : InstructionSource" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ixor(InstructionSource.InstructionSink) : InstructionSource" num="340" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ior(InstructionSource.InstructionSink) : InstructionSource" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iushr(InstructionSource.InstructionSink) : InstructionSource" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ishr(InstructionSource.InstructionSink) : InstructionSource" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ishl(InstructionSource.InstructionSink) : InstructionSource" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraylength(InstructionSource.InstructionSink) : InstructionSource" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aaload(InstructionSource.InstructionSink) : InstructionSource" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iaload(InstructionSource.InstructionSink) : InstructionSource" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="caload(InstructionSource.InstructionSink) : InstructionSource" num="380" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aastore(InstructionSource.InstructionSink) : InstructionSource" num="385" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iastore(InstructionSource.InstructionSink) : InstructionSource" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="castore(InstructionSource.InstructionSink) : InstructionSource" num="395" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lconst(long,InstructionSource.InstructionSink) : InstructionSource" num="400" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lconst(long,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="404" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lconst_1(InstructionSource.InstructionSink) : InstructionSource" num="408" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lconst_0(InstructionSource.InstructionSink) : InstructionSource" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_5(InstructionSource.InstructionSink) : InstructionSource" num="418" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_4(InstructionSource.InstructionSink) : InstructionSource" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_3(InstructionSource.InstructionSink) : InstructionSource" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_2(InstructionSource.InstructionSink) : InstructionSource" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_1(InstructionSource.InstructionSink) : InstructionSource" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_m1(InstructionSource.InstructionSink) : InstructionSource" num="443" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dup_x1(InstructionSource.InstructionSink) : InstructionSource" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dup(InstructionSource.InstructionSink) : InstructionSource" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ineg(InstructionSource.InstructionSink) : InstructionSource" num="458" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isub(InstructionSource.InstructionSink) : InstructionSource" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fdiv(InstructionSource.InstructionSink) : InstructionSource" num="468" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fmul(InstructionSource.InstructionSink) : InstructionSource" num="473" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imul(InstructionSource.InstructionSink) : InstructionSource" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="idiv(InstructionSource.InstructionSink) : InstructionSource" num="483" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iadd(InstructionSource.InstructionSink) : InstructionSource" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="irem(InstructionSource.InstructionSink) : InstructionSource" num="494" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="land(InstructionSource.InstructionSink) : InstructionSource" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iand(InstructionSource.InstructionSink) : InstructionSource" num="503" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putstaticfield(FieldInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="508" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getstaticfield(FieldInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="513" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getfield(FieldInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="518" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putfield(FieldInsnNode,InstructionSource.InstructionSink) : InstructionSource" num="523" count="0" type="method"/>
            <line num="525" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="store(int,InstructionSource.InstructionSink) : InstructionSource" num="528" count="0" type="method"/>
            <line num="530" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="store2(int,InstructionSource.InstructionSink) : InstructionSource" num="533" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aconst_null(InstructionSource.InstructionSink) : InstructionSource" num="538" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst(int,InstructionSource.InstructionSink) : InstructionSource" num="542" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="iconst(int,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="546" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_0(InstructionSource.InstructionSink) : InstructionSource" num="550" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fconst_0(InstructionSource.InstructionSink) : InstructionSource" num="553" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringpoolload(String,InstructionSource.InstructionSink) : InstructionSource" num="557" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectpoolload(Type,InstructionSource.InstructionSink) : InstructionSource" num="561" count="0" type="method"/>
            <line num="562" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="load(int,InstructionSource.InstructionSink) : InstructionSource" num="565" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="load(int,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="569" count="0" type="method"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="load2(int,InstructionSource.InstructionSink) : InstructionSource" num="573" count="0" type="method"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnvoid(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="577" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return1(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="582" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return2(SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="587" count="0" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newobject(KlassInternalName,InstructionSource.InstructionSink) : InstructionSource" num="592" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="binaryOp(BinaryOperator,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="596" count="0" type="method"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="linearInstruction(Vop,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="601" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="loadingInstruction(KlassInternalName,Vop,InstructionCode,InstructionSource.InstructionSink) : InstructionSource" num="606" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aload(int,InstructionSource.InstructionSink) : InstructionSource" num="612" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fload(int,InstructionSource.InstructionSink) : InstructionSource" num="616" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iload(int,InstructionSource.InstructionSink) : InstructionSource" num="620" count="0" type="method"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dload(int,InstructionSource.InstructionSink) : InstructionSource" num="624" count="0" type="method"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fconst(float) : NullaryOp" num="628" count="0" type="method"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="nullary(NullaryOperator) : NullaryOp" num="632" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="nullary2(Nullary2Operator) : Nullary2Op" num="636" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadarg(Object,InstructionSink) : InstructionSource" num="640" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="initialFieldValue(String) : Object" num="645" count="0" type="method"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodName(String,String,String) : SMethodDescriptor" num="673" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodName(KlassInternalName,String,String) : SMethodDescriptor" num="677" count="0" type="method"/>
            <line num="678" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="canonicalMethodName(AsmSMethodName) : SMethodDescriptor" num="681" count="0" type="method"/>
            <line num="682" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="682" type="cond"/>
            <line num="683" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/BaseInstructionSourceFactory.java" name="BaseInstructionSourceFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="5" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BaseInstructionSourceFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="instructionSource(InstructionFactory) : InstructionSource" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/ConcInstructionFactory.java" name="ConcInstructionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="48" loc="272" coveredmethods="0" methods="48" elements="96" classes="1" ncloc="221" statements="48" conditionals="0" coveredstatements="0"/>
            <class name="ConcInstructionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="48" coveredmethods="0" methods="48" elements="96" statements="48" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="iaddOperation() : BinaryOperator" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iremOperation() : BinaryOperator" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imulOperation() : BinaryOperator" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fmulOperation() : BinaryOperator" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fdivOperation() : BinaryOperator" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fsubOperation() : BinaryOperator" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="faddOperation() : BinaryOperator" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isubOperation() : BinaryOperator" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="idivOperation() : BinaryOperator" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inegOperation() : UnaryOperator" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iandOperation() : BinaryOperator" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="landOperation() : Binary2Operator" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifge(JumpInsnNode) : Vop" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifgt(JumpInsnNode) : Vop" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifle(JumpInsnNode) : Vop" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iflt(JumpInsnNode) : Vop" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifne(JumpInsnNode) : Vop" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifeq(JumpInsnNode) : Vop" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpeq(JumpInsnNode) : Vop" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpne(JumpInsnNode) : Vop" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmple(JumpInsnNode) : Vop" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpge(JumpInsnNode) : Vop" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmplt(JumpInsnNode) : Vop" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ificmpgt(JumpInsnNode) : Vop" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifnull(JumpInsnNode) : Vop" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifnonnull(JumpInsnNode) : Vop" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifacmpne(JumpInsnNode) : Vop" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifacmpeq(JumpInsnNode) : Vop" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="icmp(ICmpOp) : Vop" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="branchInstruction(BranchPredicate) : Vop" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst(int) : NullaryOperator" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lconst(long) : Nullary2Operator" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fconst(float) : NullaryOperator" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dconst(double) : Nullary2Operator" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initInt() : Object" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putField(FieldInsnNode) : Vop" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getField(FieldInsnNode) : Vop" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newArray(Object) : NewArrayOp" num="228" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aNewArray() : Vop" num="232" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reflectionNewArray() : Vop" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aaStore() : Vop" num="241" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iaStore() : Vop" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="caStore() : Vop" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iaLoad() : Vop" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aaLoad() : Vop" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="caLoad() : Vop" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadArg(Object,InstructionSource) : Vop" num="265" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newObject(KlassInternalName) : Op&lt;?&gt;" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/InstructionFactory.java" name="InstructionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="74" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="59" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstructionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/InstructionSource.java" name="InstructionSource.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="160" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="122" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstructionSource">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InstructionSource.InstructionSink">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/InstructionSourceFactory.java" name="InstructionSourceFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InstructionSourceFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/InstructionSwitch.java" name="InstructionSwitch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="111" loc="285" coveredmethods="0" methods="2" elements="253" classes="1" ncloc="277" statements="237" conditionals="14" coveredstatements="0"/>
            <class name="InstructionSwitch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="111" coveredmethods="0" methods="2" elements="253" statements="237" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InstructionSwitch(InstructionSource)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="110" visibility="public" signature="instructionFor(AbstractInsnNode,SMethodDescriptor,InstructionSource.InstructionSink) : InstructionSource" num="30" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/factory/VopAdapter.java" name="VopAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="VopAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VopAdapter(Op&lt;?&gt;)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.ops">
         <metrics coveredelements="0" complexity="21" loc="163" methods="20" classes="10" statements="25" coveredconditionals="0" coveredmethods="0" elements="47" ncloc="126" files="10" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/Binary2Op.java" name="Binary2Op.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="29" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="Binary2Op">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Binary2Op(Binary2Operator)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/Binary2Operator.java" name="Binary2Operator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Binary2Operator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/BinaryOp.java" name="BinaryOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="29" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="BinaryOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryOp(BinaryOperator)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/BinaryOperator.java" name="BinaryOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/Nullary2Op.java" name="Nullary2Op.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Nullary2Op">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Nullary2Op(Nullary2Operator)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/Nullary2Operator.java" name="Nullary2Operator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Nullary2Operator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/NullaryOp.java" name="NullaryOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="28" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="22" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="NullaryOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="11" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NullaryOp(NullaryOperator)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/NullaryOperator.java" name="NullaryOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NullaryOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/UnaryOp.java" name="UnaryOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnaryOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnaryOp(UnaryOperator)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/ops/UnaryOperator.java" name="UnaryOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="UnaryOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.branch">
         <metrics coveredelements="0" complexity="5" loc="33" methods="4" classes="2" statements="4" coveredconditionals="0" coveredmethods="0" elements="10" ncloc="23" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branch/BranchInstruction.java" name="BranchInstruction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="26" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="19" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="BranchInstruction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="10" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BranchInstruction(BranchPredicate)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="20" type="cond"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/branch/BranchPredicate.java" name="BranchPredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BranchPredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.pool">
         <metrics coveredelements="0" complexity="10" loc="89" methods="9" classes="2" statements="20" coveredconditionals="0" coveredmethods="0" elements="31" ncloc="66" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/pool/ObjectPoolLoad.java" name="ObjectPoolLoad.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="36" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ObjectPoolLoad">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ObjectPoolLoad(Type)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ObjectPoolLoad(KlassInternalName)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/pool/StringPoolLoadOperator.java" name="StringPoolLoadOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="53" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="39" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="StringPoolLoadOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StringPoolLoadOperator(String)" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eval(JState) : void" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.statementBuilder">
         <metrics coveredelements="0" complexity="33" loc="174" methods="29" classes="1" statements="61" coveredconditionals="0" coveredmethods="0" elements="98" ncloc="141" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/statementBuilder/StatementBuilder.java" name="StatementBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="174" coveredmethods="0" methods="29" elements="98" classes="1" ncloc="141" statements="61" conditionals="8" coveredstatements="0"/>
            <class name="StatementBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="29" elements="98" statements="61" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StatementBuilder(InstructionSource)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="nextInstruction(InstructionInternal) : void" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line complexity="1" visibility="public" signature="before(Instruction) : StatementBuilder" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxLocals(int) : StatementBuilder" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxStack(int) : StatementBuilder" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : MethodBody" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="buildInstruction() : Instruction" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newObject(KlassInternalName) : StatementBuilder" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aconst_null() : StatementBuilder" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst_0() : StatementBuilder" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iconst(int) : StatementBuilder" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lconst(long) : StatementBuilder" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dup() : StatementBuilder" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return1(SMethodDescriptor) : StatementBuilder" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return2(SMethodDescriptor) : StatementBuilder" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnVoid(SMethodDescriptor) : StatementBuilder" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aload(int) : StatementBuilder" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fload(int) : StatementBuilder" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dload(int) : StatementBuilder" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeInterface(String,String,String) : StatementBuilder" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadArg(Object) : StatementBuilder" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeSpecial(SMethodDescriptor) : StatementBuilder" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInvokeStatic(SMethodDescriptor) : StatementBuilder" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeConstructorOfClassObjects(KlassInternalName) : StatementBuilder" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="linearOp(Vop) : StatementBuilder" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reflectionnewarray() : StatementBuilder" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements(InstructionSource) : StatementBuilder" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sink() : InstructionSink" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line(int) : StatementBuilder" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.d0uble">
         <metrics coveredelements="0" complexity="3" loc="22" methods="3" classes="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" ncloc="16" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/d0uble/DConstOperator.java" name="DConstOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DConstOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DConstOperator(double)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval() : Object" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.l0ng">
         <metrics coveredelements="0" complexity="16" loc="107" methods="14" classes="5" statements="24" coveredconditionals="0" coveredmethods="0" elements="42" ncloc="83" files="5" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/l0ng/L2IOp.java" name="L2IOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="L2IOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/l0ng/LAndOp.java" name="LAndOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="LAndOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/l0ng/LCmpOp.java" name="LCmpOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="30" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="25" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="LCmpOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="13" type="cond"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="15" type="cond"/>
            <line num="16" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/l0ng/LConstOperator.java" name="LConstOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LConstOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LConstOperator(long)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval() : Object" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/l0ng/LushrOp.java" name="LushrOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="LushrOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.stack">
         <metrics coveredelements="0" complexity="29" loc="195" methods="29" classes="8" statements="34" coveredconditionals="0" coveredmethods="0" elements="63" ncloc="153" files="8" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/DupOp.java" name="DupOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="20" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DupOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/Dup_X1Op.java" name="Dup_X1Op.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="24" coveredmethods="0" methods="3" elements="10" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="Dup_X1Op">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/Load.java" name="Load.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Load">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Load(int)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/Load2.java" name="Load2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Load2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Load2(int)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/PopOp.java" name="PopOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="PopOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/ReturnInstruction.java" name="ReturnInstruction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="28" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ReturnInstruction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReturnInstruction(SMethodDescriptor,int)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/Store.java" name="Store.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Store">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Store(int)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/stack/Store2.java" name="Store2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="26" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Store2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Store2(int)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.integer">
         <metrics coveredelements="0" complexity="40" loc="288" methods="40" classes="18" statements="41" coveredconditionals="0" coveredmethods="0" elements="81" ncloc="220" files="18" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/I2COp.java" name="I2COp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="15" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="I2COp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/I2FOp.java" name="I2FOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="I2FOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/I2LOp.java" name="I2LOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="15" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="I2LOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IAddOperator.java" name="IAddOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IAddOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IAndOperator.java" name="IAndOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IAndOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IConstM1Operator.java" name="IConstM1Operator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IConstM1Operator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval() : Object" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IConstOperator.java" name="IConstOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="IConstOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IConstOperator(int)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval() : Object" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IDivOperator.java" name="IDivOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="15" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IDivOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IMulOperator.java" name="IMulOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IMulOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/INegOperator.java" name="INegOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="INegOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object) : Object" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IRemOperator.java" name="IRemOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="15" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IRemOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/ISubOperator.java" name="ISubOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ISubOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IincOp.java" name="IincOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="IincOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IincOp(int,int)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IorOperator.java" name="IorOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="13" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IorOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IshlOperator.java" name="IshlOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="13" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IshlOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IshrOperator.java" name="IshrOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="13" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IshrOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IushrOperator.java" name="IushrOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="13" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IushrOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/integer/IxorOperator.java" name="IxorOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="13" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IxorOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(Object,Object) : Object" num="6" count="0" type="method"/>
            <line num="7" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.nativ3">
         <metrics coveredelements="0" complexity="22" loc="154" methods="22" classes="7" statements="28" coveredconditionals="0" coveredmethods="0" elements="50" ncloc="123" files="7" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/CurrentThreadOp.java" name="CurrentThreadOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CurrentThreadOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/CurrentTimeMillisOp.java" name="CurrentTimeMillisOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CurrentTimeMillisOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/DoubleToRawLongBits.java" name="DoubleToRawLongBits.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DoubleToRawLongBits">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/FloatToRawIntBits.java" name="FloatToRawIntBits.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="FloatToRawIntBits">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/GetCallerClass.java" name="GetCallerClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="24" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="GetCallerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/InitThreadOp.java" name="InitThreadOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="35" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="29" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="InitThreadOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initThreadInstruction(StatementBuilder) : void" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/main/java/com/lexicalscope/svm/j/instruction/concrete/nativ3/NanoTimeOp.java" name="NanoTimeOp.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="19" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="NanoTimeOp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eval(JState) : void" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(InstructionQuery&lt;T&gt;) : T" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.partition.spec">
         <metrics coveredelements="0" complexity="28" loc="183" methods="27" classes="10" statements="30" coveredconditionals="0" coveredmethods="0" elements="59" ncloc="149" files="10" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/CallContext.java" name="CallContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CallContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/Context.java" name="Context.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Context">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/FeaturePredicate.java" name="FeaturePredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="13" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FeaturePredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FeaturePredicate(Predicate&lt;Receiver&gt;)" num="6" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="apply(T1) : boolean" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/Field.java" name="Field.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Field">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/Invocation.java" name="Invocation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Invocation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/Local.java" name="Local.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Local">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/MatchersSpec.java" name="MatchersSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="123" coveredmethods="0" methods="25" elements="56" classes="1" ncloc="105" statements="29" conditionals="2" coveredstatements="0"/>
            <class name="MatchersSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="25" elements="56" statements="29" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="objectClass(Matcher&lt;String&gt;) : Matcher&lt;Receiver&gt;" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Receiver) : String" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receiverClass(String) : Matcher&lt;? super CallContext&gt;" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receiverClass(Class&lt;?&gt;) : Matcher&lt;? super CallContext&gt;" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="klassIn(String) : Matcher&lt;Receiver&gt;" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="klassIn(Set&lt;String&gt;) : Matcher&lt;Receiver&gt;" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receiver(Matcher&lt;Receiver&gt;) : Matcher&lt;Invocation&gt;" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Invocation) : Receiver" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="field(String,Matcher&lt;? super Field&gt;) : Matcher&lt;Receiver&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Receiver) : Field" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calledBy(Matcher&lt;String&gt;) : Matcher&lt;CallContext&gt;" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(CallContext) : String" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callerParameter(int,Matcher&lt;Value&gt;) : Matcher&lt;Invocation&gt;" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Invocation) : Value" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calleeParameter(int,Matcher&lt;Value&gt;) : Matcher&lt;Invocation&gt;" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Invocation) : Value" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter(String,Matcher&lt;Value&gt;) : Matcher&lt;Invocation&gt;" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Invocation) : Value" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(Matcher&lt;? super Object&gt;) : Matcher&lt;Value&gt;" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(Value) : Object" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integer(Matcher&lt;Integer&gt;) : Matcher&lt;Object&gt;" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="matchesSafely(Object,Description) : boolean" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="previously(String,String,Matcher&lt;Invocation&gt;) : Matcher&lt;CallContext&gt;" num="113" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="featureValueOf(CallContext) : Invocation" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/Receiver.java" name="Receiver.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Receiver">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/StackFrame.java" name="StackFrame.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StackFrame">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-partition-trace-spec/src/main/java/com/lexicalscope/svm/partition/spec/Value.java" name="Value.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Value">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.heap">
         <metrics coveredelements="0" complexity="19" loc="119" methods="15" classes="5" statements="22" coveredconditionals="0" coveredmethods="0" elements="43" ncloc="86" files="5" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/heap/Allocatable.java" name="Allocatable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Allocatable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/heap/FastHeap.java" name="FastHeap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="58" coveredmethods="0" methods="10" elements="25" classes="1" ncloc="45" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="FastHeap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="10" elements="25" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="createFastHeap() : FastHeap" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="FastHeap(BitTrie,ObjectRef)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newObject(Allocatable) : ObjectRef" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(ObjectRef,int,Object) : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(ObjectRef,int) : Object" num="31" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addressFromRef(ObjectRef) : int" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullPointer() : ObjectRef" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : Heap" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode(ObjectRef) : int" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/heap/Heap.java" name="Heap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Heap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/heap/HeapFactory.java" name="HeapFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HeapFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/heap/ObjectRef.java" name="ObjectRef.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="33" coveredmethods="0" methods="5" elements="18" classes="1" ncloc="26" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="ObjectRef">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="18" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="ObjectRef(int)" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="address() : int" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="20" type="cond"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.metastate">
         <metrics coveredelements="4" complexity="8" loc="69" methods="8" classes="5" statements="8" coveredconditionals="0" coveredmethods="2" elements="16" ncloc="49" files="5" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/metastate/HashMetaState.java" name="HashMetaState.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="8" loc="42" coveredmethods="2" methods="8" elements="16" classes="1" ncloc="31" statements="8" conditionals="0" coveredstatements="2"/>
            <class name="HashMetaState">
               <metrics coveredelements="4" coveredconditionals="0" complexity="8" coveredmethods="2" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="HashMetaState()" num="10" count="50" type="method"/>
            <line num="11" count="50" type="stmt"/>
            <line complexity="1" visibility="private" signature="HashMetaState(HashMap&lt;MetaKey&lt;?&gt;, Object&gt;)" num="14" count="50" type="method"/>
            <line num="15" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : HashMetaState" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(MetaKey&lt;T&gt;) : T" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(MetaKey&lt;T&gt;,T) : void" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(MetaKey&lt;?&gt;) : boolean" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(MetaKey&lt;?&gt;) : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/metastate/MetaFactory.java" name="MetaFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="6" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MetaFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/metastate/MetaKey.java" name="MetaKey.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MetaKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/metastate/MetaState.java" name="MetaState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MetaState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/metastate/SnapshotableMetaState.java" name="SnapshotableMetaState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SnapshotableMetaState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.stack">
         <metrics coveredelements="37" complexity="83" loc="502" methods="57" classes="7" statements="116" coveredconditionals="3" coveredmethods="10" elements="221" ncloc="395" files="6" conditionals="48" coveredstatements="24"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/DequeStack.java" name="DequeStack.java">
            <metrics coveredelements="37" coveredconditionals="3" complexity="36" loc="199" coveredmethods="10" methods="29" elements="95" classes="2" ncloc="150" statements="54" conditionals="12" coveredstatements="24"/>
            <class name="DequeStack">
               <metrics coveredelements="16" coveredconditionals="1" complexity="23" coveredmethods="4" methods="18" elements="60" statements="34" conditionals="8" coveredstatements="11"/>
            </class>
            <class name="DequeStack.DequeStackFrame">
               <metrics coveredelements="21" coveredconditionals="2" complexity="13" coveredmethods="6" methods="11" elements="35" statements="20" conditionals="4" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="private" signature="DequeStack(DequeStackFrame,Object)" num="21" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DequeStack()" num="26" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DequeStack(StackFrame)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="popFrame(int) : Stack" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="push(StackFrame) : Stack" num="41" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : StackFrame" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="pushOperands(Object[]) : Stack" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="topFrame() : StackFrame" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="snapshot() : DequeStack" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentThread(Object) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="currentThread() : Object" num="78" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="trace() : SStackTrace" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="88" type="cond"/>
            <line num="89" count="3" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousFrame() : StackFrame" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentFrame() : StackFrame" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DequeStackFrame(StackFrame,DequeStackFrame,int)" num="143" count="4" type="method"/>
            <line num="144" count="4" type="stmt"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="topFrame() : DequeStackFrame" num="149" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : DequeStackFrame" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pop() : DequeStackFrame" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line complexity="1" visibility="public" signature="push(StackFrame) : DequeStackFrame" num="163" count="3" type="method"/>
            <line num="164" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrame() : StackFrame" num="167" count="3" type="method"/>
            <line num="168" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreviousFrame() : DequeStackFrame" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toArray() : StackFrame[]" num="179" count="1" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="182" type="cond"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;StackFrame&gt;" num="194" count="1" type="method"/>
            <line num="196" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/MethodScope.java" name="MethodScope.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodScope">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/Padding.java" name="Padding.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="14" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Padding">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/SnapshotableStackFrame.java" name="SnapshotableStackFrame.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="230" coveredmethods="0" methods="27" elements="124" classes="1" ncloc="196" statements="61" conditionals="36" coveredstatements="0"/>
            <class name="SnapshotableStackFrame">
               <metrics coveredelements="0" coveredconditionals="0" complexity="46" coveredmethods="0" methods="27" elements="124" statements="61" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SnapshotableStackFrame(SMethodName,MethodScope,Object,int,int)" num="23" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="SnapshotableStackFrame(SMethodName,MethodScope,Object,Object[],int,int,SnapshotableMetaState)" num="38" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="advance(Object) : StackFrame" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="push(Object) : StackFrame" num="62" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="pushDoubleWord(Object) : StackFrame" num="75" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="pushInternal(Object) : void" num="85" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pop() : Object" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="popDoubleWord() : Object" num="101" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instruction() : Object" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pushAll(Object[]) : StackFrame" num="113" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="noNulls(Object[]) : boolean" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local(int) : Object" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="local(int,Object) : void" num="135" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setLocals(Object[]) : SnapshotableStackFrame" num="141" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop(int) : Object[]" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek(int) : Object[]" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : Object" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="locals(int) : Object[]" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : SnapshotableStackFrame" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="formatStack(StringBuilder,int,int) : void" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="context() : SMethodName" num="205" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDynamic() : boolean" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeta(MetaKey&lt;T&gt;) : T" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeta(MetaKey&lt;T&gt;,T) : void" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsMeta(MetaKey&lt;?&gt;) : boolean" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeMeta(MetaKey&lt;?&gt;) : void" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/Stack.java" name="Stack.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="21" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Stack">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/StackFrame.java" name="StackFrame.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StackFrame">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.lexicalscope.svm.stack.trace">
         <metrics coveredelements="13" complexity="9" loc="67" methods="9" classes="4" statements="10" coveredconditionals="0" coveredmethods="6" elements="19" ncloc="49" files="4" conditionals="0" coveredstatements="7"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/trace/SMethodName.java" name="SMethodName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="2" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SMethodName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/trace/SStackTrace.java" name="SStackTrace.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="23" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="SStackTrace">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SStackTrace(List&lt;SStackTraceElement&gt;)" num="12" count="1" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;SStackTraceElement&gt;" num="16" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/trace/SStackTraceElement.java" name="SStackTraceElement.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="19" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="SStackTraceElement">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SStackTraceElement(SMethodName)" num="8" count="3" type="method"/>
            <line num="9" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="method() : SMethodName" num="12" count="6" type="method"/>
            <line num="13" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/main/java/com/lexicalscope/svm/stack/trace/SStackTraceMatchers.java" name="SStackTraceMatchers.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="20" coveredmethods="2" methods="3" elements="7" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="SStackTraceMatchers">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="methodNamed(SMethodName) : Matcher&lt;? super SStackTraceElement&gt;" num="8" count="3" type="method"/>
            <line num="9" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(SStackTraceElement,Description) : boolean" num="14" count="3" type="method"/>
            <line num="15" count="3" type="stmt"/>
            <line num="16" count="3" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="svm-parent 0.0.1-SNAPSHOT (Aggregated)" timestamp="1594144203554">
      <metrics coveredelements="315" complexity="132" loc="1271" methods="126" classes="36" statements="354" packages="8" coveredconditionals="6" coveredmethods="73" elements="490" ncloc="970" files="33" conditionals="10" coveredstatements="236"/>
      <package name="com.lexicalscope.symb.versions">
         <metrics coveredelements="6" complexity="3" loc="38" methods="3" classes="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" ncloc="20" files="1" conditionals="0" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-versions-inline/src/test/java/com/lexicalscope/symb/versions/AppTest.java" name="AppTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="38" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="20" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="AppTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="AppTest(String)" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testApp() : void" num="34" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="36" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm">
         <metrics coveredelements="54" complexity="8" loc="77" methods="8" classes="1" statements="47" coveredconditionals="0" coveredmethods="7" elements="55" ncloc="63" files="1" conditionals="0" coveredstatements="47"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-vm/src/test/java/com/lexicalscope/svm/vm/TestVmImpl.java" name="TestVmImpl.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="8" loc="77" coveredmethods="7" methods="8" elements="55" classes="1" ncloc="63" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="TestVmImpl">
               <metrics coveredelements="54" complexity="8" methods="8" testruns="3" statements="47" coveredconditionals="0" coveredmethods="7" elements="55" testfailures="0" testduration="0.023999999999999997" conditionals="0" coveredstatements="47" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="invoke(Invocation) : Object" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="pendingStatesAreEvaluatedWhileAvailable() : void" num="38" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 39()" num="39" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="terminationAtLeafButSearchContinues() : void" num="52" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 53()" num="53" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="limitsStopSearch() : void" num="67" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 68()" num="68" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.classloading">
         <metrics coveredelements="0" complexity="49" loc="610" methods="47" classes="27" statements="103" coveredconditionals="0" coveredmethods="0" elements="154" ncloc="474" files="24" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/AnInterface.java" name="AnInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/ClassWith4StaticFieldsAnd2DynamicFields.java" name="ClassWith4StaticFieldsAnd2DynamicFields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="6" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassWith4StaticFieldsAnd2DynamicFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/ClassWith5Fields.java" name="ClassWith5Fields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassWith5Fields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/ClassWith5StaticFields.java" name="ClassWith5StaticFields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassWith5StaticFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/ClassWithAllTypesOfFields.java" name="ClassWithAllTypesOfFields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="12" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassWithAllTypesOfFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/EmptyClass.java" name="EmptyClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EmptyClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/OverriddenToString.java" name="OverriddenToString.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="7" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="OverriddenToString">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/SubClassWithAdditionalFields.java" name="SubClassWithAdditionalFields.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SubClassWithAdditionalFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/SubClassWithOverloadedField.java" name="SubClassWithOverloadedField.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SubClassWithOverloadedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/Subclass.java" name="Subclass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Subclass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestClassLoaderCaching.java" name="TestClassLoaderCaching.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="25" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TestClassLoaderCaching">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="loadSameObjectTwiceReturnsCachedCopy() : void" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="superclassIsCachedCopy() : void" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestClassLoaderLoadOrder.java" name="TestClassLoaderLoadOrder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="33" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="TestClassLoaderLoadOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="loadWillLoadSuperClassFirst() : void" num="18" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 19()" num="19" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestClassLoading.java" name="TestClassLoading.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="12" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TestClassLoading">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="loadAClass() : void" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestFieldInit.java" name="TestFieldInit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="75" coveredmethods="0" methods="10" elements="23" classes="1" ncloc="58" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="TestFieldInit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="23" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="intFieldInit() : void" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charFieldInit() : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="byteFieldInit() : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shortFieldInit() : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longFieldInit() : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatFieldInit() : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleFieldInit() : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectFieldInit() : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkFieldInit(String,Object) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestFieldLinking.java" name="TestFieldLinking.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="72" coveredmethods="0" methods="5" elements="39" classes="1" ncloc="58" statements="34" conditionals="0" coveredstatements="0"/>
            <class name="TestFieldLinking">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="39" statements="34" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="classWithNoSuperClassCountsFieldsFromPreamble() : void" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classWithSuperClassCountsFieldsFromSuperClassFields() : void" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classWithOverloadedFieldHasMoreThanOneIndex() : void" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classCountsStaticFieldsFrom0() : void" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classWithStaticAndDynamicFieldsSeparatesThem() : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestInstanceOf.java" name="TestInstanceOf.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="40" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="29" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="TestInstanceOf">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="integerIsANumber() : void" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numberInNotAnInteger() : void" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayListIsAList() : void" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="listIsNotAnArrayList() : void" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestLineNumbers.java" name="TestLineNumbers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="2" elements="9" classes="2" ncloc="34" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="TestLineNumbers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestLineNumbers.LineNumbers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="aMethod(int,int) : int" num="16" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canObtainMethodNamesOfVirtualMethod() : void" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestLoadFromSpecificJar.java" name="TestLoadFromSpecificJar.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="42" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="35" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="TestLoadFromSpecificJar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="loadsFromExamplesOne() : void" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadsFromExamplesTwo() : void" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadsBootstrapClassesFromExamplesOne() : void" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadsBootstrapClassesFromExamplesTwo() : void" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestMethodLinking.java" name="TestMethodLinking.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="41" coveredmethods="0" methods="2" elements="9" classes="2" ncloc="35" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="TestMethodLinking">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodLinking.MethodWithTwoReturns">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="twoReturns(int) : int" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="linkedMethodIsTree() : void" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestMethodParameterNamesCanBeObtainedFromDebugSymbols.java" name="TestMethodParameterNamesCanBeObtainedFromDebugSymbols.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="39" coveredmethods="0" methods="6" elements="12" classes="2" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="TestMethodParameterNamesCanBeObtainedFromDebugSymbols">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodParameterNamesCanBeObtainedFromDebugSymbols.MethodNames">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="3" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodNames(int,int)" num="16" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="aMethod(int,int) : void" num="18" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticMethod(int,int) : void" num="20" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="canObtainMethodNamesOfVirtualMethod() : void" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canObtainMethodNamesOfConstructor() : void" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canObtainMethodNamesOfStaticMethod() : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestObjectMethodResolution.java" name="TestObjectMethodResolution.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="35" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="28" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TestObjectMethodResolution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="resolveMethodsFromObject() : void" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveOverriddenMethodFromObject() : void" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestStatics.java" name="TestStatics.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="29" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="TestStatics">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="definedClassGivesClassRef() : void" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="definedClassCannotBeRedefined() : void" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestStaticsClassloadingOrder.java" name="TestStaticsClassloadingOrder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="51" coveredmethods="0" methods="3" elements="17" classes="1" ncloc="39" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="TestStaticsClassloadingOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="17" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="loadClass() : void" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classLoadingOrder() : void" num="35" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 36()" num="36" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-classloading/src/test/java/com/lexicalscope/svm/classloading/TestThreadIsLoadedFromLocal.java" name="TestThreadIsLoadedFromLocal.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="14" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TestThreadIsLoadedFromLocal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="javaLangThreadLocalVersionIsLoaded() : void" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.vm.j">
         <metrics coveredelements="26" complexity="4" loc="70" methods="4" classes="2" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" ncloc="51" files="2" conditionals="0" coveredstatements="22"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/test/java/com/lexicalscope/svm/vm/j/TestAsmSMethodName.java" name="TestAsmSMethodName.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="22" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TestAsmSMethodName">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.009" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testToString() : void" num="13" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQualifiedMethodName() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jcore/src/test/java/com/lexicalscope/svm/vm/j/TestStateSnapshot.java" name="TestStateSnapshot.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="35" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="TestStateSnapshot">
               <metrics coveredelements="22" complexity="2" methods="2" testruns="1" statements="20" coveredconditionals="0" coveredmethods="2" elements="22" testfailures="0" testduration="0.03" conditionals="0" coveredstatements="20" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="snapshotOfStateCopiesEverythingStateful() : void" num="20" testsuccess="true" count="1" testduration="0.03" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 39()" num="39" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.rcbittrie">
         <metrics coveredelements="145" complexity="56" loc="291" methods="52" classes="2" statements="107" coveredconditionals="6" coveredmethods="47" elements="165" ncloc="225" files="2" conditionals="6" coveredstatements="92"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-trie/src/test/java/com/lexicalscope/rcbittrie/TestBitTrie.java" name="TestBitTrie.java">
            <metrics coveredelements="126" coveredconditionals="6" complexity="48" loc="231" coveredmethods="42" methods="44" elements="131" classes="1" ncloc="178" statements="81" conditionals="6" coveredstatements="78"/>
            <class name="TestBitTrie">
               <metrics coveredelements="126" complexity="48" methods="44" testruns="40" statements="81" coveredconditionals="6" coveredmethods="42" elements="131" testfailures="0" testduration="0.019000000000000003" conditionals="6" coveredstatements="78" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="13" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstObjectGoesBottomLeft() : void" num="16" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="object32GoesNextPage() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="24" type="cond"/>
            <line num="25" count="31" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="canInsertAndOverwrite100bject() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="33" type="cond"/>
            <line num="34" count="100" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="37" type="cond"/>
            <line num="38" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="canAllocate100bject() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object31GoesIn1() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object32GoesIn2() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object62GoesIn2() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object63GoesIn2() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object64GoesIn2() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object65GoesIn2() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object511GoesIn2() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object512GoesIn3() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object8191GoesIn3() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object8192GoesIn4() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object131071GoesIn4() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object131072GoesIn5() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object2097151GoesIn5() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object2097152GoesIn6() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object33554431GoesIn6() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object33554432GoesIn7() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object536870911GoesIn7() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object536870912GoesIn8() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectm1GoesIn8() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy1isDistinct() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy31isDistinct() : void" num="126" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy32isDistinct() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy512isDistinct() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy8192isDistinct() : void" num="138" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy131072isDistinct() : void" num="142" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy2097152isDistinct() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy33554432isDistinct() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy536870912isDistinct() : void" num="154" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="copyIsDistinct(int) : void" num="158" count="9" type="method"/>
            <line num="159" count="9" type="stmt"/>
            <line num="160" count="9" type="stmt"/>
            <line num="161" count="9" type="stmt"/>
            <line num="163" count="9" type="stmt"/>
            <line num="164" count="9" type="stmt"/>
            <line num="166" count="9" type="stmt"/>
            <line num="167" count="9" type="stmt"/>
            <line num="169" count="9" type="stmt"/>
            <line num="170" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="objectm1IsLastObject() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectMaxIntOverflowsCorrectly() : void" num="184" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testInsertAndSetAt(int,int) : Object" num="190" count="19" type="method"/>
            <line num="191" count="19" type="stmt"/>
            <line num="192" count="19" type="stmt"/>
            <line num="193" count="19" type="stmt"/>
            <line num="194" count="19" type="stmt"/>
            <line num="195" count="19" type="stmt"/>
            <line num="197" count="19" type="stmt"/>
            <line num="198" count="19" type="stmt"/>
            <line num="199" count="19" type="stmt"/>
            <line num="201" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="level2offsetOf31is0() : void" num="204" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="level1offsetOf31is31() : void" num="208" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="level2offsetOf32is1() : void" num="212" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="level1offsetOf32is1() : void" num="216" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allocate1Skips1() : void" num="220" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allocate5Skips5() : void" num="226" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-trie/src/test/java/com/lexicalscope/rcbittrie/TestBitTrieToString.java" name="TestBitTrieToString.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="60" coveredmethods="5" methods="8" elements="34" classes="1" ncloc="47" statements="26" conditionals="0" coveredstatements="14"/>
            <class name="TestBitTrieToString">
               <metrics coveredelements="19" complexity="8" methods="8" testruns="6" statements="26" coveredconditionals="0" coveredmethods="5" elements="34" testfailures="3" testduration="0.006" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="15" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bitTrieIteratorGivesItemsInOrder() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bitTrieIteratorGivesInitialNullsWhenStartIsNot1() : void" num="24" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bitTrieToStringPresentsOrderedStringRepresentationsOfItems() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canOnlyCallNextIfElementsRemainInIterator() : void" num="40" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeNotSupported() : void" num="47" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callingNextOnIteratorAfterInsertionOnTrieCausesAnException() : void" num="53" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction.concrete.fl0at">
         <metrics coveredelements="13" complexity="3" loc="31" methods="3" classes="1" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" ncloc="24" files="1" conditionals="0" coveredstatements="10"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/test/java/com/lexicalscope/svm/j/instruction/concrete/fl0at/TestFCmp.java" name="TestFCmp.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="3" loc="31" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="24" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="TestFCmp">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="3" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="10" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="v1GreaterThanV2IsOne() : void" num="12" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="v1GreaterLessV2IsMinusOne() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="numCmpNaNIsCorrect() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.svm.j.instruction">
         <metrics coveredelements="59" complexity="7" loc="113" methods="7" classes="1" statements="52" coveredconditionals="0" coveredmethods="7" elements="59" ncloc="82" files="1" conditionals="0" coveredstatements="52"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-jinstruction/src/test/java/com/lexicalscope/svm/j/instruction/TestInstructionInternalGraph.java" name="TestInstructionInternalGraph.java">
            <metrics coveredelements="59" coveredconditionals="0" complexity="7" loc="113" coveredmethods="7" methods="7" elements="59" classes="1" ncloc="82" statements="52" conditionals="0" coveredstatements="52"/>
            <class name="TestInstructionInternalGraph">
               <metrics coveredelements="59" complexity="7" methods="7" testruns="7" statements="52" coveredconditionals="0" coveredmethods="7" elements="59" testfailures="0" testduration="0.013000000000000001" conditionals="0" coveredstatements="52" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="instructionsAreAppendedAtTheEndOfTheChain() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionsAreInsertedDirectlyAfter() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionListIsInsertedDirectlyAfter() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionsAreInsertedDirectlyBefore() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionListIsInsertedDirectlyBefore() : void" num="68" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenInsertingBeforeBranchTargetsAreFixedUp() : void" num="82" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instructionListInsertedAsReplacement() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.lexicalscope.symb.stack.trace">
         <metrics coveredelements="12" complexity="2" loc="41" methods="2" classes="1" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" ncloc="31" files="1" conditionals="0" coveredstatements="10"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/svm-state/src/test/java/com/lexicalscope/symb/stack/trace/TestStackTrace.java" name="TestStackTrace.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="TestStackTrace">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="1" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.026" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="stackTraceContainsMethodsCalledInReverseOrder() : void" num="28" testsuccess="true" count="1" testduration="0.026" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 29()" num="29" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>