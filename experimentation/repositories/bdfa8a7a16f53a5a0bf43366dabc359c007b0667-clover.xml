<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594338124936" clover="4.4.1">
   <project name="rubycollect4j 2.1.2-SNAPSHOT" timestamp="0">
      <metrics coveredelements="0" complexity="5169" loc="51819" methods="3941" classes="249" statements="12496" packages="7" coveredconditionals="0" coveredmethods="0" elements="18263" ncloc="28817" files="217" conditionals="1826" coveredstatements="0"/>
      <package name="net.sf.rubycollect4j.iter">
         <metrics coveredelements="0" complexity="1053" loc="11279" methods="735" classes="128" statements="2212" coveredconditionals="0" coveredmethods="0" elements="3447" ncloc="6163" files="128" conditionals="500" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ChunkIterable.java" name="ChunkIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="34" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="ChunkIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ChunkIterable(Iterable&lt;? extends E&gt;,Function&lt;? super E, ? extends K&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;K, RubyArray&lt;E&gt;&gt;&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ChunkIterator.java" name="ChunkIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="92" coveredmethods="0" methods="5" elements="21" classes="1" ncloc="39" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="ChunkIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="21" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ChunkIterator(Iterator&lt;? extends E&gt;,Function&lt;? super E, ? extends K&gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : Entry&lt;K, RubyArray&lt;E&gt;&gt;" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;K, RubyArray&lt;E&gt;&gt;" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ChunkWhileIterable.java" name="ChunkWhileIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="32" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="ChunkWhileIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ChunkWhileIterable(Iterable&lt;? extends E&gt;,BiPredicate&lt;? super E, ? super E&gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ChunkWhileIterator.java" name="ChunkWhileIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="93" coveredmethods="0" methods="5" elements="31" classes="1" ncloc="42" statements="18" conditionals="8" coveredstatements="0"/>
            <class name="ChunkWhileIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="31" statements="18" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ChunkWhileIterator(Iterator&lt;? extends E&gt;,BiPredicate&lt;? super E, ? super E&gt;)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/CombinationIterable.java" name="CombinationIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="79" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="32" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="CombinationIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="18" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CombinationIterable(List&lt;? extends E&gt;,int)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/CombinationIterator.java" name="CombinationIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="130" coveredmethods="0" methods="8" elements="66" classes="1" ncloc="77" statements="36" conditionals="22" coveredstatements="0"/>
            <class name="CombinationIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="8" elements="66" statements="36" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CombinationIterator(List&lt;? extends E&gt;,int)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="initCounter() : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="initEndStatus() : void" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="increaseCounter() : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ComparableEntryIterable.java" name="ComparableEntryIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="74" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="30" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="ComparableEntryIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparableEntryIterable(Iterable&lt;? extends Entry&lt;? extends K, ? extends V&gt;&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;K, V&gt;&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ComparableEntryIterator.java" name="ComparableEntryIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="69" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ComparableEntryIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparableEntryIterator(Iterator&lt;? extends Entry&lt;? extends K, ? extends V&gt;&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;K, V&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/CycleIterable.java" name="CycleIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="106" coveredmethods="0" methods="4" elements="38" classes="1" ncloc="50" statements="26" conditionals="8" coveredstatements="0"/>
            <class name="CycleIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="38" statements="26" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CycleIterable(Iterable&lt;? extends E&gt;)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CycleIterable(Iterable&lt;E&gt;,int)" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/CycleIterator.java" name="CycleIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="108" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="49" statements="23" conditionals="10" coveredstatements="0"/>
            <class name="CycleIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="6" elements="39" statements="23" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CycleIterator(Iterable&lt;? extends E&gt;)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CycleIterator(Iterable&lt;? extends E&gt;,int)" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : E" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="hasNext() : boolean" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : E" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/DropIterable.java" name="DropIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="79" coveredmethods="0" methods="3" elements="22" classes="1" ncloc="32" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="DropIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="22" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DropIterable(Iterable&lt;? extends E&gt;,int)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/DropIterator.java" name="DropIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="80" coveredmethods="0" methods="4" elements="23" classes="1" ncloc="31" statements="13" conditionals="6" coveredstatements="0"/>
            <class name="DropIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="23" statements="13" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="DropIterator(Iterator&lt;? extends E&gt;,int)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/DropWhileIterable.java" name="DropWhileIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="77" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="DropWhileIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="DropWhileIterable(Iterable&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/DropWhileIterator.java" name="DropWhileIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="79" coveredmethods="0" methods="4" elements="21" classes="1" ncloc="30" statements="11" conditionals="6" coveredstatements="0"/>
            <class name="DropWhileIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="4" elements="21" statements="11" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="DropWhileIterator(Iterator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachConsIterable.java" name="EachConsIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="83" coveredmethods="0" methods="3" elements="22" classes="1" ncloc="33" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="EachConsIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="22" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="EachConsIterable(Iterable&lt;? extends E&gt;,int)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachConsIterator.java" name="EachConsIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="101" coveredmethods="0" methods="7" elements="34" classes="1" ncloc="46" statements="19" conditionals="8" coveredstatements="0"/>
            <class name="EachConsIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="7" elements="34" statements="19" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="EachConsIterator(Iterator&lt;? extends E&gt;,int)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="fillBucket() : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="updateBucket() : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line complexity="1" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachIndexIterable.java" name="EachIndexIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="69" coveredmethods="0" methods="3" elements="17" classes="1" ncloc="28" statements="12" conditionals="2" coveredstatements="0"/>
            <class name="EachIndexIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EachIndexIterable(Iterable&lt;? extends E&gt;)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Integer&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachIndexIterator.java" name="EachIndexIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="66" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="EachIndexIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EachIndexIterator(Iterator&lt;? extends E&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Integer" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachLineIterable.java" name="EachLineIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="92" coveredmethods="0" methods="4" elements="26" classes="1" ncloc="41" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="EachLineIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="26" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EachLineIterable(File,boolean)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EachLineIterable(InputStream,boolean)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterator() : Iterator&lt;String&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachLineIterator.java" name="EachLineIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="149" coveredmethods="0" methods="7" elements="59" classes="1" ncloc="91" statements="36" conditionals="16" coveredstatements="0"/>
            <class name="EachLineIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="7" elements="59" statements="36" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EachLineIterator(File,boolean)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EachLineIterator(InputStream,boolean)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="init() : void" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="nextLine() : String" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : String" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachSliceIterable.java" name="EachSliceIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="84" coveredmethods="0" methods="3" elements="22" classes="1" ncloc="33" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="EachSliceIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="22" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="EachSliceIterable(Iterable&lt;? extends E&gt;,int)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachSliceIterator.java" name="EachSliceIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="37" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="EachSliceIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="25" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="EachSliceIterator(Iterator&lt;? extends E&gt;,int)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachWithIndexIterable.java" name="EachWithIndexIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="73" coveredmethods="0" methods="3" elements="17" classes="1" ncloc="30" statements="12" conditionals="2" coveredstatements="0"/>
            <class name="EachWithIndexIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EachWithIndexIterable(Iterable&lt;? extends E&gt;)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;E, Integer&gt;&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachWithIndexIterator.java" name="EachWithIndexIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="EachWithIndexIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EachWithIndexIterator(Iterator&lt;? extends E&gt;)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;E, Integer&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachWithObjectIterable.java" name="EachWithObjectIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="78" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="EachWithObjectIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="EachWithObjectIterable(Iterable&lt;? extends E&gt;,O)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;E, O&gt;&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/EachWithObjectIterator.java" name="EachWithObjectIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="26" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="EachWithObjectIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="EachWithObjectIterator(Iterator&lt;? extends E&gt;,O)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;E, O&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/FindAllIterable.java" name="FindAllIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="77" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="FindAllIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="FindAllIterable(Iterable&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/FindAllIterator.java" name="FindAllIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="82" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="FindAllIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="FindAllIterator(Iterator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="advanceCursor() : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/FlattenIterable.java" name="FlattenIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="79" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="32" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="FlattenIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="FlattenIterable(Iterable&lt;? extends E&gt;,Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;S&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/FlattenIterator.java" name="FlattenIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="92" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="41" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="FlattenIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="28" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="FlattenIterator(Iterator&lt;? extends E&gt;,Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="nextElement() : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : S" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/GrepIterable.java" name="GrepIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="29" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="GrepIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="GrepIterable(Iterable&lt;? extends E&gt;,String)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/GrepIterator.java" name="GrepIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="82" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="GrepIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="GrepIterator(Iterator&lt;? extends E&gt;,String)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="advanceCursor() : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/GrepVIterable.java" name="GrepVIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="29" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="GrepVIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="GrepVIterable(Iterable&lt;? extends E&gt;,String)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/GrepVIterator.java" name="GrepVIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="81" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="32" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="GrepVIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="GrepVIterator(Iterator&lt;? extends E&gt;,String)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="advanceCursor() : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/PermutationIterable.java" name="PermutationIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="79" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="32" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="PermutationIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="18" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PermutationIterable(List&lt;? extends E&gt;,int)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/PermutationIterator.java" name="PermutationIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="167" coveredmethods="0" methods="11" elements="105" classes="1" ncloc="110" statements="58" conditionals="36" coveredstatements="0"/>
            <class name="PermutationIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="11" elements="105" statements="58" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="PermutationIterator(List&lt;? extends E&gt;,int)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="initCounter() : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="initEndStatus() : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="increaseCounter() : void" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getHigherIndex(int) : int" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line complexity="2" visibility="private" signature="getLowerIndex(int) : int" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getAllIndice() : List&lt;Integer&gt;" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ProductIterable.java" name="ProductIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="97" coveredmethods="0" methods="4" elements="28" classes="1" ncloc="39" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="ProductIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ProductIterable(List&lt;? extends E&gt;,List&lt;? extends List&lt;? extends E&gt;&gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ProductIterable(List&lt;? extends E&gt;,List&lt;? extends E&gt;)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ProductIterator.java" name="ProductIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="108" coveredmethods="0" methods="7" elements="50" classes="1" ncloc="59" statements="27" conditionals="16" coveredstatements="0"/>
            <class name="ProductIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="7" elements="50" statements="27" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ProductIterator(List&lt;? extends List&lt;? extends E&gt;&gt;)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="increaseCounter() : void" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isLooping() : boolean" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RangeIterable.java" name="RangeIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="89" coveredmethods="0" methods="3" elements="23" classes="1" ncloc="38" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="RangeIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="23" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="RangeIterable(Successive&lt;E&gt;,E,E,Interval)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RangeIterator.java" name="RangeIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="95" coveredmethods="0" methods="4" elements="32" classes="1" ncloc="42" statements="18" conditionals="10" coveredstatements="0"/>
            <class name="RangeIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="4" elements="32" statements="18" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="public" signature="RangeIterator(Successive&lt;E&gt;,E,E,Interval)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : E" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RejectIterable.java" name="RejectIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="77" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="RejectIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="RejectIterable(Iterable&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RejectIterator.java" name="RejectIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="82" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="RejectIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="RejectIterator(Iterator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="advanceCursor() : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RepeatedCombinationIterable.java" name="RepeatedCombinationIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="80" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="33" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="RepeatedCombinationIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="18" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RepeatedCombinationIterable(List&lt;? extends E&gt;,int)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RepeatedCombinationIterator.java" name="RepeatedCombinationIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="120" coveredmethods="0" methods="6" elements="56" classes="1" ncloc="69" statements="32" conditionals="18" coveredstatements="0"/>
            <class name="RepeatedCombinationIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="6" elements="56" statements="32" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="RepeatedCombinationIterator(List&lt;? extends E&gt;,int)" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="increaseCounter() : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RepeatedPermutationIterable.java" name="RepeatedPermutationIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="80" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="33" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="RepeatedPermutationIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="18" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RepeatedPermutationIterable(List&lt;? extends E&gt;,int)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/RepeatedPermutationIterator.java" name="RepeatedPermutationIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="120" coveredmethods="0" methods="6" elements="56" classes="1" ncloc="69" statements="32" conditionals="18" coveredstatements="0"/>
            <class name="RepeatedPermutationIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="6" elements="56" statements="32" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="RepeatedPermutationIterator(List&lt;? extends E&gt;,int)" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="increaseCounter() : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ReverseEachIterable.java" name="ReverseEachIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="3" elements="17" classes="1" ncloc="28" statements="12" conditionals="2" coveredstatements="0"/>
            <class name="ReverseEachIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReverseEachIterable(Iterable&lt;? extends E&gt;)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ReverseEachIterator.java" name="ReverseEachIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="82" coveredmethods="0" methods="5" elements="24" classes="1" ncloc="36" statements="13" conditionals="6" coveredstatements="0"/>
            <class name="ReverseEachIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="24" statements="13" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReverseEachIterator(Iterator&lt;? extends E&gt;)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="initReversedIter() : void" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasNext() : boolean" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : E" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/SliceAfterIterable.java" name="SliceAfterIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="104" coveredmethods="0" methods="4" elements="34" classes="1" ncloc="44" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="SliceAfterIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="34" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SliceAfterIterable(Iterable&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SliceAfterIterable(Iterable&lt;E&gt;,Pattern)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/SliceAfterIterator.java" name="SliceAfterIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="116" coveredmethods="0" methods="6" elements="48" classes="1" ncloc="53" statements="26" conditionals="16" coveredstatements="0"/>
            <class name="SliceAfterIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="6" elements="48" statements="26" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SliceAfterIterator(Iterator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SliceAfterIterator(Iterator&lt;? extends E&gt;,Pattern)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/SliceBeforeIterable.java" name="SliceBeforeIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="104" coveredmethods="0" methods="4" elements="34" classes="1" ncloc="44" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="SliceBeforeIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="34" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SliceBeforeIterable(Iterable&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SliceBeforeIterable(Iterable&lt;E&gt;,Pattern)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/SliceBeforeIterator.java" name="SliceBeforeIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="113" coveredmethods="0" methods="6" elements="36" classes="1" ncloc="51" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="SliceBeforeIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="6" elements="36" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SliceBeforeIterator(Iterator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SliceBeforeIterator(Iterator&lt;? extends E&gt;,Pattern)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/SliceWhenIterable.java" name="SliceWhenIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="SliceWhenIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SliceWhenIterable(Iterable&lt;? extends E&gt;,BiPredicate&lt;? super E, ? super E&gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/SliceWhenIterator.java" name="SliceWhenIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="85" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="35" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="SliceWhenIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SliceWhenIterator(Iterator&lt;? extends E&gt;,BiPredicate&lt;? super E, ? super E&gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextElement() : RubyArray&lt;E&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/StepIterable.java" name="StepIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="3" elements="26" classes="1" ncloc="34" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="StepIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="26" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="StepIterable(Iterable&lt;? extends E&gt;,int)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/StepIterator.java" name="StepIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="98" coveredmethods="0" methods="5" elements="46" classes="1" ncloc="48" statements="27" conditionals="14" coveredstatements="0"/>
            <class name="StepIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="5" elements="46" statements="27" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="StepIterator(Iterator&lt;? extends E&gt;,int)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line complexity="6" visibility="private" signature="advanceCursor() : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/TakeIterable.java" name="TakeIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="79" coveredmethods="0" methods="3" elements="22" classes="1" ncloc="32" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="TakeIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="22" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TakeIterable(Iterable&lt;? extends E&gt;,int)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/TakeIterator.java" name="TakeIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="78" coveredmethods="0" methods="4" elements="19" classes="1" ncloc="29" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="TakeIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="19" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TakeIterator(Iterator&lt;? extends E&gt;,int)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : E" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/TakeWhileIterable.java" name="TakeWhileIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="77" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="TakeWhileIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TakeWhileIterable(Iterable&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/TakeWhileIterator.java" name="TakeWhileIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="28" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="TakeWhileIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="17" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TakeWhileIterator(Iterator&lt;? extends E&gt;,Predicate&lt;? super E&gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : E" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/TransformIterable.java" name="TransformIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="78" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="31" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="TransformIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TransformIterable(Iterable&lt;? extends E&gt;,Function&lt;? super E, ? extends S&gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;S&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/TransformIterator.java" name="TransformIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="25" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="TransformIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TransformIterator(Iterator&lt;? extends E&gt;,Function&lt;? super E, ? extends S&gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : S" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ZipIterable.java" name="ZipIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="3" elements="24" classes="1" ncloc="37" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="ZipIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="24" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ZipIterable(Iterable&lt;? extends E&gt;,Iterable&lt;? extends Iterable&lt;? extends E&gt;&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;RubyArray&lt;E&gt;&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/iter/ZipIterator.java" name="ZipIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="79" coveredmethods="0" methods="4" elements="21" classes="1" ncloc="34" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="ZipIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="21" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ZipIterator(Iterator&lt;? extends E&gt;,Iterable&lt;? extends Iterator&lt;? extends E&gt;&gt;)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : RubyArray&lt;E&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ChunkIterableTest.java" name="ChunkIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="ChunkIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ChunkIteratorTest.java" name="ChunkIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="96" coveredmethods="0" methods="8" elements="29" classes="1" ncloc="64" statements="19" conditionals="2" coveredstatements="0"/>
            <class name="ChunkIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="29" statements="19" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparableEntry() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ChunkWhileIterableTest.java" name="ChunkWhileIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="ChunkWhileIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ChunkWhileIteratorTest.java" name="ChunkWhileIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="98" coveredmethods="0" methods="8" elements="32" classes="1" ncloc="66" statements="22" conditionals="2" coveredstatements="0"/>
            <class name="ChunkWhileIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="32" statements="22" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparableEntry() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/CombinationIterableTest.java" name="CombinationIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="59" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="CombinationIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/CombinationIteratorTest.java" name="CombinationIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="124" coveredmethods="0" methods="12" elements="50" classes="1" ncloc="89" statements="34" conditionals="4" coveredstatements="0"/>
            <class name="CombinationIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="12" elements="50" statements="34" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithN0() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNegtiveN() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExceededN() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExactN() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefensiveCopy() : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ComparableEntryIterableTest.java" name="ComparableEntryIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="51" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="25" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ComparableEntryIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ComparableEntryIteratorTest.java" name="ComparableEntryIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="70" coveredmethods="0" methods="5" elements="20" classes="1" ncloc="42" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="ComparableEntryIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="20" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/CycleIterableTest.java" name="CycleIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="72" coveredmethods="0" methods="6" elements="20" classes="1" ncloc="44" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="CycleIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/CycleIteratorTest.java" name="CycleIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="113" coveredmethods="0" methods="8" elements="56" classes="1" ncloc="82" statements="38" conditionals="10" coveredstatements="0"/>
            <class name="CycleIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="56" statements="38" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testHasNext() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemove() : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/DropIterableTest.java" name="DropIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="70" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="41" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="DropIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/DropIteratorTest.java" name="DropIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="97" coveredmethods="0" methods="9" elements="32" classes="1" ncloc="65" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="DropIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="32" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExceedN() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveException() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/DropWhileIterableTest.java" name="DropWhileIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="DropWhileIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/DropWhileIteratorTest.java" name="DropWhileIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="99" coveredmethods="0" methods="8" elements="33" classes="1" ncloc="68" statements="23" conditionals="2" coveredstatements="0"/>
            <class name="DropWhileIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="33" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveException() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachConsIterableTest.java" name="EachConsIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="7" elements="18" classes="1" ncloc="47" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="EachConsIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachConsIteratorTest.java" name="EachConsIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="109" coveredmethods="0" methods="9" elements="42" classes="1" ncloc="77" statements="29" conditionals="4" coveredstatements="0"/>
            <class name="EachConsIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="42" statements="29" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachIndexIterableTest.java" name="EachIndexIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="59" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="EachIndexIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachIndexIteratorTest.java" name="EachIndexIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="79" coveredmethods="0" methods="6" elements="25" classes="1" ncloc="50" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="EachIndexIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="25" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachLineIterableTest.java" name="EachLineIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="EachLineIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachLineIteratorTest.java" name="EachLineIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="109" coveredmethods="0" methods="9" elements="37" classes="1" ncloc="77" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="EachLineIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="37" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachSliceIterableTest.java" name="EachSliceIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="7" elements="18" classes="1" ncloc="47" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="EachSliceIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachSliceIteratorTest.java" name="EachSliceIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="106" coveredmethods="0" methods="9" elements="39" classes="1" ncloc="74" statements="26" conditionals="4" coveredstatements="0"/>
            <class name="EachSliceIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="39" statements="26" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachWithIndexIterableTest.java" name="EachWithIndexIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="59" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="EachWithIndexIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachWithIndexIteratorTest.java" name="EachWithIndexIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="87" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="56" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="EachWithIndexIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparableEntry() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachWithObjectIterableTest.java" name="EachWithObjectIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="EachWithObjectIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/EachWithObjectIteratorTest.java" name="EachWithObjectIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="98" coveredmethods="0" methods="8" elements="31" classes="1" ncloc="66" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="EachWithObjectIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="31" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparableEntry() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/FindAllIterableTest.java" name="FindAllIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FindAllIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/FindAllIteratorTest.java" name="FindAllIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="87" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="57" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="FindAllIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/FlattenIterableTest.java" name="FlattenIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FlattenIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/FlattenIteratorTest.java" name="FlattenIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="111" coveredmethods="0" methods="9" elements="40" classes="1" ncloc="78" statements="27" conditionals="4" coveredstatements="0"/>
            <class name="FlattenIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="40" statements="27" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextWithNullValue() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveException() : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/GrepIterableTest.java" name="GrepIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="72" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="43" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="GrepIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/GrepIteratorTest.java" name="GrepIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="86" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="56" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="GrepIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/GrepVIterableTest.java" name="GrepVIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="72" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="43" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="GrepVIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/GrepVIteratorTest.java" name="GrepVIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="85" coveredmethods="0" methods="7" elements="26" classes="1" ncloc="55" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="GrepVIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="26" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/PermutationIterableTest.java" name="PermutationIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="60" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="PermutationIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/PermutationIteratorTest.java" name="PermutationIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="112" coveredmethods="0" methods="8" elements="49" classes="1" ncloc="81" statements="37" conditionals="4" coveredstatements="0"/>
            <class name="PermutationIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="49" statements="37" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefensiveCopy() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ProductIterableTest.java" name="ProductIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="89" coveredmethods="0" methods="8" elements="23" classes="1" ncloc="58" statements="15" conditionals="0" coveredstatements="0"/>
            <class name="ProductIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="23" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithVarargs() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ProductIteratorTest.java" name="ProductIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="123" coveredmethods="0" methods="8" elements="57" classes="1" ncloc="91" statements="45" conditionals="4" coveredstatements="0"/>
            <class name="ProductIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="57" statements="45" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefensiveCopy() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RangeIterableTest.java" name="RangeIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="107" coveredmethods="0" methods="11" elements="29" classes="1" ncloc="73" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="RangeIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="29" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException4() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpen() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpen() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosed() : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RangeIteratorTest.java" name="RangeIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="143" coveredmethods="0" methods="13" elements="53" classes="1" ncloc="106" statements="36" conditionals="4" coveredstatements="0"/>
            <class name="RangeIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="13" elements="53" statements="36" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException4() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpen() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpen() : void" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosed() : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RejectIterableTest.java" name="RejectIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="RejectIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RejectIteratorTest.java" name="RejectIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="87" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="57" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="RejectIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RepeatedCombinationIterableTest.java" name="RepeatedCombinationIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="60" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="RepeatedCombinationIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RepeatedCombinationIteratorTest.java" name="RepeatedCombinationIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="136" coveredmethods="0" methods="12" elements="62" classes="1" ncloc="101" statements="46" conditionals="4" coveredstatements="0"/>
            <class name="RepeatedCombinationIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="12" elements="62" statements="46" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithN0() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNegtiveN() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExceededN() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExactN() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefensiveCopy() : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RepeatedPermutationIterableTest.java" name="RepeatedPermutationIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="61" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="34" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="RepeatedPermutationIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/RepeatedPermutationIteratorTest.java" name="RepeatedPermutationIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="147" coveredmethods="0" methods="12" elements="73" classes="1" ncloc="112" statements="57" conditionals="4" coveredstatements="0"/>
            <class name="RepeatedPermutationIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="12" elements="73" statements="57" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithN0() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNegtiveN() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExceededN() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithExactN() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefensiveCopy() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ReverseEachIterableTest.java" name="ReverseEachIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="59" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ReverseEachIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ReverseEachIteratorTest.java" name="ReverseEachIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="82" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="53" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="ReverseEachIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasNextLaziness() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveException() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/SliceAfterIterableTest.java" name="SliceAfterIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="95" coveredmethods="0" methods="8" elements="27" classes="1" ncloc="64" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="SliceAfterIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="27" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException4() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/SliceAfterIteratorTest.java" name="SliceAfterIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="112" coveredmethods="0" methods="9" elements="39" classes="1" ncloc="80" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="SliceAfterIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="39" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException4() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/SliceBeforeIterableTest.java" name="SliceBeforeIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="95" coveredmethods="0" methods="8" elements="27" classes="1" ncloc="64" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="SliceBeforeIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="27" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException4() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/SliceBeforeIteratorTest.java" name="SliceBeforeIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="112" coveredmethods="0" methods="9" elements="39" classes="1" ncloc="80" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="SliceBeforeIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="39" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException4() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/SliceWhenIterableTest.java" name="SliceWhenIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="46" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="SliceWhenIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/SliceWhenIteratorTest.java" name="SliceWhenIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="91" coveredmethods="0" methods="7" elements="29" classes="1" ncloc="61" statements="20" conditionals="2" coveredstatements="0"/>
            <class name="SliceWhenIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="29" statements="20" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/StepIterableTest.java" name="StepIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="7" elements="18" classes="1" ncloc="47" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="StepIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/StepIteratorTest.java" name="StepIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="112" coveredmethods="0" methods="9" elements="46" classes="1" ncloc="80" statements="33" conditionals="4" coveredstatements="0"/>
            <class name="StepIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="46" statements="33" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException3() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemove() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveExceotion() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/TakeIterableTest.java" name="TakeIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="70" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="41" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="TakeIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/TakeIteratorTest.java" name="TakeIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="99" coveredmethods="0" methods="8" elements="36" classes="1" ncloc="68" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="TakeIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="36" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/TakeWhileIterableTest.java" name="TakeWhileIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="TakeWhileIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/TakeWhileIteratorTest.java" name="TakeWhileIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="102" coveredmethods="0" methods="8" elements="36" classes="1" ncloc="71" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="TakeWhileIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="36" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNextException() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/TransformIterableTest.java" name="TransformIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="TransformIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/TransformIteratorTest.java" name="TransformIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="89" coveredmethods="0" methods="7" elements="29" classes="1" ncloc="59" statements="20" conditionals="2" coveredstatements="0"/>
            <class name="TransformIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="29" statements="20" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ZipIterableTest.java" name="ZipIterableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="72" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="43" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="ZipIterableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/iter/ZipIteratorTest.java" name="ZipIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="97" coveredmethods="0" methods="8" elements="33" classes="1" ncloc="66" statements="23" conditionals="2" coveredstatements="0"/>
            <class name="ZipIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="33" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefensiveCopy() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.rubycollect4j.succ">
         <metrics coveredelements="0" complexity="126" loc="1281" methods="95" classes="19" statements="219" coveredconditionals="0" coveredmethods="0" elements="366" ncloc="625" files="19" conditionals="52" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/CharacterSuccessor.java" name="CharacterSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="CharacterSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CharacterSuccessor()" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : CharacterSuccessor" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Character,Character) : int" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(Character) : Character" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/DateReverseSuccessor.java" name="DateReverseSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="65" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DateReverseSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DateReverseSuccessor()" num="36" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : DateReverseSuccessor" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(Date) : Date" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Date,Date) : int" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/DateSuccessor.java" name="DateSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="64" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DateSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DateSuccessor()" num="35" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : DateSuccessor" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(Date) : Date" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Date,Date) : int" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/DoubleSuccessor.java" name="DoubleSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="74" coveredmethods="0" methods="6" elements="21" classes="1" ncloc="31" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="DoubleSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="21" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DoubleSuccessor(int)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(Double) : Double" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Double,Double) : int" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/IntegerSuccessor.java" name="IntegerSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="IntegerSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="IntegerSuccessor()" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : IntegerSuccessor" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(Integer) : Integer" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Integer,Integer) : int" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/LocalDateTimeSuccessor.java" name="LocalDateTimeSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="61" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="LocalDateTimeSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="LocalDateTimeSuccessor()" num="35" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : LocalDateTimeSuccessor" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(LocalDateTime) : LocalDateTime" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(LocalDateTime,LocalDateTime) : int" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/LongSuccessor.java" name="LongSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="LongSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="LongSuccessor()" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : LongSuccessor" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(Long) : Long" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Long,Long) : int" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/StringSuccessor.java" name="StringSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="43" loc="186" coveredmethods="0" methods="15" elements="141" classes="1" ncloc="130" statements="80" conditionals="46" coveredstatements="0"/>
            <class name="StringSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="43" coveredmethods="0" methods="15" elements="141" statements="80" conditionals="46" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="StringSuccessor()" num="38" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : StringSuccessor" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="succ(String) : String" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="nextAlphanumeric(List&lt;List&lt;Character&gt;&gt;) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="increaseAlphanumeric(List&lt;Character&gt;) : boolean" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="increaseASCII(char) : char" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="nextUTF8(List&lt;Character&gt;) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line complexity="2" visibility="private" signature="increaseUTF8(char) : char" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="partition(String) : List&lt;List&lt;Character&gt;&gt;" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAlphanumeric(char) : boolean" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDigit(char) : boolean" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUpperCase(char) : boolean" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isLowerCase(char) : boolean" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="compare(String,String) : int" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/Successive.java" name="Successive.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Successive">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/succ/TemporalSuccessor.java" name="TemporalSuccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="72" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="29" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="TemporalSuccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="12" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TemporalSuccessor(TemporalUnit)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(T,T) : int" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(T) : T" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/CharacterSuccessorTest.java" name="CharacterSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="52" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="26" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="CharacterSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/DateReverseSuccessorTest.java" name="DateReverseSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="59" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DateReverseSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/DateSuccessorTest.java" name="DateSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="59" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DateSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/DoubleSuccessorTest.java" name="DoubleSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="85" coveredmethods="0" methods="8" elements="27" classes="1" ncloc="55" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="DoubleSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="27" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/IntegerSuccessorTest.java" name="IntegerSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="28" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="IntegerSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/LocalDateTimeSuccessorTest.java" name="LocalDateTimeSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="55" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="28" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="LocalDateTimeSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/LongSuccessorTest.java" name="LongSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="28" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="LongSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/StringSuccessorTest.java" name="StringSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="63" coveredmethods="0" methods="4" elements="21" classes="1" ncloc="37" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="StringSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="21" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleton() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/succ/TemporalSuccessorTest.java" name="TemporalSuccessorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="60" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="33" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="TemporalSuccessorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.rubycollect4j.extension">
         <metrics coveredelements="0" complexity="496" loc="3801" methods="483" classes="4" statements="982" coveredconditionals="0" coveredmethods="0" elements="1489" ncloc="2590" files="4" conditionals="24" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/extension/RubyIterables.java" name="RubyIterables.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="90" loc="749" coveredmethods="0" methods="90" elements="185" classes="1" ncloc="361" statements="95" conditionals="0" coveredstatements="0"/>
            <class name="RubyIterables">
               <metrics coveredelements="0" coveredconditionals="0" complexity="90" coveredmethods="0" methods="90" elements="185" statements="95" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RubyIterables()" num="58" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="allʔ(Iterable&lt;E&gt;) : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allʔ(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : boolean" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyʔ(Iterable&lt;E&gt;) : boolean" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyʔ(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : boolean" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chunk(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : Iterable&lt;Entry&lt;S, RubyArray&lt;E&gt;&gt;&gt;" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chunkWhile(Iterable&lt;E&gt;,BiPredicate&lt;? super E, ? super E&gt;) : Iterable&lt;RubyArray&lt;E&gt;&gt;" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;S&gt;" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collectConcat(Iterable&lt;E&gt;,Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;) : List&lt;S&gt;" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count(Iterable&lt;E&gt;) : int" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : int" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(Iterable&lt;E&gt;) : Iterable&lt;E&gt;" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(Iterable&lt;E&gt;,Consumer&lt;? super E&gt;) : void" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(Iterable&lt;E&gt;,int) : Iterable&lt;E&gt;" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(Iterable&lt;E&gt;,int,Consumer&lt;? super E&gt;) : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="detect(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : E" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="drop(Iterable&lt;E&gt;,int) : List&lt;E&gt;" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dropWhile(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : List&lt;E&gt;" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Iterable&lt;E&gt;,Consumer&lt;? super E&gt;) : Iterable&lt;E&gt;" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCons(Iterable&lt;E&gt;,int) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCons(Iterable&lt;E&gt;,int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachEntry(Iterable&lt;E&gt;,Consumer&lt;? super E&gt;) : Iterable&lt;E&gt;" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachSlice(Iterable&lt;E&gt;,int) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachSlice(Iterable&lt;E&gt;,int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithIndex(Iterable&lt;E&gt;) : Iterable&lt;? extends Entry&lt;E, Integer&gt;&gt;" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithIndex(Iterable&lt;E&gt;,BiConsumer&lt;? super E, Integer&gt;) : Iterable&lt;E&gt;" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithObject(Iterable&lt;E&gt;,O) : Iterable&lt;Entry&lt;E, O&gt;&gt;" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithObject(Iterable&lt;E&gt;,O,BiConsumer&lt;? super E, ? super O&gt;) : O" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entries(Iterable&lt;E&gt;) : List&lt;E&gt;" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : E" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findAll(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : List&lt;E&gt;" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findIndex(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : Integer" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findIndex(Iterable&lt;E&gt;,E) : Integer" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="first(Iterable&lt;E&gt;) : E" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="first(Iterable&lt;E&gt;,int) : List&lt;E&gt;" num="319" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatMap(Iterable&lt;E&gt;,Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;) : List&lt;S&gt;" num="326" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grep(Iterable&lt;E&gt;,String) : List&lt;E&gt;" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grep(Iterable&lt;E&gt;,String,Function&lt;? super E, ? extends S&gt;) : List&lt;S&gt;" num="341" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grepV(Iterable&lt;E&gt;,String) : List&lt;E&gt;" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grepV(Iterable&lt;E&gt;,String,Function&lt;? super E, ? extends S&gt;) : List&lt;S&gt;" num="357" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="groupBy(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : Map&lt;S, ? extends List&lt;E&gt;&gt;" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includeʔ(Iterable&lt;E&gt;,E) : boolean" num="374" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inject(Iterable&lt;E&gt;,BiFunction&lt;E, E, E&gt;) : E" num="381" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inject(Iterable&lt;E&gt;,I,BiFunction&lt;I, ? super E, I&gt;) : I" num="388" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lazy(Iterable&lt;E&gt;) : Iterable&lt;E&gt;" num="396" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="map(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;S&gt;" num="403" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Iterable&lt;E&gt;) : E" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Iterable&lt;E&gt;,Comparator&lt;? super E&gt;) : E" num="419" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="426" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy(Iterable&lt;E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberʔ(Iterable&lt;E&gt;,E) : boolean" num="442" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Iterable&lt;E&gt;) : E" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Iterable&lt;E&gt;,Comparator&lt;? super E&gt;) : E" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy(Iterable&lt;E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmax(Iterable&lt;E&gt;) : List&lt;E&gt;" num="479" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmax(Iterable&lt;E&gt;,Comparator&lt;? super E&gt;) : List&lt;E&gt;" num="486" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmaxBy(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;E&gt;" num="493" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmaxBy(Iterable&lt;E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;E&gt;" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noneʔ(Iterable&lt;E&gt;) : boolean" num="509" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noneʔ(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : boolean" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneʔ(Iterable&lt;E&gt;) : boolean" num="523" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneʔ(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : boolean" num="530" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : List&lt;? extends List&lt;E&gt;&gt;" num="537" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce(Iterable&lt;E&gt;,BiFunction&lt;E, E, E&gt;) : E" num="545" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce(Iterable&lt;E&gt;,I,BiFunction&lt;I, ? super E, I&gt;) : I" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reject(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : List&lt;E&gt;" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseEach(Iterable&lt;E&gt;) : Iterable&lt;E&gt;" num="567" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseEach(Iterable&lt;E&gt;,Consumer&lt;? super E&gt;) : Iterable&lt;E&gt;" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="select(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : List&lt;E&gt;" num="585" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceAfter(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="592" count="0" type="method"/>
            <line num="594" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceAfter(Iterable&lt;E&gt;,String) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="600" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceBefore(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="609" count="0" type="method"/>
            <line num="611" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceBefore(Iterable&lt;E&gt;,String) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="617" count="0" type="method"/>
            <line num="619" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceWhen(Iterable&lt;E&gt;,BiPredicate&lt;? super E, ? super E&gt;) : Iterable&lt;? extends List&lt;E&gt;&gt;" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sort(Iterable&lt;E&gt;) : List&lt;E&gt;" num="634" count="0" type="method"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Iterable&lt;E&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;E&gt;" num="641" count="0" type="method"/>
            <line num="643" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Iterable&lt;E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;E&gt;" num="649" count="0" type="method"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Iterable&lt;E&gt;,Comparator&lt;? super E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : List&lt;E&gt;" num="658" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(Iterable&lt;E&gt;) : BigDecimal" num="667" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(Iterable&lt;E&gt;,Function&lt;? super Number, ? extends Number&gt;) : BigDecimal" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(Iterable&lt;E&gt;,Number) : BigDecimal" num="682" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(Iterable&lt;E&gt;,Number,Function&lt;? super Number, ? extends Number&gt;) : BigDecimal" num="689" count="0" type="method"/>
            <line num="691" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="take(Iterable&lt;E&gt;,int) : List&lt;E&gt;" num="697" count="0" type="method"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="takeWhile(Iterable&lt;E&gt;,Predicate&lt;? super E&gt;) : List&lt;E&gt;" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toA(Iterable&lt;E&gt;) : List&lt;E&gt;" num="712" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toH(Iterable&lt;E&gt;,Function&lt;E, Entry&lt;K, V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="719" count="0" type="method"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toH(Iterable&lt;E&gt;,BiFunction&lt;E, E, Entry&lt;K, V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="727" count="0" type="method"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zip(Iterable&lt;E&gt;,List&lt;? extends Iterable&lt;? extends E&gt;&gt;) : List&lt;? extends List&lt;E&gt;&gt;" num="735" count="0" type="method"/>
            <line num="737" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zip(Iterable&lt;E&gt;,List&lt;? extends Iterable&lt;? extends E&gt;&gt;,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="743" count="0" type="method"/>
            <line num="746" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/extension/RubyStrings.java" name="RubyStrings.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="125" loc="889" coveredmethods="0" methods="118" elements="258" classes="1" ncloc="391" statements="126" conditionals="14" coveredstatements="0"/>
            <class name="RubyStrings">
               <metrics coveredelements="0" coveredconditionals="0" complexity="125" coveredmethods="0" methods="118" elements="258" statements="126" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RubyStrings()" num="41" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="asciiOnlyʔ(CharSequence) : boolean" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b(CharSequence) : String" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes(CharSequence) : List&lt;Byte&gt;" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytesize(CharSequence) : int" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="byteslice(CharSequence,int) : String" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line complexity="2" visibility="public" signature="byteslice(CharSequence,int,int) : String" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line complexity="1" visibility="public" signature="capitalize(CharSequence) : String" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="casecmp(CharSequence,CharSequence) : int" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="center(CharSequence,int) : String" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="center(CharSequence,int,String) : String" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chomp(CharSequence) : String" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chomp(CharSequence,String) : String" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chop(CharSequence) : String" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chr(CharSequence) : String" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear(CharSequence) : String" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="codepoints(CharSequence) : List&lt;Integer&gt;" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(CharSequence,int) : String" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(CharSequence,Object) : String" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count(CharSequence,String,String) : int" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="crypt(CharSequence,String) : String" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="delete(CharSequence,String) : String" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="downcase(CharSequence) : String" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dump(CharSequence) : String" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachByte(CharSequence) : Iterable&lt;Byte&gt;" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachByte(CharSequence,Consumer&lt;? super Byte&gt;) : String" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachChar(CharSequence) : Iterable&lt;String&gt;" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachChar(CharSequence,Consumer&lt;? super String&gt;) : String" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCodepoint(CharSequence) : Iterable&lt;Integer&gt;" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCodepoint(CharSequence,Consumer&lt;? super Integer&gt;) : String" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(CharSequence) : Iterable&lt;String&gt;" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(CharSequence,Consumer&lt;? super String&gt;) : String" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(CharSequence,String) : Iterable&lt;String&gt;" num="268" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(CharSequence,String,Consumer&lt;? super String&gt;) : String" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyʔ(CharSequence) : boolean" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encode(CharSequence,String) : String" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encode(CharSequence,String,String) : String" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endWithʔ(CharSequence,String,String) : boolean" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forceEncoding(CharSequence,String) : String" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getbyte(CharSequence,int) : Byte" num="320" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsub(CharSequence,String) : Iterable&lt;String&gt;" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsub(CharSequence,String,Map&lt;String, ?&gt;) : String" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsub(CharSequence,String,String) : String" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsub(CharSequence,String,Function&lt;? super String, ? extends CharSequence&gt;) : String" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hex(CharSequence) : long" num="356" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includeʔ(CharSequence,String) : boolean" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="index(CharSequence,Pattern) : Integer" num="370" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="index(CharSequence,String) : Integer" num="377" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="index(CharSequence,Pattern,int) : Integer" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="index(CharSequence,String,int) : Integer" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="insert(CharSequence,int,String) : String" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inspect(CharSequence) : String" num="405" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lines(CharSequence) : List&lt;String&gt;" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lines(CharSequence,String) : List&lt;String&gt;" num="419" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ljust(CharSequence,int) : String" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ljust(CharSequence,int,String) : String" num="433" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lstrip(CharSequence) : String" num="440" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="match(CharSequence,String) : Matcher" num="447" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="match(CharSequence,String,int) : Matcher" num="454" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next(CharSequence) : String" num="461" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oct(CharSequence) : int" num="468" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ord(CharSequence) : int" num="475" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(CharSequence,Pattern) : List&lt;String&gt;" num="482" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(CharSequence,String) : List&lt;String&gt;" num="489" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prepend(CharSequence,String) : String" num="496" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverse(CharSequence) : String" num="503" count="0" type="method"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rindex(CharSequence,Pattern) : Integer" num="510" count="0" type="method"/>
            <line num="511" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rindex(CharSequence,String) : Integer" num="517" count="0" type="method"/>
            <line num="518" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rindex(CharSequence,Pattern,int) : Integer" num="524" count="0" type="method"/>
            <line num="525" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rindex(CharSequence,String,int) : Integer" num="531" count="0" type="method"/>
            <line num="532" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rjust(CharSequence,int) : String" num="538" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rjust(CharSequence,int,String) : String" num="545" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rpartition(CharSequence,Pattern) : List&lt;String&gt;" num="552" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rpartition(CharSequence,String) : List&lt;String&gt;" num="559" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rstrip(CharSequence) : String" num="566" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scan(CharSequence,String) : List&lt;String&gt;" num="573" count="0" type="method"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scan(CharSequence,String,Consumer&lt;? super String&gt;) : String" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanGroups(CharSequence,String) : List&lt;? extends List&lt;String&gt;&gt;" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanGroups(CharSequence,String,Consumer&lt;? super RubyArray&lt;String&gt;&gt;) : String" num="596" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrub(CharSequence) : String" num="604" count="0" type="method"/>
            <line num="605" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrub(CharSequence,String) : String" num="611" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrub(CharSequence,Function&lt;? super RubyArray&lt;? super Byte&gt;, ? extends String&gt;) : String" num="618" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setbyte(CharSequence,int,byte) : String" num="626" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="slice(CharSequence,int) : String" num="635" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="637" type="cond"/>
            <line complexity="2" visibility="public" signature="slice(CharSequence,Pattern) : String" num="643" count="0" type="method"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="645" type="cond"/>
            <line complexity="2" visibility="public" signature="slice(CharSequence,String) : String" num="651" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="653" type="cond"/>
            <line complexity="2" visibility="public" signature="slice(CharSequence,int,int) : String" num="659" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="661" type="cond"/>
            <line complexity="2" visibility="public" signature="slice(CharSequence,Pattern,int) : String" num="667" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="669" type="cond"/>
            <line complexity="1" visibility="public" signature="split(CharSequence) : List&lt;String&gt;" num="675" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="split(CharSequence,Pattern) : List&lt;String&gt;" num="682" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="split(CharSequence,String) : List&lt;String&gt;" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="split(CharSequence,Pattern,int) : List&lt;String&gt;" num="696" count="0" type="method"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="split(CharSequence,String,int) : List&lt;String&gt;" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squeeze(CharSequence) : String" num="712" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squeeze(CharSequence,String) : String" num="719" count="0" type="method"/>
            <line num="720" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="startWithʔ(CharSequence,String,String) : boolean" num="726" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strip(CharSequence) : String" num="734" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(CharSequence,String,Map&lt;String, ?&gt;) : String" num="741" count="0" type="method"/>
            <line num="742" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(CharSequence,String,String) : String" num="748" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(CharSequence,String,Function&lt;? super String, ? extends CharSequence&gt;) : String" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ(CharSequence) : String" num="763" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(CharSequence) : int" num="770" count="0" type="method"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(CharSequence,int) : int" num="777" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="swapcase(CharSequence) : String" num="784" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toF(CharSequence) : double" num="791" count="0" type="method"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toI(CharSequence) : int" num="798" count="0" type="method"/>
            <line num="799" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toI(CharSequence,int) : int" num="805" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toS(CharSequence) : String" num="812" count="0" type="method"/>
            <line num="813" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toStr(CharSequence) : String" num="819" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tr(CharSequence,String,String) : String" num="826" count="0" type="method"/>
            <line num="827" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trS(CharSequence,String,String) : String" num="833" count="0" type="method"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unpack(CharSequence,String) : List&lt;Object&gt;" num="840" count="0" type="method"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upcase(CharSequence) : String" num="847" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(CharSequence,String) : Iterable&lt;String&gt;" num="854" count="0" type="method"/>
            <line num="855" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(CharSequence,String,Consumer&lt;? super String&gt;) : String" num="861" count="0" type="method"/>
            <line num="863" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(CharSequence,String,boolean) : Iterable&lt;String&gt;" num="869" count="0" type="method"/>
            <line num="871" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(CharSequence,String,boolean,Consumer&lt;? super String&gt;) : String" num="877" count="0" type="method"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validEncodingʔ(CharSequence,String) : boolean" num="885" count="0" type="method"/>
            <line num="886" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/extension/RubyIterablesTest.java" name="RubyIterablesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="101" loc="816" coveredmethods="0" methods="98" elements="403" classes="1" ncloc="693" statements="299" conditionals="6" coveredstatements="0"/>
            <class name="RubyIterablesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="101" coveredmethods="0" methods="98" elements="403" statements="299" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔ() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔWithBlock() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔ() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔWithBlock() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunk() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunkWhile() : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunkWithMethodName() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectWithBlock() : void" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectConcatWithBlock() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithBlock() : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycle() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycleWithN() : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCycleWithNAndBlock() : void" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycleWithBlock() : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line complexity="1" visibility="public" signature="testDetectWithBlock() : void" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDrop() : void" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropException() : void" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropWhileWithBlock() : void" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsException() : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsWithBlock() : void" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsWithBlockException() : void" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachEntryWithBlock() : void" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSlice() : void" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceException() : void" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceWithBlock() : void" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceWithBlockException() : void" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithIndex() : void" num="299" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithIndexWithBlock() : void" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithObject() : void" num="314" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithObjectWithBlock() : void" num="323" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntries() : void" num="330" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindWithBlock() : void" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindAllWithBlock() : void" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndexWithBlock() : void" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndexWithTarget() : void" num="356" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirst() : void" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirstWithN() : void" num="372" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirstWithNException() : void" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatMapWithBlock() : void" num="386" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrep() : void" num="392" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepWithBlock() : void" num="397" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepV() : void" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepVWithBlock() : void" num="408" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGroupByWithBlock() : void" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeʔ() : void" num="420" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithBlock() : void" num="426" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithInitAndBlock() : void" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLazy() : void" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithBlock() : void" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMax() : void" num="451" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxWithComparator() : void" num="459" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithComparatorAndBlock() : void" num="468" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithBlock() : void" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMemberʔ() : void" num="486" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMin() : void" num="492" count="0" type="method"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinWithComparator() : void" num="500" count="0" type="method"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithComparatorAndBlock() : void" num="509" count="0" type="method"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithBlock() : void" num="519" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmax() : void" num="527" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxWithComparator() : void" num="537" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithComparatorAndBlock() : void" num="548" count="0" type="method"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithBlock() : void" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔ() : void" num="570" count="0" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔWithBlock() : void" num="586" count="0" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔ() : void" num="592" count="0" type="method"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔWithBlock() : void" num="608" count="0" type="method"/>
            <line num="610" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithBlock() : void" num="616" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithBlock() : void" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithInitAndBlock() : void" num="628" count="0" type="method"/>
            <line num="630" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectWithBlock() : void" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEach() : void" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEachWithBlock() : void" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelectBlock() : void" num="654" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfterWithBlock() : void" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWhen() : void" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfterWithRegex() : void" num="673" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBeforeWithBlock() : void" num="680" count="0" type="method"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBeforeWithRegex() : void" num="687" count="0" type="method"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSort() : void" num="694" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="702" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithComparatorAndBlock() : void" num="706" count="0" type="method"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWith2ComparatorsAndBlock() : void" num="713" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithBlock() : void" num="721" count="0" type="method"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSum() : void" num="728" count="0" type="method"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumException() : void" num="734" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithBlock() : void" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithInit() : void" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithInitAndBlock() : void" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTake() : void" num="762" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeException() : void" num="769" count="0" type="method"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeWhileWithBlock() : void" num="776" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToA() : void" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToH() : void" num="789" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZip() : void" num="797" count="0" type="method"/>
            <line num="799" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZipWithBlock() : void" num="806" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/extension/RubyStringsTest.java" name="RubyStringsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="180" loc="1347" coveredmethods="0" methods="177" elements="643" classes="1" ncloc="1145" statements="462" conditionals="4" coveredstatements="0"/>
            <class name="RubyStringsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="180" coveredmethods="0" methods="177" elements="643" statements="462" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAsciiOnlyʔ() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testB() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBytes() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBytesize() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteslice() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCapitalize() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCasecmp() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCenter() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCenterException() : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCenterWithPadstr() : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChomp() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChompWithSeparator() : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChop() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChr() : void" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCodepoints() : void" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcat() : void" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcatWithObject() : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountException1() : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountException2() : void" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCrypt() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCryptException() : void" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteException() : void" num="242" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDowncase() : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDump() : void" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachBytes() : void" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachBytesWithBlock() : void" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachChars() : void" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCharsWithBlock() : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCodepoint() : void" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCodepointWithBlock() : void" num="294" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLine() : void" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithBlock() : void" num="307" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparator() : void" num="315" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparatorException() : void" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparatorAndBlock() : void" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparatorAndBlockException() : void" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncode() : void" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeException() : void" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeWithDestinationAndSourceEncoding() : void" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeExceptionWithNullDestinationEncoding() : void" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeExceptionWithNullSourceEncoding() : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndWithʔ() : void" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndWithʔException() : void" num="389" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForceEncoding() : void" num="396" count="0" type="method"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetbyte() : void" num="402" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsub() : void" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubException1() : void" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubException2() : void" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithMap() : void" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithMapException() : void" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithBlock() : void" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithBlockException() : void" num="451" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithoutReplacement() : void" num="458" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithoutReplacementException() : void" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHex() : void" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndex() : void" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexException() : void" num="485" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithOffset() : void" num="492" count="0" type="method"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithOffsetException() : void" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPattern() : void" num="505" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPatternException() : void" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPatternAndOffset() : void" num="518" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPatternAndOffsetException() : void" num="526" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsert() : void" num="533" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertIndexException1() : void" num="543" count="0" type="method"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertIndexException2() : void" num="550" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertException() : void" num="557" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInspect() : void" num="564" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLines() : void" num="570" count="0" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinesWithSeparator() : void" num="575" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinesWithSeparatorException() : void" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjust() : void" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjustWithPadstr() : void" num="593" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjustWithPadstrException() : void" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLstrip() : void" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMatch() : void" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="616" type="cond"/>
            <line num="617" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMatchException() : void" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMatchWithPosition() : void" num="629" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="635" type="cond"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMatchWithPositionException() : void" num="643" count="0" type="method"/>
            <line num="645" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOct() : void" num="655" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOrd() : void" num="663" count="0" type="method"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOrdException() : void" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartition() : void" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionException() : void" num="681" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithPattern() : void" num="688" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithPatternException() : void" num="694" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrepend() : void" num="701" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrependException() : void" num="706" count="0" type="method"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverse() : void" num="713" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindex() : void" num="718" count="0" type="method"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexException() : void" num="725" count="0" type="method"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithEnd() : void" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithEndException() : void" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPattern() : void" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPatternException() : void" num="756" count="0" type="method"/>
            <line num="758" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPatternAndStopAt() : void" num="763" count="0" type="method"/>
            <line num="765" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line num="767" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPatternAndStopAtException() : void" num="773" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line num="776" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRjust() : void" num="780" count="0" type="method"/>
            <line num="782" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRjustWithPadstr() : void" num="786" count="0" type="method"/>
            <line num="788" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartition() : void" num="793" count="0" type="method"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartitionException() : void" num="799" count="0" type="method"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartitionWithPattern() : void" num="806" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartitionWithPatternException() : void" num="814" count="0" type="method"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRstrip() : void" num="821" count="0" type="method"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScan() : void" num="827" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanException() : void" num="834" count="0" type="method"/>
            <line num="836" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanWithBlock() : void" num="841" count="0" type="method"/>
            <line num="843" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanWithBlockException() : void" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroups() : void" num="856" count="0" type="method"/>
            <line num="858" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroupsException() : void" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroupsWithBlock() : void" num="873" count="0" type="method"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroupsWithBlockException() : void" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrub() : void" num="889" count="0" type="method"/>
            <line num="891" count="0" type="stmt"/>
            <line num="892" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubWithReplacement() : void" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubWithBlock() : void" num="902" count="0" type="method"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetbyte() : void" num="911" count="0" type="method"/>
            <line num="913" count="0" type="stmt"/>
            <line num="914" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSlice() : void" num="917" count="0" type="method"/>
            <line num="919" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line num="921" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithLength() : void" num="925" count="0" type="method"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line num="929" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithPattern() : void" num="933" count="0" type="method"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithPatternException() : void" num="939" count="0" type="method"/>
            <line num="941" count="0" type="stmt"/>
            <line num="942" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithPatternAndGroupNumber() : void" num="946" count="0" type="method"/>
            <line num="948" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithMatchStr() : void" num="954" count="0" type="method"/>
            <line num="956" count="0" type="stmt"/>
            <line num="957" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplit() : void" num="960" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithDelimiter() : void" num="965" count="0" type="method"/>
            <line num="967" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithDelimiterAndLimit() : void" num="975" count="0" type="method"/>
            <line num="977" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="985" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithPatternAndDelimiter() : void" num="993" count="0" type="method"/>
            <line num="995" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithPatternAndDelimiterAndLimit() : void" num="1003" count="0" type="method"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1013" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line num="1017" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueeze() : void" num="1021" count="0" type="method"/>
            <line num="1023" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueezeWithCharSet() : void" num="1026" count="0" type="method"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1029" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueezeWithCharSetException() : void" num="1033" count="0" type="method"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1036" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartWithʔ() : void" num="1040" count="0" type="method"/>
            <line num="1042" count="0" type="stmt"/>
            <line num="1043" count="0" type="stmt"/>
            <line num="1044" count="0" type="stmt"/>
            <line num="1045" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartWithʔException() : void" num="1048" count="0" type="method"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1051" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStrip() : void" num="1055" count="0" type="method"/>
            <line num="1057" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSub() : void" num="1060" count="0" type="method"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubException1() : void" num="1066" count="0" type="method"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1069" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubException2() : void" num="1073" count="0" type="method"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1076" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithMap() : void" num="1080" count="0" type="method"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1083" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line num="1085" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithMapException() : void" num="1089" count="0" type="method"/>
            <line num="1091" count="0" type="stmt"/>
            <line num="1092" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithBlock() : void" num="1096" count="0" type="method"/>
            <line num="1098" count="0" type="stmt"/>
            <line num="1099" count="0" type="stmt"/>
            <line num="1100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithBlockException() : void" num="1103" count="0" type="method"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="1110" count="0" type="method"/>
            <line num="1112" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line num="1114" count="0" type="stmt"/>
            <line num="1115" count="0" type="stmt"/>
            <line num="1116" count="0" type="stmt"/>
            <line num="1117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSum() : void" num="1120" count="0" type="method"/>
            <line num="1122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapcase() : void" num="1125" count="0" type="method"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToF() : void" num="1131" count="0" type="method"/>
            <line num="1133" count="0" type="stmt"/>
            <line num="1134" count="0" type="stmt"/>
            <line num="1135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToI() : void" num="1138" count="0" type="method"/>
            <line num="1140" count="0" type="stmt"/>
            <line num="1141" count="0" type="stmt"/>
            <line num="1142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadix() : void" num="1145" count="0" type="method"/>
            <line num="1147" count="0" type="stmt"/>
            <line num="1148" count="0" type="stmt"/>
            <line num="1149" count="0" type="stmt"/>
            <line num="1150" count="0" type="stmt"/>
            <line num="1151" count="0" type="stmt"/>
            <line num="1152" count="0" type="stmt"/>
            <line num="1153" count="0" type="stmt"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1156" count="0" type="stmt"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadixException1() : void" num="1164" count="0" type="method"/>
            <line num="1166" count="0" type="stmt"/>
            <line num="1167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadixException2() : void" num="1171" count="0" type="method"/>
            <line num="1173" count="0" type="stmt"/>
            <line num="1174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadixException3() : void" num="1178" count="0" type="method"/>
            <line num="1180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToS() : void" num="1184" count="0" type="method"/>
            <line num="1186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToStr() : void" num="1189" count="0" type="method"/>
            <line num="1191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTr() : void" num="1194" count="0" type="method"/>
            <line num="1196" count="0" type="stmt"/>
            <line num="1197" count="0" type="stmt"/>
            <line num="1198" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1203" count="0" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1206" count="0" type="stmt"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1208" count="0" type="stmt"/>
            <line num="1209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrException1() : void" num="1212" count="0" type="method"/>
            <line num="1214" count="0" type="stmt"/>
            <line num="1215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrException2() : void" num="1219" count="0" type="method"/>
            <line num="1221" count="0" type="stmt"/>
            <line num="1222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrS() : void" num="1226" count="0" type="method"/>
            <line num="1228" count="0" type="stmt"/>
            <line num="1229" count="0" type="stmt"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1231" count="0" type="stmt"/>
            <line num="1232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrSException1() : void" num="1235" count="0" type="method"/>
            <line num="1237" count="0" type="stmt"/>
            <line num="1238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrSException2() : void" num="1242" count="0" type="method"/>
            <line num="1244" count="0" type="stmt"/>
            <line num="1245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpack() : void" num="1249" count="0" type="method"/>
            <line num="1251" count="0" type="stmt"/>
            <line num="1253" count="0" type="stmt"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1257" count="0" type="stmt"/>
            <line num="1258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackException() : void" num="1261" count="0" type="method"/>
            <line num="1263" count="0" type="stmt"/>
            <line num="1264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpcase() : void" num="1268" count="0" type="method"/>
            <line num="1270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpto() : void" num="1273" count="0" type="method"/>
            <line num="1275" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line num="1278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoException() : void" num="1282" count="0" type="method"/>
            <line num="1284" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusive() : void" num="1289" count="0" type="method"/>
            <line num="1291" count="0" type="stmt"/>
            <line num="1293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusiveException() : void" num="1297" count="0" type="method"/>
            <line num="1299" count="0" type="stmt"/>
            <line num="1300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithBlock() : void" num="1304" count="0" type="method"/>
            <line num="1306" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line num="1308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithBlockException() : void" num="1311" count="0" type="method"/>
            <line num="1313" count="0" type="stmt"/>
            <line num="1314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusiveAndBlock() : void" num="1318" count="0" type="method"/>
            <line num="1320" count="0" type="stmt"/>
            <line num="1321" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusiveAndBlockException() : void" num="1325" count="0" type="method"/>
            <line num="1327" count="0" type="stmt"/>
            <line num="1328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidEncodingʔ() : void" num="1332" count="0" type="method"/>
            <line num="1334" count="0" type="stmt"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1336" count="0" type="stmt"/>
            <line num="1337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidEncodingʔException() : void" num="1340" count="0" type="method"/>
            <line num="1342" count="0" type="stmt"/>
            <line num="1343" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.rubycollect4j.util">
         <metrics coveredelements="0" complexity="449" loc="3975" methods="328" classes="27" statements="1146" coveredconditionals="0" coveredmethods="0" elements="1690" ncloc="2602" files="20" conditionals="216" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/ASCII8BitUTF.java" name="ASCII8BitUTF.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="247" coveredmethods="0" methods="19" elements="103" classes="1" ncloc="135" statements="64" conditionals="20" coveredstatements="0"/>
            <class name="ASCII8BitUTF">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="19" elements="103" statements="64" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ASCII8BitUTF(String)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="countByteNumber() : int" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="advanceChar() : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="ch2Bytes(String) : RubyArray&lt;Byte&gt;" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="totalByteNumber() : int" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remainingByteNumber() : int" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rewind() : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNextChar() : boolean" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNextByte() : boolean" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="nextChar() : String" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="nextChar(int) : String" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="nextByte() : byte" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="nextByte(int) : byte[]" num="204" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="242" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/ByteUtils.java" name="ByteUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="65" loc="547" coveredmethods="0" methods="32" elements="211" classes="1" ncloc="223" statements="119" conditionals="60" coveredstatements="0"/>
            <class name="ByteUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="65" coveredmethods="0" methods="32" elements="211" statements="119" conditionals="60" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ByteUtils()" num="50" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="toList(byte[]) : RubyArray&lt;Byte&gt;" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toArray(Collection&lt;? extends Number&gt;) : byte[]" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ljust(byte[],int) : byte[]" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rjust(byte[],int) : byte[]" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reverse(byte[]) : void" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(byte) : byte[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(short) : byte[]" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(short,ByteOrder) : byte[]" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(int) : byte[]" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(int,ByteOrder) : byte[]" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(long) : byte[]" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(long,ByteOrder) : byte[]" num="214" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(float) : byte[]" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(float,ByteOrder) : byte[]" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(double) : byte[]" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(double,ByteOrder) : byte[]" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toByteArray(boolean) : byte[]" num="273" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line complexity="1" visibility="public" signature="toByteArray(char) : byte[]" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(char,ByteOrder) : byte[]" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(String) : byte[]" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toByteArray(Object) : byte[]" num="323" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="toByteArray(Object,ByteOrder) : byte[]" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line complexity="1" visibility="public" signature="toASCII8Bit(byte) : String" num="381" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="toExtendedASCIIs(byte[],int,ByteOrder) : String" num="396" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toUTF(byte[]) : String" num="432" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toBinaryString(byte[]) : String" num="448" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toBinaryString(byte[],boolean) : String" num="461" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toHexString(byte[]) : String" num="481" count="0" type="method"/>
            <line num="482" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toHexString(byte[],boolean) : String" num="494" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="499" type="cond"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fromBinaryString(String) : byte[]" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="517" type="cond"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="522" type="cond"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fromHexString(String) : byte[]" num="537" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="538" type="cond"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="544" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/ComparableEntry.java" name="ComparableEntry.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="114" coveredmethods="0" methods="9" elements="36" classes="1" ncloc="54" statements="19" conditionals="8" coveredstatements="0"/>
            <class name="ComparableEntry">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="9" elements="36" statements="19" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparableEntry(K,V)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComparableEntry(Entry&lt;? extends K, ? extends V&gt;)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKey() : K" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : V" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(V) : V" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="compareTo(Entry&lt;? extends K, ? extends V&gt;) : int" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/LinkedIdentityMap.java" name="LinkedIdentityMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="126" loc="811" coveredmethods="0" methods="87" elements="403" classes="8" ncloc="574" statements="238" conditionals="78" coveredstatements="0"/>
            <class name="LinkedIdentityMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="18" elements="70" statements="38" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.IdentityEntry">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="8" elements="27" statements="13" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.EntrySet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="17" elements="108" statements="65" conditionals="26" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.EntrySet.EntriesIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.KeySet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="17" elements="67" statements="42" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.KeySet.KeysIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.Values">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="15" elements="98" statements="59" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="LinkedIdentityMap.Values.ValuesIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinkedIdentityMap()" num="55" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="LinkedIdentityMap(Map&lt;? extends K, ? extends V&gt;)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="containsValue(Object) : boolean" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Entry&lt;K, V&gt;&gt;" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : V" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keySet() : Set&lt;K&gt;" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="put(K,V) : V" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putAll(Map&lt;? extends K, ? extends V&gt;) : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : V" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : Collection&lt;V&gt;" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IdentityEntry(S,U)" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IdentityEntry(Entry&lt;S, U&gt;)" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKey() : S" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : U" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(U) : U" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EntrySet(List&lt;S&gt;,IdentityHashMap&lt;S, U&gt;)" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="contains(Object) : boolean" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;S, U&gt;&gt;" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : Object[]" num="294" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Entry&lt;S, U&gt;) : boolean" num="312" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="remove(Object) : boolean" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends Entry&lt;S, U&gt;&gt;) : boolean" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="372" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="387" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="392" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="397" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EntriesIterator(Iterator&lt;S&gt;,IdentityHashMap&lt;S, U&gt;)" num="417" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Entry&lt;S, U&gt;" num="427" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="KeySet(List&lt;S&gt;,IdentityHashMap&lt;S, U&gt;)" num="466" count="0" type="method"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="476" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="481" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;S&gt;" num="486" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : Object[]" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(S) : boolean" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="512" count="0" type="method"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends S&gt;) : boolean" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="522" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="531" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="533" type="cond"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="553" type="cond"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="568" count="0" type="method"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="573" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="578" count="0" type="method"/>
            <line num="580" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="KeysIterator(Iterator&lt;S&gt;,IdentityHashMap&lt;S, U&gt;)" num="589" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="594" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : S" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Values(List&lt;S&gt;,IdentityHashMap&lt;S, U&gt;)" num="638" count="0" type="method"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="643" count="0" type="method"/>
            <line num="645" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="648" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="contains(Object) : boolean" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="656" type="cond"/>
            <line falsecount="0" truecount="0" num="656" type="cond"/>
            <line num="658" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;U&gt;" num="661" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toArray() : Object[]" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="669" type="cond"/>
            <line num="670" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(U) : boolean" num="684" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="remove(Object) : boolean" num="689" count="0" type="method"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="692" type="cond"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="694" type="cond"/>
            <line falsecount="0" truecount="0" num="694" type="cond"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="703" count="0" type="method"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends U&gt;) : boolean" num="712" count="0" type="method"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="717" count="0" type="method"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="721" type="cond"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="723" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="736" type="cond"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="738" type="cond"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="747" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="753" count="0" type="method"/>
            <line num="755" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="756" type="cond"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ValuesIterator(Iterator&lt;S&gt;,IdentityHashMap&lt;S, U&gt;)" num="773" count="0" type="method"/>
            <line num="774" count="0" type="stmt"/>
            <line num="775" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : U" num="783" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="789" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="removeByIdentity(List&lt;?&gt;,Object) : boolean" num="799" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="801" type="cond"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="803" type="cond"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/PeekingIterator.java" name="PeekingIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="93" coveredmethods="0" methods="6" elements="35" classes="1" ncloc="40" statements="19" conditionals="10" coveredstatements="0"/>
            <class name="PeekingIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="6" elements="35" statements="19" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PeekingIterator(Iterator&lt;? extends E&gt;)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="peeking() : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="next() : E" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="peek() : E" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/RegexUtils.java" name="RegexUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="55" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="18" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="RegexUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RegexUtils()" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="convertGlobToRegex(String) : String" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/TryComparator.java" name="TryComparator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="83" coveredmethods="0" methods="3" elements="27" classes="1" ncloc="34" statements="14" conditionals="10" coveredstatements="0"/>
            <class name="TryComparator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="27" statements="14" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TryComparator()" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TryComparator(Comparator&lt;? super E&gt;)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="compare(E,E) : int" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/util/WholeLineReader.java" name="WholeLineReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="139" coveredmethods="0" methods="6" elements="76" classes="1" ncloc="83" statements="42" conditionals="28" coveredstatements="0"/>
            <class name="WholeLineReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="6" elements="76" statements="42" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="WholeLineReader(Readable)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line complexity="4" visibility="public" signature="readLine() : String" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="close() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line complexity="9" visibility="private" signature="add(char[],int) : void" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="finishLine(boolean) : boolean" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="finish() : void" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/ASCII8BitUTFTest.java" name="ASCII8BitUTFTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="175" coveredmethods="0" methods="20" elements="76" classes="1" ncloc="133" statements="56" conditionals="0" coveredstatements="0"/>
            <class name="ASCII8BitUTFTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="20" elements="76" statements="56" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTotalByteNumber() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemainingByteNumber() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRewind() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasNextChar() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasNextByte() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextChar() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextCharException() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNexCharWithNumber() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextByte() : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextByteException() : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextByteWithNumber() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharAt() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLength() : void" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubSequence() : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/ByteUtilsTest.java" name="ByteUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="348" coveredmethods="0" methods="29" elements="137" classes="1" ncloc="295" statements="106" conditionals="2" coveredstatements="0"/>
            <class name="ByteUtilsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="29" elements="137" statements="106" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToList() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArray() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjust() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRjust() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverse() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithByte() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithShort() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithInteger() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithLong() : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithFloat() : void" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithDouble() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithBoolean() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithCharacter() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithString() : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithObject() : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithObjectAndException1() : void" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToByteArrayWithObjectAndException2() : void" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testToASCII8Bit() : void" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToExtendedASCIIs() : void" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToUTF() : void" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToUTFException1() : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToUTFException2() : void" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToBinaryString() : void" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToHexString() : void" num="307" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFromBinaryString() : void" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFromBinaryStringException() : void" num="325" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFromHexString() : void" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFromHexStringException() : void" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/ComparableEntryTest.java" name="ComparableEntryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="110" coveredmethods="0" methods="11" elements="32" classes="1" ncloc="76" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="ComparableEntryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="32" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaces() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetKey() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetValue() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetValue() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareToException1() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/LinkedIdentityMapTest.java" name="LinkedIdentityMapTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="242" coveredmethods="0" methods="18" elements="144" classes="1" ncloc="200" statements="126" conditionals="0" coveredstatements="0"/>
            <class name="LinkedIdentityMapTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="144" statements="126" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsKey() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsValue() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntrySet() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGet() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeySet() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPut() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutAll() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValues() : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/LinkedIdentityMap_EntrySetTest.java" name="LinkedIdentityMap_EntrySetTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="217" coveredmethods="0" methods="19" elements="103" classes="1" ncloc="174" statements="84" conditionals="0" coveredstatements="0"/>
            <class name="LinkedIdentityMap_EntrySetTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="19" elements="103" statements="84" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArray() : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArrayWithGeneric() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddAll() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainAll() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAll() : void" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/LinkedIdentityMap_IdentityEntryTest.java" name="LinkedIdentityMap_IdentityEntryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="99" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="68" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="LinkedIdentityMap_IdentityEntryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="30" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetKey() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetValue() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetValue() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="teString() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/LinkedIdentityMap_KeySetTest.java" name="LinkedIdentityMap_KeySetTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="196" coveredmethods="0" methods="19" elements="88" classes="1" ncloc="153" statements="69" conditionals="0" coveredstatements="0"/>
            <class name="LinkedIdentityMap_KeySetTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="19" elements="88" statements="69" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArray() : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArrayWithGeneric() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddAll() : void" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainAll() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAll() : void" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/LinkedIdentityMap_ValuesTest.java" name="LinkedIdentityMap_ValuesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="174" coveredmethods="0" methods="17" elements="76" classes="1" ncloc="134" statements="59" conditionals="0" coveredstatements="0"/>
            <class name="LinkedIdentityMap_ValuesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="17" elements="76" statements="59" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArray() : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArrayWithGeneric() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddAll() : void" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAll() : void" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainAll() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/PeekingIteratorTest.java" name="PeekingIteratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="103" coveredmethods="0" methods="9" elements="33" classes="1" ncloc="71" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="PeekingIteratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="33" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterface() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasNext() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextException() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeek() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeekException() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveException() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/RegexUtilsTest.java" name="RegexUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="51" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="26" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="RegexUtilsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConvertGlobToRegex() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/TryComparatorTest.java" name="TryComparatorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="83" coveredmethods="0" methods="6" elements="23" classes="1" ncloc="54" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="TryComparatorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="23" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompare() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareException1() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareException2() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareException3() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/util/WholeLineReaderTest.java" name="WholeLineReaderTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="88" coveredmethods="0" methods="6" elements="33" classes="1" ncloc="57" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="WholeLineReaderTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="33" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadLine1() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadLine2() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadLine3() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadLine4() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClose() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.rubycollect4j.function">
         <metrics coveredelements="0" complexity="1" loc="76" methods="1" classes="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" ncloc="12" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/function/TriFunction.java" name="TriFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="76" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="TriFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="andThen(Function&lt;? super R, ? extends W&gt;) : TriFunction&lt;T, U, V, W&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.rubycollect4j">
         <metrics coveredelements="0" complexity="2797" loc="30002" methods="2243" classes="64" statements="7328" coveredconditionals="0" coveredmethods="0" elements="10433" ncloc="15878" files="39" conditionals="862" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/Ruby.java" name="Ruby.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="88" loc="3175" coveredmethods="0" methods="88" elements="615" classes="16" ncloc="861" statements="527" conditionals="0" coveredstatements="0"/>
            <class name="Ruby">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Array">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="25" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Hash">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="31" elements="440" statements="409" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Entry">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Set">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Enumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.LazyEnumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.String">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Range">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="21" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Date">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="73" statements="64" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.IO">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.File">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Dir">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Literals">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Kernel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Ruby.Object">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Ruby()" num="54" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="Array()" num="66" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="create() : RubyArray&lt;E&gt;" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(List&lt;E&gt;) : RubyArray&lt;E&gt;" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(E,E) : RubyArray&lt;E&gt;" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RubyArray&lt;E&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(E[]) : RubyArray&lt;E&gt;" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(List&lt;E&gt;) : RubyArray&lt;E&gt;" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubyArray&lt;E&gt;" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterator&lt;E&gt;) : RubyArray&lt;E&gt;" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Hash()" num="186" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="create() : RubyHash&lt;K, V&gt;" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(LinkedHashMap&lt;K, V&gt;) : RubyHash&lt;K, V&gt;" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Map&lt;K, V&gt;) : RubyHash&lt;K, V&gt;" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Iterable&lt;? extends java.util.Map.Entry&lt;? extends K, ? extends V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V) : RubyHash&lt;K, V&gt;" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V) : RubyHash&lt;K, V&gt;" num="281" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="426" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="476" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="531" count="0" type="method"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="591" count="0" type="method"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="656" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="727" count="0" type="method"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="803" count="0" type="method"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="884" count="0" type="method"/>
            <line num="888" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="970" count="0" type="method"/>
            <line num="975" count="0" type="stmt"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line num="978" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="985" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="988" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1062" count="0" type="method"/>
            <line num="1067" count="0" type="stmt"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1069" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line num="1072" count="0" type="stmt"/>
            <line num="1073" count="0" type="stmt"/>
            <line num="1074" count="0" type="stmt"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1076" count="0" type="stmt"/>
            <line num="1077" count="0" type="stmt"/>
            <line num="1078" count="0" type="stmt"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1080" count="0" type="stmt"/>
            <line num="1081" count="0" type="stmt"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1083" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1159" count="0" type="method"/>
            <line num="1164" count="0" type="stmt"/>
            <line num="1165" count="0" type="stmt"/>
            <line num="1166" count="0" type="stmt"/>
            <line num="1167" count="0" type="stmt"/>
            <line num="1168" count="0" type="stmt"/>
            <line num="1169" count="0" type="stmt"/>
            <line num="1170" count="0" type="stmt"/>
            <line num="1171" count="0" type="stmt"/>
            <line num="1172" count="0" type="stmt"/>
            <line num="1173" count="0" type="stmt"/>
            <line num="1174" count="0" type="stmt"/>
            <line num="1175" count="0" type="stmt"/>
            <line num="1176" count="0" type="stmt"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1178" count="0" type="stmt"/>
            <line num="1179" count="0" type="stmt"/>
            <line num="1180" count="0" type="stmt"/>
            <line num="1181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1261" count="0" type="method"/>
            <line num="1267" count="0" type="stmt"/>
            <line num="1268" count="0" type="stmt"/>
            <line num="1269" count="0" type="stmt"/>
            <line num="1270" count="0" type="stmt"/>
            <line num="1271" count="0" type="stmt"/>
            <line num="1272" count="0" type="stmt"/>
            <line num="1273" count="0" type="stmt"/>
            <line num="1274" count="0" type="stmt"/>
            <line num="1275" count="0" type="stmt"/>
            <line num="1276" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1279" count="0" type="stmt"/>
            <line num="1280" count="0" type="stmt"/>
            <line num="1281" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1283" count="0" type="stmt"/>
            <line num="1284" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1369" count="0" type="method"/>
            <line num="1375" count="0" type="stmt"/>
            <line num="1376" count="0" type="stmt"/>
            <line num="1377" count="0" type="stmt"/>
            <line num="1378" count="0" type="stmt"/>
            <line num="1379" count="0" type="stmt"/>
            <line num="1380" count="0" type="stmt"/>
            <line num="1381" count="0" type="stmt"/>
            <line num="1382" count="0" type="stmt"/>
            <line num="1383" count="0" type="stmt"/>
            <line num="1384" count="0" type="stmt"/>
            <line num="1385" count="0" type="stmt"/>
            <line num="1386" count="0" type="stmt"/>
            <line num="1387" count="0" type="stmt"/>
            <line num="1388" count="0" type="stmt"/>
            <line num="1389" count="0" type="stmt"/>
            <line num="1390" count="0" type="stmt"/>
            <line num="1391" count="0" type="stmt"/>
            <line num="1392" count="0" type="stmt"/>
            <line num="1393" count="0" type="stmt"/>
            <line num="1394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1482" count="0" type="method"/>
            <line num="1488" count="0" type="stmt"/>
            <line num="1489" count="0" type="stmt"/>
            <line num="1490" count="0" type="stmt"/>
            <line num="1491" count="0" type="stmt"/>
            <line num="1492" count="0" type="stmt"/>
            <line num="1493" count="0" type="stmt"/>
            <line num="1494" count="0" type="stmt"/>
            <line num="1495" count="0" type="stmt"/>
            <line num="1496" count="0" type="stmt"/>
            <line num="1497" count="0" type="stmt"/>
            <line num="1498" count="0" type="stmt"/>
            <line num="1499" count="0" type="stmt"/>
            <line num="1500" count="0" type="stmt"/>
            <line num="1501" count="0" type="stmt"/>
            <line num="1502" count="0" type="stmt"/>
            <line num="1503" count="0" type="stmt"/>
            <line num="1504" count="0" type="stmt"/>
            <line num="1505" count="0" type="stmt"/>
            <line num="1506" count="0" type="stmt"/>
            <line num="1507" count="0" type="stmt"/>
            <line num="1508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1600" count="0" type="method"/>
            <line num="1606" count="0" type="stmt"/>
            <line num="1607" count="0" type="stmt"/>
            <line num="1608" count="0" type="stmt"/>
            <line num="1609" count="0" type="stmt"/>
            <line num="1610" count="0" type="stmt"/>
            <line num="1611" count="0" type="stmt"/>
            <line num="1612" count="0" type="stmt"/>
            <line num="1613" count="0" type="stmt"/>
            <line num="1614" count="0" type="stmt"/>
            <line num="1615" count="0" type="stmt"/>
            <line num="1616" count="0" type="stmt"/>
            <line num="1617" count="0" type="stmt"/>
            <line num="1618" count="0" type="stmt"/>
            <line num="1619" count="0" type="stmt"/>
            <line num="1620" count="0" type="stmt"/>
            <line num="1621" count="0" type="stmt"/>
            <line num="1622" count="0" type="stmt"/>
            <line num="1623" count="0" type="stmt"/>
            <line num="1624" count="0" type="stmt"/>
            <line num="1625" count="0" type="stmt"/>
            <line num="1626" count="0" type="stmt"/>
            <line num="1627" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1723" count="0" type="method"/>
            <line num="1730" count="0" type="stmt"/>
            <line num="1731" count="0" type="stmt"/>
            <line num="1732" count="0" type="stmt"/>
            <line num="1733" count="0" type="stmt"/>
            <line num="1734" count="0" type="stmt"/>
            <line num="1735" count="0" type="stmt"/>
            <line num="1736" count="0" type="stmt"/>
            <line num="1737" count="0" type="stmt"/>
            <line num="1738" count="0" type="stmt"/>
            <line num="1739" count="0" type="stmt"/>
            <line num="1740" count="0" type="stmt"/>
            <line num="1741" count="0" type="stmt"/>
            <line num="1742" count="0" type="stmt"/>
            <line num="1743" count="0" type="stmt"/>
            <line num="1744" count="0" type="stmt"/>
            <line num="1745" count="0" type="stmt"/>
            <line num="1746" count="0" type="stmt"/>
            <line num="1747" count="0" type="stmt"/>
            <line num="1748" count="0" type="stmt"/>
            <line num="1749" count="0" type="stmt"/>
            <line num="1750" count="0" type="stmt"/>
            <line num="1751" count="0" type="stmt"/>
            <line num="1752" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1852" count="0" type="method"/>
            <line num="1859" count="0" type="stmt"/>
            <line num="1860" count="0" type="stmt"/>
            <line num="1861" count="0" type="stmt"/>
            <line num="1862" count="0" type="stmt"/>
            <line num="1863" count="0" type="stmt"/>
            <line num="1864" count="0" type="stmt"/>
            <line num="1865" count="0" type="stmt"/>
            <line num="1866" count="0" type="stmt"/>
            <line num="1867" count="0" type="stmt"/>
            <line num="1868" count="0" type="stmt"/>
            <line num="1869" count="0" type="stmt"/>
            <line num="1870" count="0" type="stmt"/>
            <line num="1871" count="0" type="stmt"/>
            <line num="1872" count="0" type="stmt"/>
            <line num="1873" count="0" type="stmt"/>
            <line num="1874" count="0" type="stmt"/>
            <line num="1875" count="0" type="stmt"/>
            <line num="1876" count="0" type="stmt"/>
            <line num="1877" count="0" type="stmt"/>
            <line num="1878" count="0" type="stmt"/>
            <line num="1879" count="0" type="stmt"/>
            <line num="1880" count="0" type="stmt"/>
            <line num="1881" count="0" type="stmt"/>
            <line num="1882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1986" count="0" type="method"/>
            <line num="1993" count="0" type="stmt"/>
            <line num="1994" count="0" type="stmt"/>
            <line num="1995" count="0" type="stmt"/>
            <line num="1996" count="0" type="stmt"/>
            <line num="1997" count="0" type="stmt"/>
            <line num="1998" count="0" type="stmt"/>
            <line num="1999" count="0" type="stmt"/>
            <line num="2000" count="0" type="stmt"/>
            <line num="2001" count="0" type="stmt"/>
            <line num="2002" count="0" type="stmt"/>
            <line num="2003" count="0" type="stmt"/>
            <line num="2004" count="0" type="stmt"/>
            <line num="2005" count="0" type="stmt"/>
            <line num="2006" count="0" type="stmt"/>
            <line num="2007" count="0" type="stmt"/>
            <line num="2008" count="0" type="stmt"/>
            <line num="2009" count="0" type="stmt"/>
            <line num="2010" count="0" type="stmt"/>
            <line num="2011" count="0" type="stmt"/>
            <line num="2012" count="0" type="stmt"/>
            <line num="2013" count="0" type="stmt"/>
            <line num="2014" count="0" type="stmt"/>
            <line num="2015" count="0" type="stmt"/>
            <line num="2016" count="0" type="stmt"/>
            <line num="2017" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2125" count="0" type="method"/>
            <line num="2133" count="0" type="stmt"/>
            <line num="2134" count="0" type="stmt"/>
            <line num="2135" count="0" type="stmt"/>
            <line num="2136" count="0" type="stmt"/>
            <line num="2137" count="0" type="stmt"/>
            <line num="2138" count="0" type="stmt"/>
            <line num="2139" count="0" type="stmt"/>
            <line num="2140" count="0" type="stmt"/>
            <line num="2141" count="0" type="stmt"/>
            <line num="2142" count="0" type="stmt"/>
            <line num="2143" count="0" type="stmt"/>
            <line num="2144" count="0" type="stmt"/>
            <line num="2145" count="0" type="stmt"/>
            <line num="2146" count="0" type="stmt"/>
            <line num="2147" count="0" type="stmt"/>
            <line num="2148" count="0" type="stmt"/>
            <line num="2149" count="0" type="stmt"/>
            <line num="2150" count="0" type="stmt"/>
            <line num="2151" count="0" type="stmt"/>
            <line num="2152" count="0" type="stmt"/>
            <line num="2153" count="0" type="stmt"/>
            <line num="2154" count="0" type="stmt"/>
            <line num="2155" count="0" type="stmt"/>
            <line num="2156" count="0" type="stmt"/>
            <line num="2157" count="0" type="stmt"/>
            <line num="2158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2270" count="0" type="method"/>
            <line num="2278" count="0" type="stmt"/>
            <line num="2279" count="0" type="stmt"/>
            <line num="2280" count="0" type="stmt"/>
            <line num="2281" count="0" type="stmt"/>
            <line num="2282" count="0" type="stmt"/>
            <line num="2283" count="0" type="stmt"/>
            <line num="2284" count="0" type="stmt"/>
            <line num="2285" count="0" type="stmt"/>
            <line num="2286" count="0" type="stmt"/>
            <line num="2287" count="0" type="stmt"/>
            <line num="2288" count="0" type="stmt"/>
            <line num="2289" count="0" type="stmt"/>
            <line num="2290" count="0" type="stmt"/>
            <line num="2291" count="0" type="stmt"/>
            <line num="2292" count="0" type="stmt"/>
            <line num="2293" count="0" type="stmt"/>
            <line num="2294" count="0" type="stmt"/>
            <line num="2295" count="0" type="stmt"/>
            <line num="2296" count="0" type="stmt"/>
            <line num="2297" count="0" type="stmt"/>
            <line num="2298" count="0" type="stmt"/>
            <line num="2299" count="0" type="stmt"/>
            <line num="2300" count="0" type="stmt"/>
            <line num="2301" count="0" type="stmt"/>
            <line num="2302" count="0" type="stmt"/>
            <line num="2303" count="0" type="stmt"/>
            <line num="2304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2420" count="0" type="method"/>
            <line num="2428" count="0" type="stmt"/>
            <line num="2429" count="0" type="stmt"/>
            <line num="2430" count="0" type="stmt"/>
            <line num="2431" count="0" type="stmt"/>
            <line num="2432" count="0" type="stmt"/>
            <line num="2433" count="0" type="stmt"/>
            <line num="2434" count="0" type="stmt"/>
            <line num="2435" count="0" type="stmt"/>
            <line num="2436" count="0" type="stmt"/>
            <line num="2437" count="0" type="stmt"/>
            <line num="2438" count="0" type="stmt"/>
            <line num="2439" count="0" type="stmt"/>
            <line num="2440" count="0" type="stmt"/>
            <line num="2441" count="0" type="stmt"/>
            <line num="2442" count="0" type="stmt"/>
            <line num="2443" count="0" type="stmt"/>
            <line num="2444" count="0" type="stmt"/>
            <line num="2445" count="0" type="stmt"/>
            <line num="2446" count="0" type="stmt"/>
            <line num="2447" count="0" type="stmt"/>
            <line num="2448" count="0" type="stmt"/>
            <line num="2449" count="0" type="stmt"/>
            <line num="2450" count="0" type="stmt"/>
            <line num="2451" count="0" type="stmt"/>
            <line num="2452" count="0" type="stmt"/>
            <line num="2453" count="0" type="stmt"/>
            <line num="2454" count="0" type="stmt"/>
            <line num="2455" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Entry()" num="2470" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="of(K,V) : java.util.Map.Entry&lt;K, V&gt;" num="2485" count="0" type="method"/>
            <line num="2486" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Set()" num="2501" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="create() : RubySet&lt;E&gt;" num="2508" count="0" type="method"/>
            <line num="2509" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(LinkedHashSet&lt;E&gt;) : RubySet&lt;E&gt;" num="2519" count="0" type="method"/>
            <line num="2520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(E,E) : RubySet&lt;E&gt;" num="2532" count="0" type="method"/>
            <line num="2534" count="0" type="stmt"/>
            <line num="2535" count="0" type="stmt"/>
            <line num="2536" count="0" type="stmt"/>
            <line num="2537" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="2547" count="0" type="method"/>
            <line num="2548" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterator&lt;E&gt;) : RubySet&lt;E&gt;" num="2558" count="0" type="method"/>
            <line num="2559" count="0" type="stmt"/>
            <line num="2560" count="0" type="stmt"/>
            <line num="2561" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(E[]) : RubySet&lt;E&gt;" num="2571" count="0" type="method"/>
            <line num="2572" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Enumerator()" num="2587" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="of(Iterable&lt;E&gt;) : RubyEnumerator&lt;E&gt;" num="2592" count="0" type="method"/>
            <line num="2593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubyEnumerator&lt;E&gt;" num="2599" count="0" type="method"/>
            <line num="2600" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LazyEnumerator()" num="2615" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="of(Iterable&lt;E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="2620" count="0" type="method"/>
            <line num="2621" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="2627" count="0" type="method"/>
            <line num="2628" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="String()" num="2643" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="create() : RubyString" num="2650" count="0" type="method"/>
            <line num="2651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.lang.Object) : RubyString" num="2661" count="0" type="method"/>
            <line num="2662" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Range()" num="2677" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="of(java.lang.String,java.lang.String) : RubyRange&lt;java.lang.String&gt;" num="2688" count="0" type="method"/>
            <line num="2690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(char,char) : RubyRange&lt;Character&gt;" num="2703" count="0" type="method"/>
            <line num="2704" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int) : RubyRange&lt;Integer&gt;" num="2717" count="0" type="method"/>
            <line num="2718" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(long,long) : RubyRange&lt;Long&gt;" num="2731" count="0" type="method"/>
            <line num="2732" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double,double) : RubyRange&lt;Double&gt;" num="2745" count="0" type="method"/>
            <line num="2746" count="0" type="stmt"/>
            <line num="2747" count="0" type="stmt"/>
            <line num="2748" count="0" type="stmt"/>
            <line num="2749" count="0" type="stmt"/>
            <line num="2750" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.util.Date,java.util.Date) : RubyRange&lt;java.util.Date&gt;" num="2764" count="0" type="method"/>
            <line num="2766" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(LocalDateTime,LocalDateTime) : RubyRange&lt;LocalDateTime&gt;" num="2779" count="0" type="method"/>
            <line num="2781" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(T,T,ChronoUnit) : RubyRange&lt;T&gt;" num="2796" count="0" type="method"/>
            <line num="2798" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Date()" num="2816" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="of(java.util.Date) : RubyDate" num="2825" count="0" type="method"/>
            <line num="2826" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int) : RubyDate" num="2836" count="0" type="method"/>
            <line num="2837" count="0" type="stmt"/>
            <line num="2838" count="0" type="stmt"/>
            <line num="2839" count="0" type="stmt"/>
            <line num="2840" count="0" type="stmt"/>
            <line num="2841" count="0" type="stmt"/>
            <line num="2842" count="0" type="stmt"/>
            <line num="2843" count="0" type="stmt"/>
            <line num="2844" count="0" type="stmt"/>
            <line num="2845" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int) : RubyDate" num="2857" count="0" type="method"/>
            <line num="2858" count="0" type="stmt"/>
            <line num="2859" count="0" type="stmt"/>
            <line num="2860" count="0" type="stmt"/>
            <line num="2861" count="0" type="stmt"/>
            <line num="2862" count="0" type="stmt"/>
            <line num="2863" count="0" type="stmt"/>
            <line num="2864" count="0" type="stmt"/>
            <line num="2865" count="0" type="stmt"/>
            <line num="2866" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int,int) : RubyDate" num="2880" count="0" type="method"/>
            <line num="2881" count="0" type="stmt"/>
            <line num="2882" count="0" type="stmt"/>
            <line num="2883" count="0" type="stmt"/>
            <line num="2884" count="0" type="stmt"/>
            <line num="2885" count="0" type="stmt"/>
            <line num="2886" count="0" type="stmt"/>
            <line num="2887" count="0" type="stmt"/>
            <line num="2888" count="0" type="stmt"/>
            <line num="2889" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int,int,int) : RubyDate" num="2905" count="0" type="method"/>
            <line num="2906" count="0" type="stmt"/>
            <line num="2907" count="0" type="stmt"/>
            <line num="2908" count="0" type="stmt"/>
            <line num="2909" count="0" type="stmt"/>
            <line num="2910" count="0" type="stmt"/>
            <line num="2911" count="0" type="stmt"/>
            <line num="2912" count="0" type="stmt"/>
            <line num="2913" count="0" type="stmt"/>
            <line num="2914" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int,int,int,int) : RubyDate" num="2932" count="0" type="method"/>
            <line num="2933" count="0" type="stmt"/>
            <line num="2934" count="0" type="stmt"/>
            <line num="2935" count="0" type="stmt"/>
            <line num="2936" count="0" type="stmt"/>
            <line num="2937" count="0" type="stmt"/>
            <line num="2938" count="0" type="stmt"/>
            <line num="2939" count="0" type="stmt"/>
            <line num="2940" count="0" type="stmt"/>
            <line num="2941" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int,int,int,int,int) : RubyDate" num="2962" count="0" type="method"/>
            <line num="2964" count="0" type="stmt"/>
            <line num="2965" count="0" type="stmt"/>
            <line num="2966" count="0" type="stmt"/>
            <line num="2967" count="0" type="stmt"/>
            <line num="2968" count="0" type="stmt"/>
            <line num="2969" count="0" type="stmt"/>
            <line num="2970" count="0" type="stmt"/>
            <line num="2971" count="0" type="stmt"/>
            <line num="2972" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(int,int,int,int,int,int,int) : RubyDate" num="2995" count="0" type="method"/>
            <line num="2997" count="0" type="stmt"/>
            <line num="2998" count="0" type="stmt"/>
            <line num="2999" count="0" type="stmt"/>
            <line num="3000" count="0" type="stmt"/>
            <line num="3001" count="0" type="stmt"/>
            <line num="3002" count="0" type="stmt"/>
            <line num="3003" count="0" type="stmt"/>
            <line num="3004" count="0" type="stmt"/>
            <line num="3005" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="IO(java.io.File,Mode)" num="3020" count="0" type="method"/>
            <line num="3021" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.io.File) : RubyIO" num="3033" count="0" type="method"/>
            <line num="3034" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.io.File,Mode) : RubyIO" num="3048" count="0" type="method"/>
            <line num="3049" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="File(java.io.File,Mode)" num="3064" count="0" type="method"/>
            <line num="3066" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.io.File) : RubyFile" num="3080" count="0" type="method"/>
            <line num="3082" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.io.File,Mode) : RubyFile" num="3099" count="0" type="method"/>
            <line num="3101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Dir(java.io.File)" num="3116" count="0" type="method"/>
            <line num="3117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(java.io.File) : RubyDir" num="3127" count="0" type="method"/>
            <line num="3128" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Literals()" num="3143" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="Kernel()" num="3157" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="Object()" num="3171" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyArray.java" name="RubyArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="279" loc="1977" coveredmethods="0" methods="145" elements="846" classes="1" ncloc="903" statements="473" conditionals="228" coveredstatements="0"/>
            <class name="RubyArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="279" coveredmethods="0" methods="145" elements="846" statements="473" conditionals="228" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(List&lt;E&gt;) : RubyArray&lt;E&gt;" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubyArray&lt;E&gt;" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyArray()" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyArray(List&lt;E&gt;)" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyArray(Iterable&lt;? extends E&gt;)" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="assoc(S) : RubyArray&lt;S&gt;" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="at(int) : E" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bsearch(E) : E" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line complexity="2" visibility="public" signature="bsearch(E,Comparator&lt;? super E&gt;) : E" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line complexity="1" visibility="public" signature="bsearch(Function&lt;? super E, Integer&gt;) : E" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="binarySearch(int,int,Function&lt;? super E, Integer&gt;) : E" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="collectǃ(Function&lt;? super E, ? extends E&gt;) : RubyArray&lt;E&gt;" num="242" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="combination(int) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="combination(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : RubyArray&lt;E&gt;" num="271" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compact() : RubyArray&lt;E&gt;" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compactǃ() : RubyArray&lt;E&gt;" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line complexity="1" visibility="public" signature="concat(Collection&lt;? extends E&gt;) : RubyArray&lt;E&gt;" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count(E) : int" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="delete(E) : E" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line complexity="2" visibility="public" signature="delete(E,Function&lt;? super E, ? extends E&gt;) : E" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line complexity="6" visibility="public" signature="deleteAt(int) : E" num="364" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deleteIf() : RubyEnumerator&lt;E&gt;" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="deleteIf(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Consumer&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachIndex() : RubyEnumerator&lt;Integer&gt;" num="418" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eachIndex(Consumer&lt;Integer&gt;) : RubyArray&lt;E&gt;" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyʔ() : boolean" num="441" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eqlʔ(Object) : boolean" num="452" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fetch(int) : E" num="465" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fetch(int,E) : E" num="482" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fetch(int,Consumer&lt;Integer&gt;) : E" num="497" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="498" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fill(E) : RubyArray&lt;E&gt;" num="512" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fill(E,int) : RubyArray&lt;E&gt;" num="525" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fill(E,int,int) : RubyArray&lt;E&gt;" num="541" count="0" type="method"/>
            <line num="542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fill(Function&lt;Integer, ? extends E&gt;) : RubyArray&lt;E&gt;" num="552" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fill(int,Function&lt;Integer, ? extends E&gt;) : RubyArray&lt;E&gt;" num="566" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="569" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="569" type="cond"/>
            <line num="571" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="fill(int,int,Function&lt;Integer, ? extends E&gt;) : RubyArray&lt;E&gt;" num="586" count="0" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="590" type="cond"/>
            <line num="592" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="592" type="cond"/>
            <line num="593" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="593" type="cond"/>
            <line num="594" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="597" type="cond"/>
            <line num="598" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="600" type="cond"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="flatten() : RubyArray&lt;S&gt;" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="617" type="cond"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="flatten(int) : RubyArray&lt;S&gt;" num="631" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="634" type="cond"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="flatten(List&lt;?&gt;,int) : RubyArray&lt;S&gt;" num="641" count="0" type="method"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="645" type="cond"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="freeze() : RubyArray&lt;E&gt;" num="660" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="frozenʔ() : boolean" num="673" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash() : int" num="682" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="index(Predicate&lt;? super E&gt;) : Integer" num="693" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="694" type="cond"/>
            <line num="695" count="0" type="stmt"/>
            <line num="695" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="695" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="index(E) : Integer" num="707" count="0" type="method"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="709" type="cond"/>
            <line complexity="5" visibility="public" signature="insert(int,E) : RubyArray&lt;E&gt;" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="725" type="cond"/>
            <line num="726" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="729" type="cond"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="735" type="cond"/>
            <line num="736" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inspect() : String" num="748" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="intersection(Collection&lt;? extends E&gt;) : RubyArray&lt;E&gt;" num="759" count="0" type="method"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="764" type="cond"/>
            <line num="766" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="join() : String" num="774" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="join(String) : String" num="785" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="788" type="cond"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keepIf() : RubyEnumerator&lt;E&gt;" num="801" count="0" type="method"/>
            <line num="802" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="keepIf(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="812" count="0" type="method"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="814" type="cond"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="816" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="last() : E" num="827" count="0" type="method"/>
            <line num="828" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="828" type="cond"/>
            <line num="829" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="last(int) : RubyArray&lt;E&gt;" num="843" count="0" type="method"/>
            <line num="844" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="844" type="cond"/>
            <line num="845" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="848" type="cond"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="860" count="0" type="method"/>
            <line num="861" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mapǃ(Function&lt;? super E, ? extends E&gt;) : RubyArray&lt;E&gt;" num="871" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="multiply(int) : RubyArray&lt;E&gt;" num="884" count="0" type="method"/>
            <line num="885" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="885" type="cond"/>
            <line num="886" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="889" type="cond"/>
            <line num="890" count="0" type="stmt"/>
            <line num="892" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiply(String) : String" num="902" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pack(String) : String" num="915" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permutation() : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="925" count="0" type="method"/>
            <line num="926" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permutation(int) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="937" count="0" type="method"/>
            <line num="938" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permutation(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : RubyArray&lt;E&gt;" num="951" count="0" type="method"/>
            <line num="952" count="0" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permutation(Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : RubyArray&lt;E&gt;" num="965" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="plus(Collection&lt;? extends E&gt;) : RubyArray&lt;E&gt;" num="980" count="0" type="method"/>
            <line num="981" count="0" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pop() : E" num="991" count="0" type="method"/>
            <line num="992" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="992" type="cond"/>
            <line num="993" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="pop(int) : RubyArray&lt;E&gt;" num="1007" count="0" type="method"/>
            <line num="1008" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1008" type="cond"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1012" type="cond"/>
            <line num="1013" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="product(List&lt;? extends E&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="1026" count="0" type="method"/>
            <line num="1028" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="product(List&lt;? extends List&lt;? extends E&gt;&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="1038" count="0" type="method"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="product(List&lt;? extends List&lt;? extends E&gt;&gt;,Consumer&lt;RubyArray&lt;E&gt;&gt;) : RubyArray&lt;E&gt;" num="1053" count="0" type="method"/>
            <line num="1055" count="0" type="stmt"/>
            <line num="1056" count="0" type="stmt"/>
            <line num="1058" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="push(E) : RubyArray&lt;E&gt;" num="1068" count="0" type="method"/>
            <line num="1069" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="push(E) : RubyArray&lt;E&gt;" num="1080" count="0" type="method"/>
            <line num="1081" count="0" type="stmt"/>
            <line num="1082" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="rassoc(S) : RubyArray&lt;S&gt;" num="1094" count="0" type="method"/>
            <line num="1095" count="0" type="stmt"/>
            <line num="1096" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1096" type="cond"/>
            <line num="1097" count="0" type="stmt"/>
            <line num="1099" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1099" type="cond"/>
            <line num="1100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1100" type="cond"/>
            <line falsecount="0" truecount="0" num="1100" type="cond"/>
            <line num="1102" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectǃ() : RubyEnumerator&lt;E&gt;" num="1114" count="0" type="method"/>
            <line num="1115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rejectǃ(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="1125" count="0" type="method"/>
            <line num="1126" count="0" type="stmt"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1128" type="cond"/>
            <line complexity="1" visibility="public" signature="repeatedCombination(int) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="1138" count="0" type="method"/>
            <line num="1139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repeatedCombination(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : RubyArray&lt;E&gt;" num="1152" count="0" type="method"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repeatedPermutation(int) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="1168" count="0" type="method"/>
            <line num="1169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repeatedPermutation(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : RubyArray&lt;E&gt;" num="1182" count="0" type="method"/>
            <line num="1184" count="0" type="stmt"/>
            <line num="1185" count="0" type="stmt"/>
            <line num="1187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replace(Collection&lt;? extends E&gt;) : RubyArray&lt;E&gt;" num="1197" count="0" type="method"/>
            <line num="1198" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line num="1200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverse() : RubyArray&lt;E&gt;" num="1209" count="0" type="method"/>
            <line num="1210" count="0" type="stmt"/>
            <line num="1211" count="0" type="stmt"/>
            <line num="1212" count="0" type="stmt"/>
            <line num="1214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseǃ() : RubyArray&lt;E&gt;" num="1222" count="0" type="method"/>
            <line num="1223" count="0" type="stmt"/>
            <line num="1224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rindex() : RubyEnumerator&lt;E&gt;" num="1232" count="0" type="method"/>
            <line num="1233" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="rindex(Predicate&lt;? super E&gt;) : Integer" num="1243" count="0" type="method"/>
            <line num="1244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1244" type="cond"/>
            <line num="1245" count="0" type="stmt"/>
            <line num="1245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1245" type="cond"/>
            <line num="1247" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rindex(E) : Integer" num="1257" count="0" type="method"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1259" type="cond"/>
            <line complexity="2" visibility="public" signature="rotate() : RubyArray&lt;E&gt;" num="1268" count="0" type="method"/>
            <line num="1269" count="0" type="stmt"/>
            <line num="1270" count="0" type="stmt"/>
            <line num="1270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1270" type="cond"/>
            <line num="1271" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rotateǃ() : RubyArray&lt;E&gt;" num="1279" count="0" type="method"/>
            <line num="1280" count="0" type="stmt"/>
            <line num="1280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1280" type="cond"/>
            <line num="1281" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="rotate(int) : RubyArray&lt;E&gt;" num="1292" count="0" type="method"/>
            <line num="1293" count="0" type="stmt"/>
            <line num="1294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1294" type="cond"/>
            <line num="1295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1295" type="cond"/>
            <line num="1296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1296" type="cond"/>
            <line num="1297" count="0" type="stmt"/>
            <line num="1298" count="0" type="stmt"/>
            <line num="1300" count="0" type="stmt"/>
            <line num="1301" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="rotateǃ(int) : RubyArray&lt;E&gt;" num="1315" count="0" type="method"/>
            <line num="1316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1316" type="cond"/>
            <line num="1317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1317" type="cond"/>
            <line num="1318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1318" type="cond"/>
            <line num="1319" count="0" type="stmt"/>
            <line num="1320" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line num="1323" count="0" type="stmt"/>
            <line num="1327" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sample() : E" num="1335" count="0" type="method"/>
            <line num="1336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1336" type="cond"/>
            <line num="1337" count="0" type="stmt"/>
            <line num="1339" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="sample(int) : RubyArray&lt;E&gt;" num="1351" count="0" type="method"/>
            <line num="1352" count="0" type="stmt"/>
            <line num="1352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1352" type="cond"/>
            <line num="1355" count="0" type="stmt"/>
            <line num="1357" count="0" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1358" type="cond"/>
            <line num="1359" count="0" type="stmt"/>
            <line num="1362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="selectǃ() : RubyEnumerator&lt;E&gt;" num="1370" count="0" type="method"/>
            <line num="1371" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="selectǃ(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="1382" count="0" type="method"/>
            <line num="1383" count="0" type="stmt"/>
            <line num="1384" count="0" type="stmt"/>
            <line num="1385" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1385" type="cond"/>
            <line complexity="2" visibility="public" signature="shift() : E" num="1393" count="0" type="method"/>
            <line num="1394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1394" type="cond"/>
            <line num="1395" count="0" type="stmt"/>
            <line num="1397" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="shift(int) : RubyArray&lt;E&gt;" num="1409" count="0" type="method"/>
            <line num="1410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1410" type="cond"/>
            <line num="1411" count="0" type="stmt"/>
            <line num="1413" count="0" type="stmt"/>
            <line num="1414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1414" type="cond"/>
            <line num="1415" count="0" type="stmt"/>
            <line num="1417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shuffle() : RubyArray&lt;E&gt;" num="1426" count="0" type="method"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1428" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shuffleǃ() : RubyArray&lt;E&gt;" num="1437" count="0" type="method"/>
            <line num="1438" count="0" type="stmt"/>
            <line num="1439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slice(int) : E" num="1449" count="0" type="method"/>
            <line num="1450" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="slice(int,int) : RubyArray&lt;E&gt;" num="1462" count="0" type="method"/>
            <line num="1463" count="0" type="stmt"/>
            <line num="1464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1464" type="cond"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1467" count="0" type="stmt"/>
            <line num="1467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1467" type="cond"/>
            <line num="1469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1469" type="cond"/>
            <line num="1470" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="sliceǃ(int) : E" num="1484" count="0" type="method"/>
            <line num="1485" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1485" type="cond"/>
            <line num="1486" count="0" type="stmt"/>
            <line num="1487" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1487" type="cond"/>
            <line num="1488" count="0" type="stmt"/>
            <line num="1489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1489" type="cond"/>
            <line num="1490" count="0" type="stmt"/>
            <line num="1492" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="sliceǃ(int,int) : RubyArray&lt;E&gt;" num="1504" count="0" type="method"/>
            <line num="1505" count="0" type="stmt"/>
            <line num="1506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1506" type="cond"/>
            <line num="1507" count="0" type="stmt"/>
            <line num="1509" count="0" type="stmt"/>
            <line num="1509" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1509" type="cond"/>
            <line num="1511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1511" type="cond"/>
            <line num="1512" count="0" type="stmt"/>
            <line num="1513" count="0" type="stmt"/>
            <line num="1516" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sortǃ() : RubyArray&lt;E&gt;" num="1524" count="0" type="method"/>
            <line num="1525" count="0" type="stmt"/>
            <line num="1525" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1525" type="cond"/>
            <line num="1527" count="0" type="stmt"/>
            <line num="1528" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sortǃ(Comparator&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="1538" count="0" type="method"/>
            <line num="1539" count="0" type="stmt"/>
            <line num="1539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1539" type="cond"/>
            <line num="1541" count="0" type="stmt"/>
            <line num="1542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortByǃ() : RubyEnumerator&lt;E&gt;" num="1550" count="0" type="method"/>
            <line num="1551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortByǃ(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1566" count="0" type="method"/>
            <line num="1568" count="0" type="stmt"/>
            <line num="1569" count="0" type="stmt"/>
            <line num="1570" count="0" type="stmt"/>
            <line num="1571" count="0" type="stmt"/>
            <line num="1573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortByǃ(Comparator&lt;? super E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1591" count="0" type="method"/>
            <line num="1593" count="0" type="stmt"/>
            <line num="1594" count="0" type="stmt"/>
            <line num="1595" count="0" type="stmt"/>
            <line num="1596" count="0" type="stmt"/>
            <line num="1598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortByǃ(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1611" count="0" type="method"/>
            <line num="1612" count="0" type="stmt"/>
            <line num="1613" count="0" type="stmt"/>
            <line num="1614" count="0" type="stmt"/>
            <line num="1615" count="0" type="stmt"/>
            <line num="1617" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="sum() : BigDecimal" num="1625" count="0" type="method"/>
            <line num="1627" count="0" type="stmt"/>
            <line num="1628" count="0" type="stmt"/>
            <line num="1629" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1629" type="cond"/>
            <line num="1630" count="0" type="stmt"/>
            <line num="1631" count="0" type="stmt"/>
            <line num="1633" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1633" type="cond"/>
            <line num="1634" count="0" type="stmt"/>
            <line num="1638" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minus(Collection&lt;? extends E&gt;) : RubyArray&lt;E&gt;" num="1649" count="0" type="method"/>
            <line num="1650" count="0" type="stmt"/>
            <line num="1651" count="0" type="stmt"/>
            <line num="1652" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toS() : String" num="1660" count="0" type="method"/>
            <line num="1661" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="transpose() : RubyArray&lt;RubyArray&lt;S&gt;&gt;" num="1676" count="0" type="method"/>
            <line num="1677" count="0" type="stmt"/>
            <line num="1677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1677" type="cond"/>
            <line num="1679" count="0" type="stmt"/>
            <line num="1680" count="0" type="stmt"/>
            <line num="1681" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1681" type="cond"/>
            <line num="1682" count="0" type="stmt"/>
            <line num="1685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1685" type="cond"/>
            <line num="1686" count="0" type="stmt"/>
            <line num="1687" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1687" type="cond"/>
            <line num="1688" count="0" type="stmt"/>
            <line num="1691" count="0" type="stmt"/>
            <line num="1692" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1692" type="cond"/>
            <line num="1693" count="0" type="stmt"/>
            <line num="1694" count="0" type="stmt"/>
            <line num="1695" count="0" type="stmt"/>
            <line num="1697" count="0" type="stmt"/>
            <line num="1699" count="0" type="stmt"/>
            <line num="1701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(Collection&lt;? extends E&gt;) : RubyArray&lt;E&gt;" num="1711" count="0" type="method"/>
            <line num="1712" count="0" type="stmt"/>
            <line num="1713" count="0" type="stmt"/>
            <line num="1714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uniq() : RubyArray&lt;E&gt;" num="1722" count="0" type="method"/>
            <line num="1723" count="0" type="stmt"/>
            <line num="1724" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="uniq(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1737" count="0" type="method"/>
            <line num="1738" count="0" type="stmt"/>
            <line num="1739" count="0" type="stmt"/>
            <line num="1740" count="0" type="stmt"/>
            <line num="1741" count="0" type="stmt"/>
            <line num="1741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1741" type="cond"/>
            <line num="1743" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="uniqǃ() : RubyArray&lt;E&gt;" num="1751" count="0" type="method"/>
            <line num="1752" count="0" type="stmt"/>
            <line num="1753" count="0" type="stmt"/>
            <line num="1754" count="0" type="stmt"/>
            <line num="1755" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1755" type="cond"/>
            <line num="1756" count="0" type="stmt"/>
            <line num="1756" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1756" type="cond"/>
            <line num="1758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1758" type="cond"/>
            <line complexity="4" visibility="public" signature="uniqǃ(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1770" count="0" type="method"/>
            <line num="1771" count="0" type="stmt"/>
            <line num="1772" count="0" type="stmt"/>
            <line num="1773" count="0" type="stmt"/>
            <line num="1774" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1774" type="cond"/>
            <line num="1775" count="0" type="stmt"/>
            <line num="1775" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1775" type="cond"/>
            <line num="1777" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1777" type="cond"/>
            <line complexity="2" visibility="public" signature="unshift(E,E) : RubyArray&lt;E&gt;" num="1789" count="0" type="method"/>
            <line num="1791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1791" type="cond"/>
            <line num="1792" count="0" type="stmt"/>
            <line num="1794" count="0" type="stmt"/>
            <line num="1795" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAt(int) : RubyArray&lt;E&gt;" num="1805" count="0" type="method"/>
            <line num="1806" count="0" type="stmt"/>
            <line num="1807" count="0" type="stmt"/>
            <line num="1808" count="0" type="stmt"/>
            <line num="1810" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAt(Iterable&lt;Integer&gt;) : RubyArray&lt;E&gt;" num="1820" count="0" type="method"/>
            <line num="1821" count="0" type="stmt"/>
            <line num="1822" count="0" type="stmt"/>
            <line num="1823" count="0" type="stmt"/>
            <line num="1825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="1828" count="0" type="method"/>
            <line num="1830" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="1833" count="0" type="method"/>
            <line num="1835" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="1838" count="0" type="method"/>
            <line num="1840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="1843" count="0" type="method"/>
            <line num="1845" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : Object[]" num="1848" count="0" type="method"/>
            <line num="1850" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="1853" count="0" type="method"/>
            <line num="1855" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : boolean" num="1858" count="0" type="method"/>
            <line num="1860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="1863" count="0" type="method"/>
            <line num="1865" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="1868" count="0" type="method"/>
            <line num="1870" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends E&gt;) : boolean" num="1873" count="0" type="method"/>
            <line num="1875" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(int,Collection&lt;? extends E&gt;) : boolean" num="1878" count="0" type="method"/>
            <line num="1880" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="1883" count="0" type="method"/>
            <line num="1885" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="1888" count="0" type="method"/>
            <line num="1890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="1893" count="0" type="method"/>
            <line num="1895" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : E" num="1898" count="0" type="method"/>
            <line num="1900" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int,E) : E" num="1903" count="0" type="method"/>
            <line num="1905" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(int,E) : void" num="1908" count="0" type="method"/>
            <line num="1910" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(int) : E" num="1913" count="0" type="method"/>
            <line num="1915" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexOf(Object) : int" num="1918" count="0" type="method"/>
            <line num="1920" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastIndexOf(Object) : int" num="1923" count="0" type="method"/>
            <line num="1925" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="listIterator() : ListIterator&lt;E&gt;" num="1928" count="0" type="method"/>
            <line num="1930" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="listIterator(int) : ListIterator&lt;E&gt;" num="1933" count="0" type="method"/>
            <line num="1935" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subList(int,int) : List&lt;E&gt;" num="1938" count="0" type="method"/>
            <line num="1940" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="1943" count="0" type="method"/>
            <line num="1945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="1948" count="0" type="method"/>
            <line num="1950" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1953" count="0" type="method"/>
            <line num="1955" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="compareTo(List&lt;E&gt;) : int" num="1958" count="0" type="method"/>
            <line num="1960" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1960" type="cond"/>
            <line num="1961" count="0" type="stmt"/>
            <line num="1964" count="0" type="stmt"/>
            <line num="1965" count="0" type="stmt"/>
            <line num="1966" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1966" type="cond"/>
            <line num="1967" count="0" type="stmt"/>
            <line num="1967" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1967" type="cond"/>
            <line num="1970" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1970" type="cond"/>
            <line num="1971" count="0" type="stmt"/>
            <line num="1972" count="0" type="stmt"/>
            <line num="1972" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1972" type="cond"/>
            <line num="1974" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyBase.java" name="RubyBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="933" coveredmethods="0" methods="1" elements="1" classes="4" ncloc="244" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RubyBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyBase.Enumerable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyBase.Enumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyBase.LazyEnumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RubyBase()" num="43" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyCollections.java" name="RubyCollections.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="61" loc="2689" coveredmethods="0" methods="58" elements="509" classes="1" ncloc="691" statements="447" conditionals="4" coveredstatements="0"/>
            <class name="RubyCollections">
               <metrics coveredelements="0" coveredconditionals="0" complexity="61" coveredmethods="0" methods="58" elements="509" statements="447" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RubyCollections()" num="51" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="newRubyArray() : RubyArray&lt;E&gt;" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyArray(Iterable&lt;E&gt;) : RubyArray&lt;E&gt;" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyArray(Iterator&lt;E&gt;) : RubyArray&lt;E&gt;" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyArray(List&lt;E&gt;) : RubyArray&lt;E&gt;" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyArray(E) : RubyArray&lt;E&gt;" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyHash() : RubyHash&lt;K, V&gt;" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyHash(Map&lt;K, V&gt;) : RubyHash&lt;K, V&gt;" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubySet() : RubySet&lt;E&gt;" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubySet(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubySet(E) : RubySet&lt;E&gt;" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyLazyEnumerator(Iterable&lt;E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRubyEnumerator(Iterable&lt;E&gt;) : RubyEnumerator&lt;E&gt;" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rs() : RubyString" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rs(Object) : RubyString" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ra() : RubyArray&lt;E&gt;" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ra(E) : RubyArray&lt;E&gt;" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ra(Iterable&lt;E&gt;) : RubyArray&lt;E&gt;" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ra(Iterator&lt;E&gt;) : RubyArray&lt;E&gt;" num="277" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ra(List&lt;E&gt;) : RubyArray&lt;E&gt;" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ra(RubyArray&lt;E&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="303" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh() : RubyHash&lt;K, V&gt;" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(Map&lt;K, V&gt;) : RubyHash&lt;K, V&gt;" num="332" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V) : RubyHash&lt;K, V&gt;" num="349" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V) : RubyHash&lt;K, V&gt;" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="473" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="566" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="681" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="746" count="0" type="method"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="817" count="0" type="method"/>
            <line num="821" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="828" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="893" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="910" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="974" count="0" type="method"/>
            <line num="978" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="985" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="988" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line num="991" count="0" type="stmt"/>
            <line num="992" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1060" count="0" type="method"/>
            <line num="1065" count="0" type="stmt"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1069" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line num="1072" count="0" type="stmt"/>
            <line num="1073" count="0" type="stmt"/>
            <line num="1074" count="0" type="stmt"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1076" count="0" type="stmt"/>
            <line num="1077" count="0" type="stmt"/>
            <line num="1078" count="0" type="stmt"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1080" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1152" count="0" type="method"/>
            <line num="1157" count="0" type="stmt"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1161" count="0" type="stmt"/>
            <line num="1162" count="0" type="stmt"/>
            <line num="1163" count="0" type="stmt"/>
            <line num="1164" count="0" type="stmt"/>
            <line num="1165" count="0" type="stmt"/>
            <line num="1166" count="0" type="stmt"/>
            <line num="1167" count="0" type="stmt"/>
            <line num="1168" count="0" type="stmt"/>
            <line num="1169" count="0" type="stmt"/>
            <line num="1170" count="0" type="stmt"/>
            <line num="1171" count="0" type="stmt"/>
            <line num="1172" count="0" type="stmt"/>
            <line num="1173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1249" count="0" type="method"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1257" count="0" type="stmt"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1260" count="0" type="stmt"/>
            <line num="1261" count="0" type="stmt"/>
            <line num="1262" count="0" type="stmt"/>
            <line num="1263" count="0" type="stmt"/>
            <line num="1264" count="0" type="stmt"/>
            <line num="1265" count="0" type="stmt"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1267" count="0" type="stmt"/>
            <line num="1268" count="0" type="stmt"/>
            <line num="1269" count="0" type="stmt"/>
            <line num="1270" count="0" type="stmt"/>
            <line num="1271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1351" count="0" type="method"/>
            <line num="1356" count="0" type="stmt"/>
            <line num="1357" count="0" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1359" count="0" type="stmt"/>
            <line num="1360" count="0" type="stmt"/>
            <line num="1361" count="0" type="stmt"/>
            <line num="1362" count="0" type="stmt"/>
            <line num="1363" count="0" type="stmt"/>
            <line num="1364" count="0" type="stmt"/>
            <line num="1365" count="0" type="stmt"/>
            <line num="1366" count="0" type="stmt"/>
            <line num="1367" count="0" type="stmt"/>
            <line num="1368" count="0" type="stmt"/>
            <line num="1369" count="0" type="stmt"/>
            <line num="1370" count="0" type="stmt"/>
            <line num="1371" count="0" type="stmt"/>
            <line num="1372" count="0" type="stmt"/>
            <line num="1373" count="0" type="stmt"/>
            <line num="1374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1458" count="0" type="method"/>
            <line num="1464" count="0" type="stmt"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1466" count="0" type="stmt"/>
            <line num="1467" count="0" type="stmt"/>
            <line num="1468" count="0" type="stmt"/>
            <line num="1469" count="0" type="stmt"/>
            <line num="1470" count="0" type="stmt"/>
            <line num="1471" count="0" type="stmt"/>
            <line num="1472" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line num="1474" count="0" type="stmt"/>
            <line num="1475" count="0" type="stmt"/>
            <line num="1476" count="0" type="stmt"/>
            <line num="1477" count="0" type="stmt"/>
            <line num="1478" count="0" type="stmt"/>
            <line num="1479" count="0" type="stmt"/>
            <line num="1480" count="0" type="stmt"/>
            <line num="1481" count="0" type="stmt"/>
            <line num="1482" count="0" type="stmt"/>
            <line num="1483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1571" count="0" type="method"/>
            <line num="1577" count="0" type="stmt"/>
            <line num="1578" count="0" type="stmt"/>
            <line num="1579" count="0" type="stmt"/>
            <line num="1580" count="0" type="stmt"/>
            <line num="1581" count="0" type="stmt"/>
            <line num="1582" count="0" type="stmt"/>
            <line num="1583" count="0" type="stmt"/>
            <line num="1584" count="0" type="stmt"/>
            <line num="1585" count="0" type="stmt"/>
            <line num="1586" count="0" type="stmt"/>
            <line num="1587" count="0" type="stmt"/>
            <line num="1588" count="0" type="stmt"/>
            <line num="1589" count="0" type="stmt"/>
            <line num="1590" count="0" type="stmt"/>
            <line num="1591" count="0" type="stmt"/>
            <line num="1592" count="0" type="stmt"/>
            <line num="1593" count="0" type="stmt"/>
            <line num="1594" count="0" type="stmt"/>
            <line num="1595" count="0" type="stmt"/>
            <line num="1596" count="0" type="stmt"/>
            <line num="1597" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1689" count="0" type="method"/>
            <line num="1695" count="0" type="stmt"/>
            <line num="1696" count="0" type="stmt"/>
            <line num="1697" count="0" type="stmt"/>
            <line num="1698" count="0" type="stmt"/>
            <line num="1699" count="0" type="stmt"/>
            <line num="1700" count="0" type="stmt"/>
            <line num="1701" count="0" type="stmt"/>
            <line num="1702" count="0" type="stmt"/>
            <line num="1703" count="0" type="stmt"/>
            <line num="1704" count="0" type="stmt"/>
            <line num="1705" count="0" type="stmt"/>
            <line num="1706" count="0" type="stmt"/>
            <line num="1707" count="0" type="stmt"/>
            <line num="1708" count="0" type="stmt"/>
            <line num="1709" count="0" type="stmt"/>
            <line num="1710" count="0" type="stmt"/>
            <line num="1711" count="0" type="stmt"/>
            <line num="1712" count="0" type="stmt"/>
            <line num="1713" count="0" type="stmt"/>
            <line num="1714" count="0" type="stmt"/>
            <line num="1715" count="0" type="stmt"/>
            <line num="1716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1812" count="0" type="method"/>
            <line num="1819" count="0" type="stmt"/>
            <line num="1820" count="0" type="stmt"/>
            <line num="1821" count="0" type="stmt"/>
            <line num="1822" count="0" type="stmt"/>
            <line num="1823" count="0" type="stmt"/>
            <line num="1824" count="0" type="stmt"/>
            <line num="1825" count="0" type="stmt"/>
            <line num="1826" count="0" type="stmt"/>
            <line num="1827" count="0" type="stmt"/>
            <line num="1828" count="0" type="stmt"/>
            <line num="1829" count="0" type="stmt"/>
            <line num="1830" count="0" type="stmt"/>
            <line num="1831" count="0" type="stmt"/>
            <line num="1832" count="0" type="stmt"/>
            <line num="1833" count="0" type="stmt"/>
            <line num="1834" count="0" type="stmt"/>
            <line num="1835" count="0" type="stmt"/>
            <line num="1836" count="0" type="stmt"/>
            <line num="1837" count="0" type="stmt"/>
            <line num="1838" count="0" type="stmt"/>
            <line num="1839" count="0" type="stmt"/>
            <line num="1840" count="0" type="stmt"/>
            <line num="1841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="1941" count="0" type="method"/>
            <line num="1948" count="0" type="stmt"/>
            <line num="1949" count="0" type="stmt"/>
            <line num="1950" count="0" type="stmt"/>
            <line num="1951" count="0" type="stmt"/>
            <line num="1952" count="0" type="stmt"/>
            <line num="1953" count="0" type="stmt"/>
            <line num="1954" count="0" type="stmt"/>
            <line num="1955" count="0" type="stmt"/>
            <line num="1956" count="0" type="stmt"/>
            <line num="1957" count="0" type="stmt"/>
            <line num="1958" count="0" type="stmt"/>
            <line num="1959" count="0" type="stmt"/>
            <line num="1960" count="0" type="stmt"/>
            <line num="1961" count="0" type="stmt"/>
            <line num="1962" count="0" type="stmt"/>
            <line num="1963" count="0" type="stmt"/>
            <line num="1964" count="0" type="stmt"/>
            <line num="1965" count="0" type="stmt"/>
            <line num="1966" count="0" type="stmt"/>
            <line num="1967" count="0" type="stmt"/>
            <line num="1968" count="0" type="stmt"/>
            <line num="1969" count="0" type="stmt"/>
            <line num="1970" count="0" type="stmt"/>
            <line num="1971" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2075" count="0" type="method"/>
            <line num="2082" count="0" type="stmt"/>
            <line num="2083" count="0" type="stmt"/>
            <line num="2084" count="0" type="stmt"/>
            <line num="2085" count="0" type="stmt"/>
            <line num="2086" count="0" type="stmt"/>
            <line num="2087" count="0" type="stmt"/>
            <line num="2088" count="0" type="stmt"/>
            <line num="2089" count="0" type="stmt"/>
            <line num="2090" count="0" type="stmt"/>
            <line num="2091" count="0" type="stmt"/>
            <line num="2092" count="0" type="stmt"/>
            <line num="2093" count="0" type="stmt"/>
            <line num="2094" count="0" type="stmt"/>
            <line num="2095" count="0" type="stmt"/>
            <line num="2096" count="0" type="stmt"/>
            <line num="2097" count="0" type="stmt"/>
            <line num="2098" count="0" type="stmt"/>
            <line num="2099" count="0" type="stmt"/>
            <line num="2100" count="0" type="stmt"/>
            <line num="2101" count="0" type="stmt"/>
            <line num="2102" count="0" type="stmt"/>
            <line num="2103" count="0" type="stmt"/>
            <line num="2104" count="0" type="stmt"/>
            <line num="2105" count="0" type="stmt"/>
            <line num="2106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2214" count="0" type="method"/>
            <line num="2221" count="0" type="stmt"/>
            <line num="2222" count="0" type="stmt"/>
            <line num="2223" count="0" type="stmt"/>
            <line num="2224" count="0" type="stmt"/>
            <line num="2225" count="0" type="stmt"/>
            <line num="2226" count="0" type="stmt"/>
            <line num="2227" count="0" type="stmt"/>
            <line num="2228" count="0" type="stmt"/>
            <line num="2229" count="0" type="stmt"/>
            <line num="2230" count="0" type="stmt"/>
            <line num="2231" count="0" type="stmt"/>
            <line num="2232" count="0" type="stmt"/>
            <line num="2233" count="0" type="stmt"/>
            <line num="2234" count="0" type="stmt"/>
            <line num="2235" count="0" type="stmt"/>
            <line num="2236" count="0" type="stmt"/>
            <line num="2237" count="0" type="stmt"/>
            <line num="2238" count="0" type="stmt"/>
            <line num="2239" count="0" type="stmt"/>
            <line num="2240" count="0" type="stmt"/>
            <line num="2241" count="0" type="stmt"/>
            <line num="2242" count="0" type="stmt"/>
            <line num="2243" count="0" type="stmt"/>
            <line num="2244" count="0" type="stmt"/>
            <line num="2245" count="0" type="stmt"/>
            <line num="2246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2358" count="0" type="method"/>
            <line num="2366" count="0" type="stmt"/>
            <line num="2367" count="0" type="stmt"/>
            <line num="2368" count="0" type="stmt"/>
            <line num="2369" count="0" type="stmt"/>
            <line num="2370" count="0" type="stmt"/>
            <line num="2371" count="0" type="stmt"/>
            <line num="2372" count="0" type="stmt"/>
            <line num="2373" count="0" type="stmt"/>
            <line num="2374" count="0" type="stmt"/>
            <line num="2375" count="0" type="stmt"/>
            <line num="2376" count="0" type="stmt"/>
            <line num="2377" count="0" type="stmt"/>
            <line num="2378" count="0" type="stmt"/>
            <line num="2379" count="0" type="stmt"/>
            <line num="2380" count="0" type="stmt"/>
            <line num="2381" count="0" type="stmt"/>
            <line num="2382" count="0" type="stmt"/>
            <line num="2383" count="0" type="stmt"/>
            <line num="2384" count="0" type="stmt"/>
            <line num="2385" count="0" type="stmt"/>
            <line num="2386" count="0" type="stmt"/>
            <line num="2387" count="0" type="stmt"/>
            <line num="2388" count="0" type="stmt"/>
            <line num="2389" count="0" type="stmt"/>
            <line num="2390" count="0" type="stmt"/>
            <line num="2391" count="0" type="stmt"/>
            <line num="2392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rh(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V) : RubyHash&lt;K, V&gt;" num="2508" count="0" type="method"/>
            <line num="2516" count="0" type="stmt"/>
            <line num="2517" count="0" type="stmt"/>
            <line num="2518" count="0" type="stmt"/>
            <line num="2519" count="0" type="stmt"/>
            <line num="2520" count="0" type="stmt"/>
            <line num="2521" count="0" type="stmt"/>
            <line num="2522" count="0" type="stmt"/>
            <line num="2523" count="0" type="stmt"/>
            <line num="2524" count="0" type="stmt"/>
            <line num="2525" count="0" type="stmt"/>
            <line num="2526" count="0" type="stmt"/>
            <line num="2527" count="0" type="stmt"/>
            <line num="2528" count="0" type="stmt"/>
            <line num="2529" count="0" type="stmt"/>
            <line num="2530" count="0" type="stmt"/>
            <line num="2531" count="0" type="stmt"/>
            <line num="2532" count="0" type="stmt"/>
            <line num="2533" count="0" type="stmt"/>
            <line num="2534" count="0" type="stmt"/>
            <line num="2535" count="0" type="stmt"/>
            <line num="2536" count="0" type="stmt"/>
            <line num="2537" count="0" type="stmt"/>
            <line num="2538" count="0" type="stmt"/>
            <line num="2539" count="0" type="stmt"/>
            <line num="2540" count="0" type="stmt"/>
            <line num="2541" count="0" type="stmt"/>
            <line num="2542" count="0" type="stmt"/>
            <line num="2543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hp(K,V) : Entry&lt;K, V&gt;" num="2559" count="0" type="method"/>
            <line num="2560" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="Hash(Collection&lt;? extends Collection&lt;? extends E&gt;&gt;) : RubyHash&lt;E, E&gt;" num="2572" count="0" type="method"/>
            <line num="2574" count="0" type="stmt"/>
            <line num="2575" count="0" type="stmt"/>
            <line num="2576" count="0" type="stmt"/>
            <line num="2576" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2576" type="cond"/>
            <line num="2579" count="0" type="stmt"/>
            <line num="2580" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2580" type="cond"/>
            <line num="2582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(String,String) : RubyRange&lt;String&gt;" num="2594" count="0" type="method"/>
            <line num="2595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(char,char) : RubyRange&lt;Character&gt;" num="2608" count="0" type="method"/>
            <line num="2609" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(int,int) : RubyRange&lt;Integer&gt;" num="2622" count="0" type="method"/>
            <line num="2623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(long,long) : RubyRange&lt;Long&gt;" num="2636" count="0" type="method"/>
            <line num="2637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(double,double) : RubyRange&lt;Double&gt;" num="2650" count="0" type="method"/>
            <line num="2651" count="0" type="stmt"/>
            <line num="2652" count="0" type="stmt"/>
            <line num="2653" count="0" type="stmt"/>
            <line num="2654" count="0" type="stmt"/>
            <line num="2655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(Date,Date) : RubyRange&lt;Date&gt;" num="2669" count="0" type="method"/>
            <line num="2670" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="range(LocalDateTime,LocalDateTime) : RubyRange&lt;LocalDateTime&gt;" num="2683" count="0" type="method"/>
            <line num="2685" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyContract.java" name="RubyContract.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="1135" coveredmethods="0" methods="1" elements="1" classes="3" ncloc="141" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RubyContract">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyContract.Enumerable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyContract.Enumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RubyContract()" num="43" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyDate.java" name="RubyDate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="95" loc="943" coveredmethods="0" methods="74" elements="284" classes="3" ncloc="391" statements="208" conditionals="2" coveredstatements="0"/>
            <class name="RubyDate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="86" coveredmethods="0" methods="65" elements="241" statements="174" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="RubyDate.DateField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyDate.DateShifter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="43" statements="34" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="current() : RubyDate" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="today() : RubyDate" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tomorrow() : RubyDate" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="yesterday() : RubyDate" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyDate()" num="89" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="RubyDate(Date)" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="change(Map&lt;DateField, Integer&gt;) : RubyDate" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(int) : DateShifter" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minus(int) : DateShifter" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wday() : int" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mday() : int" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="yday() : int" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="year() : int" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="month() : int" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="day() : int" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="week() : int" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hour() : int" num="244" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minute() : int" num="255" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="second() : int" num="266" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="millisecond() : int" num="277" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allWeek() : RubyRange&lt;Date&gt;" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMonth() : RubyRange&lt;Date&gt;" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allQuarter() : RubyRange&lt;Date&gt;" num="306" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allYear() : RubyRange&lt;Date&gt;" num="315" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(Date) : RubyEnumerator&lt;Date&gt;" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(Date,Consumer&lt;? super Date&gt;) : RubyDate" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="downto(Date) : RubyEnumerator&lt;Date&gt;" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="downto(Date,Consumer&lt;? super Date&gt;) : RubyDate" num="366" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="step(Date) : RubyEnumerator&lt;Date&gt;" num="379" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="step(Date,Consumer&lt;? super Date&gt;) : RubyDate" num="392" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="step(Date,int) : RubyEnumerator&lt;Date&gt;" num="407" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="step(Date,int,Consumer&lt;? super Date&gt;) : RubyDate" num="428" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDay() : RubyDate" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextWeek() : RubyDate" num="447" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextMonth() : RubyDate" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextQuarter() : RubyDate" num="465" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextYear() : RubyDate" num="474" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevDay() : RubyDate" num="483" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevWeek() : RubyDate" num="492" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevMonth() : RubyDate" num="501" count="0" type="method"/>
            <line num="502" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevQuarter() : RubyDate" num="510" count="0" type="method"/>
            <line num="511" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prevYear() : RubyDate" num="519" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginningOfDay() : RubyDate" num="529" count="0" type="method"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfDay() : RubyDate" num="545" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginningOfWeek() : RubyDate" num="561" count="0" type="method"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfWeek() : RubyDate" num="578" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginningOfMonth() : RubyDate" num="588" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfMonth() : RubyDate" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="beginningOfQuarter() : RubyDate" num="616" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="endOfQuarter() : RubyDate" num="645" count="0" type="method"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beginningOfYear() : RubyDate" num="673" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfYear() : RubyDate" num="683" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mondayʔ() : boolean" num="693" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tuesdayʔ() : boolean" num="704" count="0" type="method"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wednesdayʔ() : boolean" num="715" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="thursdayʔ() : boolean" num="726" count="0" type="method"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fridayʔ() : boolean" num="737" count="0" type="method"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="saturdayʔ() : boolean" num="748" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sundayʔ() : boolean" num="759" count="0" type="method"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onWeekdayʔ() : boolean" num="770" count="0" type="method"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onWeekendʔ() : boolean" num="779" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="futureʔ() : boolean" num="789" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pastʔ() : boolean" num="799" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="todayʔ() : boolean" num="808" count="0" type="method"/>
            <line num="809" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toDate() : Date" num="817" count="0" type="method"/>
            <line num="818" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DateShifter(Date,int)" num="840" count="0" type="method"/>
            <line num="841" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="milliseconds() : RubyDate" num="850" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="seconds() : RubyDate" num="862" count="0" type="method"/>
            <line num="863" count="0" type="stmt"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minutes() : RubyDate" num="874" count="0" type="method"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hours() : RubyDate" num="886" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="weeks() : RubyDate" num="898" count="0" type="method"/>
            <line num="899" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="days() : RubyDate" num="910" count="0" type="method"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line num="913" count="0" type="stmt"/>
            <line num="914" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="months() : RubyDate" num="922" count="0" type="method"/>
            <line num="923" count="0" type="stmt"/>
            <line num="924" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="years() : RubyDate" num="934" count="0" type="method"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="937" count="0" type="stmt"/>
            <line num="938" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyDir.java" name="RubyDir.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="356" coveredmethods="0" methods="25" elements="135" classes="1" ncloc="165" statements="84" conditionals="26" coveredstatements="0"/>
            <class name="RubyDir">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="25" elements="135" statements="84" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="open(String) : RubyDir" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RubyDir(File)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="delete(String) : boolean" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="emptyʔ(String) : boolean" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entries(String) : RubyArray&lt;String&gt;" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="existʔ(String) : boolean" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(String) : RubyEnumerator&lt;String&gt;" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="glob(String) : RubyArray&lt;String&gt;" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="normalizePath(String) : String" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertWindowsPathToLinuxPath(String) : String" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="traverseFolder(File,boolean) : List&lt;File&gt;" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="home() : String" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mkdir(String) : boolean" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pwd() : String" num="244" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each() : RubyEnumerator&lt;String&gt;" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Consumer&lt;? super String&gt;) : RubyDir" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="path() : String" num="278" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pos() : int" num="287" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pos(int) : int" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="read() : String" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rewind() : RubyDir" num="319" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="seek(int) : RubyDir" num="331" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tell() : int" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;String&gt;" num="346" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyEnumerable.java" name="RubyEnumerable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="110" loc="922" coveredmethods="0" methods="110" elements="235" classes="1" ncloc="509" statements="125" conditionals="0" coveredstatements="0"/>
            <class name="RubyEnumerable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="110" coveredmethods="0" methods="110" elements="235" statements="125" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="allʔ() : boolean" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="allʔ(Predicate&lt;? super E&gt;) : boolean" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="anyʔ() : boolean" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="anyʔ(Predicate&lt;? super E&gt;) : boolean" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="chunk(Function&lt;? super E, ? extends S&gt;) : RubyEnumerator&lt;Entry&lt;S, RubyArray&lt;E&gt;&gt;&gt;" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="chunkWhile(BiPredicate&lt;? super E, ? super E&gt;) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="collect() : RubyEnumerator&lt;E&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="collect(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;S&gt;" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="collectConcat() : RubyEnumerator&lt;E&gt;" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="collectConcat(Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;) : RubyArray&lt;S&gt;" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="count() : int" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="count(Predicate&lt;? super E&gt;) : int" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="cycle() : RubyEnumerator&lt;E&gt;" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="cycle(int) : RubyEnumerator&lt;E&gt;" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="cycle(int,Consumer&lt;? super E&gt;) : void" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="cycle(Consumer&lt;? super E&gt;) : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="detect() : RubyEnumerator&lt;E&gt;" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="detect(Predicate&lt;? super E&gt;) : E" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="drop(int) : RubyArray&lt;E&gt;" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="dropWhile() : RubyEnumerator&lt;E&gt;" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="dropWhile(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="each() : RubyEnumerator&lt;E&gt;" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="each(Consumer&lt;? super E&gt;) : RubyEnumerable&lt;E&gt;" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachCons(int) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachCons(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachEntry() : RubyEnumerator&lt;E&gt;" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachEntry(Consumer&lt;? super E&gt;) : RubyEnumerable&lt;E&gt;" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachSlice(int) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachSlice(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachWithIndex() : RubyEnumerator&lt;Entry&lt;E, Integer&gt;&gt;" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachWithIndex(BiConsumer&lt;? super E, Integer&gt;) : RubyEnumerable&lt;E&gt;" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachWithObject(O) : RubyEnumerator&lt;Entry&lt;E, O&gt;&gt;" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="eachWithObject(O,BiConsumer&lt;? super E, ? super O&gt;) : O" num="338" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="entries() : RubyArray&lt;E&gt;" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="find() : RubyEnumerator&lt;E&gt;" num="353" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="find(Predicate&lt;? super E&gt;) : E" num="358" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="findAll() : RubyEnumerator&lt;E&gt;" num="368" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="findAll(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="378" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="findIndex() : RubyEnumerator&lt;E&gt;" num="388" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="findIndex(Predicate&lt;? super E&gt;) : Integer" num="393" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="findIndex(E) : Integer" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="first() : E" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="first(int) : RubyArray&lt;E&gt;" num="408" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="flatMap() : RubyEnumerator&lt;E&gt;" num="418" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="flatMap(Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;) : RubyArray&lt;S&gt;" num="428" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="grep(String) : RubyArray&lt;E&gt;" num="439" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="grep(String,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;S&gt;" num="449" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="grepV(String) : RubyArray&lt;E&gt;" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="grepV(String,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;S&gt;" num="471" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="groupBy() : RubyEnumerator&lt;E&gt;" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="groupBy(Function&lt;? super E, ? extends S&gt;) : RubyHash&lt;S, RubyArray&lt;E&gt;&gt;" num="489" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="includeʔ(E) : boolean" num="495" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="inject(BiFunction&lt;E, E, E&gt;) : E" num="500" count="0" type="method"/>
            <line num="502" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="inject(I,BiFunction&lt;I, ? super E, I&gt;) : I" num="505" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="lazy() : RubyLazyEnumerator&lt;E&gt;" num="510" count="0" type="method"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="map() : RubyEnumerator&lt;E&gt;" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="map(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;S&gt;" num="530" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="max() : E" num="536" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="max(Comparator&lt;? super E&gt;) : E" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="maxBy() : RubyEnumerator&lt;E&gt;" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="maxBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="556" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="maxBy(Function&lt;? super E, ? extends S&gt;) : E" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="memberʔ(E) : boolean" num="567" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="min() : E" num="572" count="0" type="method"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="min(Comparator&lt;? super E&gt;) : E" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minBy() : RubyEnumerator&lt;E&gt;" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="592" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minBy(Function&lt;? super E, ? extends S&gt;) : E" num="598" count="0" type="method"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minmax() : RubyArray&lt;E&gt;" num="603" count="0" type="method"/>
            <line num="605" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minmax(Comparator&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="608" count="0" type="method"/>
            <line num="610" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minmaxBy() : RubyEnumerator&lt;E&gt;" num="618" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minmaxBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="623" count="0" type="method"/>
            <line num="626" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="minmaxBy(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="629" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="noneʔ() : boolean" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="noneʔ(Predicate&lt;? super E&gt;) : boolean" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="oneʔ() : boolean" num="644" count="0" type="method"/>
            <line num="646" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="oneʔ(Predicate&lt;? super E&gt;) : boolean" num="649" count="0" type="method"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="partition() : RubyEnumerator&lt;E&gt;" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="partition(Predicate&lt;? super E&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="664" count="0" type="method"/>
            <line num="666" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reduce(BiFunction&lt;E, E, E&gt;) : E" num="669" count="0" type="method"/>
            <line num="671" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reduce(I,BiFunction&lt;I, ? super E, I&gt;) : I" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reject() : RubyEnumerator&lt;E&gt;" num="684" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reject(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="694" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reverseEach() : RubyEnumerator&lt;E&gt;" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="reverseEach(Consumer&lt;? super E&gt;) : RubyEnumerable&lt;E&gt;" num="714" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="select() : RubyEnumerator&lt;E&gt;" num="727" count="0" type="method"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="select(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="737" count="0" type="method"/>
            <line num="739" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sliceAfter(Predicate&lt;? super E&gt;) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="747" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sliceAfter(String) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="757" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sliceBefore(Predicate&lt;? super E&gt;) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="768" count="0" type="method"/>
            <line num="770" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sliceBefore(String) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sliceWhen(BiPredicate&lt;? super E, ? super E&gt;) : RubyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="789" count="0" type="method"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sort() : RubyArray&lt;E&gt;" num="795" count="0" type="method"/>
            <line num="797" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sortBy() : RubyEnumerator&lt;E&gt;" num="805" count="0" type="method"/>
            <line num="807" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sortBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="810" count="0" type="method"/>
            <line num="813" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sortBy(Comparator&lt;? super E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="816" count="0" type="method"/>
            <line num="819" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sortBy(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="822" count="0" type="method"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sum() : BigDecimal" num="827" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sum(Function&lt;? super Number, ? extends Number&gt;) : BigDecimal" num="832" count="0" type="method"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sum(Number) : BigDecimal" num="837" count="0" type="method"/>
            <line num="839" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sum(Number,Function&lt;? super Number, ? extends Number&gt;) : BigDecimal" num="842" count="0" type="method"/>
            <line num="845" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="take(int) : RubyArray&lt;E&gt;" num="853" count="0" type="method"/>
            <line num="855" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="takeWhile() : RubyEnumerator&lt;E&gt;" num="863" count="0" type="method"/>
            <line num="865" count="0" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="takeWhile(Predicate&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="878" count="0" type="method"/>
            <line num="880" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="toA() : RubyArray&lt;E&gt;" num="883" count="0" type="method"/>
            <line num="885" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="toList() : List&lt;E&gt;" num="888" count="0" type="method"/>
            <line num="890" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line num="892" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="toH(Function&lt;E, Entry&lt;K, V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="toH(BiFunction&lt;E, E, Entry&lt;K, V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="900" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="zip(List&lt;? extends Iterable&lt;? extends E&gt;&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="910" count="0" type="method"/>
            <line num="913" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="zip(List&lt;? extends Iterable&lt;? extends E&gt;&gt;,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="916" count="0" type="method"/>
            <line num="919" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyEnumerator.java" name="RubyEnumerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="145" coveredmethods="0" methods="11" elements="28" classes="1" ncloc="57" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="RubyEnumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(Iterable&lt;E&gt;) : RubyEnumerator&lt;E&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubyEnumerator&lt;E&gt;" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyEnumerator(Iterable&lt;E&gt;)" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Consumer&lt;? super E&gt;) : RubyEnumerator&lt;E&gt;" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rewind() : RubyEnumerator&lt;E&gt;" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : E" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyFile.java" name="RubyFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="52" loc="463" coveredmethods="0" methods="30" elements="158" classes="1" ncloc="204" statements="106" conditionals="22" coveredstatements="0"/>
            <class name="RubyFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="52" coveredmethods="0" methods="30" elements="158" statements="106" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="open(String,String) : RubyFile" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="open(String,Mode) : RubyFile" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="open(String) : RubyFile" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyFile(File,Mode)" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="absolutePath(String) : String" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="basename(String) : String" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="basename(String,String) : String" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="chmod(int,String) : int" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="permsFromInt(int) : Set&lt;PosixFilePermission&gt;" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="delete(String) : int" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="directoryʔ(String) : boolean" num="231" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dirname(String) : String" num="242" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyʔ(String) : boolean" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="executableʔ(String) : boolean" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="existʔ(String) : boolean" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandPath(String) : String" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandPath(String,String) : String" num="299" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="extname(String) : String" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line complexity="1" visibility="public" signature="fileʔ(String) : boolean" num="323" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="join(String) : String" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="337" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="readableʔ(String) : boolean" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="size(String) : long" num="374" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="sizeʔ(String) : Long" num="390" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="392" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line complexity="1" visibility="public" signature="writableʔ(String) : boolean" num="405" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="zeroʔ(String) : boolean" num="416" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mtime() : Date" num="427" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="path() : String" num="436" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="445" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toPath() : String" num="454" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="458" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyHash.java" name="RubyHash.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="134" loc="1318" coveredmethods="0" methods="114" elements="354" classes="1" ncloc="563" statements="202" conditionals="38" coveredstatements="0"/>
            <class name="RubyHash">
               <metrics coveredelements="0" coveredconditionals="0" complexity="134" coveredmethods="0" methods="114" elements="354" statements="202" conditionals="38" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(LinkedHashMap&lt;K, V&gt;) : RubyHash&lt;K, V&gt;" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Map&lt;K, V&gt;) : RubyHash&lt;K, V&gt;" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyHash()" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyHash(LinkedHashMap&lt;K, V&gt;)" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyHash(Map&lt;K, V&gt;)" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assoc(K) : Entry&lt;K, V&gt;" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compact() : RubyHash&lt;K, V&gt;" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compactǃ() : RubyHash&lt;K, V&gt;" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareByIdentity() : RubyHash&lt;K, V&gt;" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comparedByIdentityʔ() : boolean" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="delete(K) : V" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deleteIf() : RubyEnumerator&lt;Entry&lt;K, V&gt;&gt;" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="deleteIf(BiPredicate&lt;? super K, ? super V&gt;) : RubyHash&lt;K, V&gt;" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDefault(V) : V" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefault() : V" num="250" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(BiConsumer&lt;? super K, ? super V&gt;) : RubyHash&lt;K, V&gt;" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachKey() : RubyEnumerator&lt;K&gt;" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachKey(Consumer&lt;? super K&gt;) : RubyHash&lt;K, V&gt;" num="281" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachPair() : RubyEnumerator&lt;Entry&lt;K, V&gt;&gt;" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachPair(BiConsumer&lt;? super K, ? super V&gt;) : RubyHash&lt;K, V&gt;" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachValue() : RubyEnumerator&lt;V&gt;" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachValue(Consumer&lt;? super V&gt;) : RubyHash&lt;K, V&gt;" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyʔ() : boolean" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eqlʔ(Object) : boolean" num="347" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fetch(K) : V" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fetch(K,V) : V" num="376" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetchValues(Object) : RubyArray&lt;V&gt;" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fetchValues(Iterable&lt;?&gt;) : RubyArray&lt;V&gt;" num="404" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatten() : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="421" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="freeze() : RubyHash&lt;K, V&gt;" num="430" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="frozenʔ() : boolean" num="443" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash() : int" num="452" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inspect() : String" num="461" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RubyHash&lt;V, K&gt;" num="471" count="0" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keepIf() : RubyEnumerator&lt;Entry&lt;K, V&gt;&gt;" num="484" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="keepIf(BiPredicate&lt;? super K, ? super V&gt;) : RubyHash&lt;K, V&gt;" num="495" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="499" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="key(V) : K" num="511" count="0" type="method"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keys() : RubyArray&lt;K&gt;" num="525" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyʔ(K) : boolean" num="536" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="545" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Map&lt;? extends K, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="556" count="0" type="method"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="merge(Map&lt;K, V&gt;,TriFunction&lt;? super K, V, V, V&gt;) : RubyHash&lt;K, V&gt;" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="581" type="cond"/>
            <line num="582" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mergeǃ(Map&lt;? extends K, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="597" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mergeǃ(Map&lt;? extends K, ? extends V&gt;,TriFunction&lt;? super K, V, V, V&gt;) : RubyHash&lt;K, V&gt;" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="617" type="cond"/>
            <line num="618" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(Entry&lt;? extends K, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="633" count="0" type="method"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(Entry&lt;? extends K, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="645" count="0" type="method"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="rassoc(V) : Entry&lt;K, V&gt;" num="660" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="662" type="cond"/>
            <line falsecount="0" truecount="0" num="662" type="cond"/>
            <line num="664" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectǃ() : RubyEnumerator&lt;Entry&lt;K, V&gt;&gt;" num="674" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rejectǃ(BiPredicate&lt;? super K, ? super V&gt;) : RubyHash&lt;K, V&gt;" num="686" count="0" type="method"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="689" type="cond"/>
            <line complexity="1" visibility="public" signature="replace(Map&lt;? extends K, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="699" count="0" type="method"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="702" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="shift() : Entry&lt;K, V&gt;" num="710" count="0" type="method"/>
            <line num="711" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="711" type="cond"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="store(K,V) : V" num="730" count="0" type="method"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toHash() : RubyHash&lt;K, V&gt;" num="740" count="0" type="method"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toMap() : Map&lt;K, V&gt;" num="749" count="0" type="method"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toS() : String" num="758" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformValues() : RubyEnumerator&lt;V&gt;" num="767" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformValues(Function&lt;? super V, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformValuesǃ() : RubyEnumerator&lt;V&gt;" num="792" count="0" type="method"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformValuesǃ(Function&lt;? super V, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="803" count="0" type="method"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Map&lt;? extends K, ? extends V&gt;) : RubyHash&lt;K, V&gt;" num="816" count="0" type="method"/>
            <line num="817" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Map&lt;? extends K, ? extends V&gt;,TriFunction&lt;? super K, V, V, V&gt;) : RubyHash&lt;K, V&gt;" num="829" count="0" type="method"/>
            <line num="831" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allʔ(BiPredicate&lt;? super K, ? super V&gt;) : boolean" num="840" count="0" type="method"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyʔ(BiPredicate&lt;? super K, ? super V&gt;) : boolean" num="850" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chunk(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyEnumerator&lt;Entry&lt;S, RubyArray&lt;Entry&lt;K, V&gt;&gt;&gt;&gt;" num="860" count="0" type="method"/>
            <line num="862" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;S&gt;" num="871" count="0" type="method"/>
            <line num="873" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collectConcat(BiFunction&lt;? super K, ? super V, ? extends List&lt;S&gt;&gt;) : RubyArray&lt;S&gt;" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count(BiPredicate&lt;? super K, ? super V&gt;) : int" num="894" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(BiConsumer&lt;? super K, ? super V&gt;) : void" num="904" count="0" type="method"/>
            <line num="905" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(int,BiConsumer&lt;? super K, ? super V&gt;) : void" num="913" count="0" type="method"/>
            <line num="914" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="detect(BiPredicate&lt;? super K, ? super V&gt;) : Entry&lt;K, V&gt;" num="922" count="0" type="method"/>
            <line num="923" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dropWhile(BiPredicate&lt;? super K, ? super V&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="932" count="0" type="method"/>
            <line num="934" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachEntry(BiConsumer&lt;? super K, ? super V&gt;) : RubyEnumerable&lt;Entry&lt;K, V&gt;&gt;" num="943" count="0" type="method"/>
            <line num="945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(BiPredicate&lt;? super K, ? super V&gt;) : Entry&lt;K, V&gt;" num="955" count="0" type="method"/>
            <line num="956" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findAll(BiPredicate&lt;? super K, ? super V&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="964" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findIndex(BiPredicate&lt;? super K, ? super V&gt;) : Integer" num="975" count="0" type="method"/>
            <line num="976" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatMap(BiFunction&lt;? super K, ? super V, ? extends List&lt;S&gt;&gt;) : RubyArray&lt;S&gt;" num="985" count="0" type="method"/>
            <line num="987" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grep(String,BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;S&gt;" num="995" count="0" type="method"/>
            <line num="997" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="groupBy(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyHash&lt;S, RubyArray&lt;Entry&lt;K, V&gt;&gt;&gt;" num="1006" count="0" type="method"/>
            <line num="1008" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="map(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;S&gt;" num="1017" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy(Comparator&lt;? super S&gt;,BiFunction&lt;? super K, ? super V, ? extends S&gt;) : Entry&lt;K, V&gt;" num="1028" count="0" type="method"/>
            <line num="1030" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy(Comparator&lt;? super S&gt;,BiFunction&lt;? super K, ? super V, ? extends S&gt;) : Entry&lt;K, V&gt;" num="1039" count="0" type="method"/>
            <line num="1041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : Entry&lt;K, V&gt;" num="1050" count="0" type="method"/>
            <line num="1052" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmaxBy(Comparator&lt;? super S&gt;,BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1061" count="0" type="method"/>
            <line num="1063" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmaxBy(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1072" count="0" type="method"/>
            <line num="1074" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : Entry&lt;K, V&gt;" num="1083" count="0" type="method"/>
            <line num="1085" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noneʔ(BiPredicate&lt;? super K, ? super V&gt;) : boolean" num="1094" count="0" type="method"/>
            <line num="1095" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneʔ(BiPredicate&lt;? super K, ? super V&gt;) : boolean" num="1104" count="0" type="method"/>
            <line num="1105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(BiPredicate&lt;? super K, ? super V&gt;) : RubyArray&lt;RubyArray&lt;Entry&lt;K, V&gt;&gt;&gt;" num="1114" count="0" type="method"/>
            <line num="1116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reject(BiPredicate&lt;? super K, ? super V&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1125" count="0" type="method"/>
            <line num="1127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseEach(BiConsumer&lt;? super K, ? super V&gt;) : RubyEnumerable&lt;Entry&lt;K, V&gt;&gt;" num="1136" count="0" type="method"/>
            <line num="1138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="select(BiPredicate&lt;? super K, ? super V&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1147" count="0" type="method"/>
            <line num="1149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceBefore(BiPredicate&lt;? super K, ? super V&gt;) : RubyEnumerator&lt;RubyArray&lt;Entry&lt;K, V&gt;&gt;&gt;" num="1157" count="0" type="method"/>
            <line num="1159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Comparator&lt;? super S&gt;,BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1168" count="0" type="method"/>
            <line num="1170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(BiFunction&lt;? super K, ? super V, ? extends S&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1179" count="0" type="method"/>
            <line num="1181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="takeWhile(BiPredicate&lt;? super K, ? super V&gt;) : RubyArray&lt;Entry&lt;K, V&gt;&gt;" num="1190" count="0" type="method"/>
            <line num="1192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : RubyArray&lt;V&gt;" num="1201" count="0" type="method"/>
            <line num="1203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAt(Object) : RubyArray&lt;V&gt;" num="1213" count="0" type="method"/>
            <line num="1214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAt(Iterable&lt;?&gt;) : RubyArray&lt;V&gt;" num="1224" count="0" type="method"/>
            <line num="1225" count="0" type="stmt"/>
            <line num="1226" count="0" type="stmt"/>
            <line num="1227" count="0" type="stmt"/>
            <line num="1229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueʔ(Object) : boolean" num="1239" count="0" type="method"/>
            <line num="1240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="1243" count="0" type="method"/>
            <line num="1245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="1248" count="0" type="method"/>
            <line num="1250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsKey(Object) : boolean" num="1253" count="0" type="method"/>
            <line num="1255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsValue(Object) : boolean" num="1258" count="0" type="method"/>
            <line num="1260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : V" num="1263" count="0" type="method"/>
            <line num="1265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(K,V) : V" num="1268" count="0" type="method"/>
            <line num="1270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : V" num="1273" count="0" type="method"/>
            <line num="1275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putAll(Map&lt;? extends K, ? extends V&gt;) : void" num="1278" count="0" type="method"/>
            <line num="1280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="1283" count="0" type="method"/>
            <line num="1285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keySet() : Set&lt;K&gt;" num="1288" count="0" type="method"/>
            <line num="1290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entrySet() : Set&lt;Entry&lt;K, V&gt;&gt;" num="1293" count="0" type="method"/>
            <line num="1295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Entry&lt;K, V&gt;&gt;" num="1298" count="0" type="method"/>
            <line num="1300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="1303" count="0" type="method"/>
            <line num="1305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="1308" count="0" type="method"/>
            <line num="1310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1313" count="0" type="method"/>
            <line num="1315" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyIO.java" name="RubyIO.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="44" loc="491" coveredmethods="0" methods="25" elements="145" classes="2" ncloc="217" statements="106" conditionals="14" coveredstatements="0"/>
            <class name="RubyIO">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="20" elements="129" statements="97" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="RubyIO.Mode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Mode(String,boolean,boolean)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReadable() : boolean" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWritable() : boolean" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromString(String) : Mode" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="open(String,String) : RubyIO" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="open(String,Mode) : RubyIO" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="open(String) : RubyIO" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="RubyIO(File,Mode)" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(String) : RubyEnumerator&lt;String&gt;" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(String,boolean) : RubyEnumerator&lt;String&gt;" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(File) : RubyEnumerator&lt;String&gt;" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(File,boolean) : RubyEnumerator&lt;String&gt;" num="302" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(InputStream) : RubyEnumerator&lt;String&gt;" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(InputStream,boolean) : RubyEnumerator&lt;String&gt;" num="326" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(String,Consumer&lt;? super String&gt;) : void" num="339" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foreach(String,Consumer&lt;? super String&gt;,boolean) : void" num="353" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="close() : void" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eachLine() : RubyEnumerator&lt;String&gt;" num="378" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="eachLine(boolean) : RubyEnumerator&lt;String&gt;" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="puts(String) : void" num="409" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="read() : String" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="seek(long) : void" num="455" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(String) : int" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="486" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyKernel.java" name="RubyKernel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="159" coveredmethods="0" methods="5" elements="132" classes="1" ncloc="104" statements="85" conditionals="42" coveredstatements="0"/>
            <class name="RubyKernel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="5" elements="132" statements="85" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="RubyKernel()" num="36" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="p() : Void" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="p(T) : T" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="p(T,T) : RubyArray&lt;T&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="22" visibility="private" signature="p(T,boolean) : T" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyLazyEnumerator.java" name="RubyLazyEnumerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="156" loc="1194" coveredmethods="0" methods="120" elements="454" classes="1" ncloc="725" statements="272" conditionals="62" coveredstatements="0"/>
            <class name="RubyLazyEnumerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="156" coveredmethods="0" methods="120" elements="454" statements="272" conditionals="62" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(Iterable&lt;E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyLazyEnumerator(Iterable&lt;E&gt;)" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="allʔ() : boolean" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="allʔ(Predicate&lt;? super E&gt;) : boolean" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="anyʔ() : boolean" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="anyʔ(Predicate&lt;? super E&gt;) : boolean" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chunk(Function&lt;? super E, ? extends S&gt;) : RubyLazyEnumerator&lt;Entry&lt;S, RubyArray&lt;E&gt;&gt;&gt;" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chunkWhile(BiPredicate&lt;? super E, ? super E&gt;) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect() : RubyLazyEnumerator&lt;E&gt;" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect(Function&lt;? super E, ? extends S&gt;) : RubyLazyEnumerator&lt;S&gt;" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collectConcat() : RubyLazyEnumerator&lt;E&gt;" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collectConcat(Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;) : RubyLazyEnumerator&lt;S&gt;" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count() : int" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="count(Predicate&lt;? super E&gt;) : int" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle() : RubyLazyEnumerator&lt;E&gt;" num="247" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(int) : RubyLazyEnumerator&lt;E&gt;" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cycle(int,Consumer&lt;? super E&gt;) : void" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle(Consumer&lt;? super E&gt;) : void" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="detect() : RubyLazyEnumerator&lt;E&gt;" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="detect(Predicate&lt;? super E&gt;) : E" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="drop(int) : RubyLazyEnumerator&lt;E&gt;" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dropWhile() : RubyLazyEnumerator&lt;E&gt;" num="313" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dropWhile(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each() : RubyLazyEnumerator&lt;E&gt;" num="338" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Consumer&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCons(int) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCons(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachEntry() : RubyLazyEnumerator&lt;E&gt;" num="378" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachEntry(Consumer&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="388" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachSlice(int) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachSlice(int,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithIndex() : RubyLazyEnumerator&lt;Entry&lt;E, Integer&gt;&gt;" num="418" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithIndex(BiConsumer&lt;? super E, Integer&gt;) : RubyLazyEnumerator&lt;E&gt;" num="428" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithObject(O) : RubyLazyEnumerator&lt;Entry&lt;E, O&gt;&gt;" num="444" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachWithObject(O,BiConsumer&lt;? super E, ? super O&gt;) : O" num="449" count="0" type="method"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entries() : RubyArray&lt;E&gt;" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="find() : RubyLazyEnumerator&lt;E&gt;" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findAll() : RubyLazyEnumerator&lt;E&gt;" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(Predicate&lt;? super E&gt;) : E" num="482" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findAll(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="492" count="0" type="method"/>
            <line num="494" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findIndex() : RubyLazyEnumerator&lt;E&gt;" num="502" count="0" type="method"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="findIndex(Predicate&lt;? super E&gt;) : Integer" num="507" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="findIndex(E) : Integer" num="518" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="522" type="cond"/>
            <line falsecount="0" truecount="0" num="522" type="cond"/>
            <line num="524" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="first() : E" num="529" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="532" type="cond"/>
            <line num="533" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="first(int) : RubyArray&lt;E&gt;" num="538" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatMap() : RubyLazyEnumerator&lt;E&gt;" num="556" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatMap(Function&lt;? super E, ? extends List&lt;? extends S&gt;&gt;) : RubyLazyEnumerator&lt;S&gt;" num="566" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grep(String) : RubyLazyEnumerator&lt;E&gt;" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grep(String,Function&lt;? super E, ? extends S&gt;) : RubyLazyEnumerator&lt;S&gt;" num="587" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grepV(String) : RubyLazyEnumerator&lt;E&gt;" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grepV(String,Function&lt;? super E, ? extends S&gt;) : RubyLazyEnumerator&lt;S&gt;" num="609" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="groupBy() : RubyLazyEnumerator&lt;E&gt;" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="groupBy(Function&lt;? super E, ? extends S&gt;) : RubyHash&lt;S, RubyArray&lt;E&gt;&gt;" num="626" count="0" type="method"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="632" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="includeʔ(E) : boolean" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="inject(BiFunction&lt;E, E, E&gt;) : E" num="647" count="0" type="method"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="651" type="cond"/>
            <line num="653" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="653" type="cond"/>
            <line num="654" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inject(I,BiFunction&lt;I, ? super E, I&gt;) : I" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lazy() : RubyLazyEnumerator&lt;E&gt;" num="667" count="0" type="method"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="map() : RubyLazyEnumerator&lt;E&gt;" num="677" count="0" type="method"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="map(Function&lt;? super E, ? extends S&gt;) : RubyLazyEnumerator&lt;S&gt;" num="687" count="0" type="method"/>
            <line num="689" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max() : E" num="692" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Comparator&lt;? super E&gt;) : E" num="697" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy() : RubyLazyEnumerator&lt;E&gt;" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="712" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxBy(Function&lt;? super E, ? extends S&gt;) : E" num="718" count="0" type="method"/>
            <line num="720" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberʔ(E) : boolean" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min() : E" num="728" count="0" type="method"/>
            <line num="730" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Comparator&lt;? super E&gt;) : E" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy() : RubyLazyEnumerator&lt;E&gt;" num="743" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : E" num="748" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minBy(Function&lt;? super E, ? extends S&gt;) : E" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmax() : RubyArray&lt;E&gt;" num="759" count="0" type="method"/>
            <line num="761" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmax(Comparator&lt;? super E&gt;) : RubyArray&lt;E&gt;" num="764" count="0" type="method"/>
            <line num="766" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmaxBy() : RubyLazyEnumerator&lt;E&gt;" num="774" count="0" type="method"/>
            <line num="776" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="minmaxBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="779" count="0" type="method"/>
            <line num="782" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="783" type="cond"/>
            <line num="785" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="788" type="cond"/>
            <line num="789" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minmaxBy(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="796" count="0" type="method"/>
            <line num="798" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="noneʔ() : boolean" num="801" count="0" type="method"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="804" type="cond"/>
            <line num="806" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="noneʔ(Predicate&lt;? super E&gt;) : boolean" num="809" count="0" type="method"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="812" type="cond"/>
            <line num="814" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="oneʔ() : boolean" num="817" count="0" type="method"/>
            <line num="819" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="823" type="cond"/>
            <line num="826" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="oneʔ(Predicate&lt;? super E&gt;) : boolean" num="829" count="0" type="method"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="833" type="cond"/>
            <line num="834" count="0" type="stmt"/>
            <line num="835" count="0" type="stmt"/>
            <line num="835" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="835" type="cond"/>
            <line num="838" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition() : RubyLazyEnumerator&lt;E&gt;" num="846" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="partition(Predicate&lt;? super E&gt;) : RubyArray&lt;RubyArray&lt;E&gt;&gt;" num="851" count="0" type="method"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="856" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line num="861" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce(BiFunction&lt;E, E, E&gt;) : E" num="864" count="0" type="method"/>
            <line num="866" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce(S,BiFunction&lt;S, ? super E, S&gt;) : S" num="869" count="0" type="method"/>
            <line num="871" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reject() : RubyLazyEnumerator&lt;E&gt;" num="879" count="0" type="method"/>
            <line num="881" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reject(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="889" count="0" type="method"/>
            <line num="891" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseEach() : RubyLazyEnumerator&lt;E&gt;" num="899" count="0" type="method"/>
            <line num="901" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseEach(Consumer&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="909" count="0" type="method"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line num="914" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="select() : RubyLazyEnumerator&lt;E&gt;" num="922" count="0" type="method"/>
            <line num="924" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="select(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="932" count="0" type="method"/>
            <line num="934" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceAfter(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="942" count="0" type="method"/>
            <line num="945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceAfter(String) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="953" count="0" type="method"/>
            <line num="955" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceBefore(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="964" count="0" type="method"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceBefore(String) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="975" count="0" type="method"/>
            <line num="977" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceWhen(BiPredicate&lt;? super E, ? super E&gt;) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="986" count="0" type="method"/>
            <line num="989" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sort() : RubyArray&lt;E&gt;" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="995" type="cond"/>
            <line num="997" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy() : RubyLazyEnumerator&lt;E&gt;" num="1006" count="0" type="method"/>
            <line num="1008" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1011" count="0" type="method"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1017" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Comparator&lt;? super E&gt;,Comparator&lt;? super S&gt;,Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1022" count="0" type="method"/>
            <line num="1025" count="0" type="stmt"/>
            <line num="1026" count="0" type="stmt"/>
            <line num="1027" count="0" type="stmt"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1030" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortBy(Function&lt;? super E, ? extends S&gt;) : RubyArray&lt;E&gt;" num="1033" count="0" type="method"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1036" count="0" type="stmt"/>
            <line num="1037" count="0" type="stmt"/>
            <line num="1038" count="0" type="stmt"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum() : BigDecimal" num="1043" count="0" type="method"/>
            <line num="1045" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(Function&lt;? super Number, ? extends Number&gt;) : BigDecimal" num="1048" count="0" type="method"/>
            <line num="1050" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(Number) : BigDecimal" num="1053" count="0" type="method"/>
            <line num="1055" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="sum(Number,Function&lt;? super Number, ? extends Number&gt;) : BigDecimal" num="1058" count="0" type="method"/>
            <line num="1061" count="0" type="stmt"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1063" type="cond"/>
            <line num="1064" count="0" type="stmt"/>
            <line num="1065" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1067" type="cond"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1072" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="take(int) : RubyLazyEnumerator&lt;E&gt;" num="1080" count="0" type="method"/>
            <line num="1082" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="takeWhile() : RubyLazyEnumerator&lt;E&gt;" num="1090" count="0" type="method"/>
            <line num="1092" count="0" type="stmt"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1094" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="takeWhile(Predicate&lt;? super E&gt;) : RubyLazyEnumerator&lt;E&gt;" num="1105" count="0" type="method"/>
            <line num="1107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toA() : RubyArray&lt;E&gt;" num="1110" count="0" type="method"/>
            <line num="1112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toList() : List&lt;E&gt;" num="1115" count="0" type="method"/>
            <line num="1117" count="0" type="stmt"/>
            <line num="1118" count="0" type="stmt"/>
            <line num="1119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toH(Function&lt;E, Entry&lt;K, V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="1122" count="0" type="method"/>
            <line num="1124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toH(BiFunction&lt;E, E, Entry&lt;K, V&gt;&gt;) : RubyHash&lt;K, V&gt;" num="1127" count="0" type="method"/>
            <line num="1129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zip(List&lt;? extends Iterable&lt;? extends E&gt;&gt;) : RubyLazyEnumerator&lt;RubyArray&lt;E&gt;&gt;" num="1138" count="0" type="method"/>
            <line num="1141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zip(List&lt;? extends Iterable&lt;? extends E&gt;&gt;,Consumer&lt;? super RubyArray&lt;E&gt;&gt;) : void" num="1144" count="0" type="method"/>
            <line num="1147" count="0" type="stmt"/>
            <line num="1148" count="0" type="stmt"/>
            <line num="1149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rewind() : RubyLazyEnumerator&lt;E&gt;" num="1158" count="0" type="method"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : E" num="1164" count="0" type="method"/>
            <line num="1166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="1169" count="0" type="method"/>
            <line num="1171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="1174" count="0" type="method"/>
            <line num="1176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="1179" count="0" type="method"/>
            <line num="1181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="1184" count="0" type="method"/>
            <line num="1186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1189" count="0" type="method"/>
            <line num="1191" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyLiterals.java" name="RubyLiterals.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="98" coveredmethods="0" methods="4" elements="23" classes="1" ncloc="39" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="RubyLiterals">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="23" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="RubyLiterals()" num="40" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="qr(String) : Pattern" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="qw(String) : RubyArray&lt;String&gt;" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="qx(String) : String" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyObject.java" name="RubyObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="434" coveredmethods="0" methods="21" elements="147" classes="1" ncloc="180" statements="90" conditionals="36" coveredstatements="0"/>
            <class name="RubyObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="21" elements="147" statements="90" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="RubyObject()" num="38" count="0" type="method"/>
            <line complexity="10" visibility="public" signature="send(Object,String,Object) : E" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="isConvertable(Class&lt;?&gt;,Class&lt;?&gt;) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Byte) : E" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,byte) : E" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Short) : E" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,short) : E" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Integer) : E" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,int) : E" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Long) : E" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,long) : E" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Float) : E" num="255" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,float) : E" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Double) : E" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,double) : E" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Boolean) : E" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,boolean) : E" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(Object,String,Character) : E" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(Object,String,char) : E" num="378" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="isBlank(Object) : boolean" num="396" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="406" type="cond"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPresent(Object) : boolean" num="430" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyRange.java" name="RubyRange.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="323" coveredmethods="0" methods="23" elements="88" classes="2" ncloc="145" statements="57" conditionals="8" coveredstatements="0"/>
            <class name="RubyRange">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="23" elements="88" statements="57" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="RubyRange.Interval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="RubyRange(Successive&lt;E&gt;,E,E,Interval)" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closed() : RubyRange&lt;E&gt;" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closedOpen() : RubyRange&lt;E&gt;" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="open() : RubyRange&lt;E&gt;" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="openClosed() : RubyRange&lt;E&gt;" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="begin() : E" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="coverʔ(E) : boolean" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Consumer&lt;? super E&gt;) : RubyRange&lt;E&gt;" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="end() : E" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eqlʔ(Object) : boolean" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash() : int" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includeʔ(E) : boolean" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inspect() : String" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="last() : E" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="last(int) : RubyArray&lt;E&gt;" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberʔ(E) : boolean" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="step(int) : RubyEnumerator&lt;E&gt;" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="step(int,Consumer&lt;? super E&gt;) : RubyRange&lt;E&gt;" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toS() : String" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="307" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubySet.java" name="RubySet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="78" loc="648" coveredmethods="0" methods="55" elements="238" classes="1" ncloc="287" statements="137" conditionals="46" coveredstatements="0"/>
            <class name="RubySet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="78" coveredmethods="0" methods="55" elements="238" statements="137" conditionals="46" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(LinkedHashSet&lt;E&gt;) : RubySet&lt;E&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyOf(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubySet()" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubySet(LinkedHashSet&lt;E&gt;)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubySet(Iterable&lt;E&gt;)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addʔ(E) : RubySet&lt;E&gt;" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line complexity="2" visibility="public" signature="classify(Function&lt;? super E, ? extends S&gt;) : RubyHash&lt;S, RubySet&lt;E&gt;&gt;" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collectǃ(Function&lt;? super E, ? extends E&gt;) : RubySet&lt;E&gt;" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="delete(E) : RubySet&lt;E&gt;" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="deleteʔ(E) : RubySet&lt;E&gt;" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line complexity="3" visibility="public" signature="deleteIf(Predicate&lt;? super E&gt;) : RubySet&lt;E&gt;" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="difference(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="disjointʔ(Iterable&lt;E&gt;) : boolean" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="divide(Function&lt;? super E, ? extends S&gt;) : RubySet&lt;RubySet&lt;E&gt;&gt;" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="each(Consumer&lt;? super E&gt;) : RubySet&lt;E&gt;" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyʔ() : boolean" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exclusive(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="flatten() : RubySet&lt;S&gt;" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="flatten(Set&lt;?&gt;,int) : RubySet&lt;S&gt;" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="freeze() : RubySet&lt;E&gt;" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="frozenʔ() : boolean" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inspect() : String" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="intersectʔ(Iterable&lt;E&gt;) : boolean" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="intersection(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="keepIf(Predicate&lt;? super E&gt;) : RubySet&lt;E&gt;" num="376" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="389" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mapǃ(Function&lt;? super E, ? extends E&gt;) : RubySet&lt;E&gt;" num="400" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="411" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="properSubsetʔ(Set&lt;E&gt;) : boolean" num="424" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="425" type="cond"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="properSupersetʔ(Set&lt;E&gt;) : boolean" num="441" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rejectǃ(Predicate&lt;? super E&gt;) : RubySet&lt;E&gt;" num="458" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line complexity="1" visibility="public" signature="replace(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="472" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="selectǃ(Predicate&lt;? super E&gt;) : RubySet&lt;E&gt;" num="486" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="489" type="cond"/>
            <line complexity="3" visibility="public" signature="subsetʔ(Set&lt;E&gt;) : boolean" num="499" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtract(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="515" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="supersetʔ(Set&lt;E&gt;) : boolean" num="527" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="531" type="cond"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toSet() : Set&lt;E&gt;" num="541" count="0" type="method"/>
            <line num="542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(Iterable&lt;E&gt;) : RubySet&lt;E&gt;" num="553" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : boolean" num="559" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends E&gt;) : boolean" num="564" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="569" count="0" type="method"/>
            <line num="571" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="579" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="584" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="594" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="604" count="0" type="method"/>
            <line num="606" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : Object[]" num="609" count="0" type="method"/>
            <line num="611" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="619" count="0" type="method"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="624" count="0" type="method"/>
            <line num="626" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="629" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(Set&lt;E&gt;) : int" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/RubyString.java" name="RubyString.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="320" loc="2518" coveredmethods="0" methods="168" elements="1022" classes="1" ncloc="1036" statements="582" conditionals="272" coveredstatements="0"/>
            <class name="RubyString">
               <metrics coveredelements="0" coveredconditionals="0" complexity="320" coveredmethods="0" methods="168" elements="1022" statements="582" conditionals="272" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RubyString()" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RubyString(Object)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="stringify(Object) : String" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="inPlace(RubyString) : RubyString" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asciiOnlyʔ() : boolean" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : RubyString" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes() : RubyArray&lt;Byte&gt;" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytesize() : int" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="byteslice(int) : RubyString" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="byteslice(int,int) : RubyString" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="capitalize() : RubyString" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="capitalizeǃ() : RubyString" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="casecmp(CharSequence) : int" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="center(int) : RubyString" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="center(int,String) : RubyString" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="chomp() : RubyString" num="273" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chompǃ() : RubyString" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="chomp(String) : RubyString" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chompǃ(String) : RubyString" num="315" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="chop() : RubyString" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="chopǃ() : RubyString" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="chr() : RubyString" num="349" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : RubyString" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="codepoints() : RubyArray&lt;Integer&gt;" num="371" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(int) : RubyString" num="383" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(Object) : RubyString" num="395" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="count(String,String) : int" num="413" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="415" type="cond"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isCharSetMatched(String,String) : boolean" num="427" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="charSet2Str(String) : String" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="crypt(String) : RubyString" num="460" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="delete(String) : RubyString" num="480" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deleteǃ(String) : RubyString" num="497" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="downcase() : RubyString" num="507" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="downcaseǃ() : RubyString" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="dump() : RubyString" num="527" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="531" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="533" type="cond"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="537" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachByte() : RubyEnumerator&lt;Byte&gt;" num="556" count="0" type="method"/>
            <line num="557" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachByte(Consumer&lt;? super Byte&gt;) : RubyString" num="567" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachChar() : RubyEnumerator&lt;String&gt;" num="577" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachChar(Consumer&lt;? super String&gt;) : RubyString" num="589" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCodepoint() : RubyEnumerator&lt;Integer&gt;" num="599" count="0" type="method"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachCodepoint(Consumer&lt;? super Integer&gt;) : RubyString" num="611" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine() : RubyEnumerator&lt;String&gt;" num="621" count="0" type="method"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(Consumer&lt;? super String&gt;) : RubyString" num="633" count="0" type="method"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(String) : RubyEnumerator&lt;String&gt;" num="643" count="0" type="method"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eachLine(String,Consumer&lt;? super String&gt;) : RubyString" num="654" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyʔ() : boolean" num="664" count="0" type="method"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encode(String) : RubyString" num="675" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encode(String,String) : RubyString" num="690" count="0" type="method"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encodeǃ(String) : RubyString" num="704" count="0" type="method"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encodeǃ(String,String) : RubyString" num="718" count="0" type="method"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encoding() : Charset" num="728" count="0" type="method"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="endWithʔ(String,String) : boolean" num="739" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="740" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="742" type="cond"/>
            <line num="743" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="744" type="cond"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eqlʔ(Object) : boolean" num="758" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forceEncoding(String) : RubyString" num="769" count="0" type="method"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getbyte(int) : Byte" num="781" count="0" type="method"/>
            <line num="782" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsub(String,String) : RubyString" num="795" count="0" type="method"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="gsub(String,Map&lt;String, ?&gt;) : RubyString" num="811" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="812" type="cond"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="816" type="cond"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="819" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gsub(String,Function&lt;? super String, ? extends CharSequence&gt;) : RubyString" num="835" count="0" type="method"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line num="843" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gsub(String) : RubyEnumerator&lt;String&gt;" num="853" count="0" type="method"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="856" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsubǃ(String,String) : RubyString" num="873" count="0" type="method"/>
            <line num="874" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsubǃ(String,Function&lt;? super String, ? extends CharSequence&gt;) : RubyString" num="888" count="0" type="method"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gsubǃ(String) : RubyEnumerator&lt;String&gt;" num="900" count="0" type="method"/>
            <line num="901" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash() : int" num="909" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hex() : long" num="920" count="0" type="method"/>
            <line num="921" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="922" type="cond"/>
            <line num="923" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includeʔ(String) : boolean" num="934" count="0" type="method"/>
            <line num="935" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="index(String) : Integer" num="946" count="0" type="method"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="index(String,int) : Integer" num="961" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line num="963" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="963" type="cond"/>
            <line complexity="2" visibility="public" signature="index(Pattern) : Integer" num="974" count="0" type="method"/>
            <line num="975" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="975" type="cond"/>
            <line num="976" count="0" type="stmt"/>
            <line num="978" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="index(Pattern,int) : Integer" num="991" count="0" type="method"/>
            <line num="992" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="992" type="cond"/>
            <line num="993" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="995" type="cond"/>
            <line num="997" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="998" type="cond"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1001" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="insert(int,String) : RubyString" num="1016" count="0" type="method"/>
            <line num="1017" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1017" type="cond"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1021" count="0" type="stmt"/>
            <line num="1022" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="inspect() : RubyString" num="1031" count="0" type="method"/>
            <line num="1032" count="0" type="stmt"/>
            <line num="1033" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1033" type="cond"/>
            <line num="1034" count="0" type="stmt"/>
            <line num="1035" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1035" type="cond"/>
            <line num="1036" count="0" type="stmt"/>
            <line num="1037" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1037" type="cond"/>
            <line num="1038" count="0" type="stmt"/>
            <line num="1039" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1039" type="cond"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1041" type="cond"/>
            <line num="1042" count="0" type="stmt"/>
            <line num="1043" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1043" type="cond"/>
            <line num="1044" count="0" type="stmt"/>
            <line num="1045" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1045" type="cond"/>
            <line num="1046" count="0" type="stmt"/>
            <line num="1048" count="0" type="stmt"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1052" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lines() : RubyArray&lt;String&gt;" num="1061" count="0" type="method"/>
            <line num="1062" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lines(String) : RubyArray&lt;String&gt;" num="1071" count="0" type="method"/>
            <line num="1072" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ljust(int) : RubyString" num="1084" count="0" type="method"/>
            <line num="1085" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="ljust(int,String) : RubyString" num="1099" count="0" type="method"/>
            <line num="1100" count="0" type="stmt"/>
            <line num="1103" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1104" type="cond"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1106" type="cond"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line num="1110" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lstrip() : RubyString" num="1121" count="0" type="method"/>
            <line num="1122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lstripǃ() : RubyString" num="1130" count="0" type="method"/>
            <line num="1131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="match(String) : Matcher" num="1142" count="0" type="method"/>
            <line num="1143" count="0" type="stmt"/>
            <line num="1144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1144" type="cond"/>
            <line complexity="5" visibility="public" signature="match(String,int) : Matcher" num="1158" count="0" type="method"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1159" type="cond"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1160" type="cond"/>
            <line num="1162" count="0" type="stmt"/>
            <line num="1163" count="0" type="stmt"/>
            <line num="1164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1164" type="cond"/>
            <line complexity="1" visibility="public" signature="next() : RubyString" num="1172" count="0" type="method"/>
            <line num="1173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextǃ() : RubyString" num="1181" count="0" type="method"/>
            <line num="1182" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oct() : int" num="1193" count="0" type="method"/>
            <line num="1194" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ord() : int" num="1202" count="0" type="method"/>
            <line num="1203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1203" type="cond"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1206" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="partition(String) : RubyArray&lt;String&gt;" num="1216" count="0" type="method"/>
            <line num="1217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1217" type="cond"/>
            <line num="1218" count="0" type="stmt"/>
            <line num="1220" count="0" type="stmt"/>
            <line num="1221" count="0" type="stmt"/>
            <line num="1221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1221" type="cond"/>
            <line num="1223" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="partition(Pattern) : RubyArray&lt;String&gt;" num="1236" count="0" type="method"/>
            <line num="1237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1237" type="cond"/>
            <line num="1238" count="0" type="stmt"/>
            <line num="1240" count="0" type="stmt"/>
            <line num="1241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1241" type="cond"/>
            <line num="1242" count="0" type="stmt"/>
            <line num="1243" count="0" type="stmt"/>
            <line num="1244" count="0" type="stmt"/>
            <line num="1247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prepend(String) : RubyString" num="1258" count="0" type="method"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replace(String) : RubyString" num="1270" count="0" type="method"/>
            <line num="1271" count="0" type="stmt"/>
            <line num="1272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverse() : RubyString" num="1280" count="0" type="method"/>
            <line num="1281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reverseǃ() : RubyString" num="1289" count="0" type="method"/>
            <line num="1290" count="0" type="stmt"/>
            <line num="1291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rindex(String) : Integer" num="1302" count="0" type="method"/>
            <line num="1303" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="rindex(String,int) : Integer" num="1318" count="0" type="method"/>
            <line num="1319" count="0" type="stmt"/>
            <line num="1321" count="0" type="stmt"/>
            <line num="1321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1321" type="cond"/>
            <line num="1322" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1322" type="cond"/>
            <line num="1324" count="0" type="stmt"/>
            <line num="1325" count="0" type="stmt"/>
            <line num="1326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1326" type="cond"/>
            <line complexity="2" visibility="public" signature="rindex(Pattern) : Integer" num="1337" count="0" type="method"/>
            <line num="1338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1338" type="cond"/>
            <line num="1339" count="0" type="stmt"/>
            <line num="1341" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="rindex(Pattern,int) : Integer" num="1356" count="0" type="method"/>
            <line num="1357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1357" type="cond"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1360" count="0" type="stmt"/>
            <line num="1360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1360" type="cond"/>
            <line num="1361" count="0" type="stmt"/>
            <line num="1361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1361" type="cond"/>
            <line num="1363" count="0" type="stmt"/>
            <line num="1364" count="0" type="stmt"/>
            <line num="1365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1365" type="cond"/>
            <line num="1366" count="0" type="stmt"/>
            <line num="1367" count="0" type="stmt"/>
            <line num="1367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1367" type="cond"/>
            <line num="1369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1369" type="cond"/>
            <line complexity="1" visibility="public" signature="rjust(int) : RubyString" num="1381" count="0" type="method"/>
            <line num="1382" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="rjust(int,String) : RubyString" num="1396" count="0" type="method"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1400" count="0" type="stmt"/>
            <line num="1401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1401" type="cond"/>
            <line num="1402" count="0" type="stmt"/>
            <line num="1403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1403" type="cond"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1405" count="0" type="stmt"/>
            <line num="1407" count="0" type="stmt"/>
            <line num="1410" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="rpartition(String) : RubyArray&lt;String&gt;" num="1422" count="0" type="method"/>
            <line num="1423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1423" type="cond"/>
            <line num="1424" count="0" type="stmt"/>
            <line num="1426" count="0" type="stmt"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1427" type="cond"/>
            <line num="1429" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="rpartition(Pattern) : RubyArray&lt;String&gt;" num="1442" count="0" type="method"/>
            <line num="1443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1443" type="cond"/>
            <line num="1444" count="0" type="stmt"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1447" type="cond"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1449" count="0" type="stmt"/>
            <line num="1450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1450" type="cond"/>
            <line num="1451" count="0" type="stmt"/>
            <line num="1452" count="0" type="stmt"/>
            <line num="1454" count="0" type="stmt"/>
            <line num="1455" count="0" type="stmt"/>
            <line num="1459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rstrip() : RubyString" num="1469" count="0" type="method"/>
            <line num="1470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rstripǃ() : RubyString" num="1480" count="0" type="method"/>
            <line num="1481" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="scan(String) : RubyArray&lt;String&gt;" num="1492" count="0" type="method"/>
            <line num="1493" count="0" type="stmt"/>
            <line num="1494" count="0" type="stmt"/>
            <line num="1495" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1495" type="cond"/>
            <line num="1496" count="0" type="stmt"/>
            <line num="1498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scan(String,Consumer&lt;? super String&gt;) : RubyString" num="1511" count="0" type="method"/>
            <line num="1512" count="0" type="stmt"/>
            <line num="1513" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="scanGroups(String) : RubyArray&lt;RubyArray&lt;String&gt;&gt;" num="1527" count="0" type="method"/>
            <line num="1528" count="0" type="stmt"/>
            <line num="1529" count="0" type="stmt"/>
            <line num="1530" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1530" type="cond"/>
            <line num="1531" count="0" type="stmt"/>
            <line num="1532" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1532" type="cond"/>
            <line num="1533" count="0" type="stmt"/>
            <line num="1535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1535" type="cond"/>
            <line num="1536" count="0" type="stmt"/>
            <line num="1539" count="0" type="stmt"/>
            <line num="1541" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanGroups(String,Consumer&lt;? super RubyArray&lt;String&gt;&gt;) : RubyString" num="1557" count="0" type="method"/>
            <line num="1559" count="0" type="stmt"/>
            <line num="1560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrub() : RubyString" num="1568" count="0" type="method"/>
            <line num="1569" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="scrub(String) : RubyString" num="1578" count="0" type="method"/>
            <line num="1579" count="0" type="stmt"/>
            <line num="1579" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1579" type="cond"/>
            <line num="1581" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="scrub(Function&lt;? super RubyArray&lt;Byte&gt;, ? extends CharSequence&gt;) : RubyString" num="1590" count="0" type="method"/>
            <line num="1592" count="0" type="stmt"/>
            <line num="1593" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1593" type="cond"/>
            <line num="1594" count="0" type="stmt"/>
            <line num="1596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrubǃ() : RubyString" num="1605" count="0" type="method"/>
            <line num="1606" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrubǃ(String) : RubyString" num="1615" count="0" type="method"/>
            <line num="1616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrubǃ(Function&lt;? super RubyArray&lt;Byte&gt;, ? extends CharSequence&gt;) : RubyString" num="1625" count="0" type="method"/>
            <line num="1627" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setbyte(int,byte) : byte" num="1639" count="0" type="method"/>
            <line num="1640" count="0" type="stmt"/>
            <line num="1641" count="0" type="stmt"/>
            <line num="1641" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1641" type="cond"/>
            <line num="1642" count="0" type="stmt"/>
            <line num="1642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1642" type="cond"/>
            <line num="1645" count="0" type="stmt"/>
            <line num="1646" count="0" type="stmt"/>
            <line num="1647" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="1655" count="0" type="method"/>
            <line num="1656" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="slice(int) : RubyString" num="1666" count="0" type="method"/>
            <line num="1667" count="0" type="stmt"/>
            <line num="1668" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1668" type="cond"/>
            <line complexity="2" visibility="public" signature="slice(int,int) : RubyString" num="1680" count="0" type="method"/>
            <line num="1681" count="0" type="stmt"/>
            <line num="1682" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1682" type="cond"/>
            <line complexity="3" visibility="public" signature="slice(Pattern) : RubyString" num="1692" count="0" type="method"/>
            <line num="1693" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1693" type="cond"/>
            <line num="1694" count="0" type="stmt"/>
            <line num="1696" count="0" type="stmt"/>
            <line num="1697" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1697" type="cond"/>
            <line num="1698" count="0" type="stmt"/>
            <line num="1700" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="slice(Pattern,int) : RubyString" num="1712" count="0" type="method"/>
            <line num="1713" count="0" type="stmt"/>
            <line num="1714" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1714" type="cond"/>
            <line num="1715" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1715" type="cond"/>
            <line num="1716" count="0" type="stmt"/>
            <line num="1718" count="0" type="stmt"/>
            <line num="1720" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="slice(String) : RubyString" num="1730" count="0" type="method"/>
            <line num="1731" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1731" type="cond"/>
            <line complexity="2" visibility="public" signature="sliceǃ(int) : RubyString" num="1741" count="0" type="method"/>
            <line num="1742" count="0" type="stmt"/>
            <line num="1743" count="0" type="stmt"/>
            <line num="1744" count="0" type="stmt"/>
            <line num="1744" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1744" type="cond"/>
            <line num="1746" count="0" type="stmt"/>
            <line num="1747" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sliceǃ(int,int) : RubyString" num="1759" count="0" type="method"/>
            <line num="1760" count="0" type="stmt"/>
            <line num="1761" count="0" type="stmt"/>
            <line num="1762" count="0" type="stmt"/>
            <line num="1762" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1762" type="cond"/>
            <line num="1764" count="0" type="stmt"/>
            <line num="1765" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sliceǃ(Pattern) : RubyString" num="1775" count="0" type="method"/>
            <line num="1776" count="0" type="stmt"/>
            <line num="1777" count="0" type="stmt"/>
            <line num="1777" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1777" type="cond"/>
            <line num="1779" count="0" type="stmt"/>
            <line num="1780" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sliceǃ(Pattern,int) : RubyString" num="1792" count="0" type="method"/>
            <line num="1793" count="0" type="stmt"/>
            <line num="1794" count="0" type="stmt"/>
            <line num="1794" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1794" type="cond"/>
            <line num="1796" count="0" type="stmt"/>
            <line num="1797" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sliceǃ(String) : RubyString" num="1807" count="0" type="method"/>
            <line num="1808" count="0" type="stmt"/>
            <line num="1809" count="0" type="stmt"/>
            <line num="1809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1809" type="cond"/>
            <line num="1811" count="0" type="stmt"/>
            <line num="1812" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="split() : RubyArray&lt;String&gt;" num="1821" count="0" type="method"/>
            <line num="1822" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="split(String) : RubyArray&lt;String&gt;" num="1833" count="0" type="method"/>
            <line num="1834" count="0" type="stmt"/>
            <line num="1834" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1834" type="cond"/>
            <line num="1836" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="split(String,int) : RubyArray&lt;String&gt;" num="1850" count="0" type="method"/>
            <line num="1851" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1851" type="cond"/>
            <line num="1852" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1852" type="cond"/>
            <line num="1853" count="0" type="stmt"/>
            <line num="1854" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1854" type="cond"/>
            <line num="1855" count="0" type="stmt"/>
            <line num="1857" count="0" type="stmt"/>
            <line num="1861" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1861" type="cond"/>
            <line num="1862" count="0" type="stmt"/>
            <line num="1864" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="split(Pattern) : RubyArray&lt;String&gt;" num="1875" count="0" type="method"/>
            <line num="1876" count="0" type="stmt"/>
            <line num="1876" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1876" type="cond"/>
            <line num="1878" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="split(Pattern,int) : RubyArray&lt;String&gt;" num="1892" count="0" type="method"/>
            <line num="1893" count="0" type="stmt"/>
            <line num="1893" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1893" type="cond"/>
            <line num="1895" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1895" type="cond"/>
            <line num="1896" count="0" type="stmt"/>
            <line num="1898" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squeeze() : RubyString" num="1907" count="0" type="method"/>
            <line num="1908" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squeeze(String) : RubyString" num="1919" count="0" type="method"/>
            <line num="1920" count="0" type="stmt"/>
            <line num="1921" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squeezeǃ() : RubyString" num="1931" count="0" type="method"/>
            <line num="1932" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squeezeǃ(String) : RubyString" num="1943" count="0" type="method"/>
            <line num="1944" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="startWithʔ(String,String) : boolean" num="1956" count="0" type="method"/>
            <line num="1957" count="0" type="stmt"/>
            <line num="1957" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1957" type="cond"/>
            <line num="1959" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1959" type="cond"/>
            <line num="1960" count="0" type="stmt"/>
            <line num="1961" count="0" type="stmt"/>
            <line num="1961" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1961" type="cond"/>
            <line num="1965" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strip() : RubyString" num="1973" count="0" type="method"/>
            <line num="1974" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stripǃ() : RubyString" num="1983" count="0" type="method"/>
            <line num="1984" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(String,String) : RubyString" num="1997" count="0" type="method"/>
            <line num="1998" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="sub(String,Map&lt;String, ?&gt;) : RubyString" num="2013" count="0" type="method"/>
            <line num="2014" count="0" type="stmt"/>
            <line num="2015" count="0" type="stmt"/>
            <line num="2016" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2016" type="cond"/>
            <line num="2017" count="0" type="stmt"/>
            <line num="2018" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2018" type="cond"/>
            <line num="2019" count="0" type="stmt"/>
            <line num="2021" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(String,Function&lt;? super String, ? extends CharSequence&gt;) : RubyString" num="2034" count="0" type="method"/>
            <line num="2036" count="0" type="stmt"/>
            <line num="2037" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2037" type="cond"/>
            <line num="2038" count="0" type="stmt"/>
            <line num="2039" count="0" type="stmt"/>
            <line num="2041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subǃ(String,String) : RubyString" num="2055" count="0" type="method"/>
            <line num="2056" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subǃ(String,Function&lt;? super String, ? extends CharSequence&gt;) : RubyString" num="2070" count="0" type="method"/>
            <line num="2072" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succ() : RubyString" num="2085" count="0" type="method"/>
            <line num="2086" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succǃ() : RubyString" num="2094" count="0" type="method"/>
            <line num="2095" count="0" type="stmt"/>
            <line num="2096" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum() : int" num="2106" count="0" type="method"/>
            <line num="2107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum(int) : int" num="2120" count="0" type="method"/>
            <line num="2121" count="0" type="stmt"/>
            <line num="2122" count="0" type="stmt"/>
            <line num="2123" count="0" type="stmt"/>
            <line num="2125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="swapcase() : RubyString" num="2135" count="0" type="method"/>
            <line num="2136" count="0" type="stmt"/>
            <line num="2137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2138" type="cond"/>
            <line complexity="1" visibility="public" signature="swapcaseǃ() : RubyString" num="2149" count="0" type="method"/>
            <line num="2150" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toF() : double" num="2161" count="0" type="method"/>
            <line num="2162" count="0" type="stmt"/>
            <line num="2165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2165" type="cond"/>
            <line num="2166" count="0" type="stmt"/>
            <line num="2168" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toI() : int" num="2179" count="0" type="method"/>
            <line num="2180" count="0" type="stmt"/>
            <line num="2181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2181" type="cond"/>
            <line num="2182" count="0" type="stmt"/>
            <line num="2185" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="toI(int) : int" num="2198" count="0" type="method"/>
            <line num="2199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2199" type="cond"/>
            <line num="2200" count="0" type="stmt"/>
            <line num="2203" count="0" type="stmt"/>
            <line num="2204" count="0" type="stmt"/>
            <line num="2207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2207" type="cond"/>
            <line num="2208" count="0" type="stmt"/>
            <line num="2209" count="0" type="stmt"/>
            <line num="2212" count="0" type="stmt"/>
            <line num="2215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toS() : String" num="2223" count="0" type="method"/>
            <line num="2224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toStr() : String" num="2232" count="0" type="method"/>
            <line num="2233" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="tr(String,String) : RubyString" num="2247" count="0" type="method"/>
            <line num="2248" count="0" type="stmt"/>
            <line num="2249" count="0" type="stmt"/>
            <line num="2250" count="0" type="stmt"/>
            <line num="2250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2250" type="cond"/>
            <line falsecount="0" truecount="0" num="2252" type="cond"/>
            <line num="2254" count="0" type="stmt"/>
            <line num="2256" count="0" type="stmt"/>
            <line num="2257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2257" type="cond"/>
            <line num="2258" count="0" type="stmt"/>
            <line num="2259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2259" type="cond"/>
            <line num="2260" count="0" type="stmt"/>
            <line num="2263" count="0" type="stmt"/>
            <line num="2265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2265" type="cond"/>
            <line num="2266" count="0" type="stmt"/>
            <line num="2267" count="0" type="stmt"/>
            <line num="2269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2269" type="cond"/>
            <line num="2270" count="0" type="stmt"/>
            <line num="2271" count="0" type="stmt"/>
            <line num="2273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trǃ(String,String) : RubyString" num="2288" count="0" type="method"/>
            <line num="2289" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="trS(String,String) : RubyString" num="2303" count="0" type="method"/>
            <line num="2304" count="0" type="stmt"/>
            <line num="2305" count="0" type="stmt"/>
            <line num="2307" count="0" type="stmt"/>
            <line num="2310" count="0" type="stmt"/>
            <line num="2311" count="0" type="stmt"/>
            <line num="2312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2312" type="cond"/>
            <line num="2313" count="0" type="stmt"/>
            <line num="2315" count="0" type="stmt"/>
            <line num="2316" count="0" type="stmt"/>
            <line num="2320" count="0" type="stmt"/>
            <line num="2320" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2320" type="cond"/>
            <line num="2322" count="0" type="stmt"/>
            <line num="2323" count="0" type="stmt"/>
            <line num="2324" count="0" type="stmt"/>
            <line num="2325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2325" type="cond"/>
            <line num="2326" count="0" type="stmt"/>
            <line num="2327" count="0" type="stmt"/>
            <line num="2329" count="0" type="stmt"/>
            <line num="2330" count="0" type="stmt"/>
            <line num="2333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trSǃ(String,String) : RubyString" num="2346" count="0" type="method"/>
            <line num="2347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unpack(String) : RubyArray&lt;Object&gt;" num="2363" count="0" type="method"/>
            <line num="2364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upcase() : RubyString" num="2374" count="0" type="method"/>
            <line num="2375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upcaseǃ() : RubyString" num="2383" count="0" type="method"/>
            <line num="2384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(String) : RubyEnumerator&lt;String&gt;" num="2396" count="0" type="method"/>
            <line num="2397" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="upto(String,boolean) : RubyEnumerator&lt;String&gt;" num="2413" count="0" type="method"/>
            <line num="2414" count="0" type="stmt"/>
            <line num="2415" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2415" type="cond"/>
            <line num="2416" count="0" type="stmt"/>
            <line num="2418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(String,Consumer&lt;? super String&gt;) : RubyString" num="2431" count="0" type="method"/>
            <line num="2432" count="0" type="stmt"/>
            <line num="2433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upto(String,boolean,Consumer&lt;? super String&gt;) : RubyString" num="2449" count="0" type="method"/>
            <line num="2451" count="0" type="stmt"/>
            <line num="2452" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="validEncodingʔ(String) : boolean" num="2462" count="0" type="method"/>
            <line num="2463" count="0" type="stmt"/>
            <line num="2464" count="0" type="stmt"/>
            <line num="2465" count="0" type="stmt"/>
            <line num="2466" count="0" type="stmt"/>
            <line num="2467" count="0" type="stmt"/>
            <line num="2469" count="0" type="stmt"/>
            <line num="2471" count="0" type="stmt"/>
            <line num="2472" count="0" type="stmt"/>
            <line num="2473" count="0" type="stmt"/>
            <line num="2475" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="2479" count="0" type="method"/>
            <line num="2481" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2481" type="cond"/>
            <line num="2482" count="0" type="stmt"/>
            <line num="2483" count="0" type="stmt"/>
            <line num="2485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="2488" count="0" type="method"/>
            <line num="2490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="2493" count="0" type="method"/>
            <line num="2495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="2498" count="0" type="method"/>
            <line num="2500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="2503" count="0" type="method"/>
            <line num="2505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="2508" count="0" type="method"/>
            <line num="2510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(CharSequence) : int" num="2513" count="0" type="method"/>
            <line num="2515" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyArrayTest.java" name="RubyArrayTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="160" loc="1369" coveredmethods="0" methods="159" elements="792" classes="1" ncloc="1187" statements="633" conditionals="0" coveredstatements="0"/>
            <class name="RubyArrayTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="160" coveredmethods="0" methods="159" elements="792" statements="633" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaces() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodOf() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodOfException() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodCopyOf() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodCopyOfException() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssoc() : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAt() : void" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBsearch() : void" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBsearchWithComparator() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBsearchWithBlock() : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectǃ() : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCombination() : void" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCombinationWithBlock() : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompact() : void" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompactǃ() : void" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcat() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteWithBlock() : void" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeteleAt() : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteIf() : void" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteIfWithBlock() : void" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="274" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachIndex() : void" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachIndexWithBlock() : void" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="300" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqlʔ() : void" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetch() : void" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFetchException() : void" num="323" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetchWithDefaultValue() : void" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetchWithBlock() : void" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFill() : void" num="353" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillWithStart() : void" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillWithStartAndLength() : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillWithBlock() : void" num="392" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillWithBlockAndStart() : void" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillWithBlockAndStartAndLength() : void" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatten() : void" num="432" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlattenWitnN() : void" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFreeze() : void" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFrozenʔ() : void" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFrozenException() : void" num="469" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHash() : void" num="476" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithBlock() : void" num="481" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndex() : void" num="487" count="0" type="method"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsert() : void" num="493" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertException() : void" num="507" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInspect() : void" num="514" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersection() : void" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJoin() : void" num="526" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJoinWithSeparator() : void" num="533" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeepIf() : void" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeepIfWithBlock() : void" num="548" count="0" type="method"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLast() : void" num="554" count="0" type="method"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLastWithN() : void" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLastWithNException() : void" num="569" count="0" type="method"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLength() : void" num="576" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapǃ() : void" num="582" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinus() : void" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiply() : void" num="593" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiplyException() : void" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiplyWithString() : void" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPack() : void" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPermutaion() : void" num="618" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPermutaionWithN() : void" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPermutaionWithNAndBlock() : void" num="640" count="0" type="method"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPermutaionWithBlock() : void" num="648" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPlus() : void" num="657" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPop() : void" num="662" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPopWithN() : void" num="669" count="0" type="method"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPopException() : void" num="679" count="0" type="method"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProduct() : void" num="686" count="0" type="method"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductWithBlock() : void" num="700" count="0" type="method"/>
            <line num="702" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPush() : void" num="708" count="0" type="method"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPushWithVarargs() : void" num="717" count="0" type="method"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRassoc() : void" num="726" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectǃ() : void" num="740" count="0" type="method"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectǃWithBlock() : void" num="746" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedCombination() : void" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedCombinationWithBlock() : void" num="767" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedPermutaion() : void" num="775" count="0" type="method"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedPermutaionWithBlock() : void" num="790" count="0" type="method"/>
            <line num="792" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplace() : void" num="798" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverse() : void" num="804" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseǃ() : void" num="810" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRindex() : void" num="816" count="0" type="method"/>
            <line num="818" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRindexWithBlock() : void" num="822" count="0" type="method"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRindexWithTarget() : void" num="830" count="0" type="method"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRotate() : void" num="837" count="0" type="method"/>
            <line num="839" count="0" type="stmt"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRotateWithN() : void" num="844" count="0" type="method"/>
            <line num="846" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRotateǃ() : void" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRotateǃWithN() : void" num="862" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSample() : void" num="881" count="0" type="method"/>
            <line num="883" count="0" type="stmt"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSampleWithN() : void" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSampleException() : void" num="901" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelectǃ() : void" num="908" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelectǃWithBlock() : void" num="914" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="918" count="0" type="stmt"/>
            <line num="919" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShift() : void" num="922" count="0" type="method"/>
            <line num="924" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftWithN() : void" num="930" count="0" type="method"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line num="935" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftException() : void" num="938" count="0" type="method"/>
            <line num="940" count="0" type="stmt"/>
            <line num="941" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShuffle() : void" num="945" count="0" type="method"/>
            <line num="947" count="0" type="stmt"/>
            <line num="948" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShuffleǃ() : void" num="952" count="0" type="method"/>
            <line num="954" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line num="956" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSlice() : void" num="959" count="0" type="method"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithLength() : void" num="967" count="0" type="method"/>
            <line num="969" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line num="972" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃ() : void" num="975" count="0" type="method"/>
            <line num="977" count="0" type="stmt"/>
            <line num="978" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃWithLength() : void" num="986" count="0" type="method"/>
            <line num="988" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line num="991" count="0" type="stmt"/>
            <line num="992" count="0" type="stmt"/>
            <line num="993" count="0" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortǃ() : void" num="997" count="0" type="method"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1000" count="0" type="stmt"/>
            <line num="1001" count="0" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line num="1004" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortǃWithComparator() : void" num="1007" count="0" type="method"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1013" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByǃ() : void" num="1016" count="0" type="method"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByǃWithComparatorAndBlock() : void" num="1022" count="0" type="method"/>
            <line num="1024" count="0" type="stmt"/>
            <line num="1025" count="0" type="stmt"/>
            <line num="1027" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByǃWith2ComparatorAndBlock() : void" num="1030" count="0" type="method"/>
            <line num="1032" count="0" type="stmt"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1035" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByǃWithBlock() : void" num="1038" count="0" type="method"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line num="1043" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubtract() : void" num="1046" count="0" type="method"/>
            <line num="1048" count="0" type="stmt"/>
            <line num="1049" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSum() : void" num="1052" count="0" type="method"/>
            <line num="1054" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumException() : void" num="1057" count="0" type="method"/>
            <line num="1059" count="0" type="stmt"/>
            <line num="1060" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToS() : void" num="1064" count="0" type="method"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranspose() : void" num="1070" count="0" type="method"/>
            <line num="1072" count="0" type="stmt"/>
            <line num="1073" count="0" type="stmt"/>
            <line num="1074" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransposeException1() : void" num="1077" count="0" type="method"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1080" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransposeException2() : void" num="1084" count="0" type="method"/>
            <line num="1086" count="0" type="stmt"/>
            <line num="1087" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnion() : void" num="1091" count="0" type="method"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1094" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUniq() : void" num="1097" count="0" type="method"/>
            <line num="1099" count="0" type="stmt"/>
            <line num="1100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUniqWithBlock() : void" num="1103" count="0" type="method"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUniqǃ() : void" num="1109" count="0" type="method"/>
            <line num="1111" count="0" type="stmt"/>
            <line num="1112" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line num="1114" count="0" type="stmt"/>
            <line num="1115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUniqǃWithBlock() : void" num="1118" count="0" type="method"/>
            <line num="1120" count="0" type="stmt"/>
            <line num="1121" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnshift() : void" num="1127" count="0" type="method"/>
            <line num="1129" count="0" type="stmt"/>
            <line num="1130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValuesAt() : void" num="1133" count="0" type="method"/>
            <line num="1135" count="0" type="stmt"/>
            <line num="1136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="1140" count="0" type="method"/>
            <line num="1142" count="0" type="stmt"/>
            <line num="1143" count="0" type="stmt"/>
            <line num="1144" count="0" type="stmt"/>
            <line num="1145" count="0" type="stmt"/>
            <line num="1146" count="0" type="stmt"/>
            <line num="1147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="1150" count="0" type="method"/>
            <line num="1152" count="0" type="stmt"/>
            <line num="1153" count="0" type="stmt"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1156" count="0" type="stmt"/>
            <line num="1157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="1160" count="0" type="method"/>
            <line num="1162" count="0" type="stmt"/>
            <line num="1163" count="0" type="stmt"/>
            <line num="1164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="1167" count="0" type="method"/>
            <line num="1169" count="0" type="stmt"/>
            <line num="1170" count="0" type="stmt"/>
            <line num="1171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArray() : void" num="1174" count="0" type="method"/>
            <line num="1176" count="0" type="stmt"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArrayWithArgument() : void" num="1181" count="0" type="method"/>
            <line num="1183" count="0" type="stmt"/>
            <line num="1184" count="0" type="stmt"/>
            <line num="1185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="1188" count="0" type="method"/>
            <line num="1190" count="0" type="stmt"/>
            <line num="1191" count="0" type="stmt"/>
            <line num="1192" count="0" type="stmt"/>
            <line num="1193" count="0" type="stmt"/>
            <line num="1194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="1197" count="0" type="method"/>
            <line num="1199" count="0" type="stmt"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="1206" count="0" type="method"/>
            <line num="1208" count="0" type="stmt"/>
            <line num="1209" count="0" type="stmt"/>
            <line num="1210" count="0" type="stmt"/>
            <line num="1211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddAll() : void" num="1214" count="0" type="method"/>
            <line num="1216" count="0" type="stmt"/>
            <line num="1217" count="0" type="stmt"/>
            <line num="1218" count="0" type="stmt"/>
            <line num="1219" count="0" type="stmt"/>
            <line num="1220" count="0" type="stmt"/>
            <line num="1221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddAllWithIndex() : void" num="1224" count="0" type="method"/>
            <line num="1226" count="0" type="stmt"/>
            <line num="1227" count="0" type="stmt"/>
            <line num="1228" count="0" type="stmt"/>
            <line num="1229" count="0" type="stmt"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAll() : void" num="1234" count="0" type="method"/>
            <line num="1236" count="0" type="stmt"/>
            <line num="1237" count="0" type="stmt"/>
            <line num="1238" count="0" type="stmt"/>
            <line num="1239" count="0" type="stmt"/>
            <line num="1240" count="0" type="stmt"/>
            <line num="1241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainAll() : void" num="1244" count="0" type="method"/>
            <line num="1246" count="0" type="stmt"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1248" count="0" type="stmt"/>
            <line num="1249" count="0" type="stmt"/>
            <line num="1250" count="0" type="stmt"/>
            <line num="1251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="1254" count="0" type="method"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1257" count="0" type="stmt"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGet() : void" num="1263" count="0" type="method"/>
            <line num="1265" count="0" type="stmt"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSet() : void" num="1270" count="0" type="method"/>
            <line num="1272" count="0" type="stmt"/>
            <line num="1273" count="0" type="stmt"/>
            <line num="1274" count="0" type="stmt"/>
            <line num="1275" count="0" type="stmt"/>
            <line num="1276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddWithIndex() : void" num="1279" count="0" type="method"/>
            <line num="1281" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1283" count="0" type="stmt"/>
            <line num="1284" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveWithIndex() : void" num="1288" count="0" type="method"/>
            <line num="1290" count="0" type="stmt"/>
            <line num="1291" count="0" type="stmt"/>
            <line num="1292" count="0" type="stmt"/>
            <line num="1293" count="0" type="stmt"/>
            <line num="1294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexOf() : void" num="1297" count="0" type="method"/>
            <line num="1299" count="0" type="stmt"/>
            <line num="1300" count="0" type="stmt"/>
            <line num="1301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLastIndexOf() : void" num="1304" count="0" type="method"/>
            <line num="1306" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line num="1308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListIterator() : void" num="1311" count="0" type="method"/>
            <line num="1313" count="0" type="stmt"/>
            <line num="1314" count="0" type="stmt"/>
            <line num="1315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testListIteratorWithIndex() : void" num="1318" count="0" type="method"/>
            <line num="1320" count="0" type="stmt"/>
            <line num="1321" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubList() : void" num="1325" count="0" type="method"/>
            <line num="1327" count="0" type="stmt"/>
            <line num="1328" count="0" type="stmt"/>
            <line num="1329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="1332" count="0" type="method"/>
            <line num="1334" count="0" type="stmt"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="1340" count="0" type="method"/>
            <line num="1342" count="0" type="stmt"/>
            <line num="1343" count="0" type="stmt"/>
            <line num="1344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="1347" count="0" type="method"/>
            <line num="1349" count="0" type="stmt"/>
            <line num="1350" count="0" type="stmt"/>
            <line num="1351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="1354" count="0" type="method"/>
            <line num="1356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareToException() : void" num="1362" count="0" type="method"/>
            <line num="1364" count="0" type="stmt"/>
            <line num="1365" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyBaseTest.java" name="RubyBaseTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="37" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="14" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RubyBaseTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyCollectionsTest.java" name="RubyCollectionsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="282" coveredmethods="0" methods="26" elements="116" classes="1" ncloc="232" statements="90" conditionals="0" coveredstatements="0"/>
            <class name="RubyCollectionsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="26" elements="116" statements="90" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewRubyArray() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewRubyHash() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewRubySet() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewRubyLazyEnumerator() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewRubyEnumerator() : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRs() : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRa() : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRaWithIterable() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRaWithIterator() : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRaWithList() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRaWithRubyArray() : void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRh() : void" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRhWithMap() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRhWith1To26Pairs() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHp() : void" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHash() : void" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashException1() : void" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashException2() : void" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringRange() : void" num="243" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharacterRange() : void" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerRange() : void" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongRange() : void" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleRange() : void" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateRange() : void" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalDateTimeRange() : void" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyContractTest.java" name="RubyContractTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="37" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="14" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RubyContractTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyDateTest.java" name="RubyDateTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="72" loc="525" coveredmethods="0" methods="65" elements="266" classes="1" ncloc="436" statements="201" conditionals="0" coveredstatements="0"/>
            <class name="RubyDateTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="72" coveredmethods="0" methods="65" elements="266" statements="201" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithDate() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChange() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testYear() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMonth() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDay() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWday() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMday() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testYday() : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWeek() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHour() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinute() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSecond() : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMillisecond() : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftYear() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftMonth() : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftWeek() : void" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftDay() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftHour() : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftMinute() : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftSecond() : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShiftMillisecond() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllWeek() : void" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllMonth() : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllQuarter() : void" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllYear() : void" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpto() : void" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithBlock() : void" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDownto() : void" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDowntoWithBlock() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStepWithBlock() : void" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStepWithNum() : void" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStepWithNumAndBlock() : void" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextDay() : void" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextWeek() : void" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextMonth() : void" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextQuarter() : void" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextYear() : void" num="300" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrevDay() : void" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrevWeek() : void" num="310" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrevMonth() : void" num="315" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrevQuarter() : void" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrevYear() : void" num="325" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="testDayʔCheck() : void" num="330" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCurrent() : void" num="373" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToday() : void" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTomorrow() : void" num="388" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testYesterday() : void" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginningOfDay() : void" num="408" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndOfDay() : void" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginningOfWeek() : void" num="418" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndOfWeek() : void" num="429" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginningOfMonth() : void" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndOfMonth() : void" num="452" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginningOfQuarter() : void" num="465" count="0" type="method"/>
            <line num="467" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndOfQuarter() : void" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeginningOfYear() : void" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndOfYear() : void" num="495" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFutureʔ() : void" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPastʔ() : void" num="507" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTodayʔ() : void" num="513" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToDate() : void" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyDirTest.java" name="RubyDirTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="266" coveredmethods="0" methods="22" elements="126" classes="1" ncloc="221" statements="98" conditionals="6" coveredstatements="0"/>
            <class name="RubyDirTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="22" elements="126" statements="98" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testOpen() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenException1() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenException2() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntries() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExistʔ() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeach() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGlob() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHome() : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMkdir() : void" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPwd() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPath() : void" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPos() : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRead() : void" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRewind() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSeek() : void" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTell() : void" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="normalizePath(String) : String" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyEnumerableTest.java" name="RubyEnumerableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="131" loc="988" coveredmethods="0" methods="128" elements="494" classes="1" ncloc="832" statements="360" conditionals="6" coveredstatements="0"/>
            <class name="RubyEnumerableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="131" coveredmethods="0" methods="128" elements="494" statements="360" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Integer&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInstantiation() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterface() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔ() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔWithBlock() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔ() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔWithBlock() : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunk() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunkWhile() : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollect() : void" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectWithBlock() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectConcat() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectConcatWithBlock() : void" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithBlock() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycle() : void" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycleWithN() : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCycleWithNAndBlock() : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycleWithBlock() : void" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line complexity="1" visibility="public" signature="testDetect() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDetectWithBlock() : void" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDrop() : void" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropException() : void" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropWhile() : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropWhileWithBlock() : void" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCons() : void" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsException() : void" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsWithBlock() : void" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsWithBlockException() : void" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachEntry() : void" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachEntryWithBlock() : void" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSlice() : void" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceException() : void" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceWithBlock() : void" num="325" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceWithBlockException() : void" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithIndex() : void" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithIndexWithBlock() : void" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithObject() : void" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithObjectWithBlock() : void" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntries() : void" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFind() : void" num="376" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindWithBlock() : void" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindAll() : void" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindAllWithBlock() : void" num="396" count="0" type="method"/>
            <line num="398" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndex() : void" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndexWithBlock() : void" num="407" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndexWithTarget() : void" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirst() : void" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirstWithN() : void" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirstWithNException() : void" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatMap() : void" num="444" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatMapWithBlock() : void" num="450" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrep() : void" num="456" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepWithBlock() : void" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepV() : void" num="466" count="0" type="method"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepVWithBlock() : void" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGroupBy() : void" num="476" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGroupByWithBlock() : void" num="482" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeʔ() : void" num="488" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithInit() : void" num="494" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithBlock() : void" num="500" count="0" type="method"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithInitAndBlock() : void" num="508" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLazy() : void" num="514" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMap() : void" num="519" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithBlock() : void" num="525" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMax() : void" num="530" count="0" type="method"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxWithComparator() : void" num="538" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxBy() : void" num="546" count="0" type="method"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithComparatorAndBlock() : void" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithBlock() : void" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMemberʔ() : void" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMin() : void" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinWithComparator() : void" num="585" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinBy() : void" num="593" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithComparatorAndBlock() : void" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithBlock() : void" num="609" count="0" type="method"/>
            <line num="611" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmax() : void" num="618" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxWithComparator() : void" num="628" count="0" type="method"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxBy() : void" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithComparatorAndBlock() : void" num="645" count="0" type="method"/>
            <line num="647" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithBlock() : void" num="658" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔ() : void" num="667" count="0" type="method"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔWithBlock() : void" num="683" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔ() : void" num="689" count="0" type="method"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="702" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔWithBlock() : void" num="705" count="0" type="method"/>
            <line num="707" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartition() : void" num="713" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithBlock() : void" num="720" count="0" type="method"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithInit() : void" num="725" count="0" type="method"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithBlock() : void" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithInitAndBlock() : void" num="736" count="0" type="method"/>
            <line num="738" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduce() : void" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReject() : void" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectWithBlock() : void" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEach() : void" num="760" count="0" type="method"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEachWithBlock() : void" num="767" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelect() : void" num="775" count="0" type="method"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelectWithBlock() : void" num="781" count="0" type="method"/>
            <line num="783" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfterWithBlock() : void" num="786" count="0" type="method"/>
            <line num="788" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfterWithRegex() : void" num="793" count="0" type="method"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBeforeWithBlock() : void" num="799" count="0" type="method"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBeforeWithRegex() : void" num="806" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWhen() : void" num="812" count="0" type="method"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSort() : void" num="819" count="0" type="method"/>
            <line num="821" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="828" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortBy() : void" num="831" count="0" type="method"/>
            <line num="833" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithComparatorAndBlock() : void" num="837" count="0" type="method"/>
            <line num="839" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWith2ComparatorsAndBlock() : void" num="845" count="0" type="method"/>
            <line num="847" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithBlock() : void" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSum() : void" num="862" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumException() : void" num="868" count="0" type="method"/>
            <line num="870" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithBlock() : void" num="875" count="0" type="method"/>
            <line num="877" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithInit() : void" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithInitAndBlock() : void" num="888" count="0" type="method"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTake() : void" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeException() : void" num="902" count="0" type="method"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeWhile() : void" num="909" count="0" type="method"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Integer&gt;" num="914" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeWhileWithBlock() : void" num="923" count="0" type="method"/>
            <line num="925" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToA() : void" num="931" count="0" type="method"/>
            <line num="933" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToList() : void" num="936" count="0" type="method"/>
            <line num="938" count="0" type="stmt"/>
            <line num="939" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToH() : void" num="942" count="0" type="method"/>
            <line num="944" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;List&lt;Integer&gt;&gt;" num="946" count="0" type="method"/>
            <line num="948" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Integer&gt;" num="957" count="0" type="method"/>
            <line num="959" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZip() : void" num="965" count="0" type="method"/>
            <line num="967" count="0" type="stmt"/>
            <line num="968" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZipWithBlock() : void" num="973" count="0" type="method"/>
            <line num="975" count="0" type="stmt"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line num="980" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="983" count="0" type="method"/>
            <line num="985" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyEnumeratorTest.java" name="RubyEnumeratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="156" coveredmethods="0" methods="16" elements="69" classes="1" ncloc="117" statements="45" conditionals="8" coveredstatements="0"/>
            <class name="RubyEnumeratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="16" elements="69" statements="45" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOf() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOfException() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyOf() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyOfException() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRewind() : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeek() : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterator() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHasNext() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testNext() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyFileTest.java" name="RubyFileTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="293" coveredmethods="0" methods="25" elements="148" classes="1" ncloc="241" statements="105" conditionals="18" coveredstatements="0"/>
            <class name="RubyFileTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="25" elements="148" statements="105" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testOpenException() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAbsolutePath() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasename() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testChmod() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirectoryʔ() : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirname() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testExecutableʔ() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExistʔ() : void" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testExpandPath() : void" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExtname() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFileʔ() : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJoin() : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReadableʔ() : void" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize1() : void" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSizeException() : void" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSizeʔ() : void" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWritableʔ() : void" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZeroʔ() : void" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMdate() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPath() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize2() : void" num="259" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testToPath() : void" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testToString() : void" num="279" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyHashTest.java" name="RubyHashTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="116" loc="937" coveredmethods="0" methods="115" elements="468" classes="1" ncloc="797" statements="351" conditionals="2" coveredstatements="0"/>
            <class name="RubyHashTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="116" coveredmethods="0" methods="115" elements="468" statements="351" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaces() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodOf() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodOfException() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodCopyOf() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFactoryMethodCopyOfException() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException1() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException2() : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssoc() : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompact() : void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompactǃ() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareByIdentity() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareByIdentityʔ() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteIf() : void" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteIfWithBlock() : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachKey() : void" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachKeyWithBlock() : void" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachPair() : void" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachPairWithBlock() : void" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachValue() : void" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachValueWithBlock() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqlʔ() : void" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetch() : void" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetchException() : void" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetchWithDefaultValue() : void" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetchValues() : void" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFetchValuesException() : void" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatten() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFreeze() : void" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFrozenʔ() : void" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFrozenException() : void" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHash() : void" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInspect() : void" num="329" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvert() : void" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeepIf() : void" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeepIfWithBlock() : void" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKey() : void" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeys() : void" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeyʔ() : void" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLength() : void" num="373" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMerge() : void" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeWithBlock() : void" num="384" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeǃ() : void" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeǃWithBlock() : void" num="396" count="0" type="method"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPut() : void" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRassoc() : void" num="410" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectǃ() : void" num="419" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectǃWithBlock() : void" num="425" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplace() : void" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShift() : void" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStore() : void" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToH() : void" num="456" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToHash() : void" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToMap() : void" num="468" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToS() : void" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformValues() : void" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTransformValuesǃ() : void" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpdate() : void" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpdateWithBlock() : void" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValues() : void" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValuesAt() : void" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValueʔ() : void" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔ() : void" num="531" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔ() : void" num="539" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunk() : void" num="547" count="0" type="method"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollect() : void" num="555" count="0" type="method"/>
            <line num="557" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectConcat() : void" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="569" count="0" type="method"/>
            <line num="571" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycle() : void" num="575" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="582" type="cond"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCycleWithN() : void" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDetect() : void" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropWhile() : void" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachEntry() : void" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFind() : void" num="619" count="0" type="method"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindAll() : void" num="625" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndex() : void" num="631" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatMap() : void" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrep() : void" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGroupBy() : void" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMap() : void" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithComparator() : void" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxBy() : void" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithComparator() : void" num="682" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinBy() : void" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithComparator() : void" num="698" count="0" type="method"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxBy() : void" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔ() : void" num="714" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔ() : void" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartition() : void" num="728" count="0" type="method"/>
            <line num="730" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReject() : void" num="734" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEach() : void" num="740" count="0" type="method"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelect() : void" num="748" count="0" type="method"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBefore() : void" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithComparator() : void" num="761" count="0" type="method"/>
            <line num="763" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByBy() : void" num="770" count="0" type="method"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeWhile() : void" num="777" count="0" type="method"/>
            <line num="779" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="783" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="795" count="0" type="method"/>
            <line num="797" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsKey() : void" num="807" count="0" type="method"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsValue() : void" num="817" count="0" type="method"/>
            <line num="819" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGet() : void" num="827" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="836" count="0" type="method"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="843" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutAll() : void" num="847" count="0" type="method"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="861" count="0" type="method"/>
            <line num="863" count="0" type="stmt"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeySet() : void" num="872" count="0" type="method"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntrySet() : void" num="881" count="0" type="method"/>
            <line num="883" count="0" type="stmt"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="902" count="0" type="method"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line num="908" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="911" count="0" type="method"/>
            <line num="913" count="0" type="stmt"/>
            <line num="914" count="0" type="stmt"/>
            <line num="915" count="0" type="stmt"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparableEntry() : void" num="920" count="0" type="method"/>
            <line num="922" count="0" type="stmt"/>
            <line num="923" count="0" type="stmt"/>
            <line num="924" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line num="929" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyIOTest.java" name="RubyIOTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="326" coveredmethods="0" methods="31" elements="172" classes="1" ncloc="271" statements="139" conditionals="2" coveredstatements="0"/>
            <class name="RubyIOTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="31" elements="172" statements="139" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpen() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenException() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenModeWithInvalidString() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenWithMode() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenWithModeException() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadOnlyMode() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadOnlyModeException1() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadOnlyModeException2() : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWriteMode() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteOnlyMode() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteOnlyModeException() : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteReadMode() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAppendOnlyMode() : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAppendOnlyModeException() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAppendReadMode() : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeach() : void" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachKeepNewLine() : void" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachWithFile() : void" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachWithFileKeepNewLine() : void" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachWithInputStream() : void" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachWithInputStreamKeepNewLine() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachWithBlock() : void" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachWithBlockKeepNewLine() : void" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeachException() : void" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLine() : void" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineKeepNewLine() : void" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineException() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineKeepNewLineException() : void" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testToString() : void" num="310" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyKernelTest.java" name="RubyKernelTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="258" coveredmethods="0" methods="32" elements="104" classes="1" ncloc="205" statements="72" conditionals="0" coveredstatements="0"/>
            <class name="RubyKernelTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="32" elements="104" statements="72" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpStreams() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cleanUpStreams() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testP() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPObject() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPObjectWithVarargs() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPString() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPStringWithVarargs() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPBoolean() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPBooleanWithVarargs() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPChar() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPCharWithVarargs() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPCharArray() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPCharArrayWithVarargs() : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPDouble() : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPDoubleWithVarargs() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPFloat() : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPFloatWithVarargs() : void" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPInt() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPIntWithVarargs() : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPLong() : void" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPLongWithVarargs() : void" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPByteArray() : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPShortArray() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPIntArray() : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPLongArray() : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPFloatArray() : void" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPDoubleArray() : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPBooleanArray() : void" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPMapWithIterableKeysAndIteratorValues() : void" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPObjectArray() : void" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 244()" num="244" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 249()" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyLazyEnumeratorTest.java" name="RubyLazyEnumeratorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="137" loc="1049" coveredmethods="0" methods="132" elements="547" classes="1" ncloc="892" statements="405" conditionals="10" coveredstatements="0"/>
            <class name="RubyLazyEnumeratorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="137" coveredmethods="0" methods="132" elements="547" statements="405" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOf() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOfException() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyOf() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyOfException() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorException() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔ() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllʔWithBlock() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔ() : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyʔWithBlock() : void" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunk() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunkWhile() : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollect() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectWithBlock() : void" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectConcat() : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectConcatWithBlock() : void" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithBlock() : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycle() : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycleWithN() : void" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCycleWithNAndBlock() : void" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCycleWithBlock() : void" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line complexity="1" visibility="public" signature="testDetect() : void" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDetectWithBlock() : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDrop() : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropException() : void" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropWhile() : void" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDropWhileWithBlock() : void" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCons() : void" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachConsWithBlock() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachEntry() : void" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachEntryWithBlock() : void" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSlice() : void" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceException() : void" num="323" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceWithBlock() : void" num="330" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachSliceWithBlockException() : void" num="337" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithIndex() : void" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithIndexWithBlock() : void" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithObject() : void" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithObjectWithBlock() : void" num="368" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntries() : void" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFind() : void" num="380" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindWithBlock() : void" num="386" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindAll() : void" num="394" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindAllWithBlock() : void" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndex() : void" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndexWithBlock() : void" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindIndexWithTarget() : void" num="419" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirst() : void" num="427" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirstWithN() : void" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFirstWithNException() : void" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatMap() : void" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatMapWithBlock() : void" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrep() : void" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepWithBlock() : void" num="468" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepV() : void" num="475" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGrepVWithBlock() : void" num="481" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGroupBy() : void" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGroupByWithBlock() : void" num="495" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeʔ() : void" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithInit() : void" num="507" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithBlock() : void" num="513" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInjectWithInitAndBlock() : void" num="521" count="0" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLazy() : void" num="527" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMap() : void" num="532" count="0" type="method"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapWithBlock() : void" num="538" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMax() : void" num="544" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxWithComparator() : void" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxBy() : void" num="560" count="0" type="method"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithComparatorAndBlock() : void" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxByWithBlock() : void" num="576" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMemberʔ() : void" num="585" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMin() : void" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinWithComparator() : void" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinBy() : void" num="607" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithComparatorAndBlock() : void" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinByWithBlock() : void" num="623" count="0" type="method"/>
            <line num="625" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmax() : void" num="632" count="0" type="method"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxWithComparator() : void" num="642" count="0" type="method"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxBy() : void" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithComparatorAndBlock() : void" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinmaxByWithBlock() : void" num="672" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔ() : void" num="681" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoneʔWithBlock() : void" num="697" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔ() : void" num="703" count="0" type="method"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneʔWithBlock() : void" num="719" count="0" type="method"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartition() : void" num="727" count="0" type="method"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithBlock() : void" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithInit() : void" num="738" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithBlock() : void" num="744" count="0" type="method"/>
            <line num="746" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduceWithInitAndBlock() : void" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReduce() : void" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReject() : void" num="762" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectWithBlock() : void" num="768" count="0" type="method"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEach() : void" num="774" count="0" type="method"/>
            <line num="776" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseEachWithBlock() : void" num="781" count="0" type="method"/>
            <line num="783" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelect() : void" num="789" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelectWithBlock() : void" num="795" count="0" type="method"/>
            <line num="797" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfter() : void" num="802" count="0" type="method"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfterWithBlock() : void" num="809" count="0" type="method"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceAfterWithRegex() : void" num="816" count="0" type="method"/>
            <line num="818" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBefore() : void" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBeforeWithBlock() : void" num="830" count="0" type="method"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceBeforeWithRegex() : void" num="837" count="0" type="method"/>
            <line num="839" count="0" type="stmt"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWhen() : void" num="844" count="0" type="method"/>
            <line num="846" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSort() : void" num="852" count="0" type="method"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="861" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortBy() : void" num="864" count="0" type="method"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithComparatorAndBlock() : void" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWith2ComparatorsAndBlock() : void" num="878" count="0" type="method"/>
            <line num="880" count="0" type="stmt"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSortByWithBlock() : void" num="887" count="0" type="method"/>
            <line num="889" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSum() : void" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumException() : void" num="900" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithBlock() : void" num="907" count="0" type="method"/>
            <line num="909" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithInit() : void" num="914" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line num="918" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSumWithInitAndBlock() : void" num="921" count="0" type="method"/>
            <line num="923" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTake() : void" num="928" count="0" type="method"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeException() : void" num="936" count="0" type="method"/>
            <line num="938" count="0" type="stmt"/>
            <line num="939" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeWhile() : void" num="943" count="0" type="method"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line num="948" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTakeWhileWithBlock() : void" num="951" count="0" type="method"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line num="956" count="0" type="stmt"/>
            <line num="957" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToA() : void" num="960" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToH() : void" num="965" count="0" type="method"/>
            <line num="967" count="0" type="stmt"/>
            <line num="968" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 972()" num="972" count="0" type="method"/>
            <line num="973" count="0" type="stmt"/>
            <line num="974" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 981()" num="981" count="0" type="method"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="988" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZip() : void" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZipWithBlock() : void" num="1002" count="0" type="method"/>
            <line num="1004" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1006" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRewind() : void" num="1012" count="0" type="method"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1016" type="cond"/>
            <line num="1017" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line num="1020" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeek() : void" num="1023" count="0" type="method"/>
            <line num="1025" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1025" type="cond"/>
            <line num="1026" count="0" type="stmt"/>
            <line num="1027" count="0" type="stmt"/>
            <line num="1029" count="0" type="stmt"/>
            <line num="1030" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="1033" count="0" type="method"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1036" count="0" type="stmt"/>
            <line num="1037" count="0" type="stmt"/>
            <line num="1038" count="0" type="stmt"/>
            <line num="1039" count="0" type="stmt"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="1044" count="0" type="method"/>
            <line num="1046" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyLiteralsTest.java" name="RubyLiteralsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="66" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="40" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="RubyLiteralsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testQr() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQw() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testQx() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQxException() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyObjectTest.java" name="RubyObjectTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="50" loc="362" coveredmethods="0" methods="42" elements="165" classes="2" ncloc="291" statements="123" conditionals="0" coveredstatements="0"/>
            <class name="RubyObjectTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="18" elements="125" statements="107" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RubyObjectTest.SendTester">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="24" elements="40" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSend() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendException1() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendException2() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendException3() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="testIsConvertable() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectByte() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectShort() : void" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectInteger() : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectLong() : void" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectFloat() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectDouble() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectBoolean() : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSendWithPrimitiveAndObjectCharacter() : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="byteMethod(byte) : String" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ByteMethod(Byte) : String" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shortMethod(short) : String" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortMethod(Short) : String" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="intMethod(int) : String" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerMethod(Integer) : String" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longMethod(long) : String" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongMethod(Long) : String" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatMethod(float) : String" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatMethod(Float) : String" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMethod(double) : String" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleMethod(Double) : String" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanMethod(boolean) : String" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BooleanMethod(Boolean) : String" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charMethod(char) : String" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharacterMethod(Character) : String" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBytes(byte,Byte) : void" num="270" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setShorts(short,Short) : void" num="273" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setIntegers(int,Integer) : void" num="276" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setLongs(long,Long) : void" num="279" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setFloats(float,Float) : void" num="282" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setDoubles(double,Double) : void" num="285" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setBooleans(boolean,Boolean) : void" num="288" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setCharacters(char,Character) : void" num="291" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testIsBlank() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 311()" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsPresent() : void" num="329" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 344()" num="344" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyRangeTest.java" name="RubyRangeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="319" coveredmethods="0" methods="33" elements="134" classes="1" ncloc="263" statements="101" conditionals="0" coveredstatements="0"/>
            <class name="RubyRangeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="33" elements="134" statements="101" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInterfaces() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNullSuccessive() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNullInterval() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNullStartPoint() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructorWithNullEndPoint() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRangeWithString() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRangeWithInteger() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRangeWithLong() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRangeWithDouble() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRangeWithDate() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBegin() : void" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCoverʔ() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachWithBlock() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnd() : void" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqlʔ() : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHash() : void" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeʔ() : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInspect() : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLast() : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLastWithN() : void" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMemeberʔ() : void" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStep() : void" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStepWithBlock() : void" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStepException1() : void" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStepException2() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToS() : void" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedOpen() : void" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpen() : void" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOpenClosed() : void" num="286" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClosedClosedOpenOpenOpenclosed() : void" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubySetTest.java" name="RubySetTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="57" loc="416" coveredmethods="0" methods="57" elements="182" classes="1" ncloc="336" statements="125" conditionals="0" coveredstatements="0"/>
            <class name="RubySetTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="57" elements="182" statements="125" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaces() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOf() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOfException() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyOf() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyOfException() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor1() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor2() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddʔ() : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassify() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCollectǃ() : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteʔ() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteIf() : void" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDifference() : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDisjointʔ() : void" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDivide() : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEach() : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExclusive() : void" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatten() : void" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFreeze() : void" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFrozenʔ() : void" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInspect() : void" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectʔ() : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersection() : void" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeepIf() : void" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLength() : void" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMapǃ() : void" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMerge() : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProperSubsetʔ() : void" num="247" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProperSupersetʔ() : void" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRejectǃ() : void" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplace() : void" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSelectǃ() : void" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubsetʔ() : void" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubtract() : void" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSupersetʔ() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnion() : void" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddAll() : void" num="315" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsAll() : void" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsEmpty() : void" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemove() : void" num="346" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAll() : void" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRetainAll() : void" num="358" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArray() : void" num="369" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToArrayWithArgument() : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToSet() : void" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="390" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="397" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareTo() : void" num="410" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyStringTest.java" name="RubyStringTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="234" loc="1722" coveredmethods="0" methods="231" elements="863" classes="1" ncloc="1460" statements="628" conditionals="4" coveredstatements="0"/>
            <class name="RubyStringTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="234" coveredmethods="0" methods="231" elements="863" statements="628" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterfaces() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructor() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstructException() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAsciiOnlyʔ() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testB() : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBytes() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBytesize() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteslice() : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCapitalize() : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCapitalizeǃ() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCasecmp() : void" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCenter() : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCenterException() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCenterWithPadstr() : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChomp() : void" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChompǃ() : void" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChompWithSeparator() : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChompǃWithSeparator() : void" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChop() : void" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChopǃ() : void" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChr() : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClear() : void" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCodepoints() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcat() : void" num="243" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcatWithObject() : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountException1() : void" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountException2() : void" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCrypt() : void" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCryptException() : void" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDelete() : void" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteException() : void" num="312" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeleteǃ() : void" num="319" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDowncase() : void" num="326" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDowncaseǃ() : void" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDump() : void" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachBytes() : void" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachBytesWithBlock() : void" num="353" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachChars() : void" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCharsWithBlock() : void" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCodepoint() : void" num="372" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachCodepointWithBlock() : void" num="377" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLine() : void" num="384" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithBlock() : void" num="389" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparator() : void" num="397" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparatorException() : void" num="402" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparatorAndBlock() : void" num="409" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEachLineWithSeparatorAndBlockException() : void" num="417" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyʔ() : void" num="424" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncode() : void" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeException() : void" num="436" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeWithDestinationAndSourceEncoding() : void" num="443" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeǃ() : void" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeǃWithDestinationAndSourceEncoding() : void" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeExceptionWithNullDestinationEncoding() : void" num="460" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncodeExceptionWithNullSourceEncoding() : void" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncoding() : void" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndWithʔ() : void" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndWithʔException() : void" num="487" count="0" type="method"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqlʔ() : void" num="494" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForceEncoding() : void" num="500" count="0" type="method"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetbyte() : void" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsub() : void" num="515" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubException1() : void" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubException2() : void" num="527" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithMap() : void" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithMapException() : void" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithBlock() : void" num="549" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithBlockException() : void" num="554" count="0" type="method"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithoutReplacement() : void" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubWithoutReplacementException() : void" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubǃ() : void" num="573" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubǃWithBlock() : void" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGsubǃWithoutReplacement() : void" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHash() : void" num="594" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHex() : void" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeʔ() : void" num="607" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIncludeʔtException() : void" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndex() : void" num="620" count="0" type="method"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexException() : void" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithOffset() : void" num="633" count="0" type="method"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithOffsetException() : void" num="639" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPattern() : void" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPatternException() : void" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPatternAndOffset() : void" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIndexWithPatternAndOffsetException() : void" num="667" count="0" type="method"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsert() : void" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertIndexException1() : void" num="684" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertIndexException2() : void" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInsertException() : void" num="698" count="0" type="method"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInspect() : void" num="705" count="0" type="method"/>
            <line num="707" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLines() : void" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinesWithSeparator() : void" num="716" count="0" type="method"/>
            <line num="718" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLinesWithSeparatorException() : void" num="721" count="0" type="method"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjust() : void" num="728" count="0" type="method"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjustWithPadstr() : void" num="734" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLjustWithPadstrException() : void" num="739" count="0" type="method"/>
            <line num="741" count="0" type="stmt"/>
            <line num="742" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLstrip() : void" num="746" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLstripǃ() : void" num="751" count="0" type="method"/>
            <line num="753" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMatch() : void" num="759" count="0" type="method"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="764" type="cond"/>
            <line num="765" count="0" type="stmt"/>
            <line num="767" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMatchException() : void" num="770" count="0" type="method"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMatchWithPosition() : void" num="777" count="0" type="method"/>
            <line num="779" count="0" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="783" type="cond"/>
            <line num="784" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMatchWithPositionException() : void" num="791" count="0" type="method"/>
            <line num="793" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNext() : void" num="798" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextǃ() : void" num="803" count="0" type="method"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOct() : void" num="810" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOrd() : void" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOrdException() : void" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartition() : void" num="830" count="0" type="method"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionException() : void" num="836" count="0" type="method"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithPattern() : void" num="843" count="0" type="method"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionWithPatternException() : void" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrepend() : void" num="856" count="0" type="method"/>
            <line num="858" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrependException() : void" num="862" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplace() : void" num="869" count="0" type="method"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplaceException() : void" num="875" count="0" type="method"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverse() : void" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReverseǃ() : void" num="887" count="0" type="method"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindex() : void" num="894" count="0" type="method"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexException() : void" num="901" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithEnd() : void" num="908" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line num="913" count="0" type="stmt"/>
            <line num="914" count="0" type="stmt"/>
            <line num="915" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithEndException() : void" num="918" count="0" type="method"/>
            <line num="920" count="0" type="stmt"/>
            <line num="921" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPattern() : void" num="925" count="0" type="method"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line num="929" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPatternException() : void" num="932" count="0" type="method"/>
            <line num="934" count="0" type="stmt"/>
            <line num="935" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPatternAndStopAt() : void" num="939" count="0" type="method"/>
            <line num="941" count="0" type="stmt"/>
            <line num="942" count="0" type="stmt"/>
            <line num="943" count="0" type="stmt"/>
            <line num="944" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLindexWithPatternAndStopAtException() : void" num="949" count="0" type="method"/>
            <line num="951" count="0" type="stmt"/>
            <line num="952" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRjust() : void" num="956" count="0" type="method"/>
            <line num="958" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRjustWithPadstr() : void" num="962" count="0" type="method"/>
            <line num="964" count="0" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartition() : void" num="968" count="0" type="method"/>
            <line num="970" count="0" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartitionException() : void" num="974" count="0" type="method"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartitionWithPattern() : void" num="981" count="0" type="method"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRpartitionWithPatternException() : void" num="987" count="0" type="method"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRstrip() : void" num="994" count="0" type="method"/>
            <line num="996" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRstripǃ() : void" num="1000" count="0" type="method"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line num="1004" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScan() : void" num="1008" count="0" type="method"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanException() : void" num="1014" count="0" type="method"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1017" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanWithBlock() : void" num="1021" count="0" type="method"/>
            <line num="1023" count="0" type="stmt"/>
            <line num="1024" count="0" type="stmt"/>
            <line num="1025" count="0" type="stmt"/>
            <line num="1026" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanWithBlockException() : void" num="1029" count="0" type="method"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1032" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroups() : void" num="1036" count="0" type="method"/>
            <line num="1038" count="0" type="stmt"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1042" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroupsException() : void" num="1046" count="0" type="method"/>
            <line num="1048" count="0" type="stmt"/>
            <line num="1049" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroupsWithBlock() : void" num="1053" count="0" type="method"/>
            <line num="1055" count="0" type="stmt"/>
            <line num="1056" count="0" type="stmt"/>
            <line num="1057" count="0" type="stmt"/>
            <line num="1058" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScanGroupsWithBlockException() : void" num="1061" count="0" type="method"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrub() : void" num="1068" count="0" type="method"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubWithReplacement() : void" num="1074" count="0" type="method"/>
            <line num="1076" count="0" type="stmt"/>
            <line num="1077" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubWithBlock() : void" num="1081" count="0" type="method"/>
            <line num="1083" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line num="1085" count="0" type="stmt"/>
            <line num="1086" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubǃ() : void" num="1090" count="0" type="method"/>
            <line num="1092" count="0" type="stmt"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1094" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubǃWithReplacement() : void" num="1098" count="0" type="method"/>
            <line num="1100" count="0" type="stmt"/>
            <line num="1101" count="0" type="stmt"/>
            <line num="1102" count="0" type="stmt"/>
            <line num="1103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScrubǃWithBlock() : void" num="1106" count="0" type="method"/>
            <line num="1108" count="0" type="stmt"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1110" count="0" type="stmt"/>
            <line num="1111" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line num="1114" count="0" type="stmt"/>
            <line num="1115" count="0" type="stmt"/>
            <line num="1116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetbyte() : void" num="1119" count="0" type="method"/>
            <line num="1121" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetbyteException1() : void" num="1127" count="0" type="method"/>
            <line num="1129" count="0" type="stmt"/>
            <line num="1130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetbyteException2() : void" num="1134" count="0" type="method"/>
            <line num="1136" count="0" type="stmt"/>
            <line num="1137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSize() : void" num="1141" count="0" type="method"/>
            <line num="1143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSlice() : void" num="1146" count="0" type="method"/>
            <line num="1148" count="0" type="stmt"/>
            <line num="1149" count="0" type="stmt"/>
            <line num="1150" count="0" type="stmt"/>
            <line num="1151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithLength() : void" num="1154" count="0" type="method"/>
            <line num="1156" count="0" type="stmt"/>
            <line num="1157" count="0" type="stmt"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithPattern() : void" num="1162" count="0" type="method"/>
            <line num="1164" count="0" type="stmt"/>
            <line num="1165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithPatternException() : void" num="1168" count="0" type="method"/>
            <line num="1170" count="0" type="stmt"/>
            <line num="1171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithPatternAndGroupNumber() : void" num="1175" count="0" type="method"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1178" count="0" type="stmt"/>
            <line num="1179" count="0" type="stmt"/>
            <line num="1180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceWithMatchStr() : void" num="1183" count="0" type="method"/>
            <line num="1185" count="0" type="stmt"/>
            <line num="1186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃ() : void" num="1189" count="0" type="method"/>
            <line num="1191" count="0" type="stmt"/>
            <line num="1192" count="0" type="stmt"/>
            <line num="1193" count="0" type="stmt"/>
            <line num="1194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃWithLength() : void" num="1197" count="0" type="method"/>
            <line num="1199" count="0" type="stmt"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line num="1202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃWithPattern() : void" num="1205" count="0" type="method"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1208" count="0" type="stmt"/>
            <line num="1209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃWithPatternException() : void" num="1212" count="0" type="method"/>
            <line num="1214" count="0" type="stmt"/>
            <line num="1215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃWithPatternAndGroupNumber() : void" num="1219" count="0" type="method"/>
            <line num="1221" count="0" type="stmt"/>
            <line num="1222" count="0" type="stmt"/>
            <line num="1223" count="0" type="stmt"/>
            <line num="1224" count="0" type="stmt"/>
            <line num="1225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSliceǃWithMatchStr() : void" num="1228" count="0" type="method"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1231" count="0" type="stmt"/>
            <line num="1232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplit() : void" num="1235" count="0" type="method"/>
            <line num="1237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithDelimiter() : void" num="1240" count="0" type="method"/>
            <line num="1242" count="0" type="stmt"/>
            <line num="1243" count="0" type="stmt"/>
            <line num="1245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithDelimiterAndLimit() : void" num="1249" count="0" type="method"/>
            <line num="1251" count="0" type="stmt"/>
            <line num="1252" count="0" type="stmt"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1257" count="0" type="stmt"/>
            <line num="1258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithPatternAndDelimiter() : void" num="1262" count="0" type="method"/>
            <line num="1264" count="0" type="stmt"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitWithPatternAndDelimiterAndLimit() : void" num="1272" count="0" type="method"/>
            <line num="1274" count="0" type="stmt"/>
            <line num="1276" count="0" type="stmt"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1280" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1284" count="0" type="stmt"/>
            <line num="1286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueeze() : void" num="1290" count="0" type="method"/>
            <line num="1292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueezeWithCharSet() : void" num="1295" count="0" type="method"/>
            <line num="1297" count="0" type="stmt"/>
            <line num="1298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueezeWithCharSetException() : void" num="1302" count="0" type="method"/>
            <line num="1304" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueezeǃ() : void" num="1309" count="0" type="method"/>
            <line num="1311" count="0" type="stmt"/>
            <line num="1312" count="0" type="stmt"/>
            <line num="1313" count="0" type="stmt"/>
            <line num="1314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqueezeǃWithCharSetException() : void" num="1317" count="0" type="method"/>
            <line num="1319" count="0" type="stmt"/>
            <line num="1320" count="0" type="stmt"/>
            <line num="1321" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartWithʔ() : void" num="1325" count="0" type="method"/>
            <line num="1327" count="0" type="stmt"/>
            <line num="1328" count="0" type="stmt"/>
            <line num="1329" count="0" type="stmt"/>
            <line num="1330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartWithʔException() : void" num="1333" count="0" type="method"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStrip() : void" num="1340" count="0" type="method"/>
            <line num="1342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStripǃ() : void" num="1345" count="0" type="method"/>
            <line num="1347" count="0" type="stmt"/>
            <line num="1348" count="0" type="stmt"/>
            <line num="1349" count="0" type="stmt"/>
            <line num="1350" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSub() : void" num="1353" count="0" type="method"/>
            <line num="1355" count="0" type="stmt"/>
            <line num="1356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubException1() : void" num="1359" count="0" type="method"/>
            <line num="1361" count="0" type="stmt"/>
            <line num="1362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubException2() : void" num="1366" count="0" type="method"/>
            <line num="1368" count="0" type="stmt"/>
            <line num="1369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithMap() : void" num="1373" count="0" type="method"/>
            <line num="1375" count="0" type="stmt"/>
            <line num="1376" count="0" type="stmt"/>
            <line num="1377" count="0" type="stmt"/>
            <line num="1378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithMapException() : void" num="1382" count="0" type="method"/>
            <line num="1384" count="0" type="stmt"/>
            <line num="1385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithBlock() : void" num="1389" count="0" type="method"/>
            <line num="1391" count="0" type="stmt"/>
            <line num="1392" count="0" type="stmt"/>
            <line num="1393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubWithBlockException() : void" num="1396" count="0" type="method"/>
            <line num="1398" count="0" type="stmt"/>
            <line num="1399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubǃ() : void" num="1403" count="0" type="method"/>
            <line num="1405" count="0" type="stmt"/>
            <line num="1406" count="0" type="stmt"/>
            <line num="1407" count="0" type="stmt"/>
            <line num="1408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubǃException1() : void" num="1411" count="0" type="method"/>
            <line num="1413" count="0" type="stmt"/>
            <line num="1414" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubǃException2() : void" num="1418" count="0" type="method"/>
            <line num="1420" count="0" type="stmt"/>
            <line num="1421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubǃWithBlock() : void" num="1425" count="0" type="method"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1428" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line num="1430" count="0" type="stmt"/>
            <line num="1431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubǃWithBlockException() : void" num="1434" count="0" type="method"/>
            <line num="1436" count="0" type="stmt"/>
            <line num="1437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucc() : void" num="1441" count="0" type="method"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1444" count="0" type="stmt"/>
            <line num="1445" count="0" type="stmt"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1447" count="0" type="stmt"/>
            <line num="1448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuccǃ() : void" num="1451" count="0" type="method"/>
            <line num="1453" count="0" type="stmt"/>
            <line num="1454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSum() : void" num="1457" count="0" type="method"/>
            <line num="1459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapcase() : void" num="1462" count="0" type="method"/>
            <line num="1464" count="0" type="stmt"/>
            <line num="1465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapcaseǃ() : void" num="1468" count="0" type="method"/>
            <line num="1470" count="0" type="stmt"/>
            <line num="1471" count="0" type="stmt"/>
            <line num="1472" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line num="1474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToF() : void" num="1477" count="0" type="method"/>
            <line num="1479" count="0" type="stmt"/>
            <line num="1480" count="0" type="stmt"/>
            <line num="1481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToI() : void" num="1484" count="0" type="method"/>
            <line num="1486" count="0" type="stmt"/>
            <line num="1487" count="0" type="stmt"/>
            <line num="1488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadix() : void" num="1491" count="0" type="method"/>
            <line num="1493" count="0" type="stmt"/>
            <line num="1494" count="0" type="stmt"/>
            <line num="1495" count="0" type="stmt"/>
            <line num="1496" count="0" type="stmt"/>
            <line num="1497" count="0" type="stmt"/>
            <line num="1498" count="0" type="stmt"/>
            <line num="1499" count="0" type="stmt"/>
            <line num="1500" count="0" type="stmt"/>
            <line num="1502" count="0" type="stmt"/>
            <line num="1503" count="0" type="stmt"/>
            <line num="1504" count="0" type="stmt"/>
            <line num="1505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadixException1() : void" num="1509" count="0" type="method"/>
            <line num="1511" count="0" type="stmt"/>
            <line num="1512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadixException2() : void" num="1516" count="0" type="method"/>
            <line num="1518" count="0" type="stmt"/>
            <line num="1519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToIWithRadixException3() : void" num="1523" count="0" type="method"/>
            <line num="1525" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToS() : void" num="1529" count="0" type="method"/>
            <line num="1531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToStr() : void" num="1534" count="0" type="method"/>
            <line num="1536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTr() : void" num="1539" count="0" type="method"/>
            <line num="1541" count="0" type="stmt"/>
            <line num="1542" count="0" type="stmt"/>
            <line num="1543" count="0" type="stmt"/>
            <line num="1544" count="0" type="stmt"/>
            <line num="1545" count="0" type="stmt"/>
            <line num="1546" count="0" type="stmt"/>
            <line num="1547" count="0" type="stmt"/>
            <line num="1548" count="0" type="stmt"/>
            <line num="1549" count="0" type="stmt"/>
            <line num="1551" count="0" type="stmt"/>
            <line num="1552" count="0" type="stmt"/>
            <line num="1553" count="0" type="stmt"/>
            <line num="1554" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrException1() : void" num="1557" count="0" type="method"/>
            <line num="1559" count="0" type="stmt"/>
            <line num="1560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrException2() : void" num="1564" count="0" type="method"/>
            <line num="1566" count="0" type="stmt"/>
            <line num="1567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrǃ() : void" num="1571" count="0" type="method"/>
            <line num="1573" count="0" type="stmt"/>
            <line num="1574" count="0" type="stmt"/>
            <line num="1575" count="0" type="stmt"/>
            <line num="1576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrS() : void" num="1579" count="0" type="method"/>
            <line num="1581" count="0" type="stmt"/>
            <line num="1582" count="0" type="stmt"/>
            <line num="1583" count="0" type="stmt"/>
            <line num="1584" count="0" type="stmt"/>
            <line num="1585" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrSException1() : void" num="1588" count="0" type="method"/>
            <line num="1590" count="0" type="stmt"/>
            <line num="1591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrSException2() : void" num="1595" count="0" type="method"/>
            <line num="1597" count="0" type="stmt"/>
            <line num="1598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrSǃ() : void" num="1602" count="0" type="method"/>
            <line num="1604" count="0" type="stmt"/>
            <line num="1605" count="0" type="stmt"/>
            <line num="1606" count="0" type="stmt"/>
            <line num="1607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpack() : void" num="1610" count="0" type="method"/>
            <line num="1612" count="0" type="stmt"/>
            <line num="1613" count="0" type="stmt"/>
            <line num="1614" count="0" type="stmt"/>
            <line num="1615" count="0" type="stmt"/>
            <line num="1616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackException() : void" num="1619" count="0" type="method"/>
            <line num="1621" count="0" type="stmt"/>
            <line num="1622" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpcase() : void" num="1626" count="0" type="method"/>
            <line num="1628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpcaseǃ() : void" num="1631" count="0" type="method"/>
            <line num="1633" count="0" type="stmt"/>
            <line num="1634" count="0" type="stmt"/>
            <line num="1635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUpto() : void" num="1638" count="0" type="method"/>
            <line num="1640" count="0" type="stmt"/>
            <line num="1641" count="0" type="stmt"/>
            <line num="1642" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoException() : void" num="1645" count="0" type="method"/>
            <line num="1647" count="0" type="stmt"/>
            <line num="1648" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusive() : void" num="1652" count="0" type="method"/>
            <line num="1654" count="0" type="stmt"/>
            <line num="1655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusiveException() : void" num="1658" count="0" type="method"/>
            <line num="1660" count="0" type="stmt"/>
            <line num="1661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithBlock() : void" num="1665" count="0" type="method"/>
            <line num="1667" count="0" type="stmt"/>
            <line num="1668" count="0" type="stmt"/>
            <line num="1669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithBlockException() : void" num="1672" count="0" type="method"/>
            <line num="1674" count="0" type="stmt"/>
            <line num="1675" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusiveAndBlock() : void" num="1679" count="0" type="method"/>
            <line num="1681" count="0" type="stmt"/>
            <line num="1682" count="0" type="stmt"/>
            <line num="1683" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUptoWithExclusiveAndBlockException() : void" num="1686" count="0" type="method"/>
            <line num="1688" count="0" type="stmt"/>
            <line num="1689" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidEncodingʔ() : void" num="1693" count="0" type="method"/>
            <line num="1695" count="0" type="stmt"/>
            <line num="1696" count="0" type="stmt"/>
            <line num="1697" count="0" type="stmt"/>
            <line num="1698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValidEncodingʔException() : void" num="1701" count="0" type="method"/>
            <line num="1703" count="0" type="stmt"/>
            <line num="1704" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharSequence() : void" num="1708" count="0" type="method"/>
            <line num="1710" count="0" type="stmt"/>
            <line num="1711" count="0" type="stmt"/>
            <line num="1712" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparable() : void" num="1715" count="0" type="method"/>
            <line num="1717" count="0" type="stmt"/>
            <line num="1718" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyStringUnpackWithRubyArrayPackTest.java" name="RubyStringUnpackWithRubyArrayPackTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="184" coveredmethods="0" methods="16" elements="85" classes="1" ncloc="147" statements="69" conditionals="0" coveredstatements="0"/>
            <class name="RubyStringUnpackWithRubyArrayPackTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="16" elements="85" statements="69" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testDirective_c() : void" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_s() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_l() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_q() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_F_f() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_e() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_g() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_D_d() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_E() : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_G() : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_U() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_B() : void" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_b() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_H() : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_h() : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_H_c() : void" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/RubyTest.java" name="RubyTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="489" coveredmethods="0" methods="29" elements="261" classes="1" ncloc="420" statements="232" conditionals="0" coveredstatements="0"/>
            <class name="RubyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="29" elements="261" statements="232" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArray() : void" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHash() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashWith1To26Pairs() : void" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntry() : void" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSet() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnumerator() : void" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLazyEnumerator() : void" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testString() : void" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringRange() : void" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharacterRange() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerRange() : void" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongRange() : void" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleRange() : void" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateRange() : void" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalDateTimeRange() : void" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTemporalRange() : void" num="330" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate() : void" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDateWithInit() : void" num="356" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate1() : void" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate2() : void" num="377" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate3() : void" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate4() : void" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate5() : void" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate6() : void" num="429" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDate7() : void" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIO() : void" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFile() : void" num="469" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDir() : void" num="483" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.rubycollect4j.packer">
         <metrics coveredelements="0" complexity="247" loc="1405" methods="56" classes="6" statements="607" coveredconditionals="0" coveredmethods="0" elements="835" ncloc="947" files="6" conditionals="172" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/packer/Directive.java" name="Directive.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="119" loc="461" coveredmethods="0" methods="9" elements="304" classes="1" ncloc="266" statements="217" conditionals="78" coveredstatements="0"/>
            <class name="Directive">
               <metrics coveredelements="0" coveredconditionals="0" complexity="119" coveredmethods="0" methods="9" elements="304" statements="217" conditionals="78" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Directive(boolean)" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWidthAdjustable() : boolean" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pack(List&lt;Byte&gt;) : String" num="204" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="39" visibility="public" signature="pack(byte[]) : String" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="unpack(List&lt;Byte&gt;) : Object" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="23" visibility="public" signature="unpack(byte[]) : Object" num="319" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="43" visibility="public" signature="cast(Object) : Object" num="378" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="381" type="cond"/>
            <line num="382" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="404" type="cond"/>
            <line falsecount="0" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="420" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify(String) : boolean" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="toString() : String" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/packer/Packer.java" name="Packer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="167" coveredmethods="0" methods="5" elements="96" classes="1" ncloc="100" statements="57" conditionals="34" coveredstatements="0"/>
            <class name="Packer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="5" elements="96" statements="57" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Packer()" num="42" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="pack(String,Object) : String" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="21" visibility="public" signature="pack(String,List&lt;?&gt;) : String" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="parseDirective(String) : Directive" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="parseTemplate(String) : List&lt;String&gt;" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/sf/rubycollect4j/packer/Unpacker.java" name="Unpacker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="52" loc="215" coveredmethods="0" methods="2" elements="142" classes="1" ncloc="153" statements="98" conditionals="42" coveredstatements="0"/>
            <class name="Unpacker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="52" coveredmethods="0" methods="2" elements="142" statements="98" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Unpacker()" num="65" count="0" type="method"/>
            <line complexity="51" visibility="public" signature="unpack(String,String) : RubyArray&lt;Object&gt;" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/packer/DirectiveTest.java" name="DirectiveTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="261" coveredmethods="0" methods="9" elements="181" classes="1" ncloc="202" statements="154" conditionals="18" coveredstatements="0"/>
            <class name="DirectiveTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="9" elements="181" statements="154" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="int4407873() : byte[]" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVerify() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsWidthAdjustable() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPackWithList() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line complexity="9" visibility="public" signature="testPack() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWithList() : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpack() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCast() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/packer/PackerTest.java" name="PackerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="124" coveredmethods="0" methods="14" elements="44" classes="1" ncloc="88" statements="30" conditionals="0" coveredstatements="0"/>
            <class name="PackerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="44" statements="30" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWithInvalidDirective() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWithShortArguments1() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWithShortArguments2() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_c() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_A() : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_a() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_Z() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_sb() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_sl() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_B() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_b() : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_H() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPackWith_h() : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/sf/rubycollect4j/packer/UnpackerTest.java" name="UnpackerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="177" coveredmethods="0" methods="17" elements="68" classes="1" ncloc="138" statements="51" conditionals="0" coveredstatements="0"/>
            <class name="UnpackerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="17" elements="68" statements="51" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrivateConstructor() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWithInvalidDirective() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWithEmptyString() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_a() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_AZ() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_c() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_Z() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_U() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_s() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_l() : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_q() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_B() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_b() : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_H() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnpackWith_h() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_c_b() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDirective_c_h() : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="rubycollect4j 2.1.2-SNAPSHOT" timestamp="0">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>