<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594338109793" clover="4.4.1">
   <project name="clojure 1.10.2-master-SNAPSHOT" timestamp="1594338106690">
      <metrics coveredelements="20" complexity="14" loc="77" methods="14" classes="9" statements="15" packages="3" coveredconditionals="0" coveredmethods="10" elements="29" ncloc="57" files="5" conditionals="0" coveredstatements="10"/>
      <package name="compilation">
         <metrics coveredelements="6" complexity="7" loc="35" methods="7" classes="3" statements="8" coveredconditionals="0" coveredmethods="3" elements="15" ncloc="25" files="3" conditionals="0" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/test/java/compilation/ClassWithFailingStaticInitialiser.java" name="ClassWithFailingStaticInitialiser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="13" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="8" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ClassWithFailingStaticInitialiser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 4()" num="4" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/test/java/compilation/JDK8InterfaceMethods.java" name="JDK8InterfaceMethods.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="7" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="6" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JDK8InterfaceMethods">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="staticMethod0(long) : long" num="4" count="1" type="method"/>
            <line num="4" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticMethod1(String) : String" num="5" count="1" type="method"/>
            <line num="5" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticMethod2(boolean) : boolean" num="6" count="1" type="method"/>
            <line num="6" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/test/java/compilation/TestDispatch.java" name="TestDispatch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="15" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TestDispatch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="someMethod(int,int) : String" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="someMethod(int,long) : String" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="someMethod(long,long) : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
      </package>
      <package name="reflector">
         <metrics coveredelements="4" complexity="2" loc="20" methods="2" classes="4" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" ncloc="16" files="1" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/test/java/reflector/IBar.java" name="IBar.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="20" coveredmethods="2" methods="2" elements="4" classes="4" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="IBar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IBar.Factory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="Bar">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="SubBar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="get() : IBar" num="7" count="2" type="method"/>
            <line num="8" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="stuff() : String" num="14" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
         </file>
      </package>
      <package name="clojure.test">
         <metrics coveredelements="10" complexity="5" loc="22" methods="5" classes="2" statements="5" coveredconditionals="0" coveredmethods="5" elements="10" ncloc="16" files="1" conditionals="0" coveredstatements="5"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/test/java/clojure/test/ReflectorTryCatchFixture.java" name="ReflectorTryCatchFixture.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="22" coveredmethods="5" methods="5" elements="10" classes="2" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ReflectorTryCatchFixture">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="ReflectorTryCatchFixture.Cookies">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="fail(Long) : void" num="5" count="1" type="method"/>
            <line num="6" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fail(Double) : void" num="9" count="1" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failWithCause(Double) : void" num="13" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cookies(String,Throwable)" num="18" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cookies(String)" num="19" count="3" type="method"/>
            <line num="19" count="3" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="clojure 1.10.2-master-SNAPSHOT" timestamp="1594338106690">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>