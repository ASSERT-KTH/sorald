<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594218177741" clover="4.4.1">
   <project name="SonarJS 6.3.0-SNAPSHOT (Aggregated)" timestamp="1594218166185">
      <metrics coveredelements="12771" complexity="4807" loc="55700" methods="3360" classes="776" statements="8020" packages="34" coveredconditionals="2095" coveredmethods="3124" elements="13666" ncloc="32451" files="707" conditionals="2286" coveredstatements="7552"/>
      <package name="org.sonar.javascript.checks.verifier">
         <metrics coveredelements="504" complexity="172" loc="1454" methods="103" classes="15" statements="385" coveredconditionals="95" coveredmethods="88" elements="612" ncloc="917" files="13" conditionals="124" coveredstatements="321"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/BulkVerifier.java" name="BulkVerifier.java">
            <metrics coveredelements="29" coveredconditionals="1" complexity="8" loc="109" coveredmethods="4" methods="4" elements="35" classes="1" ncloc="73" statements="29" conditionals="2" coveredstatements="24"/>
            <class name="BulkVerifier">
               <metrics coveredelements="29" coveredconditionals="1" complexity="8" coveredmethods="4" methods="4" elements="35" statements="29" conditionals="2" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BulkVerifier(Class&lt;? extends JavaScriptCheck&gt;,IssueCollector)" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="scanDirectory(File) : void" num="60" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIssues(JavaScriptCheck,InputFile) : Iterator&lt;Issue&gt;" num="91" count="4" type="method"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="instantiateCheck(Class&lt;? extends JavaScriptCheck&gt;) : JavaScriptCheck" num="101" count="4" type="method"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/CheckMessage.java" name="CheckMessage.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="14" loc="107" coveredmethods="5" methods="13" elements="32" classes="1" ncloc="64" statements="17" conditionals="2" coveredstatements="9"/>
            <class name="CheckMessage">
               <metrics coveredelements="16" coveredconditionals="2" complexity="14" coveredmethods="5" methods="13" elements="32" statements="17" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="CheckMessage(Object,String,Object)" num="37" count="15" type="method"/>
            <line num="38" count="15" type="stmt"/>
            <line num="39" count="15" type="stmt"/>
            <line num="40" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLine(int) : void" num="44" count="13" type="method"/>
            <line num="45" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLine() : Integer" num="49" count="67" type="method"/>
            <line num="50" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCost(double) : void" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCost() : Double" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBypassExclusion(boolean) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBypassExclusion() : boolean" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCheck() : Object" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMessage() : String" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessageArguments() : Object[]" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getText() : String" num="83" count="2" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="formatDefaultMessage() : String" num="99" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="100" type="cond"/>
            <line num="101" count="3" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/CheckMessagesVerifier.java" name="CheckMessagesVerifier.java">
            <metrics coveredelements="43" coveredconditionals="6" complexity="16" loc="136" coveredmethods="9" methods="10" elements="58" classes="1" ncloc="79" statements="36" conditionals="12" coveredstatements="28"/>
            <class name="CheckMessagesVerifier">
               <metrics coveredelements="43" coveredconditionals="6" complexity="16" coveredmethods="9" methods="10" elements="58" statements="36" conditionals="12" coveredstatements="28"/>
            </class>
            <line num="54" count="17" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="15" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="13" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="CheckMessagesVerifier(Collection&lt;CheckMessage&gt;)" num="65" count="13" type="method"/>
            <line num="66" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify(Collection&lt;CheckMessage&gt;) : CheckMessagesVerifier" num="69" count="13" type="method"/>
            <line num="70" count="13" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : CheckMessagesVerifier" num="73" count="23" type="method"/>
            <line num="74" count="23" type="stmt"/>
            <line falsecount="22" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="22" type="stmt"/>
            <line num="78" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="noMore() : void" num="81" count="6" type="method"/>
            <line num="82" count="6" type="stmt"/>
            <line falsecount="5" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkStateOfCurrent() : void" num="88" count="34" type="method"/>
            <line num="89" count="34" type="stmt"/>
            <line falsecount="32" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="atLine(Integer) : CheckMessagesVerifier" num="94" count="22" type="method"/>
            <line num="95" count="22" type="stmt"/>
            <line num="96" count="21" type="stmt"/>
            <line falsecount="20" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="withMessage(String) : CheckMessagesVerifier" num="102" count="8" type="method"/>
            <line num="103" count="8" type="stmt"/>
            <line num="104" count="7" type="stmt"/>
            <line num="105" count="7" type="stmt"/>
            <line falsecount="6" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="withMessageThat(Matcher&lt;String&gt;) : CheckMessagesVerifier" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="withCost(Double) : CheckMessagesVerifier" num="124" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line falsecount="1" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertionError(Object,Object) : AssertionError" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/DifferentialIssueCollector.java" name="DifferentialIssueCollector.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="5" loc="52" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="27" statements="8" conditionals="4" coveredstatements="8"/>
            <class name="DifferentialIssueCollector">
               <metrics coveredelements="15" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="15" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="DifferentialIssueCollector(ExpectedIssues,Consumer&lt;String&gt;)" num="32" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="writeIssues(Iterator&lt;Issue&gt;,File) : void" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line falsecount="3" truecount="4" num="39" type="cond"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="writeSummary() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/ExpectedIssueCollector.java" name="ExpectedIssueCollector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="63" coveredmethods="0" methods="3" elements="17" classes="1" ncloc="37" statements="12" conditionals="2" coveredstatements="0"/>
            <class name="ExpectedIssueCollector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpectedIssueCollector(File)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="writeIssues(Iterator&lt;Issue&gt;,File) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="writeSummary() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/ExpectedIssues.java" name="ExpectedIssues.java">
            <metrics coveredelements="27" coveredconditionals="5" complexity="9" loc="70" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="45" statements="18" conditionals="6" coveredstatements="18"/>
            <class name="ExpectedIssues">
               <metrics coveredelements="27" coveredconditionals="5" complexity="9" coveredmethods="4" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="5" visibility="public" signature="parse(File) : ExpectedIssues" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="38" type="cond"/>
            <line num="39" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="42" type="cond"/>
            <line num="43" count="2" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="addExpectation(String) : void" num="53" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="expects(IssueEntry) : boolean" num="57" count="4" type="method"/>
            <line num="58" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="58" type="cond"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeMissingExpectations() : String" num="66" count="3" type="method"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/ExpectedIssuesParser.java" name="ExpectedIssuesParser.java">
            <metrics coveredelements="140" coveredconditionals="40" complexity="35" loc="224" coveredmethods="12" methods="12" elements="155" classes="1" ncloc="161" statements="97" conditionals="46" coveredstatements="88"/>
            <class name="ExpectedIssuesParser">
               <metrics coveredelements="140" coveredconditionals="40" complexity="35" coveredmethods="12" methods="12" elements="155" statements="97" conditionals="46" coveredstatements="88"/>
            </class>
            <line complexity="1" visibility="package" signature="parseExpectedIssues(JavaScriptVisitorContext) : List&lt;TestIssue&gt;" num="40" count="130" type="method"/>
            <line num="41" count="130" type="stmt"/>
            <line num="42" count="130" type="stmt"/>
            <line num="43" count="125" type="stmt"/>
            <line num="45" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="48" count="130" type="method"/>
            <line num="50" count="130" type="stmt"/>
            <line complexity="8" visibility="public" signature="visitNode(Tree) : void" num="53" count="18024" type="method"/>
            <line num="55" count="18024" type="stmt"/>
            <line num="56" count="18024" type="stmt"/>
            <line num="58" count="1422" type="stmt"/>
            <line num="59" count="1422" type="stmt"/>
            <line num="61" count="1422" type="stmt"/>
            <line falsecount="749" truecount="673" num="61" type="cond"/>
            <line num="62" count="673" type="stmt"/>
            <line num="63" count="673" type="stmt"/>
            <line num="65" count="673" type="stmt"/>
            <line falsecount="656" truecount="17" num="65" type="cond"/>
            <line num="66" count="17" type="stmt"/>
            <line num="67" count="17" type="stmt"/>
            <line num="68" count="17" type="stmt"/>
            <line falsecount="12" truecount="5" num="68" type="cond"/>
            <line num="71" count="673" type="stmt"/>
            <line num="73" count="673" type="stmt"/>
            <line falsecount="592" truecount="81" num="73" type="cond"/>
            <line num="74" count="81" type="stmt"/>
            <line num="75" count="81" type="stmt"/>
            <line num="76" count="79" type="stmt"/>
            <line num="79" count="671" type="stmt"/>
            <line falsecount="495" truecount="176" num="79" type="cond"/>
            <line num="80" count="176" type="stmt"/>
            <line num="81" count="176" type="stmt"/>
            <line num="82" count="176" type="stmt"/>
            <line num="85" count="671" type="stmt"/>
            <line num="87" count="749" type="stmt"/>
            <line falsecount="609" truecount="140" num="87" type="cond"/>
            <line num="88" count="140" type="stmt"/>
            <line num="90" count="609" type="stmt"/>
            <line falsecount="573" truecount="36" num="90" type="cond"/>
            <line num="91" count="36" type="stmt"/>
            <line complexity="2" visibility="private" signature="addPreciseSecondaryLocations() : void" num="97" count="125" type="method"/>
            <line num="98" count="125" type="stmt"/>
            <line num="99" count="36" type="stmt"/>
            <line num="101" count="35" type="stmt"/>
            <line num="103" count="35" type="stmt"/>
            <line num="104" count="35" type="stmt"/>
            <line num="105" count="35" type="stmt"/>
            <line num="107" count="35" type="stmt"/>
            <line num="109" count="35" type="stmt"/>
            <line falsecount="17" truecount="18" num="109" type="cond"/>
            <line num="110" count="18" type="stmt"/>
            <line num="111" count="18" type="stmt"/>
            <line num="112" count="18" type="stmt"/>
            <line num="113" count="18" type="stmt"/>
            <line num="116" count="35" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkPreciseLocationComment(SyntaxTrivia) : void" num="120" count="176" type="method"/>
            <line num="121" count="176" type="stmt"/>
            <line falsecount="175" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="175" type="stmt"/>
            <line falsecount="174" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="addParams(TestIssue,String) : void" num="130" count="81" type="method"/>
            <line num="131" count="81" type="stmt"/>
            <line num="132" count="114" type="stmt"/>
            <line num="133" count="113" type="stmt"/>
            <line num="134" count="113" type="stmt"/>
            <line num="136" count="113" type="stmt"/>
            <line falsecount="107" truecount="6" num="136" type="cond"/>
            <line num="137" count="6" type="stmt"/>
            <line num="139" count="107" type="stmt"/>
            <line falsecount="83" truecount="24" num="139" type="cond"/>
            <line num="140" count="24" type="stmt"/>
            <line num="142" count="83" type="stmt"/>
            <line falsecount="59" truecount="24" num="142" type="cond"/>
            <line num="143" count="24" type="stmt"/>
            <line num="145" count="59" type="stmt"/>
            <line falsecount="55" truecount="4" num="145" type="cond"/>
            <line num="146" count="4" type="stmt"/>
            <line num="148" count="55" type="stmt"/>
            <line falsecount="25" truecount="30" num="148" type="cond"/>
            <line num="149" count="30" type="stmt"/>
            <line num="151" count="25" type="stmt"/>
            <line falsecount="0" truecount="24" num="151" type="cond"/>
            <line num="152" count="24" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getEqualIndex(String,TestIssue) : int" num="160" count="114" type="method"/>
            <line num="161" count="114" type="stmt"/>
            <line num="162" count="114" type="stmt"/>
            <line falsecount="113" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="113" type="stmt"/>
            <line complexity="2" visibility="private" signature="addSecondaryLines(TestIssue,String) : void" num="168" count="30" type="method"/>
            <line num="169" count="30" type="stmt"/>
            <line num="170" count="30" type="stmt"/>
            <line falsecount="1" truecount="29" num="170" type="cond"/>
            <line num="171" count="29" type="stmt"/>
            <line num="172" count="39" type="stmt"/>
            <line num="175" count="30" type="stmt"/>
            <line complexity="3" visibility="private" signature="lineValue(int,String) : int" num="178" count="43" type="method"/>
            <line num="179" count="43" type="stmt"/>
            <line falsecount="20" truecount="23" num="179" type="cond"/>
            <line num="180" count="23" type="stmt"/>
            <line num="182" count="20" type="stmt"/>
            <line falsecount="5" truecount="15" num="182" type="cond"/>
            <line num="183" count="15" type="stmt"/>
            <line num="185" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="issueByID(String,int) : TestIssue" num="189" count="35" type="method"/>
            <line num="190" count="35" type="stmt"/>
            <line num="191" count="217" type="stmt"/>
            <line falsecount="183" truecount="34" num="191" type="cond"/>
            <line num="192" count="34" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addPreciseLocation(SyntaxTrivia) : void" num="201" count="140" type="method"/>
            <line num="202" count="140" type="stmt"/>
            <line num="204" count="139" type="stmt"/>
            <line num="205" count="139" type="stmt"/>
            <line num="207" count="139" type="stmt"/>
            <line num="208" count="139" type="stmt"/>
            <line falsecount="138" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="138" type="stmt"/>
            <line num="212" count="138" type="stmt"/>
            <line falsecount="137" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="137" type="stmt"/>
            <line num="216" count="137" type="stmt"/>
            <line num="217" count="137" type="stmt"/>
            <line complexity="1" visibility="private" signature="issue(String,int) : TestIssue" num="220" count="673" type="method"/>
            <line num="221" count="673" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/IssueCollector.java" name="IssueCollector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IssueCollector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/IssueEntry.java" name="IssueEntry.java">
            <metrics coveredelements="27" coveredconditionals="2" complexity="9" loc="91" coveredmethods="5" methods="5" elements="40" classes="1" ncloc="65" statements="29" conditionals="6" coveredstatements="20"/>
            <class name="IssueEntry">
               <metrics coveredelements="27" coveredconditionals="2" complexity="9" coveredmethods="5" methods="5" elements="40" statements="29" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="private" signature="IssueEntry(int,int,String,String,File)" num="42" count="9" type="method"/>
            <line num="43" count="9" type="stmt"/>
            <line num="44" count="9" type="stmt"/>
            <line num="45" count="9" type="stmt"/>
            <line num="46" count="9" type="stmt"/>
            <line num="47" count="9" type="stmt"/>
            <line complexity="4" visibility="public" signature="from(Issue,File) : IssueEntry" num="50" count="9" type="method"/>
            <line num="51" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="58" type="cond"/>
            <line num="59" count="9" type="stmt"/>
            <line num="60" count="9" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="createExcerpt() : String" num="69" count="6" type="method"/>
            <line num="70" count="6" type="stmt"/>
            <line num="71" count="6" type="stmt"/>
            <line num="72" count="6" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="78" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="toId() : String" num="84" count="13" type="method"/>
            <line num="85" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="printIgnoreTag() : String" num="88" count="6" type="method"/>
            <line num="89" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/JavaScriptCheckVerifier.java" name="JavaScriptCheckVerifier.java">
            <metrics coveredelements="93" coveredconditionals="31" complexity="30" loc="226" coveredmethods="10" methods="11" elements="110" classes="2" ncloc="133" statements="61" conditionals="38" coveredstatements="52"/>
            <class name="JavaScriptCheckVerifier">
               <metrics coveredelements="91" coveredconditionals="31" complexity="29" coveredmethods="9" methods="10" elements="108" statements="60" conditionals="38" coveredstatements="51"/>
            </class>
            <class name="JavaScriptCheckVerifier.IssueToLine">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="JavaScriptCheckVerifier()" num="45" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="issues(JavaScriptCheck,File) : CheckMessagesVerifier" num="58" count="4" type="method"/>
            <line num="59" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify(JavaScriptCheck,File) : void" num="103" count="89" type="method"/>
            <line num="104" count="89" type="stmt"/>
            <line complexity="3" visibility="package" signature="verify(JavaScriptCheck,InputFile) : void" num="107" count="131" type="method"/>
            <line num="108" count="131" type="stmt"/>
            <line num="110" count="130" type="stmt"/>
            <line num="111" count="123" type="stmt"/>
            <line num="113" count="121" type="stmt"/>
            <line num="114" count="667" type="stmt"/>
            <line falsecount="0" truecount="666" num="114" type="cond"/>
            <line num="115" count="666" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="105" type="stmt"/>
            <line falsecount="104" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getActualIssues(JavaScriptCheck,JavaScriptVisitorContext) : Iterator&lt;Issue&gt;" num="127" count="127" type="method"/>
            <line num="128" count="127" type="stmt"/>
            <line num="129" count="127" type="stmt"/>
            <line falsecount="105" truecount="22" num="129" type="cond"/>
            <line num="130" count="22" type="stmt"/>
            <line num="133" count="127" type="stmt"/>
            <line num="134" count="125" type="stmt"/>
            <line num="135" count="125" type="stmt"/>
            <line complexity="9" visibility="private" signature="verifyIssue(TestIssue,Issue) : void" num="138" count="666" type="method"/>
            <line num="139" count="666" type="stmt"/>
            <line falsecount="665" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="665" type="stmt"/>
            <line falsecount="664" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="664" type="stmt"/>
            <line falsecount="488" truecount="176" num="145" type="cond"/>
            <line num="146" count="176" type="stmt"/>
            <line num="148" count="663" type="stmt"/>
            <line falsecount="657" truecount="6" num="148" type="cond"/>
            <line num="149" count="6" type="stmt"/>
            <line num="151" count="662" type="stmt"/>
            <line falsecount="501" truecount="161" num="151" type="cond"/>
            <line num="152" count="161" type="stmt"/>
            <line num="154" count="660" type="stmt"/>
            <line falsecount="501" truecount="159" num="154" type="cond"/>
            <line num="155" count="159" type="stmt"/>
            <line num="157" count="658" type="stmt"/>
            <line falsecount="519" truecount="139" num="157" type="cond"/>
            <line num="158" count="139" type="stmt"/>
            <line num="160" count="657" type="stmt"/>
            <line falsecount="606" truecount="51" num="160" type="cond"/>
            <line num="161" count="51" type="stmt"/>
            <line complexity="6" visibility="private" signature="assertSecondary(Issue,TestIssue) : void" num="165" count="51" type="method"/>
            <line num="166" count="51" type="stmt"/>
            <line num="167" count="51" type="stmt"/>
            <line falsecount="0" truecount="51" num="167" type="cond"/>
            <line num="169" count="51" type="stmt"/>
            <line num="171" count="51" type="stmt"/>
            <line num="172" count="73" type="stmt"/>
            <line num="174" count="73" type="stmt"/>
            <line falsecount="0" truecount="71" num="174" type="cond"/>
            <line num="175" count="71" type="stmt"/>
            <line falsecount="55" truecount="16" num="175" type="cond"/>
            <line num="176" count="16" type="stmt"/>
            <line num="178" count="70" type="stmt"/>
            <line falsecount="38" truecount="32" num="178" type="cond"/>
            <line num="179" count="32" type="stmt"/>
            <line num="180" count="31" type="stmt"/>
            <line num="182" count="68" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="188" count="46" type="stmt"/>
            <line falsecount="45" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="secondary(int,List&lt;IssueLocation&gt;) : IssueLocation" num="194" count="73" type="method"/>
            <line num="195" count="73" type="stmt"/>
            <line num="196" count="88" type="stmt"/>
            <line falsecount="17" truecount="71" num="196" type="cond"/>
            <line num="197" count="71" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Issue) : Integer" num="204" count="1606" type="method"/>
            <line num="206" count="1606" type="stmt"/>
            <line complexity="2" visibility="private" signature="line(Issue) : int" num="210" count="3019" type="method"/>
            <line num="211" count="3019" type="stmt"/>
            <line falsecount="37" truecount="2982" num="211" type="cond"/>
            <line num="212" count="2982" type="stmt"/>
            <line num="214" count="37" type="stmt"/>
            <line complexity="2" visibility="private" signature="message(Issue) : String" num="218" count="178" type="method"/>
            <line num="219" count="178" type="stmt"/>
            <line falsecount="7" truecount="171" num="219" type="cond"/>
            <line num="220" count="171" type="stmt"/>
            <line num="222" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/TestIssue.java" name="TestIssue.java">
            <metrics coveredelements="64" coveredconditionals="0" complexity="25" loc="161" coveredmethods="25" methods="25" elements="64" classes="2" ncloc="108" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="TestIssue">
               <metrics coveredelements="53" coveredconditionals="0" complexity="20" coveredmethods="20" methods="20" elements="53" statements="33" conditionals="0" coveredstatements="33"/>
            </class>
            <class name="TestIssue.Location">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="private" signature="Location(String,int)" num="37" count="800" type="method"/>
            <line num="38" count="800" type="stmt"/>
            <line num="39" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : String" num="42" count="100" type="method"/>
            <line num="43" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="46" count="180" type="method"/>
            <line num="47" count="180" type="stmt"/>
            <line complexity="1" visibility="public" signature="startColumn() : Integer" num="50" count="122" type="method"/>
            <line num="51" count="122" type="stmt"/>
            <line complexity="1" visibility="public" signature="endColumn() : Integer" num="54" count="51" type="method"/>
            <line num="55" count="51" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestIssue(String,int)" num="67" count="712" type="method"/>
            <line num="68" count="712" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String,int) : TestIssue" num="71" count="712" type="method"/>
            <line num="72" count="712" type="stmt"/>
            <line complexity="1" visibility="public" signature="id(String) : void" num="75" count="24" type="method"/>
            <line num="76" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="message(String) : TestIssue" num="79" count="176" type="method"/>
            <line num="80" count="176" type="stmt"/>
            <line num="81" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="columns(int,int) : TestIssue" num="84" count="6" type="method"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="startColumn(int) : TestIssue" num="90" count="167" type="method"/>
            <line num="91" count="167" type="stmt"/>
            <line num="92" count="167" type="stmt"/>
            <line complexity="1" visibility="public" signature="endColumn(int) : TestIssue" num="95" count="167" type="method"/>
            <line num="96" count="167" type="stmt"/>
            <line num="97" count="167" type="stmt"/>
            <line complexity="1" visibility="public" signature="effortToFix(int) : TestIssue" num="100" count="8" type="method"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine(int) : TestIssue" num="105" count="143" type="method"/>
            <line num="106" count="143" type="stmt"/>
            <line num="107" count="143" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(Integer) : TestIssue" num="110" count="5" type="method"/>
            <line num="111" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(List&lt;Integer&gt;) : TestIssue" num="114" count="35" type="method"/>
            <line num="115" count="35" type="stmt"/>
            <line num="116" count="45" type="stmt"/>
            <line num="118" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(String,int,int,int) : TestIssue" num="121" count="43" type="method"/>
            <line num="122" count="43" type="stmt"/>
            <line num="123" count="43" type="stmt"/>
            <line num="124" count="43" type="stmt"/>
            <line num="125" count="43" type="stmt"/>
            <line num="126" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="129" count="2331" type="method"/>
            <line num="130" count="2331" type="stmt"/>
            <line complexity="1" visibility="public" signature="startColumn() : Integer" num="133" count="876" type="method"/>
            <line num="134" count="876" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : Integer" num="137" count="844" type="method"/>
            <line num="138" count="844" type="stmt"/>
            <line complexity="1" visibility="public" signature="endColumn() : Integer" num="141" count="837" type="method"/>
            <line num="142" count="837" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : String" num="145" count="875" type="method"/>
            <line num="146" count="875" type="stmt"/>
            <line complexity="1" visibility="public" signature="id() : String" num="149" count="217" type="method"/>
            <line num="150" count="217" type="stmt"/>
            <line complexity="1" visibility="public" signature="effortToFix() : Integer" num="153" count="688" type="method"/>
            <line num="154" count="688" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondaryLocations() : List&lt;Location&gt;" num="157" count="753" type="method"/>
            <line num="158" count="753" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/TestUtils.java" name="TestUtils.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="108" coveredmethods="9" methods="10" elements="28" classes="1" ncloc="72" statements="18" conditionals="0" coveredstatements="17"/>
            <class name="TestUtils">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="private" signature="TestUtils()" num="48" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="newParser() : ActionParser&lt;Tree&gt;" num="52" count="5" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createContext(InputFile) : JavaScriptVisitorContext" num="56" count="135" type="method"/>
            <line num="57" count="135" type="stmt"/>
            <line complexity="1" visibility="public" signature="createParallelContext(InputFile) : JavaScriptVisitorContext" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="createContext(InputFile,ActionParser&lt;Tree&gt;) : JavaScriptVisitorContext" num="64" count="139" type="method"/>
            <line num="65" count="139" type="stmt"/>
            <line num="66" count="139" type="stmt"/>
            <line num="67" count="138" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="config() : Configuration" num="73" count="138" type="method"/>
            <line num="74" count="138" type="stmt"/>
            <line num="76" count="138" type="stmt"/>
            <line num="77" count="138" type="stmt"/>
            <line num="78" count="137" type="stmt"/>
            <line num="79" count="138" type="stmt"/>
            <line num="80" count="138" type="stmt"/>
            <line num="82" count="138" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestInputFile(String,String) : DefaultInputFile" num="85" count="139" type="method"/>
            <line num="86" count="139" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestInputFile(File,String) : DefaultInputFile" num="93" count="46" type="method"/>
            <line num="94" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestInputFile(String) : DefaultInputFile" num="97" count="93" type="method"/>
            <line num="98" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestInputFile(File,String,Charset) : DefaultInputFile" num="101" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/main/java/org/sonar/javascript/checks/verifier/TreeCheckTest.java" name="TreeCheckTest.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="6" loc="76" coveredmethods="2" methods="3" elements="30" classes="1" ncloc="44" statements="21" conditionals="6" coveredstatements="18"/>
            <class name="TreeCheckTest">
               <metrics coveredelements="24" coveredconditionals="4" complexity="6" coveredmethods="2" methods="3" elements="30" statements="21" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="private" signature="TreeCheckTest()" num="35" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getIssues(String,JavaScriptCheck) : Collection&lt;CheckMessage&gt;" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="getCheckMessages(List&lt;Issue&gt;) : Collection&lt;CheckMessage&gt;" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="13" type="stmt"/>
            <line num="51" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="13" type="stmt"/>
            <line falsecount="12" truecount="1" num="55" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="12" type="stmt"/>
            <line num="62" count="12" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="66" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="13" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
         </file>
      </package>
      <package name="org.sonarsource.nodejs">
         <metrics coveredelements="165" complexity="66" loc="630" methods="37" classes="8" statements="146" coveredconditionals="28" coveredmethods="25" elements="221" ncloc="401" files="6" conditionals="38" coveredstatements="112"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/main/java/org/sonarsource/nodejs/BundlePathResolver.java" name="BundlePathResolver.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BundlePathResolver">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/main/java/org/sonarsource/nodejs/NodeCommand.java" name="NodeCommand.java">
            <metrics coveredelements="55" coveredconditionals="7" complexity="21" loc="204" coveredmethods="7" methods="15" elements="75" classes="3" ncloc="137" statements="52" conditionals="8" coveredstatements="41"/>
            <class name="NodeCommand">
               <metrics coveredelements="55" coveredconditionals="7" complexity="15" coveredmethods="7" methods="9" elements="61" statements="44" conditionals="8" coveredstatements="41"/>
            </class>
            <class name="NodeCommand.ProcessWrapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NodeCommand.ProcessWrapperImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="NodeCommand(ProcessWrapper,String,List&lt;Path&gt;,List&lt;String&gt;,String,List&lt;String&gt;,Consumer&lt;String&gt;,Consumer&lt;String&gt;)" num="59" count="17" type="method"/>
            <line num="63" count="17" type="stmt"/>
            <line num="64" count="17" type="stmt"/>
            <line num="65" count="17" type="stmt"/>
            <line num="66" count="17" type="stmt"/>
            <line num="67" count="17" type="stmt"/>
            <line num="68" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="start() : void" num="76" count="16" type="method"/>
            <line num="77" count="16" type="stmt"/>
            <line num="78" count="16" type="stmt"/>
            <line num="79" count="16" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line num="83" count="8" type="stmt"/>
            <line complexity="3" visibility="private" signature="envWithNodePath() : Map&lt;String, String&gt;" num="87" count="42" type="method"/>
            <line num="88" count="42" type="stmt"/>
            <line num="89" count="42" type="stmt"/>
            <line falsecount="5" truecount="37" num="89" type="cond"/>
            <line num="90" count="37" type="stmt"/>
            <line num="92" count="5" type="stmt"/>
            <line num="93" count="5" type="stmt"/>
            <line num="94" count="5" type="stmt"/>
            <line falsecount="2" truecount="0" num="94" type="cond"/>
            <line num="95" count="5" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildCommand(String,List&lt;String&gt;,String,List&lt;String&gt;) : List&lt;String&gt;" num="99" count="17" type="method"/>
            <line num="100" count="17" type="stmt"/>
            <line num="101" count="17" type="stmt"/>
            <line num="102" count="17" type="stmt"/>
            <line num="103" count="17" type="stmt"/>
            <line falsecount="4" truecount="13" num="103" type="cond"/>
            <line num="104" count="13" type="stmt"/>
            <line num="106" count="17" type="stmt"/>
            <line num="107" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="waitFor() : int" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="destroy() : void" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="136" count="26" type="method"/>
            <line num="138" count="26" type="stmt"/>
            <line num="139" count="26" type="stmt"/>
            <line num="140" count="26" type="stmt"/>
            <line falsecount="3" truecount="23" num="140" type="cond"/>
            <line num="141" count="23" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder() : NodeCommandBuilder" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="builder(ProcessWrapper) : NodeCommandBuilder" num="150" count="23" type="method"/>
            <line num="151" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="start(List&lt;String&gt;,Map&lt;String, String&gt;) : Process" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="waitFor(Process) : int" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="interrupt() : void" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="destroy(Process) : void" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isMac() : boolean" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getenv(String) : String" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/main/java/org/sonarsource/nodejs/NodeCommandBuilder.java" name="NodeCommandBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NodeCommandBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/main/java/org/sonarsource/nodejs/NodeCommandBuilderImpl.java" name="NodeCommandBuilderImpl.java">
            <metrics coveredelements="90" coveredconditionals="20" complexity="35" loc="247" coveredmethods="12" methods="16" elements="122" classes="1" ncloc="186" statements="78" conditionals="28" coveredstatements="58"/>
            <class name="NodeCommandBuilderImpl">
               <metrics coveredelements="90" coveredconditionals="20" complexity="35" coveredmethods="12" methods="16" elements="122" statements="78" conditionals="28" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="package" signature="NodeCommandBuilderImpl(NodeCommand.ProcessWrapper)" num="66" count="23" type="method"/>
            <line num="67" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="minNodeVersion(int) : NodeCommandBuilder" num="70" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="configuration(Configuration) : NodeCommandBuilder" num="76" count="6" type="method"/>
            <line num="78" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="addToNodePath(Path) : NodeCommandBuilder" num="82" count="3" type="method"/>
            <line num="84" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="84" type="cond"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxOldSpaceSize(int) : NodeCommandBuilder" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodeJsArgs(String) : NodeCommandBuilder" num="97" count="3" type="method"/>
            <line num="99" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="script(String) : NodeCommandBuilder" num="103" count="17" type="method"/>
            <line num="105" count="17" type="stmt"/>
            <line num="106" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="scriptArgs(String) : NodeCommandBuilder" num="109" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="outputConsumer(Consumer&lt;String&gt;) : NodeCommandBuilder" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorConsumer(Consumer&lt;String&gt;) : NodeCommandBuilder" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pathResolver(BundlePathResolver) : NodeCommandBuilder" num="127" count="8" type="method"/>
            <line num="129" count="8" type="stmt"/>
            <line num="130" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="build() : NodeCommand" num="141" count="22" type="method"/>
            <line num="143" count="22" type="stmt"/>
            <line num="144" count="19" type="stmt"/>
            <line num="146" count="16" type="stmt"/>
            <line falsecount="15" truecount="1" num="146" type="cond"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="149" type="cond"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="14" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkNodeCompatibility(String) : void" num="163" count="19" type="method"/>
            <line num="164" count="19" type="stmt"/>
            <line falsecount="3" truecount="16" num="164" type="cond"/>
            <line num="165" count="16" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="checkVersion(String,int) : boolean" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getVersion(String) : String" num="193" count="3" type="method"/>
            <line num="194" count="3" type="stmt"/>
            <line num="195" count="3" type="stmt"/>
            <line num="196" count="3" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="198" type="cond"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="retrieveNodeExecutableFromConfig(Configuration) : String" num="204" count="22" type="method"/>
            <line num="205" count="22" type="stmt"/>
            <line falsecount="17" truecount="5" num="205" type="cond"/>
            <line num="206" count="5" type="stmt"/>
            <line num="207" count="5" type="stmt"/>
            <line num="209" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="209" type="cond"/>
            <line num="210" count="3" type="stmt"/>
            <line num="212" count="3" type="stmt"/>
            <line num="213" count="3" type="stmt"/>
            <line num="216" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="216" type="cond"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="221" count="5" type="stmt"/>
            <line num="222" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="222" type="cond"/>
            <line num="223" count="3" type="stmt"/>
            <line num="224" count="3" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="231" count="17" type="stmt"/>
            <line num="234" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="234" type="cond"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line falsecount="1" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="244" count="16" type="stmt"/>
            <line num="245" count="16" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/main/java/org/sonarsource/nodejs/NodeCommandException.java" name="NodeCommandException.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NodeCommandException">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="NodeCommandException(String)" num="24" count="5" type="method"/>
            <line num="25" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="NodeCommandException(String,Throwable)" num="28" count="8" type="method"/>
            <line num="29" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/main/java/org/sonarsource/nodejs/StreamConsumer.java" name="StreamConsumer.java">
            <metrics coveredelements="16" coveredconditionals="1" complexity="8" loc="68" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="42" statements="14" conditionals="2" coveredstatements="11"/>
            <class name="StreamConsumer">
               <metrics coveredelements="16" coveredconditionals="1" complexity="8" coveredmethods="4" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="package" signature="StreamConsumer()" num="39" count="17" type="method"/>
            <line num="40" count="17" type="stmt"/>
            <line num="41" count="16" type="stmt"/>
            <line num="42" count="16" type="stmt"/>
            <line num="43" count="16" type="stmt"/>
            <line num="44" count="16" type="stmt"/>
            <line complexity="4" visibility="package" signature="consumeStream(InputStream,Consumer&lt;String&gt;) : void" num="48" count="16" type="method"/>
            <line num="49" count="16" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="await() : void" num="58" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="shutdownNow() : void" num="65" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.checks">
         <metrics coveredelements="3158" complexity="1168" loc="15291" methods="619" classes="297" statements="1919" coveredconditionals="763" coveredmethods="589" elements="3384" ncloc="8191" files="270" conditionals="846" coveredstatements="1806"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AbstractAllPathSeCheck.java" name="AbstractAllPathSeCheck.java">
            <metrics coveredelements="21" coveredconditionals="7" complexity="7" loc="73" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="39" statements="11" conditionals="8" coveredstatements="11"/>
            <class name="AbstractAllPathSeCheck">
               <metrics coveredelements="21" coveredconditionals="7" complexity="7" coveredmethods="3" methods="3" elements="22" statements="11" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="4" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="39" count="505" type="method"/>
            <line num="41" count="505" type="stmt"/>
            <line num="43" count="505" type="stmt"/>
            <line falsecount="433" truecount="72" num="43" type="cond"/>
            <line num="44" count="72" type="stmt"/>
            <line num="45" count="72" type="stmt"/>
            <line falsecount="27" truecount="45" num="45" type="cond"/>
            <line num="46" count="45" type="stmt"/>
            <line num="47" count="27" type="stmt"/>
            <line falsecount="0" truecount="27" num="47" type="cond"/>
            <line num="48" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="57" count="23" type="method"/>
            <line num="59" count="23" type="stmt"/>
            <line complexity="2" visibility="public" signature="endOfExecution(Scope) : void" num="62" count="23" type="method"/>
            <line num="64" count="23" type="stmt"/>
            <line num="65" count="71" type="stmt"/>
            <line falsecount="45" truecount="26" num="65" type="cond"/>
            <line num="66" count="26" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AbstractAlwaysTrueOrFalseConditionCheck.java" name="AbstractAlwaysTrueOrFalseConditionCheck.java">
            <metrics coveredelements="72" coveredconditionals="24" complexity="25" loc="157" coveredmethods="7" methods="8" elements="73" classes="2" ncloc="100" statements="41" conditionals="24" coveredstatements="41"/>
            <class name="AbstractAlwaysTrueOrFalseConditionCheck">
               <metrics coveredelements="64" coveredconditionals="22" complexity="21" coveredmethods="5" methods="6" elements="65" statements="37" conditionals="22" coveredstatements="37"/>
            </class>
            <class name="AbstractAlwaysTrueOrFalseConditionCheck.LoopsVisitor">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="48" count="35" type="method"/>
            <line num="50" count="35" type="stmt"/>
            <line num="51" count="35" type="stmt"/>
            <line num="52" count="35" type="stmt"/>
            <line complexity="4" visibility="public" signature="checkConditions(Map&lt;Tree, Collection&lt;Constraint&gt;&gt;) : void" num="55" count="33" type="method"/>
            <line num="57" count="33" type="stmt"/>
            <line num="58" count="113" type="stmt"/>
            <line num="60" count="113" type="stmt"/>
            <line falsecount="110" truecount="3" num="60" type="cond"/>
            <line num="61" count="3" type="stmt"/>
            <line num="64" count="110" type="stmt"/>
            <line num="66" count="110" type="stmt"/>
            <line falsecount="55" truecount="55" num="66" type="cond"/>
            <line num="67" count="55" type="stmt"/>
            <line num="68" count="55" type="stmt"/>
            <line num="70" count="55" type="stmt"/>
            <line num="72" count="55" type="stmt"/>
            <line falsecount="27" truecount="28" num="72" type="cond"/>
            <line num="73" count="28" type="stmt"/>
            <line num="75" count="27" type="stmt"/>
            <line complexity="8" visibility="private" signature="getNeverExecutedCode(Tree,boolean) : Set&lt;Tree&gt;" num="81" count="55" type="method"/>
            <line num="82" count="55" type="stmt"/>
            <line num="83" count="55" type="stmt"/>
            <line num="84" count="55" type="stmt"/>
            <line num="86" count="55" type="stmt"/>
            <line falsecount="31" truecount="24" num="86" type="cond"/>
            <line num="87" count="24" type="stmt"/>
            <line num="88" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="88" type="cond"/>
            <line num="89" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="89" type="cond"/>
            <line num="90" count="4" type="stmt"/>
            <line num="93" count="12" type="stmt"/>
            <line num="96" count="31" type="stmt"/>
            <line falsecount="28" truecount="3" num="96" type="cond"/>
            <line num="97" count="3" type="stmt"/>
            <line num="99" count="28" type="stmt"/>
            <line falsecount="25" truecount="3" num="99" type="cond"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="101" type="cond"/>
            <line num="104" count="55" type="stmt"/>
            <line complexity="6" visibility="private" signature="biggestTreeWithSameTruthiness(Tree,boolean,Set&lt;Tree&gt;) : Tree" num="107" count="74" type="method"/>
            <line num="108" count="74" type="stmt"/>
            <line num="109" count="74" type="stmt"/>
            <line falsecount="55" truecount="19" num="109" type="cond"/>
            <line num="110" count="19" type="stmt"/>
            <line num="111" count="19" type="stmt"/>
            <line falsecount="10" truecount="9" num="111" type="cond"/>
            <line num="112" count="9" type="stmt"/>
            <line num="114" count="19" type="stmt"/>
            <line num="117" count="55" type="stmt"/>
            <line complexity="1" visibility="protected" signature="conditionWithDeadCode(Tree,boolean,Set&lt;Tree&gt;) : void" num="127" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="redundantCondition(Tree,boolean) : void" num="137" count="28" type="method"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="143" count="35" type="method"/>
            <line num="145" count="35" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitNode(Tree) : void" num="148" count="12" type="method"/>
            <line num="150" count="12" type="stmt"/>
            <line num="151" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="151" type="cond"/>
            <line num="152" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AbstractAnyPathSeCheck.java" name="AbstractAnyPathSeCheck.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="11" loc="126" coveredmethods="6" methods="8" elements="34" classes="1" ncloc="57" statements="20" conditionals="6" coveredstatements="18"/>
            <class name="AbstractAnyPathSeCheck">
               <metrics coveredelements="30" coveredconditionals="6" complexity="11" coveredmethods="6" methods="8" elements="34" statements="20" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="44" count="95" type="method"/>
            <line num="46" count="95" type="stmt"/>
            <line num="47" count="95" type="stmt"/>
            <line complexity="1" visibility="public" signature="doStartOfExecution(Scope) : void" num="56" count="95" type="method"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addUniqueIssue(Tree,String) : Optional&lt;PreciseIssue&gt;" num="81" count="170" type="method"/>
            <line num="82" count="170" type="stmt"/>
            <line falsecount="158" truecount="12" num="82" type="cond"/>
            <line num="83" count="12" type="stmt"/>
            <line num="85" count="158" type="stmt"/>
            <line num="86" count="158" type="stmt"/>
            <line num="87" count="158" type="stmt"/>
            <line complexity="2" visibility="public" signature="addUniqueIssue(Tree,String,Tree) : Optional&lt;PreciseIssue&gt;" num="93" count="52" type="method"/>
            <line num="94" count="52" type="stmt"/>
            <line num="95" count="52" type="stmt"/>
            <line falsecount="2" truecount="50" num="95" type="cond"/>
            <line num="96" count="50" type="stmt"/>
            <line num="97" count="90" type="stmt"/>
            <line num="100" count="52" type="stmt"/>
            <line complexity="2" visibility="public" signature="addUniqueIssue(Tree,String,IssueLocation) : Optional&lt;PreciseIssue&gt;" num="106" count="12" type="method"/>
            <line num="107" count="12" type="stmt"/>
            <line num="108" count="12" type="stmt"/>
            <line falsecount="2" truecount="10" num="108" type="cond"/>
            <line num="109" count="10" type="stmt"/>
            <line num="110" count="10" type="stmt"/>
            <line num="113" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="alreadyHasIssueOn(Tree) : boolean" num="122" count="170" type="method"/>
            <line num="123" count="170" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AbstractDuplicateBranchImplementationCheck.java" name="AbstractDuplicateBranchImplementationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="175" coveredmethods="0" methods="9" elements="95" classes="1" ncloc="120" statements="56" conditionals="30" coveredstatements="0"/>
            <class name="AbstractDuplicateBranchImplementationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="9" elements="95" statements="56" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitIfStatement(IfStatementTree) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="allBranchesEquivalent(List&lt;Tree&gt;) : boolean" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="collectBranches(IfStatementTree) : List&lt;Tree&gt;" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="allBranchesPresent(IfStatementTree) : boolean" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="endsWithJump(SwitchClauseTree) : boolean" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="normalize(SwitchClauseTree) : List&lt;StatementTree&gt;" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="syntacticallyEqual(Tree,Tree) : boolean" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AbstractJQuerySelectorOptimizationCheck.java" name="AbstractJQuerySelectorOptimizationCheck.java">
            <metrics coveredelements="12" coveredconditionals="4" complexity="4" loc="49" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="23" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="AbstractJQuerySelectorOptimizationCheck">
               <metrics coveredelements="12" coveredconditionals="4" complexity="4" coveredmethods="1" methods="1" elements="12" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="4" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="34" count="37" type="method"/>
            <line num="36" count="37" type="stmt"/>
            <line falsecount="4" truecount="33" num="36" type="cond"/>
            <line num="37" count="33" type="stmt"/>
            <line num="39" count="33" type="stmt"/>
            <line falsecount="2" truecount="31" num="39" type="cond"/>
            <line num="40" count="31" type="stmt"/>
            <line num="41" count="31" type="stmt"/>
            <line num="43" count="31" type="stmt"/>
            <line num="46" count="37" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AbstractSymbolNameCheck.java" name="AbstractSymbolNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="58" coveredmethods="0" methods="2" elements="19" classes="1" ncloc="32" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="AbstractSymbolNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="19" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="getIllegalSymbols() : List&lt;Symbol&gt;" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="raiseIssuesOnDeclarations(Symbol,String) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AdjacentOverloadSignaturesCheck.java" name="AdjacentOverloadSignaturesCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AdjacentOverloadSignaturesCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AlertUseCheck.java" name="AlertUseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AlertUseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AlphabeticalSortCheck.java" name="AlphabeticalSortCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AlphabeticalSortCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AlwaysUseCurlyBracesCheck.java" name="AlwaysUseCurlyBracesCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AlwaysUseCurlyBracesCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AngleBracketTypeAssertionCheck.java" name="AngleBracketTypeAssertionCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="AngleBracketTypeAssertionCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="AngleBracketTypeAssertionCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArgumentTypesCheck.java" name="ArgumentTypesCheck.java">
            <metrics coveredelements="70" coveredconditionals="26" complexity="20" loc="151" coveredmethods="6" methods="6" elements="72" classes="1" ncloc="108" statements="38" conditionals="28" coveredstatements="38"/>
            <class name="ArgumentTypesCheck">
               <metrics coveredelements="70" coveredconditionals="26" complexity="20" coveredmethods="6" methods="6" elements="72" statements="38" conditionals="28" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="68" count="3" type="method"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="73" count="205" type="method"/>
            <line num="75" count="205" type="stmt"/>
            <line falsecount="166" truecount="39" num="75" type="cond"/>
            <line num="76" count="39" type="stmt"/>
            <line num="78" count="39" type="stmt"/>
            <line num="79" count="39" type="stmt"/>
            <line num="81" count="39" type="stmt"/>
            <line falsecount="7" truecount="32" num="81" type="cond"/>
            <line num="82" count="32" type="stmt"/>
            <line num="83" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="83" type="cond"/>
            <line num="84" count="32" type="stmt"/>
            <line complexity="5" visibility="private" signature="check(IntFunction&lt;Constraint&gt;,ProgramState,List&lt;ExpressionTree&gt;) : void" num="91" count="32" type="method"/>
            <line num="92" count="32" type="stmt"/>
            <line num="94" count="32" type="stmt"/>
            <line falsecount="32" truecount="51" num="94" type="cond"/>
            <line num="95" count="51" type="stmt"/>
            <line num="98" count="32" type="stmt"/>
            <line num="99" count="32" type="stmt"/>
            <line falsecount="32" truecount="51" num="99" type="cond"/>
            <line num="100" count="51" type="stmt"/>
            <line num="101" count="51" type="stmt"/>
            <line num="102" count="51" type="stmt"/>
            <line falsecount="8" truecount="43" num="102" type="cond"/>
            <line num="103" count="43" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="105" type="cond"/>
            <line num="106" count="7" type="stmt"/>
            <line complexity="4" visibility="private" signature="errorMessage(Constraint,ProgramState,SymbolicValue) : String" num="111" count="51" type="method"/>
            <line num="113" count="51" type="stmt"/>
            <line falsecount="2" truecount="49" num="113" type="cond"/>
            <line num="115" count="49" type="stmt"/>
            <line num="116" count="49" type="stmt"/>
            <line falsecount="41" truecount="8" num="116" type="cond"/>
            <line num="117" count="8" type="stmt"/>
            <line num="119" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="119" type="cond"/>
            <line num="120" count="8" type="stmt"/>
            <line num="124" count="43" type="stmt"/>
            <line complexity="2" visibility="public" signature="endOfExecution(Scope) : void" num="127" count="3" type="method"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="32" type="stmt"/>
            <line num="131" count="32" type="stmt"/>
            <line falsecount="26" truecount="6" num="131" type="cond"/>
            <line num="132" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="extendSignatureArgumentConstraint(Constraint) : Constraint" num="137" count="49" type="method"/>
            <line num="138" count="49" type="stmt"/>
            <line falsecount="36" truecount="13" num="138" type="cond"/>
            <line num="139" count="13" type="stmt"/>
            <line num="141" count="36" type="stmt"/>
            <line falsecount="14" truecount="22" num="141" type="cond"/>
            <line num="142" count="22" type="stmt"/>
            <line num="144" count="14" type="stmt"/>
            <line falsecount="2" truecount="12" num="144" type="cond"/>
            <line num="145" count="12" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArgumentsCallerCalleeUsageCheck.java" name="ArgumentsCallerCalleeUsageCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArgumentsCallerCalleeUsageCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArgumentsUsageCheck.java" name="ArgumentsUsageCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArgumentsUsageCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArithmeticOperationReturningNanCheck.java" name="ArithmeticOperationReturningNanCheck.java">
            <metrics coveredelements="56" coveredconditionals="18" complexity="14" loc="127" coveredmethods="4" methods="4" elements="56" classes="2" ncloc="95" statements="34" conditionals="18" coveredstatements="34"/>
            <class name="ArithmeticOperationReturningNanCheck">
               <metrics coveredelements="44" coveredconditionals="16" complexity="12" coveredmethods="3" methods="3" elements="44" statements="25" conditionals="16" coveredstatements="25"/>
            </class>
            <class name="ArithmeticOperationReturningNanCheck.ExpressionComponents">
               <metrics coveredelements="12" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="12" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="55" count="5" type="method"/>
            <line num="57" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line complexity="6" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="61" count="285" type="method"/>
            <line num="63" count="285" type="stmt"/>
            <line falsecount="244" truecount="41" num="63" type="cond"/>
            <line num="64" count="41" type="stmt"/>
            <line num="65" count="41" type="stmt"/>
            <line num="66" count="41" type="stmt"/>
            <line falsecount="17" truecount="24" num="66" type="cond"/>
            <line num="67" count="24" type="stmt"/>
            <line num="68" count="24" type="stmt"/>
            <line falsecount="3" truecount="21" num="68" type="cond"/>
            <line num="69" count="21" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line num="75" count="244" type="stmt"/>
            <line falsecount="233" truecount="11" num="75" type="cond"/>
            <line num="83" count="11" type="stmt"/>
            <line num="84" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="84" type="cond"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line complexity="5" visibility="private" signature="raiseIssue(Tree,Tree) : void" num="91" count="30" type="method"/>
            <line num="92" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line falsecount="9" truecount="21" num="93" type="cond"/>
            <line num="94" count="21" type="stmt"/>
            <line num="95" count="21" type="stmt"/>
            <line num="97" count="30" type="stmt"/>
            <line falsecount="1" truecount="29" num="97" type="cond"/>
            <line num="98" count="29" type="stmt"/>
            <line num="99" count="29" type="stmt"/>
            <line num="100" count="29" type="stmt"/>
            <line falsecount="15" truecount="14" num="100" type="cond"/>
            <line num="101" count="14" type="stmt"/>
            <line num="103" count="29" type="stmt"/>
            <line complexity="2" visibility="public" signature="ExpressionComponents(Tree)" num="112" count="24" type="method"/>
            <line num="113" count="24" type="stmt"/>
            <line falsecount="19" truecount="5" num="113" type="cond"/>
            <line num="114" count="5" type="stmt"/>
            <line num="115" count="5" type="stmt"/>
            <line num="116" count="5" type="stmt"/>
            <line num="117" count="5" type="stmt"/>
            <line num="119" count="19" type="stmt"/>
            <line num="120" count="19" type="stmt"/>
            <line num="121" count="19" type="stmt"/>
            <line num="122" count="19" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArrayCallbackWithoutReturnCheck.java" name="ArrayCallbackWithoutReturnCheck.java">
            <metrics coveredelements="84" coveredconditionals="30" complexity="28" loc="171" coveredmethods="8" methods="8" elements="84" classes="1" ncloc="121" statements="46" conditionals="30" coveredstatements="46"/>
            <class name="ArrayCallbackWithoutReturnCheck">
               <metrics coveredelements="84" coveredconditionals="30" complexity="28" coveredmethods="8" methods="8" elements="84" statements="46" conditionals="30" coveredstatements="46"/>
            </class>
            <line complexity="5" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="68" count="284" type="method"/>
            <line num="70" count="284" type="stmt"/>
            <line falsecount="242" truecount="42" num="70" type="cond"/>
            <line num="71" count="42" type="stmt"/>
            <line num="73" count="42" type="stmt"/>
            <line falsecount="11" truecount="31" num="73" type="cond"/>
            <line num="74" count="31" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="76" type="cond"/>
            <line num="77" count="5" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkArgumentToBeFunctionWithReturn(DotMemberExpressionTree,int,ProgramState) : void" num="83" count="36" type="method"/>
            <line num="84" count="36" type="stmt"/>
            <line num="86" count="36" type="stmt"/>
            <line falsecount="1" truecount="35" num="86" type="cond"/>
            <line num="87" count="35" type="stmt"/>
            <line num="89" count="35" type="stmt"/>
            <line falsecount="2" truecount="33" num="89" type="cond"/>
            <line num="90" count="33" type="stmt"/>
            <line num="92" count="33" type="stmt"/>
            <line falsecount="17" truecount="16" num="92" type="cond"/>
            <line num="93" count="16" type="stmt"/>
            <line num="95" count="17" type="stmt"/>
            <line falsecount="9" truecount="8" num="95" type="cond"/>
            <line num="96" count="8" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkArgumentIdentifier(IdentifierTree,ProgramState) : void" num="102" count="8" type="method"/>
            <line num="103" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="104" type="cond"/>
            <line num="105" count="7" type="stmt"/>
            <line num="107" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="107" type="cond"/>
            <line num="108" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="110" type="cond"/>
            <line num="111" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAsyncFunction(FunctionTree) : boolean" num="118" count="23" type="method"/>
            <line num="119" count="23" type="stmt"/>
            <line complexity="3" visibility="private" signature="functionToken(FunctionTree) : SyntaxToken" num="122" count="19" type="method"/>
            <line num="123" count="19" type="stmt"/>
            <line num="125" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="125" type="cond"/>
            <line num="126" count="2" type="stmt"/>
            <line num="128" count="17" type="stmt"/>
            <line falsecount="1" truecount="16" num="128" type="cond"/>
            <line num="129" count="16" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="135" count="19" type="stmt"/>
            <line complexity="5" visibility="private" signature="hasReturnWithValue(FunctionTree) : boolean" num="138" count="26" type="method"/>
            <line num="139" count="26" type="stmt"/>
            <line falsecount="1" truecount="25" num="139" type="cond"/>
            <line num="140" count="25" type="stmt"/>
            <line num="142" count="25" type="stmt"/>
            <line num="143" count="33" type="stmt"/>
            <line falsecount="9" truecount="24" num="143" type="cond"/>
            <line num="144" count="24" type="stmt"/>
            <line num="147" count="9" type="stmt"/>
            <line num="148" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="148" type="cond"/>
            <line num="149" count="2" type="stmt"/>
            <line num="153" count="23" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="isArrayPropertyExecuted(ProgramState) : boolean" num="161" count="42" type="method"/>
            <line num="162" count="42" type="stmt"/>
            <line num="163" count="42" type="stmt"/>
            <line num="164" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="isArrayFromMethod(DotMemberExpressionTree,ProgramState) : boolean" num="167" count="11" type="method"/>
            <line num="168" count="11" type="stmt"/>
            <line num="169" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArrayConstructorsCheck.java" name="ArrayConstructorsCheck.java">
            <metrics coveredelements="10" coveredconditionals="3" complexity="3" loc="49" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="26" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="ArrayConstructorsCheck">
               <metrics coveredelements="10" coveredconditionals="3" complexity="3" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="public" signature="visitNewExpression(NewExpressionTree) : void" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="41" type="cond"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="43" type="cond"/>
            <line num="44" count="2" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArrayMutatingOperationCheck.java" name="ArrayMutatingOperationCheck.java">
            <metrics coveredelements="46" coveredconditionals="14" complexity="17" loc="102" coveredmethods="6" methods="6" elements="48" classes="1" ncloc="69" statements="26" conditionals="16" coveredstatements="26"/>
            <class name="ArrayMutatingOperationCheck">
               <metrics coveredelements="46" coveredconditionals="14" complexity="17" coveredmethods="6" methods="6" elements="48" statements="26" conditionals="16" coveredstatements="26"/>
            </class>
            <line complexity="3" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="44" count="133" type="method"/>
            <line num="46" count="133" type="stmt"/>
            <line falsecount="109" truecount="24" num="46" type="cond"/>
            <line num="47" count="24" type="stmt"/>
            <line num="49" count="24" type="stmt"/>
            <line falsecount="1" truecount="23" num="49" type="cond"/>
            <line num="50" count="23" type="stmt"/>
            <line num="51" count="23" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkMemberExpression(ProgramState,CallExpressionTree,MemberExpressionTree) : void" num="56" count="23" type="method"/>
            <line num="57" count="23" type="stmt"/>
            <line num="59" count="23" type="stmt"/>
            <line num="60" count="23" type="stmt"/>
            <line falsecount="10" truecount="13" num="60" type="cond"/>
            <line num="61" count="13" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="65" type="cond"/>
            <line num="66" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="isBeingPassedElsewhere(Symbol,Tree) : boolean" num="71" count="9" type="method"/>
            <line num="72" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="72" type="cond"/>
            <line num="73" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="75" type="cond"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="sameSymbol(Symbol,IdentifierTree) : boolean" num="84" count="3" type="method"/>
            <line num="85" count="3" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="isArray(Symbol,ProgramState) : boolean" num="89" count="10" type="method"/>
            <line num="90" count="10" type="stmt"/>
            <line complexity="4" visibility="private" signature="mutatingMethod(ExpressionTree) : Optional&lt;String&gt;" num="93" count="23" type="method"/>
            <line num="94" count="23" type="stmt"/>
            <line falsecount="0" truecount="23" num="94" type="cond"/>
            <line num="95" count="23" type="stmt"/>
            <line num="96" count="23" type="stmt"/>
            <line falsecount="6" truecount="17" num="96" type="cond"/>
            <line num="97" count="17" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ArrowFunctionConventionCheck.java" name="ArrowFunctionConventionCheck.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="69" coveredmethods="3" methods="3" elements="7" classes="2" ncloc="40" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ArrowFunctionConventionCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ArrowFunctionConventionCheck.Config">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="49" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="54" count="3" type="method"/>
            <line num="56" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="Config(boolean,boolean)" num="63" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/AssociativeArraysCheck.java" name="AssociativeArraysCheck.java">
            <metrics coveredelements="14" coveredconditionals="6" complexity="4" loc="50" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="28" statements="7" conditionals="6" coveredstatements="7"/>
            <class name="AssociativeArraysCheck">
               <metrics coveredelements="14" coveredconditionals="6" complexity="4" coveredmethods="1" methods="1" elements="14" statements="7" conditionals="6" coveredstatements="7"/>
            </class>
            <line complexity="4" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="37" count="12" type="method"/>
            <line num="39" count="12" type="stmt"/>
            <line falsecount="3" truecount="9" num="39" type="cond"/>
            <line num="40" count="9" type="stmt"/>
            <line num="41" count="9" type="stmt"/>
            <line falsecount="3" truecount="6" num="41" type="cond"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="43" type="cond"/>
            <line num="44" count="2" type="stmt"/>
            <line num="48" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/BackboneChangedIsUsedCheck.java" name="BackboneChangedIsUsedCheck.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="52" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="26" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="BackboneChangedIsUsedCheck">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="3" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="38" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="41" type="cond"/>
            <line num="42" count="3" type="stmt"/>
            <line num="45" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="isChangedPropertyAccess(DotMemberExpressionTree) : boolean" num="48" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/BitwiseOperatorsCheck.java" name="BitwiseOperatorsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BitwiseOperatorsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/BoolParamDefaultCheck.java" name="BoolParamDefaultCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BoolParamDefaultCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/BooleanEqualityComparisonCheck.java" name="BooleanEqualityComparisonCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BooleanEqualityComparisonCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/BuiltInObjectOverriddenCheck.java" name="BuiltInObjectOverriddenCheck.java">
            <metrics coveredelements="12" coveredconditionals="2" complexity="3" loc="113" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="85" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="BuiltInObjectOverriddenCheck">
               <metrics coveredelements="12" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="93" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="42" type="stmt"/>
            <line num="98" count="37" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkSymbol(Symbol) : void" num="104" count="37" type="method"/>
            <line num="105" count="37" type="stmt"/>
            <line num="106" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="106" type="cond"/>
            <line num="107" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CallabilityCheck.java" name="CallabilityCheck.java">
            <metrics coveredelements="11" coveredconditionals="4" complexity="3" loc="51" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="26" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="CallabilityCheck">
               <metrics coveredelements="11" coveredconditionals="4" complexity="3" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="38" count="86" type="method"/>
            <line num="40" count="86" type="stmt"/>
            <line falsecount="71" truecount="15" num="40" type="cond"/>
            <line num="41" count="15" type="stmt"/>
            <line num="43" count="15" type="stmt"/>
            <line num="44" count="15" type="stmt"/>
            <line num="46" count="15" type="stmt"/>
            <line falsecount="9" truecount="6" num="46" type="cond"/>
            <line num="47" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CheckList.java" name="CheckList.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="5" loc="317" coveredmethods="4" methods="5" elements="10" classes="1" ncloc="288" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="CheckList">
               <metrics coveredelements="9" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="CheckList()" num="36" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getTypeScriptChecks() : List&lt;Class&gt;" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJavaScriptChecks() : List&lt;Class&gt;" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="filterChecksByAnnotation(Class&lt;? extends Annotation&gt;) : List&lt;Class&gt;" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAllChecks() : List&lt;Class&gt;" num="54" count="10" type="method"/>
            <line num="55" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ClassNameCheck.java" name="ClassNameCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ClassNameCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="43" count="2" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ClassPrototypeCheck.java" name="ClassPrototypeCheck.java">
            <metrics coveredelements="13" coveredconditionals="5" complexity="7" loc="52" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="27" statements="7" conditionals="6" coveredstatements="7"/>
            <class name="ClassPrototypeCheck">
               <metrics coveredelements="13" coveredconditionals="5" complexity="7" coveredmethods="1" methods="1" elements="14" statements="7" conditionals="6" coveredstatements="7"/>
            </class>
            <line complexity="7" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="37" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="39" type="cond"/>
            <line num="40" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="45" type="cond"/>
            <line num="46" count="2" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CognitiveComplexityFunctionCheck.java" name="CognitiveComplexityFunctionCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CognitiveComplexityFunctionCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CollapsibleIfStatementsCheck.java" name="CollapsibleIfStatementsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CollapsibleIfStatementsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CollectionSizeComparisonCheck.java" name="CollectionSizeComparisonCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CollectionSizeComparisonCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CommaOperatorInSwitchCaseCheck.java" name="CommaOperatorInSwitchCaseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CommaOperatorInSwitchCaseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CommaOperatorUseCheck.java" name="CommaOperatorUseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CommaOperatorUseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CommentContainsPatternChecker.java" name="CommentContainsPatternChecker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="64" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="36" statements="15" conditionals="10" coveredstatements="0"/>
            <class name="CommentContainsPatternChecker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="28" statements="15" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CommentContainsPatternChecker(JavaScriptCheck,String,String)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitToken(SyntaxToken) : void" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isLetterAround(String,String) : boolean" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CommentRegularExpressionCheck.java" name="CommentRegularExpressionCheck.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="71" coveredmethods="3" methods="3" elements="7" classes="2" ncloc="42" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CommentRegularExpressionCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CommentRegularExpressionCheck.Config">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="51" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="Config(String,String)" num="65" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CommentedCodeCheck.java" name="CommentedCodeCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CommentedCodeCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ComparisonWithNaNCheck.java" name="ComparisonWithNaNCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ComparisonWithNaNCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConditionalCommentCheck.java" name="ConditionalCommentCheck.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="4" loc="55" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="30" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="ConditionalCommentCheck">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Tree.Kind&gt;" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitNode(Tree) : void" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConditionalIndentationCheck.java" name="ConditionalIndentationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConditionalIndentationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConditionalOperatorCheck.java" name="ConditionalOperatorCheck.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ConditionalOperatorCheck">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpressionTree) : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConditionalUnreachableCodeCheck.java" name="ConditionalUnreachableCodeCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="17" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="ConditionalUnreachableCodeCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="protected" signature="conditionWithDeadCode(Tree,boolean,Set&lt;Tree&gt;) : void" num="34" count="27" type="method"/>
            <line num="36" count="27" type="stmt"/>
            <line falsecount="20" truecount="7" num="36" type="cond"/>
            <line num="37" count="27" type="stmt"/>
            <line num="38" count="27" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConsistentReturnsCheck.java" name="ConsistentReturnsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConsistentReturnsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConsoleLoggingCheck.java" name="ConsoleLoggingCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="50" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="25" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ConsoleLoggingCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ConsoleLoggingCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConstructorFunctionsForSideEffectsCheck.java" name="ConstructorFunctionsForSideEffectsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConstructorFunctionsForSideEffectsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ConstructorSuperCheck.java" name="ConstructorSuperCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConstructorSuperCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ContinueStatementCheck.java" name="ContinueStatementCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ContinueStatementCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="visitContinueStatement(ContinueStatementTree) : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CookiesCheck.java" name="CookiesCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CookiesCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CorsCheck.java" name="CorsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CorsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CounterUpdatedInLoopCheck.java" name="CounterUpdatedInLoopCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CounterUpdatedInLoopCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CyclomaticComplexityJavaScriptCheck.java" name="CyclomaticComplexityJavaScriptCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CyclomaticComplexityJavaScriptCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="51" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/CyclomaticComplexityTypeScriptCheck.java" name="CyclomaticComplexityTypeScriptCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="50" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="24" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CyclomaticComplexityTypeScriptCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="41" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DeadStoreCheck.java" name="DeadStoreCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DeadStoreCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DebuggerStatementCheck.java" name="DebuggerStatementCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DebuggerStatementCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DeclarationInGlobalScopeCheck.java" name="DeclarationInGlobalScopeCheck.java">
            <metrics coveredelements="13" coveredconditionals="4" complexity="6" loc="66" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="39" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="DeclarationInGlobalScopeCheck">
               <metrics coveredelements="13" coveredconditionals="4" complexity="6" coveredmethods="2" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="4" visibility="public" signature="visitScript(ScriptTree) : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1088" type="stmt"/>
            <line falsecount="1068" truecount="20" num="50" type="cond"/>
            <line num="51" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkSymbol(Symbol) : void" num="56" count="20" type="method"/>
            <line num="57" count="20" type="stmt"/>
            <line num="58" count="20" type="stmt"/>
            <line falsecount="1" truecount="19" num="58" type="cond"/>
            <line num="59" count="19" type="stmt"/>
            <line num="61" count="19" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DefaultParameterSideEffectCheck.java" name="DefaultParameterSideEffectCheck.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="5" loc="61" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="35" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="DefaultParameterSideEffectCheck">
               <metrics coveredelements="15" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="public" signature="visitParameterList(ParameterListTree) : void" num="40" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line num="44" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="44" type="cond"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="52" count="8" type="method"/>
            <line num="54" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="54" type="cond"/>
            <line num="55" count="5" type="stmt"/>
            <line num="56" count="5" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DefaultParametersNotLastCheck.java" name="DefaultParametersNotLastCheck.java">
            <metrics coveredelements="38" coveredconditionals="12" complexity="10" loc="93" coveredmethods="3" methods="3" elements="38" classes="1" ncloc="58" statements="23" conditionals="12" coveredstatements="23"/>
            <class name="DefaultParametersNotLastCheck">
               <metrics coveredelements="38" coveredconditionals="12" complexity="10" coveredmethods="3" methods="3" elements="38" statements="23" conditionals="12" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitNode(Tree) : void" num="49" count="9" type="method"/>
            <line num="51" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="53" type="cond"/>
            <line num="54" count="2" type="stmt"/>
            <line num="57" count="7" type="stmt"/>
            <line num="58" count="7" type="stmt"/>
            <line num="60" count="7" type="stmt"/>
            <line num="61" count="17" type="stmt"/>
            <line falsecount="7" truecount="10" num="61" type="cond"/>
            <line num="62" count="10" type="stmt"/>
            <line num="63" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="63" type="cond"/>
            <line num="64" count="5" type="stmt"/>
            <line num="68" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="68" type="cond"/>
            <line num="69" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="raiseIssue(List&lt;InitializedBindingElementTree&gt;) : void" num="73" count="5" type="method"/>
            <line num="74" count="5" type="stmt"/>
            <line num="76" count="5" type="stmt"/>
            <line num="77" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line num="81" count="5" type="stmt"/>
            <line num="82" count="5" type="stmt"/>
            <line num="84" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="84" type="cond"/>
            <line num="86" count="5" type="stmt"/>
            <line num="88" count="5" type="stmt"/>
            <line falsecount="5" truecount="3" num="88" type="cond"/>
            <line num="89" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DeleteArrayElementCheck.java" name="DeleteArrayElementCheck.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="4" loc="49" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="24" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DeleteArrayElementCheck">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="37" count="8" type="method"/>
            <line num="39" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="39" type="cond"/>
            <line num="40" count="3" type="stmt"/>
            <line num="42" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="isArrayElement(ExpressionTree) : boolean" num="45" count="8" type="method"/>
            <line num="46" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DeleteNonPropertyCheck.java" name="DeleteNonPropertyCheck.java">
            <metrics coveredelements="23" coveredconditionals="7" complexity="9" loc="76" coveredmethods="3" methods="3" elements="24" classes="1" ncloc="43" statements="13" conditionals="8" coveredstatements="13"/>
            <class name="DeleteNonPropertyCheck">
               <metrics coveredelements="23" coveredconditionals="7" complexity="9" coveredmethods="3" methods="3" elements="24" statements="13" conditionals="8" coveredstatements="13"/>
            </class>
            <line complexity="4" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="41" count="23" type="method"/>
            <line num="43" count="23" type="stmt"/>
            <line num="44" count="23" type="stmt"/>
            <line falsecount="14" truecount="9" num="44" type="cond"/>
            <line num="45" count="9" type="stmt"/>
            <line num="48" count="23" type="stmt"/>
            <line complexity="4" visibility="private" signature="isGlobalProperty(ExpressionTree) : boolean" num="54" count="13" type="method"/>
            <line num="55" count="13" type="stmt"/>
            <line falsecount="2" truecount="11" num="55" type="cond"/>
            <line num="57" count="11" type="stmt"/>
            <line num="58" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="58" type="cond"/>
            <line num="60" count="11" type="stmt"/>
            <line num="61" count="18" type="stmt"/>
            <line falsecount="11" truecount="7" num="61" type="cond"/>
            <line num="62" count="7" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMemberAccess(ExpressionTree) : boolean" num="73" count="23" type="method"/>
            <line num="74" count="23" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DeprecatedJQueryAPICheck.java" name="DeprecatedJQueryAPICheck.java">
            <metrics coveredelements="35" coveredconditionals="9" complexity="12" loc="121" coveredmethods="5" methods="5" elements="37" classes="1" ncloc="78" statements="22" conditionals="10" coveredstatements="21"/>
            <class name="DeprecatedJQueryAPICheck">
               <metrics coveredelements="35" coveredconditionals="9" complexity="12" coveredmethods="5" methods="5" elements="37" statements="22" conditionals="10" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="72" count="13" type="method"/>
            <line num="74" count="13" type="stmt"/>
            <line num="75" count="13" type="stmt"/>
            <line num="76" count="13" type="stmt"/>
            <line num="77" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMemberExpression(MemberExpressionTree) : void" num="80" count="11" type="method"/>
            <line num="82" count="11" type="stmt"/>
            <line num="83" count="11" type="stmt"/>
            <line num="84" count="11" type="stmt"/>
            <line num="85" count="11" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkJQueryProperty(ExpressionTree,List&lt;String&gt;,String) : void" num="88" count="24" type="method"/>
            <line num="89" count="24" type="stmt"/>
            <line falsecount="5" truecount="19" num="89" type="cond"/>
            <line num="91" count="19" type="stmt"/>
            <line num="92" count="19" type="stmt"/>
            <line num="94" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkSelectorProperty(ExpressionTree,List&lt;String&gt;,String) : void" num="101" count="24" type="method"/>
            <line num="102" count="24" type="stmt"/>
            <line falsecount="5" truecount="19" num="102" type="cond"/>
            <line num="104" count="19" type="stmt"/>
            <line num="105" count="19" type="stmt"/>
            <line num="107" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="107" type="cond"/>
            <line num="108" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="propertyIsDeprecated(ExpressionTree,List&lt;String&gt;) : boolean" num="114" count="12" type="method"/>
            <line num="115" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="115" type="cond"/>
            <line num="116" count="12" type="stmt"/>
            <line num="117" count="12" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DeprecationCheck.java" name="DeprecationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DeprecationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DestructuringAssignmentSyntaxCheck.java" name="DestructuringAssignmentSyntaxCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DestructuringAssignmentSyntaxCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DifferentTypesComparisonCheck.java" name="DifferentTypesComparisonCheck.java">
            <metrics coveredelements="31" coveredconditionals="10" complexity="9" loc="94" coveredmethods="4" methods="4" elements="31" classes="1" ncloc="58" statements="17" conditionals="10" coveredstatements="17"/>
            <class name="DifferentTypesComparisonCheck">
               <metrics coveredelements="31" coveredconditionals="10" complexity="9" coveredmethods="4" methods="4" elements="31" statements="17" conditionals="10" coveredstatements="17"/>
            </class>
            <line complexity="4" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="50" count="157" type="method"/>
            <line num="52" count="157" type="stmt"/>
            <line falsecount="142" truecount="15" num="52" type="cond"/>
            <line num="54" count="15" type="stmt"/>
            <line num="56" count="15" type="stmt"/>
            <line num="57" count="15" type="stmt"/>
            <line num="59" count="15" type="stmt"/>
            <line num="60" count="15" type="stmt"/>
            <line num="62" count="15" type="stmt"/>
            <line num="64" count="15" type="stmt"/>
            <line falsecount="9" truecount="6" num="64" type="cond"/>
            <line num="65" count="6" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="67" type="cond"/>
            <line num="68" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="endOfExecution(Scope) : void" num="73" count="3" type="method"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="13" type="stmt"/>
            <line falsecount="6" truecount="7" num="76" type="cond"/>
            <line num="77" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="82" count="3" type="method"/>
            <line num="84" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="raiseIssue(BinaryExpressionTree) : void" num="87" count="7" type="method"/>
            <line num="88" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="88" type="cond"/>
            <line num="90" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DuplicateAllBranchImplementationCheck.java" name="DuplicateAllBranchImplementationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DuplicateAllBranchImplementationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DuplicateBranchImplementationCheck.java" name="DuplicateBranchImplementationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DuplicateBranchImplementationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DuplicateConditionIfCheck.java" name="DuplicateConditionIfCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DuplicateConditionIfCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DuplicateFunctionArgumentCheck.java" name="DuplicateFunctionArgumentCheck.java">
            <metrics coveredelements="18" coveredconditionals="4" complexity="3" loc="68" coveredmethods="1" methods="1" elements="18" classes="1" ncloc="39" statements="13" conditionals="4" coveredstatements="13"/>
            <class name="DuplicateFunctionArgumentCheck">
               <metrics coveredelements="18" coveredconditionals="4" complexity="3" coveredmethods="1" methods="1" elements="18" statements="13" conditionals="4" coveredstatements="13"/>
            </class>
            <line complexity="3" visibility="public" signature="visitParameterList(ParameterListTree) : void" num="41" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="15" type="stmt"/>
            <line num="47" count="15" type="stmt"/>
            <line num="49" count="15" type="stmt"/>
            <line falsecount="7" truecount="8" num="49" type="cond"/>
            <line num="50" count="8" type="stmt"/>
            <line num="53" count="15" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="57" type="cond"/>
            <line num="58" count="5" type="stmt"/>
            <line num="59" count="7" type="stmt"/>
            <line num="60" count="7" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/DuplicatePropertyNameCheck.java" name="DuplicatePropertyNameCheck.java">
            <metrics coveredelements="119" coveredconditionals="43" complexity="33" loc="193" coveredmethods="10" methods="10" elements="121" classes="1" ncloc="142" statements="67" conditionals="44" coveredstatements="66"/>
            <class name="DuplicatePropertyNameCheck">
               <metrics coveredelements="119" coveredconditionals="43" complexity="33" coveredmethods="10" methods="10" elements="121" statements="67" conditionals="44" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="visitObjectLiteral(ObjectLiteralTree) : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClass(ClassTree) : void" num="59" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowObjectTypeTree(FlowObjectTypeTree) : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkProperties(List&lt;T&gt;) : void" num="71" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="51" type="stmt"/>
            <line num="77" count="51" type="stmt"/>
            <line falsecount="1" truecount="50" num="77" type="cond"/>
            <line num="78" count="50" type="stmt"/>
            <line num="79" count="50" type="stmt"/>
            <line falsecount="3" truecount="47" num="79" type="cond"/>
            <line num="80" count="47" type="stmt"/>
            <line falsecount="39" truecount="8" num="80" type="cond"/>
            <line num="81" count="8" type="stmt"/>
            <line num="83" count="39" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line complexity="5" visibility="private" signature="isStatic(Tree) : boolean" num="93" count="47" type="method"/>
            <line num="94" count="47" type="stmt"/>
            <line falsecount="40" truecount="7" num="94" type="cond"/>
            <line num="95" count="7" type="stmt"/>
            <line num="97" count="40" type="stmt"/>
            <line falsecount="29" truecount="11" num="97" type="cond"/>
            <line num="98" count="11" type="stmt"/>
            <line num="100" count="29" type="stmt"/>
            <line falsecount="18" truecount="11" num="100" type="cond"/>
            <line num="101" count="11" type="stmt"/>
            <line num="103" count="18" type="stmt"/>
            <line falsecount="11" truecount="7" num="103" type="cond"/>
            <line num="104" count="7" type="stmt"/>
            <line num="106" count="11" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkKeys(ListMultimap&lt;String, Tree&gt;) : void" num="109" count="8" type="method"/>
            <line num="110" count="8" type="stmt"/>
            <line num="111" count="19" type="stmt"/>
            <line num="112" count="19" type="stmt"/>
            <line falsecount="8" truecount="11" num="112" type="cond"/>
            <line num="113" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line num="116" count="26" type="stmt"/>
            <line num="117" count="26" type="stmt"/>
            <line complexity="2" visibility="private" signature="getterSetter(List&lt;Tree&gt;) : boolean" num="124" count="13" type="method"/>
            <line num="125" count="13" type="stmt"/>
            <line falsecount="4" truecount="9" num="125" type="cond"/>
            <line num="126" count="9" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line complexity="7" visibility="private" signature="getPropertyNameTree(Tree) : Tree" num="133" count="88" type="method"/>
            <line num="135" count="88" type="stmt"/>
            <line falsecount="74" truecount="14" num="135" type="cond"/>
            <line num="136" count="14" type="stmt"/>
            <line num="138" count="74" type="stmt"/>
            <line falsecount="56" truecount="18" num="138" type="cond"/>
            <line num="139" count="18" type="stmt"/>
            <line num="141" count="56" type="stmt"/>
            <line falsecount="38" truecount="18" num="141" type="cond"/>
            <line num="142" count="18" type="stmt"/>
            <line num="144" count="38" type="stmt"/>
            <line falsecount="18" truecount="20" num="144" type="cond"/>
            <line num="145" count="20" type="stmt"/>
            <line num="147" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="147" type="cond"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="16" type="stmt"/>
            <line falsecount="1" truecount="15" num="149" type="cond"/>
            <line num="150" count="15" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="8" visibility="private" signature="getPropertyName(Tree) : String" num="156" count="76" type="method"/>
            <line num="158" count="76" type="stmt"/>
            <line falsecount="65" truecount="11" num="158" type="cond"/>
            <line num="159" count="11" type="stmt"/>
            <line num="162" count="65" type="stmt"/>
            <line falsecount="15" truecount="50" num="162" type="cond"/>
            <line num="163" count="50" type="stmt"/>
            <line num="166" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="166" type="cond"/>
            <line num="167" count="2" type="stmt"/>
            <line num="170" count="13" type="stmt"/>
            <line falsecount="9" truecount="4" num="170" type="cond"/>
            <line num="171" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="4" type="stmt"/>
            <line num="179" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="179" type="cond"/>
            <line num="180" count="8" type="stmt"/>
            <line num="181" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="181" type="cond"/>
            <line num="182" count="6" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="trimLiteralQuotes(String) : String" num="189" count="11" type="method"/>
            <line num="190" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ElementTypeSelectorCheck.java" name="ElementTypeSelectorCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="42" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="19" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="ElementTypeSelectorCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="protected" signature="visitSelector(String,CallExpressionTree) : void" num="35" count="11" type="method"/>
            <line num="37" count="11" type="stmt"/>
            <line num="38" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="38" type="cond"/>
            <line num="39" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ElementUsedWithClassSelectorCheck.java" name="ElementUsedWithClassSelectorCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="3" loc="43" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="19" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="ElementUsedWithClassSelectorCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="3" visibility="protected" signature="visitSelector(String,CallExpressionTree) : void" num="35" count="7" type="method"/>
            <line num="37" count="7" type="stmt"/>
            <line num="39" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ElseIfWithoutElseCheck.java" name="ElseIfWithoutElseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ElseIfWithoutElseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EmptyBlockCheck.java" name="EmptyBlockCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="24" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="EmptyBlockCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="EmptyBlockCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="41" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EmptyDestructuringPatternCheck.java" name="EmptyDestructuringPatternCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EmptyDestructuringPatternCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EmptyFunctionCheck.java" name="EmptyFunctionCheck.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="9" loc="79" coveredmethods="6" methods="6" elements="24" classes="1" ncloc="50" statements="14" conditionals="4" coveredstatements="14"/>
            <class name="EmptyFunctionCheck">
               <metrics coveredelements="24" coveredconditionals="4" complexity="9" coveredmethods="6" methods="6" elements="24" statements="14" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="40" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="46" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMethodDeclaration(MethodDeclarationTree) : void" num="52" count="7" type="method"/>
            <line num="54" count="7" type="stmt"/>
            <line num="55" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAccessorMethodDeclaration(AccessorMethodDeclarationTree) : void" num="58" count="4" type="method"/>
            <line num="60" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrowFunction(ArrowFunctionTree) : void" num="64" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkFunction(FunctionTree,Tree) : void" num="70" count="24" type="method"/>
            <line num="71" count="24" type="stmt"/>
            <line falsecount="1" truecount="23" num="71" type="cond"/>
            <line num="72" count="23" type="stmt"/>
            <line num="73" count="23" type="stmt"/>
            <line falsecount="12" truecount="11" num="73" type="cond"/>
            <line num="74" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EmptyStatementCheck.java" name="EmptyStatementCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EmptyStatementCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EncryptionCheck.java" name="EncryptionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EncryptionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EqEqEqCheck.java" name="EqEqEqCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="EqEqEqCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="40" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EqualInForLoopTerminationCheck.java" name="EqualInForLoopTerminationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EqualInForLoopTerminationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ErrorWithoutThrowCheck.java" name="ErrorWithoutThrowCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ErrorWithoutThrowCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EscapeUtils.java" name="EscapeUtils.java">
            <metrics coveredelements="73" coveredconditionals="11" complexity="20" loc="103" coveredmethods="3" methods="4" elements="75" classes="1" ncloc="78" statements="59" conditionals="12" coveredstatements="59"/>
            <class name="EscapeUtils">
               <metrics coveredelements="73" coveredconditionals="11" complexity="20" coveredmethods="3" methods="4" elements="75" statements="59" conditionals="12" coveredstatements="59"/>
            </class>
            <line complexity="1" visibility="private" signature="EscapeUtils()" num="24" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="unescape(String) : String" num="27" count="75" type="method"/>
            <line num="28" count="75" type="stmt"/>
            <line num="29" count="75" type="stmt"/>
            <line num="30" count="75" type="stmt"/>
            <line num="31" count="75" type="stmt"/>
            <line falsecount="75" truecount="268" num="31" type="cond"/>
            <line num="32" count="268" type="stmt"/>
            <line num="33" count="268" type="stmt"/>
            <line falsecount="252" truecount="16" num="33" type="cond"/>
            <line num="34" count="16" type="stmt"/>
            <line num="35" count="16" type="stmt"/>
            <line num="36" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="36" type="cond"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="38" type="cond"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="10" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line num="45" count="252" type="stmt"/>
            <line num="46" count="252" type="stmt"/>
            <line num="49" count="75" type="stmt"/>
            <line complexity="4" visibility="private" signature="consumeEscapeSequence(int,int,String,StringBuilder,StringBuilder) : int" num="52" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line num="54" count="6" type="stmt"/>
            <line falsecount="6" truecount="20" num="54" type="cond"/>
            <line num="55" count="20" type="stmt"/>
            <line num="56" count="20" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="58" type="cond"/>
            <line num="59" count="6" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line complexity="10" visibility="private" signature="unescape(char) : char" num="66" count="10" type="method"/>
            <line num="67" count="10" type="stmt"/>
            <line num="68" count="10" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EslintBasedCheck.java" name="EslintBasedCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="62" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="33" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="EslintBasedCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(TreeVisitorContext) : List&lt;Issue&gt;" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLineIssue(Tree,String) : LineIssue" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/EvalCheck.java" name="EvalCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EvalCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ExpressionComplexityCheck.java" name="ExpressionComplexityCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="23" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ExpressionComplexityCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="40" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="45" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FileHeaderCheck.java" name="FileHeaderCheck.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="68" coveredmethods="3" methods="3" elements="7" classes="2" ncloc="40" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FileHeaderCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="FileHeaderCheck.Config">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="49" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="54" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="Config(String,boolean)" num="63" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FileNameDiffersFromClassCheck.java" name="FileNameDiffersFromClassCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FileNameDiffersFromClassCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FixmeTagPresenceCheck.java" name="FixmeTagPresenceCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FixmeTagPresenceCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ForHidingWhileCheck.java" name="ForHidingWhileCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ForHidingWhileCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ForInCheck.java" name="ForInCheck.java">
            <metrics coveredelements="27" coveredconditionals="11" complexity="10" loc="71" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="42" statements="14" conditionals="12" coveredstatements="14"/>
            <class name="ForInCheck">
               <metrics coveredelements="27" coveredconditionals="11" complexity="10" coveredmethods="2" methods="2" elements="28" statements="14" conditionals="12" coveredstatements="14"/>
            </class>
            <line complexity="7" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="41" count="9" type="method"/>
            <line num="43" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="43" type="cond"/>
            <line num="44" count="9" type="stmt"/>
            <line num="46" count="9" type="stmt"/>
            <line falsecount="2" truecount="7" num="46" type="cond"/>
            <line num="47" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="48" type="cond"/>
            <line num="51" count="9" type="stmt"/>
            <line falsecount="5" truecount="4" num="51" type="cond"/>
            <line num="52" count="4" type="stmt"/>
            <line num="56" count="9" type="stmt"/>
            <line complexity="3" visibility="private" signature="isAttrCopy(StatementTree) : boolean" num="59" count="6" type="method"/>
            <line num="60" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="60" type="cond"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="62" type="cond"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ForLoopConditionAndUpdateCheck.java" name="ForLoopConditionAndUpdateCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ForLoopConditionAndUpdateCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ForLoopIncrementSignCheck.java" name="ForLoopIncrementSignCheck.java">
            <metrics coveredelements="131" coveredconditionals="46" complexity="41" loc="183" coveredmethods="14" methods="14" elements="131" classes="2" ncloc="144" statements="71" conditionals="46" coveredstatements="71"/>
            <class name="ForLoopIncrementSignCheck">
               <metrics coveredelements="65" coveredconditionals="26" complexity="22" coveredmethods="7" methods="7" elements="65" statements="32" conditionals="26" coveredstatements="32"/>
            </class>
            <class name="ForLoopIncrementSignCheck.ForLoopIncrement">
               <metrics coveredelements="66" coveredconditionals="20" complexity="19" coveredmethods="7" methods="7" elements="66" statements="39" conditionals="20" coveredstatements="39"/>
            </class>
            <line complexity="4" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="44" count="32" type="method"/>
            <line num="46" count="32" type="stmt"/>
            <line num="47" count="32" type="stmt"/>
            <line num="48" count="32" type="stmt"/>
            <line falsecount="21" truecount="11" num="48" type="cond"/>
            <line num="49" count="11" type="stmt"/>
            <line num="51" count="21" type="stmt"/>
            <line num="52" count="21" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkIncrementSign(ExpressionTree,ForLoopIncrement) : void" num="55" count="21" type="method"/>
            <line num="56" count="21" type="stmt"/>
            <line falsecount="9" truecount="12" num="56" type="cond"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="58" type="cond"/>
            <line num="59" count="8" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="60" type="cond"/>
            <line num="61" count="3" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="63" type="cond"/>
            <line num="64" count="8" type="stmt"/>
            <line num="65" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="65" type="cond"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="67" type="cond"/>
            <line num="68" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkPositiveIncrement(Tree,ForLoopIncrement) : void" num="73" count="6" type="method"/>
            <line num="74" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="74" type="cond"/>
            <line num="75" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkNegativeIncrement(Tree,ForLoopIncrement) : void" num="79" count="11" type="method"/>
            <line num="80" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="80" type="cond"/>
            <line num="81" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="addIssue(Tree,ForLoopIncrement,String) : void" num="85" count="10" type="method"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForLoopIncrement(ExpressionTree,IdentifierTree,Double)" num="97" count="27" type="method"/>
            <line num="98" count="27" type="stmt"/>
            <line num="99" count="27" type="stmt"/>
            <line num="100" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSameIdentifier(ExpressionTree) : boolean" num="103" count="29" type="method"/>
            <line num="104" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasValue() : boolean" num="107" count="26" type="method"/>
            <line num="108" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : double" num="111" count="17" type="method"/>
            <line num="112" count="17" type="stmt"/>
            <line num="113" count="17" type="stmt"/>
            <line complexity="7" visibility="public" signature="findInLoopUpdate(ForStatementTree) : ForLoopIncrement" num="116" count="32" type="method"/>
            <line num="118" count="32" type="stmt"/>
            <line num="119" count="32" type="stmt"/>
            <line num="120" count="32" type="stmt"/>
            <line falsecount="1" truecount="31" num="120" type="cond"/>
            <line num="121" count="31" type="stmt"/>
            <line falsecount="21" truecount="10" num="121" type="cond"/>
            <line num="122" count="10" type="stmt"/>
            <line num="123" count="10" type="stmt"/>
            <line num="124" count="21" type="stmt"/>
            <line falsecount="13" truecount="8" num="124" type="cond"/>
            <line num="125" count="8" type="stmt"/>
            <line num="126" count="8" type="stmt"/>
            <line num="127" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="127" type="cond"/>
            <line num="128" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="130" type="cond"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="133" type="cond"/>
            <line num="134" count="7" type="stmt"/>
            <line num="135" count="7" type="stmt"/>
            <line num="138" count="32" type="stmt"/>
            <line complexity="2" visibility="private" signature="increment(ExpressionTree,ExpressionTree,Double) : ForLoopIncrement" num="141" count="25" type="method"/>
            <line num="143" count="25" type="stmt"/>
            <line falsecount="1" truecount="24" num="143" type="cond"/>
            <line num="144" count="24" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="assignmentIncrement(AssignmentExpressionTree) : ForLoopIncrement" num="149" count="7" type="method"/>
            <line num="150" count="7" type="stmt"/>
            <line num="151" count="7" type="stmt"/>
            <line num="152" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="152" type="cond"/>
            <line num="153" count="5" type="stmt"/>
            <line num="154" count="5" type="stmt"/>
            <line num="155" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="155" type="cond"/>
            <line num="156" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="156" type="cond"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="minus(Double) : Double" num="165" count="4" type="method"/>
            <line num="167" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="167" type="cond"/>
            <line complexity="4" visibility="public" signature="numericValue(ExpressionTree) : Double" num="170" count="12" type="method"/>
            <line num="172" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="172" type="cond"/>
            <line num="173" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="175" type="cond"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="178" type="cond"/>
            <line num="180" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FormatRuleProperty.java" name="FormatRuleProperty.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="27" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FormatRuleProperty">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="FormatRuleProperty(String)" num="24" count="6" type="method"/>
            <line num="25" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FunctionCallArgumentsOnNewLineCheck.java" name="FunctionCallArgumentsOnNewLineCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FunctionCallArgumentsOnNewLineCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FunctionConstructorCheck.java" name="FunctionConstructorCheck.java">
            <metrics coveredelements="27" coveredconditionals="8" complexity="8" loc="82" coveredmethods="4" methods="4" elements="27" classes="1" ncloc="49" statements="15" conditionals="8" coveredstatements="15"/>
            <class name="FunctionConstructorCheck">
               <metrics coveredelements="27" coveredconditionals="8" complexity="8" coveredmethods="4" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="15"/>
            </class>
            <line complexity="2" visibility="public" signature="visitNewExpression(NewExpressionTree) : void" num="42" count="11" type="method"/>
            <line num="44" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="44" type="cond"/>
            <line num="45" count="5" type="stmt"/>
            <line num="48" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="54" count="7" type="method"/>
            <line num="56" count="7" type="stmt"/>
            <line falsecount="4" truecount="3" num="56" type="cond"/>
            <line num="57" count="3" type="stmt"/>
            <line num="60" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="isFunctionConstructorWithPossibleInjection(ExpressionTree,ArgumentListTree) : boolean" num="63" count="18" type="method"/>
            <line num="64" count="18" type="stmt"/>
            <line num="65" count="18" type="stmt"/>
            <line falsecount="1" truecount="17" num="65" type="cond"/>
            <line num="66" count="17" type="stmt"/>
            <line num="67" count="17" type="stmt"/>
            <line num="69" count="18" type="stmt"/>
            <line complexity="2" visibility="private" signature="atLeastOneArgumentNotLiteral(ArgumentListTree) : boolean" num="72" count="11" type="method"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="15" type="stmt"/>
            <line falsecount="7" truecount="8" num="74" type="cond"/>
            <line num="75" count="8" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FunctionDeclarationsWithinBlocksCheck.java" name="FunctionDeclarationsWithinBlocksCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FunctionDeclarationsWithinBlocksCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FunctionDefinitionInsideLoopCheck.java" name="FunctionDefinitionInsideLoopCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FunctionDefinitionInsideLoopCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FunctionNameCheck.java" name="FunctionNameCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FunctionNameCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FunctionReturnTypeCheck.java" name="FunctionReturnTypeCheck.java">
            <metrics coveredelements="40" coveredconditionals="11" complexity="11" loc="122" coveredmethods="5" methods="5" elements="41" classes="1" ncloc="85" statements="24" conditionals="12" coveredstatements="24"/>
            <class name="FunctionReturnTypeCheck">
               <metrics coveredelements="40" coveredconditionals="11" complexity="11" coveredmethods="5" methods="5" elements="41" statements="24" conditionals="12" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="71" count="83" type="method"/>
            <line num="73" count="83" type="stmt"/>
            <line falsecount="59" truecount="24" num="73" type="cond"/>
            <line num="74" count="24" type="stmt"/>
            <line num="75" count="24" type="stmt"/>
            <line falsecount="1" truecount="23" num="75" type="cond"/>
            <line num="76" count="23" type="stmt"/>
            <line num="77" count="23" type="stmt"/>
            <line num="78" count="23" type="stmt"/>
            <line falsecount="4" truecount="19" num="78" type="cond"/>
            <line num="79" count="19" type="stmt"/>
            <line complexity="2" visibility="private" signature="toTypeConstraint(Constraint) : Constraint" num="86" count="23" type="method"/>
            <line num="87" count="23" type="stmt"/>
            <line num="88" count="86" type="stmt"/>
            <line falsecount="67" truecount="19" num="88" type="cond"/>
            <line num="89" count="19" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="endOfExecution(Scope) : void" num="96" count="12" type="method"/>
            <line num="98" count="12" type="stmt"/>
            <line num="100" count="12" type="stmt"/>
            <line falsecount="7" truecount="5" num="100" type="cond"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="raiseIssue(Tree) : void" num="105" count="5" type="method"/>
            <line num="106" count="5" type="stmt"/>
            <line num="107" count="5" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="112" type="cond"/>
            <line num="113" count="11" type="stmt"/>
            <line num="114" count="11" type="stmt"/>
            <line num="116" count="11" type="stmt"/>
            <line num="117" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/FutureReservedWordsCheck.java" name="FutureReservedWordsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FutureReservedWordsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/GeneratorWithoutYieldCheck.java" name="GeneratorWithoutYieldCheck.java">
            <metrics coveredelements="45" coveredconditionals="14" complexity="11" loc="105" coveredmethods="4" methods="4" elements="45" classes="1" ncloc="72" statements="27" conditionals="14" coveredstatements="27"/>
            <class name="GeneratorWithoutYieldCheck">
               <metrics coveredelements="45" coveredconditionals="14" complexity="11" coveredmethods="4" methods="4" elements="45" statements="27" conditionals="14" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitNode(Tree) : void" num="55" count="8" type="method"/>
            <line num="57" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="57" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="58" type="cond"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="leaveNode(Tree) : void" num="69" count="8" type="method"/>
            <line num="71" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="71" type="cond"/>
            <line num="72" count="6" type="stmt"/>
            <line num="73" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="73" type="cond"/>
            <line num="74" count="5" type="stmt"/>
            <line complexity="4" visibility="private" signature="getPrimaryLocation(Tree) : IssueLocation" num="79" count="5" type="method"/>
            <line num="80" count="5" type="stmt"/>
            <line num="81" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="83" type="cond"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="88" type="cond"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="96" type="cond"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="103" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/GetterSetterCheck.java" name="GetterSetterCheck.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="94" coveredmethods="6" methods="6" elements="23" classes="1" ncloc="61" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="GetterSetterCheck">
               <metrics coveredelements="23" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="23" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="visitObjectLiteral(ObjectLiteralTree) : void" num="46" count="3" type="method"/>
            <line num="48" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClass(ClassTree) : void" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkProperties(List&lt;Tree&gt;) : void" num="60" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line num="66" count="5" type="stmt"/>
            <line num="67" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseIssue(AccessorMethodDeclarationTree,String) : void" num="77" count="7" type="method"/>
            <line num="78" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="accessors(Kind,List&lt;Tree&gt;) : Map&lt;String, AccessorMethodDeclarationTree&gt;" num="81" count="10" type="method"/>
            <line num="82" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="getName(AccessorMethodDeclarationTree) : String" num="91" count="16" type="method"/>
            <line num="92" count="16" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/GlobalThisCheck.java" name="GlobalThisCheck.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="7" loc="69" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="43" statements="9" conditionals="6" coveredstatements="9"/>
            <class name="GlobalThisCheck">
               <metrics coveredelements="18" coveredconditionals="6" complexity="7" coveredmethods="3" methods="3" elements="18" statements="9" conditionals="6" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitNode(Tree) : void" num="50" count="30" type="method"/>
            <line num="52" count="30" type="stmt"/>
            <line falsecount="12" truecount="18" num="52" type="cond"/>
            <line num="53" count="18" type="stmt"/>
            <line num="54" count="18" type="stmt"/>
            <line falsecount="15" truecount="3" num="54" type="cond"/>
            <line num="55" count="3" type="stmt"/>
            <line num="57" count="18" type="stmt"/>
            <line num="60" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="leaveNode(Tree) : void" num="63" count="30" type="method"/>
            <line num="65" count="30" type="stmt"/>
            <line falsecount="18" truecount="12" num="65" type="cond"/>
            <line num="66" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/GlobalsShadowingCheck.java" name="GlobalsShadowingCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GlobalsShadowingCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/GratuitousConditionCheck.java" name="GratuitousConditionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GratuitousConditionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/HardcodedCredentialsCheck.java" name="HardcodedCredentialsCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="HardcodedCredentialsCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="43" count="2" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/HashingCheck.java" name="HashingCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="HashingCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/HtmlCommentsCheck.java" name="HtmlCommentsCheck.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="3" loc="54" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="29" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="HtmlCommentsCheck">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="2" visibility="public" signature="visitNode(Tree) : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="44" type="cond"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Tree.Kind&gt;" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IdChildrenSelectorCheck.java" name="IdChildrenSelectorCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="42" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="19" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="IdChildrenSelectorCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="protected" signature="visitSelector(String,CallExpressionTree) : void" num="35" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line num="38" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="38" type="cond"/>
            <line num="39" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IdenticalExpressionOnBinaryOperatorCheck.java" name="IdenticalExpressionOnBinaryOperatorCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IdenticalExpressionOnBinaryOperatorCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IdenticalFunctionsCheck.java" name="IdenticalFunctionsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IdenticalFunctionsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IfConditionalAlwaysTrueOrFalseCheck.java" name="IfConditionalAlwaysTrueOrFalseCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="43" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="18" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="IfConditionalAlwaysTrueOrFalseCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="visitIfStatement(IfStatementTree) : void" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="36" type="cond"/>
            <line num="37" count="2" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IgnoredReturnCheck.java" name="IgnoredReturnCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IgnoredReturnCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ImmediatelyReturnedVariableCheck.java" name="ImmediatelyReturnedVariableCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ImmediatelyReturnedVariableCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ImplicitDependenciesCheck.java" name="ImplicitDependenciesCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ImplicitDependenciesCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/InOperatorTypeErrorCheck.java" name="InOperatorTypeErrorCheck.java">
            <metrics coveredelements="11" coveredconditionals="4" complexity="3" loc="51" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="27" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="InOperatorTypeErrorCheck">
               <metrics coveredelements="11" coveredconditionals="4" complexity="3" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="39" count="50" type="method"/>
            <line num="41" count="50" type="stmt"/>
            <line falsecount="42" truecount="8" num="41" type="cond"/>
            <line num="42" count="8" type="stmt"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="44" type="cond"/>
            <line num="45" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/InconsistentFunctionCallCheck.java" name="InconsistentFunctionCallCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InconsistentFunctionCallCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IncrementDecrementInSubExpressionCheck.java" name="IncrementDecrementInSubExpressionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IncrementDecrementInSubExpressionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/IndexOfCompareToPositiveNumberCheck.java" name="IndexOfCompareToPositiveNumberCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IndexOfCompareToPositiveNumberCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/InstanceofInMisuseCheck.java" name="InstanceofInMisuseCheck.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="53" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="28" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="InstanceofInMisuseCheck">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitNode(Tree) : void" num="46" count="7" type="method"/>
            <line num="48" count="7" type="stmt"/>
            <line num="49" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/InvariantReturnCheck.java" name="InvariantReturnCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InvariantReturnCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/JQueryVarNameConventionCheck.java" name="JQueryVarNameConventionCheck.java">
            <metrics coveredelements="25" coveredconditionals="8" complexity="9" loc="83" coveredmethods="2" methods="3" elements="27" classes="1" ncloc="52" statements="16" conditionals="8" coveredstatements="15"/>
            <class name="JQueryVarNameConventionCheck">
               <metrics coveredelements="25" coveredconditionals="8" complexity="9" coveredmethods="2" methods="3" elements="27" statements="16" conditionals="8" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="setFormat(String) : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitScript(ScriptTree) : void" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1020" type="stmt"/>
            <line falsecount="2" truecount="1018" num="57" type="cond"/>
            <line num="58" count="1018" type="stmt"/>
            <line num="59" count="1018" type="stmt"/>
            <line falsecount="1016" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="3" visibility="protected" signature="raiseIssuesOnDeclarations(Symbol,String) : void" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="71" type="cond"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="77" type="cond"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/JumpStatementInFinallyCheck.java" name="JumpStatementInFinallyCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JumpStatementInFinallyCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/LabelPlacementCheck.java" name="LabelPlacementCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LabelPlacementCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/LabelledStatementCheck.java" name="LabelledStatementCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LabelledStatementCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/LineLengthCheck.java" name="LineLengthCheck.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="59" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="33" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="LineLengthCheck">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/LocalStorageCheck.java" name="LocalStorageCheck.java">
            <metrics coveredelements="46" coveredconditionals="10" complexity="14" loc="127" coveredmethods="7" methods="7" elements="48" classes="2" ncloc="88" statements="29" conditionals="12" coveredstatements="29"/>
            <class name="LocalStorageCheck">
               <metrics coveredelements="41" coveredconditionals="10" complexity="12" coveredmethods="5" methods="5" elements="43" statements="26" conditionals="12" coveredstatements="26"/>
            </class>
            <class name="LocalStorageCheck.StorageType">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitMemberExpression(MemberExpressionTree) : void" num="64" count="29" type="method"/>
            <line num="67" count="29" type="stmt"/>
            <line falsecount="2" truecount="27" num="67" type="cond"/>
            <line num="68" count="27" type="stmt"/>
            <line num="70" count="27" type="stmt"/>
            <line num="71" count="27" type="stmt"/>
            <line num="73" count="27" type="stmt"/>
            <line falsecount="15" truecount="12" num="73" type="cond"/>
            <line num="74" count="12" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="76" type="cond"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="78" type="cond"/>
            <line num="79" count="2" type="stmt"/>
            <line num="83" count="29" type="stmt"/>
            <line complexity="2" visibility="private" signature="saveDebtLocation(MemberExpressionTree,String) : void" num="86" count="14" type="method"/>
            <line num="88" count="14" type="stmt"/>
            <line num="89" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="12" type="stmt"/>
            <line complexity="2" visibility="private" signature="getObjectName(MemberExpressionTree) : String" num="96" count="29" type="method"/>
            <line num="97" count="29" type="stmt"/>
            <line falsecount="22" truecount="7" num="97" type="cond"/>
            <line num="98" count="7" type="stmt"/>
            <line num="99" count="7" type="stmt"/>
            <line num="101" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkForIssues() : void" num="105" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="StorageType(MemberExpressionTree)" num="118" count="2" type="method"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="inc() : void" num="123" count="12" type="method"/>
            <line num="124" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/LoopsShouldNotBeInfiniteCheck.java" name="LoopsShouldNotBeInfiniteCheck.java">
            <metrics coveredelements="125" coveredconditionals="22" complexity="40" loc="289" coveredmethods="29" methods="29" elements="125" classes="4" ncloc="225" statements="74" conditionals="22" coveredstatements="74"/>
            <class name="LoopsShouldNotBeInfiniteCheck">
               <metrics coveredelements="68" coveredconditionals="14" complexity="21" coveredmethods="14" methods="14" elements="68" statements="40" conditionals="14" coveredstatements="40"/>
            </class>
            <class name="LoopsShouldNotBeInfiniteCheck.FileLoops">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="LoopsShouldNotBeInfiniteCheck.Loop">
               <metrics coveredelements="37" coveredconditionals="6" complexity="11" coveredmethods="8" methods="8" elements="37" statements="23" conditionals="6" coveredstatements="23"/>
            </class>
            <class name="LoopsShouldNotBeInfiniteCheck.LoopIssueCreator">
               <metrics coveredelements="12" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="12" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="startOfFile(ScriptTree) : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkConditions(Map&lt;Tree, Collection&lt;Constraint&gt;&gt;) : void" num="73" count="28" type="method"/>
            <line num="75" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfFile(ScriptTree) : void" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="addIssue(IterationStatementTree) : void" num="88" count="16" type="method"/>
            <line num="89" count="16" type="stmt"/>
            <line complexity="1" visibility="package" signature="create(ScriptTree) : FileLoops" num="99" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="105" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNode(Tree) : void" num="110" count="42" type="method"/>
            <line num="112" count="42" type="stmt"/>
            <line complexity="2" visibility="private" signature="alwaysTrue(Collection&lt;Constraint&gt;) : boolean" num="116" count="33" type="method"/>
            <line num="117" count="33" type="stmt"/>
            <line falsecount="10" truecount="23" num="117" type="cond"/>
            <line num="118" count="23" type="stmt"/>
            <line num="119" count="23" type="stmt"/>
            <line num="122" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="isInfiniteLoop(IterationStatementTree,JavaScriptTree) : boolean" num="125" count="42" type="method"/>
            <line num="126" count="42" type="stmt"/>
            <line falsecount="40" truecount="2" num="126" type="cond"/>
            <line num="127" count="2" type="stmt"/>
            <line num="129" count="40" type="stmt"/>
            <line num="130" count="40" type="stmt"/>
            <line num="131" count="40" type="stmt"/>
            <line falsecount="28" truecount="12" num="131" type="cond"/>
            <line num="132" count="12" type="stmt"/>
            <line num="134" count="28" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBrokenLoop(JavaScriptTree,IterationStatementTree,ControlFlowGraph) : boolean" num="137" count="40" type="method"/>
            <line num="138" count="40" type="stmt"/>
            <line num="139" count="40" type="stmt"/>
            <line complexity="1" visibility="private" signature="conditionIsUpdated(JavaScriptTree,JavaScriptTree,Map&lt;Tree, CfgBlock&gt;) : boolean" num="142" count="26" type="method"/>
            <line num="143" count="26" type="stmt"/>
            <line num="145" count="26" type="stmt"/>
            <line num="149" count="26" type="stmt"/>
            <line num="150" count="26" type="stmt"/>
            <line num="151" count="26" type="stmt"/>
            <line complexity="4" visibility="private" signature="isNeverExecutedLoop(JavaScriptTree) : boolean" num="154" count="42" type="method"/>
            <line num="155" count="42" type="stmt"/>
            <line falsecount="29" truecount="13" num="155" type="cond"/>
            <line num="156" count="13" type="stmt"/>
            <line num="157" count="13" type="stmt"/>
            <line falsecount="12" truecount="1" num="157" type="cond"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="160" type="cond"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="40" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbolsTouchedOutsideFlowGraph(Set&lt;Symbol&gt;,Map&lt;Tree, CfgBlock&gt;) : Set&lt;Symbol&gt;" num="167" count="26" type="method"/>
            <line num="168" count="26" type="stmt"/>
            <line complexity="2" visibility="private" signature="isWriteUsage(Usage) : boolean" num="175" count="47" type="method"/>
            <line num="176" count="47" type="stmt"/>
            <line falsecount="31" truecount="16" num="176" type="cond"/>
            <line num="177" count="16" type="stmt"/>
            <line num="179" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="Loop(ControlFlowGraph,IterationStatementTree,JavaScriptTree)" num="186" count="40" type="method"/>
            <line num="187" count="40" type="stmt"/>
            <line num="188" count="40" type="stmt"/>
            <line num="189" count="40" type="stmt"/>
            <line num="190" count="40" type="stmt"/>
            <line num="191" count="40" type="stmt"/>
            <line complexity="1" visibility="private" signature="findRootBranchingBlocks(ControlFlowGraph,IterationStatementTree,JavaScriptTree) : Set&lt;CfgBranchingBlock&gt;" num="194" count="40" type="method"/>
            <line num="195" count="40" type="stmt"/>
            <line complexity="3" visibility="private" signature="blockBelongsToLoopEndCondition(CfgBranchingBlock,IterationStatementTree,JavaScriptTree) : boolean" num="202" count="83" type="method"/>
            <line num="203" count="83" type="stmt"/>
            <line num="204" count="83" type="stmt"/>
            <line falsecount="48" truecount="35" num="204" type="cond"/>
            <line num="205" count="35" type="stmt"/>
            <line num="207" count="48" type="stmt"/>
            <line falsecount="5" truecount="43" num="207" type="cond"/>
            <line num="208" count="43" type="stmt"/>
            <line num="211" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="findLoopBlocks(IterationStatementTree,Map&lt;Tree, CfgBlock&gt;) : Set&lt;CfgBlock&gt;" num="214" count="40" type="method"/>
            <line num="215" count="40" type="stmt"/>
            <line num="216" count="40" type="stmt"/>
            <line num="217" count="40" type="stmt"/>
            <line complexity="2" visibility="private" signature="addUpdateExpression(IterationStatementTree,Stream&lt;JavaScriptTree&gt;) : Stream&lt;JavaScriptTree&gt;" num="220" count="40" type="method"/>
            <line num="221" count="40" type="stmt"/>
            <line falsecount="30" truecount="10" num="221" type="cond"/>
            <line num="222" count="10" type="stmt"/>
            <line num="224" count="30" type="stmt"/>
            <line complexity="1" visibility="package" signature="jumpingExits() : Set&lt;CfgBlock&gt;" num="227" count="40" type="method"/>
            <line num="228" count="40" type="stmt"/>
            <line num="229" count="40" type="stmt"/>
            <line num="230" count="40" type="stmt"/>
            <line complexity="1" visibility="package" signature="exits() : Set&lt;CfgBlock&gt;" num="233" count="40" type="method"/>
            <line num="234" count="40" type="stmt"/>
            <line complexity="1" visibility="private" signature="isExit(CfgBlock) : boolean" num="237" count="81" type="method"/>
            <line num="238" count="81" type="stmt"/>
            <line complexity="1" visibility="private" signature="treesToBlocks(ControlFlowGraph) : Map&lt;Tree, CfgBlock&gt;" num="243" count="80" type="method"/>
            <line num="244" count="80" type="stmt"/>
            <line num="245" count="80" type="stmt"/>
            <line num="246" count="80" type="stmt"/>
            <line complexity="1" visibility="private" signature="allSymbols(JavaScriptTree) : Stream&lt;Symbol&gt;" num="249" count="52" type="method"/>
            <line num="250" count="52" type="stmt"/>
            <line num="251" count="52" type="stmt"/>
            <line complexity="1" visibility="private" signature="allSymbolsUsages(JavaScriptTree) : Stream&lt;Usage&gt;" num="258" count="26" type="method"/>
            <line num="259" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatementTree) : void" num="263" count="8" type="method"/>
            <line num="265" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDoWhileStatement(DoWhileStatementTree) : void" num="268" count="2" type="method"/>
            <line num="270" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="273" count="6" type="method"/>
            <line num="275" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="275" type="cond"/>
            <line num="276" count="2" type="stmt"/>
            <line num="278" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="createIssue(Tree,ExpressionTree) : void" num="282" count="14" type="method"/>
            <line num="283" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MaxParameterCheck.java" name="MaxParameterCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="28" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MaxParameterCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="49" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MaxSwitchCasesCheck.java" name="MaxSwitchCasesCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MaxSwitchCasesCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MaxUnionSizeCheck.java" name="MaxUnionSizeCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="24" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MaxUnionSizeCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="40" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="45" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MisorderedParameterListCheck.java" name="MisorderedParameterListCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MisorderedParameterListCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MissingNewlineAtEndOfFileCheck.java" name="MissingNewlineAtEndOfFileCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MissingNewlineAtEndOfFileCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="41" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MissingTrailingCommaCheck.java" name="MissingTrailingCommaCheck.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="13" loc="86" coveredmethods="8" methods="8" elements="31" classes="1" ncloc="53" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="MissingTrailingCommaCheck">
               <metrics coveredelements="31" coveredconditionals="6" complexity="13" coveredmethods="8" methods="8" elements="31" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="3" visibility="public" signature="visitObjectLiteral(ObjectLiteralTree) : void" num="38" count="9" type="method"/>
            <line num="40" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="40" type="cond"/>
            <line num="41" count="3" type="stmt"/>
            <line num="44" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitArrayLiteral(ArrayLiteralTree) : void" num="47" count="7" type="method"/>
            <line num="49" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMultiline(ObjectLiteralTree) : boolean" num="56" count="9" type="method"/>
            <line num="57" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMultiline(ArrayLiteralTree) : boolean" num="60" count="7" type="method"/>
            <line num="61" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="isMultilineInternal(List&lt;? extends Tree&gt;,SyntaxToken) : boolean" num="64" count="16" type="method"/>
            <line num="65" count="16" type="stmt"/>
            <line falsecount="3" truecount="13" num="65" type="cond"/>
            <line num="66" count="13" type="stmt"/>
            <line num="67" count="13" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="endsWithComma(ObjectLiteralTree) : boolean" num="72" count="4" type="method"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="endsWithComma(ArrayLiteralTree) : boolean" num="77" count="3" type="method"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseIssueOnLastElement(List&lt;? extends Tree&gt;) : void" num="82" count="5" type="method"/>
            <line num="83" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ModelDefaultsWithArrayOrObjectCheck.java" name="ModelDefaultsWithArrayOrObjectCheck.java">
            <metrics coveredelements="19" coveredconditionals="6" complexity="10" loc="65" coveredmethods="2" methods="2" elements="21" classes="1" ncloc="37" statements="11" conditionals="8" coveredstatements="11"/>
            <class name="ModelDefaultsWithArrayOrObjectCheck">
               <metrics coveredelements="19" coveredconditionals="6" complexity="10" coveredmethods="2" methods="2" elements="21" statements="11" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="7" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="39" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="41" type="cond"/>
            <line num="42" count="5" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="44" type="cond"/>
            <line num="45" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="47" type="cond"/>
            <line num="48" count="2" type="stmt"/>
            <line num="52" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="hasObjectOrArrayAttribute(ObjectLiteralTree) : boolean" num="55" count="3" type="method"/>
            <line num="56" count="3" type="stmt"/>
            <line num="58" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MultilineBlockCurlyBraceCheck.java" name="MultilineBlockCurlyBraceCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MultilineBlockCurlyBraceCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/MultilineStringLiteralsCheck.java" name="MultilineStringLiteralsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MultilineStringLiteralsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NamedFunctionExpressionCheck.java" name="NamedFunctionExpressionCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="43" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="19" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="NamedFunctionExpressionCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="35" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="37" type="cond"/>
            <line num="38" count="3" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NestedAssignmentCheck.java" name="NestedAssignmentCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NestedAssignmentCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NestedConditionalOperatorsCheck.java" name="NestedConditionalOperatorsCheck.java">
            <metrics coveredelements="24" coveredconditionals="6" complexity="8" loc="78" coveredmethods="4" methods="4" elements="24" classes="1" ncloc="43" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="NestedConditionalOperatorsCheck">
               <metrics coveredelements="24" coveredconditionals="6" complexity="8" coveredmethods="4" methods="4" elements="24" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitConditionalExpression(ConditionalExpressionTree) : void" num="46" count="25" type="method"/>
            <line num="48" count="25" type="stmt"/>
            <line falsecount="18" truecount="7" num="48" type="cond"/>
            <line num="49" count="7" type="stmt"/>
            <line num="51" count="25" type="stmt"/>
            <line num="53" count="25" type="stmt"/>
            <line num="55" count="25" type="stmt"/>
            <line complexity="3" visibility="private" signature="isNestingBroken(ConditionalExpressionTree) : boolean" num="62" count="13" type="method"/>
            <line num="63" count="13" type="stmt"/>
            <line num="64" count="13" type="stmt"/>
            <line falsecount="7" truecount="22" num="64" type="cond"/>
            <line num="65" count="22" type="stmt"/>
            <line falsecount="16" truecount="6" num="65" type="cond"/>
            <line num="66" count="6" type="stmt"/>
            <line num="68" count="16" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="breaksNesting(Tree) : boolean" num="73" count="22" type="method"/>
            <line num="74" count="22" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NestedControlFlowDepthCheck.java" name="NestedControlFlowDepthCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="28" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NestedControlFlowDepthCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NewOperatorMisuseCheck.java" name="NewOperatorMisuseCheck.java">
            <metrics coveredelements="36" coveredconditionals="11" complexity="13" loc="96" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="64" statements="22" conditionals="12" coveredstatements="22"/>
            <class name="NewOperatorMisuseCheck">
               <metrics coveredelements="36" coveredconditionals="11" complexity="13" coveredmethods="3" methods="3" elements="37" statements="22" conditionals="12" coveredstatements="22"/>
            </class>
            <line complexity="4" visibility="public" signature="visitNewExpression(NewExpressionTree) : void" num="52" count="40" type="method"/>
            <line num="54" count="40" type="stmt"/>
            <line num="56" count="40" type="stmt"/>
            <line falsecount="23" truecount="17" num="56" type="cond"/>
            <line num="57" count="17" type="stmt"/>
            <line num="58" count="17" type="stmt"/>
            <line num="59" count="17" type="stmt"/>
            <line num="60" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="17" type="stmt"/>
            <line num="68" count="40" type="stmt"/>
            <line complexity="6" visibility="private" signature="isConstructor(TypeSet) : boolean" num="71" count="38" type="method"/>
            <line num="72" count="38" type="stmt"/>
            <line num="74" count="38" type="stmt"/>
            <line num="76" count="38" type="stmt"/>
            <line falsecount="10" truecount="28" num="76" type="cond"/>
            <line num="77" count="28" type="stmt"/>
            <line falsecount="18" truecount="10" num="77" type="cond"/>
            <line num="78" count="10" type="stmt"/>
            <line num="79" count="18" type="stmt"/>
            <line falsecount="10" truecount="8" num="79" type="cond"/>
            <line num="80" count="8" type="stmt"/>
            <line num="84" count="38" type="stmt"/>
            <line complexity="3" visibility="private" signature="hasJSDocAnnotation(FunctionTree) : boolean" num="87" count="8" type="method"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="89" type="cond"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoAccessorFieldMismatchCheck.java" name="NoAccessorFieldMismatchCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoAccessorFieldMismatchCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoAnyCheck.java" name="NoAnyCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoAnyCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoArrayDeleteCheck.java" name="NoArrayDeleteCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoArrayDeleteCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoDuplicateImportsCheck.java" name="NoDuplicateImportsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoDuplicateImportsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="28" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoDuplicateInCompositeCheck.java" name="NoDuplicateInCompositeCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoDuplicateInCompositeCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoDuplicateStringCheck.java" name="NoDuplicateStringCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NoDuplicateStringCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoElementOverwriteCheck.java" name="NoElementOverwriteCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoElementOverwriteCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoEmptyCollectionCheck.java" name="NoEmptyCollectionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoEmptyCollectionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoEmptyInterfaceCheck.java" name="NoEmptyInterfaceCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoEmptyInterfaceCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoForInArrayCheck.java" name="NoForInArrayCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoForInArrayCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoInMisuseCheck.java" name="NoInMisuseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoInMisuseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoInferrableTypesCheck.java" name="NoInferrableTypesCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoInferrableTypesCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoInvalidAwaitCheck.java" name="NoInvalidAwaitCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoInvalidAwaitCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoInvertedBooleanCheckCheck.java" name="NoInvertedBooleanCheckCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoInvertedBooleanCheckCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoMagicNumbersCheck.java" name="NoMagicNumbersCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="22" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NoMagicNumbersCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="NoMagicNumbersCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="38" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoMisleadingArrayReverseCheck.java" name="NoMisleadingArrayReverseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoMisleadingArrayReverseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoMisusedNewCheck.java" name="NoMisusedNewCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoMisusedNewCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoNestedSwitchCheck.java" name="NoNestedSwitchCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoNestedSwitchCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoNestedTemplateLiteralsCheck.java" name="NoNestedTemplateLiteralsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoNestedTemplateLiteralsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoNonNullAssertionCheck.java" name="NoNonNullAssertionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoNonNullAssertionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoOneIterationLoopCheck.java" name="NoOneIterationLoopCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoOneIterationLoopCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoRedundantJumpCheck.java" name="NoRedundantJumpCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoRedundantJumpCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoRedundantOptionalCheck.java" name="NoRedundantOptionalCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoRedundantOptionalCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoRequireImportsCheck.java" name="NoRequireImportsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoRequireImportsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoReturnAwaitCheck.java" name="NoReturnAwaitCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoReturnAwaitCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoReturnTypeAnyCheck.java" name="NoReturnTypeAnyCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoReturnTypeAnyCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoSparseArraysCheck.java" name="NoSparseArraysCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoSparseArraysCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoThisAliasCheck.java" name="NoThisAliasCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NoThisAliasCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="NoThisAliasCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoUnnecessaryTypeAssertionCheck.java" name="NoUnnecessaryTypeAssertionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoUnnecessaryTypeAssertionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NoUselessCatchCheck.java" name="NoUselessCatchCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoUselessCatchCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NonCaseLabelInSwitchCheck.java" name="NonCaseLabelInSwitchCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NonCaseLabelInSwitchCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NonEmptyCaseWithoutBreakCheck.java" name="NonEmptyCaseWithoutBreakCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NonEmptyCaseWithoutBreakCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NonExistentAssignmentOperatorCheck.java" name="NonExistentAssignmentOperatorCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NonExistentAssignmentOperatorCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NonExistentPropertyAccessCheck.java" name="NonExistentPropertyAccessCheck.java">
            <metrics coveredelements="19" coveredconditionals="6" complexity="6" loc="75" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="48" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="NonExistentPropertyAccessCheck">
               <metrics coveredelements="19" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="19" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="2" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="53" count="231" type="method"/>
            <line num="55" count="231" type="stmt"/>
            <line falsecount="208" truecount="23" num="55" type="cond"/>
            <line num="56" count="23" type="stmt"/>
            <line num="57" count="23" type="stmt"/>
            <line complexity="2" visibility="private" signature="getTypeOfObject(ProgramState) : String" num="61" count="23" type="method"/>
            <line num="62" count="23" type="stmt"/>
            <line num="63" count="23" type="stmt"/>
            <line num="64" count="23" type="stmt"/>
            <line falsecount="1" truecount="22" num="64" type="cond"/>
            <line complexity="2" visibility="private" signature="isUndefinedProperty(ProgramState,Tree,ProgramPoint) : boolean" num="67" count="231" type="method"/>
            <line num="68" count="231" type="stmt"/>
            <line falsecount="181" truecount="50" num="68" type="cond"/>
            <line num="69" count="50" type="stmt"/>
            <line num="70" count="50" type="stmt"/>
            <line num="73" count="181" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NonNumberInArithmeticExpressionCheck.java" name="NonNumberInArithmeticExpressionCheck.java">
            <metrics coveredelements="86" coveredconditionals="32" complexity="33" loc="193" coveredmethods="7" methods="7" elements="89" classes="1" ncloc="144" statements="48" conditionals="34" coveredstatements="47"/>
            <class name="NonNumberInArithmeticExpressionCheck">
               <metrics coveredelements="86" coveredconditionals="32" complexity="33" coveredmethods="7" methods="7" elements="89" statements="48" conditionals="34" coveredstatements="47"/>
            </class>
            <line complexity="6" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="95" count="331" type="method"/>
            <line num="97" count="331" type="stmt"/>
            <line falsecount="272" truecount="59" num="97" type="cond"/>
            <line num="98" count="59" type="stmt"/>
            <line num="101" count="331" type="stmt"/>
            <line falsecount="320" truecount="11" num="101" type="cond"/>
            <line num="102" count="11" type="stmt"/>
            <line num="103" count="11" type="stmt"/>
            <line num="104" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="104" type="cond"/>
            <line num="105" count="9" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkBinaryOperation(ProgramState,Tree) : void" num="110" count="59" type="method"/>
            <line num="111" count="59" type="stmt"/>
            <line num="112" count="59" type="stmt"/>
            <line num="113" count="59" type="stmt"/>
            <line num="114" count="59" type="stmt"/>
            <line num="115" count="59" type="stmt"/>
            <line num="117" count="59" type="stmt"/>
            <line falsecount="45" truecount="14" num="117" type="cond"/>
            <line num="118" count="14" type="stmt"/>
            <line num="119" count="14" type="stmt"/>
            <line num="120" count="14" type="stmt"/>
            <line num="121" count="14" type="stmt"/>
            <line num="124" count="45" type="stmt"/>
            <line num="125" count="45" type="stmt"/>
            <line num="126" count="45" type="stmt"/>
            <line num="127" count="45" type="stmt"/>
            <line num="130" count="59" type="stmt"/>
            <line falsecount="39" truecount="20" num="130" type="cond"/>
            <line num="131" count="20" type="stmt"/>
            <line num="133" count="39" type="stmt"/>
            <line falsecount="27" truecount="12" num="133" type="cond"/>
            <line num="134" count="12" type="stmt"/>
            <line num="136" count="27" type="stmt"/>
            <line falsecount="0" truecount="27" num="136" type="cond"/>
            <line num="137" count="27" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkPlus(ExpressionTree,ExpressionTree,Type,Type,Tree) : void" num="141" count="20" type="method"/>
            <line num="142" count="20" type="stmt"/>
            <line falsecount="15" truecount="5" num="142" type="cond"/>
            <line num="143" count="5" type="stmt"/>
            <line num="146" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="146" type="cond"/>
            <line num="147" count="2" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkComparison(ExpressionTree,ExpressionTree,Type,Type,Tree) : void" num="151" count="12" type="method"/>
            <line num="152" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="152" type="cond"/>
            <line num="153" count="1" type="stmt"/>
            <line num="156" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="156" type="cond"/>
            <line num="157" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkArithmetic(ExpressionTree,ExpressionTree,Type,Type,SyntaxToken,boolean) : void" num="161" count="27" type="method"/>
            <line num="162" count="27" type="stmt"/>
            <line falsecount="25" truecount="2" num="162" type="cond"/>
            <line num="163" count="2" type="stmt"/>
            <line num="166" count="25" type="stmt"/>
            <line falsecount="5" truecount="20" num="166" type="cond"/>
            <line num="167" count="20" type="stmt"/>
            <line num="170" count="25" type="stmt"/>
            <line falsecount="16" truecount="9" num="170" type="cond"/>
            <line num="171" count="9" type="stmt"/>
            <line complexity="7" visibility="private" signature="isDateMinusDateException(Type,Type,boolean) : boolean" num="175" count="27" type="method"/>
            <line num="176" count="27" type="stmt"/>
            <line falsecount="21" truecount="6" num="176" type="cond"/>
            <line num="177" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="177" type="cond"/>
            <line num="178" count="2" type="stmt"/>
            <line num="181" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="186" count="25" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseIssue(Tree,Tree) : void" num="189" count="50" type="method"/>
            <line num="190" count="50" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NonStandardImportCheck.java" name="NonStandardImportCheck.java">
            <metrics coveredelements="33" coveredconditionals="12" complexity="12" loc="82" coveredmethods="5" methods="5" elements="33" classes="1" ncloc="51" statements="16" conditionals="12" coveredstatements="16"/>
            <class name="NonStandardImportCheck">
               <metrics coveredelements="33" coveredconditionals="12" complexity="12" coveredmethods="5" methods="5" elements="33" statements="16" conditionals="12" coveredstatements="16"/>
            </class>
            <line complexity="5" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="43" count="10" type="method"/>
            <line num="45" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="45" type="cond"/>
            <line num="46" count="9" type="stmt"/>
            <line num="48" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="48" type="cond"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line num="52" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="52" type="cond"/>
            <line num="53" count="5" type="stmt"/>
            <line complexity="4" visibility="private" signature="isAmdImport(String,SeparatedList&lt;ExpressionTree&gt;) : boolean" num="59" count="8" type="method"/>
            <line num="60" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="60" type="cond"/>
            <line num="61" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="61" type="cond"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="64" type="cond"/>
            <line num="65" count="3" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="lastIsFunction(SeparatedList&lt;ExpressionTree&gt;) : boolean" num="71" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCommonJsImport(String,SeparatedList&lt;ExpressionTree&gt;) : boolean" num="75" count="5" type="method"/>
            <line num="76" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="firstIsStringLiteral(SeparatedList&lt;ExpressionTree&gt;) : boolean" num="79" count="4" type="method"/>
            <line num="80" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NotStoredSelectionCheck.java" name="NotStoredSelectionCheck.java">
            <metrics coveredelements="71" coveredconditionals="12" complexity="22" loc="167" coveredmethods="13" methods="13" elements="73" classes="1" ncloc="124" statements="46" conditionals="14" coveredstatements="46"/>
            <class name="NotStoredSelectionCheck">
               <metrics coveredelements="71" coveredconditionals="12" complexity="22" coveredmethods="13" methods="13" elements="73" statements="46" conditionals="14" coveredstatements="46"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="finishScopeBlock() : void" num="69" count="13" type="method"/>
            <line num="70" count="13" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkForDuplications(ListMultimap&lt;String, CallExpressionTree&gt;) : void" num="73" count="13" type="method"/>
            <line num="74" count="13" type="stmt"/>
            <line num="75" count="11" type="stmt"/>
            <line num="76" count="11" type="stmt"/>
            <line num="78" count="11" type="stmt"/>
            <line falsecount="3" truecount="8" num="78" type="cond"/>
            <line num="79" count="8" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="87" count="6" type="method"/>
            <line num="89" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="94" count="4" type="method"/>
            <line num="96" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrowFunction(ArrowFunctionTree) : void" num="101" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="startScopeBlock() : void" num="108" count="13" type="method"/>
            <line num="109" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="112" count="51" type="method"/>
            <line num="114" count="51" type="stmt"/>
            <line falsecount="23" truecount="28" num="114" type="cond"/>
            <line num="115" count="28" type="stmt"/>
            <line num="116" count="28" type="stmt"/>
            <line falsecount="6" truecount="22" num="116" type="cond"/>
            <line num="117" count="22" type="stmt"/>
            <line num="118" count="22" type="stmt"/>
            <line num="121" count="51" type="stmt"/>
            <line complexity="4" visibility="private" signature="getSelectorParameter(CallExpressionTree) : LiteralTree" num="124" count="30" type="method"/>
            <line num="125" count="30" type="stmt"/>
            <line num="126" count="30" type="stmt"/>
            <line falsecount="6" truecount="24" num="126" type="cond"/>
            <line num="127" count="24" type="stmt"/>
            <line num="129" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="isElementCreation(LiteralTree) : boolean" num="136" count="30" type="method"/>
            <line num="137" count="30" type="stmt"/>
            <line num="138" count="30" type="stmt"/>
            <line num="139" count="30" type="stmt"/>
            <line num="140" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="143" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitInitializedBindingElement(InitializedBindingElementTree) : void" num="149" count="4" type="method"/>
            <line num="151" count="4" type="stmt"/>
            <line num="152" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="lookForException(ExpressionTree) : void" num="155" count="5" type="method"/>
            <line num="156" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="156" type="cond"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="158" type="cond"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="160" type="cond"/>
            <line num="161" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NullDereferenceCheck.java" name="NullDereferenceCheck.java">
            <metrics coveredelements="36" coveredconditionals="12" complexity="12" loc="96" coveredmethods="5" methods="5" elements="40" classes="1" ncloc="66" statements="21" conditionals="14" coveredstatements="19"/>
            <class name="NullDereferenceCheck">
               <metrics coveredelements="36" coveredconditionals="12" complexity="12" coveredmethods="5" methods="5" elements="40" statements="21" conditionals="14" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="52" count="35" type="method"/>
            <line num="54" count="35" type="stmt"/>
            <line complexity="5" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="57" count="585" type="method"/>
            <line num="59" count="585" type="stmt"/>
            <line falsecount="507" truecount="78" num="59" type="cond"/>
            <line num="60" count="78" type="stmt"/>
            <line num="61" count="78" type="stmt"/>
            <line falsecount="63" truecount="15" num="61" type="cond"/>
            <line num="62" count="15" type="stmt"/>
            <line num="63" count="15" type="stmt"/>
            <line num="64" count="15" type="stmt"/>
            <line num="66" count="507" type="stmt"/>
            <line falsecount="502" truecount="5" num="66" type="cond"/>
            <line num="67" count="5" type="stmt"/>
            <line num="68" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="68" type="cond"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="addUniqueIssue(Tree,Symbol) : void" num="74" count="17" type="method"/>
            <line num="75" count="17" type="stmt"/>
            <line falsecount="17" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="17" type="stmt"/>
            <line falsecount="1" truecount="16" num="77" type="cond"/>
            <line num="78" count="16" type="stmt"/>
            <line num="79" count="16" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSymbol(ExpressionTree) : Symbol" num="83" count="20" type="method"/>
            <line num="85" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="85" type="cond"/>
            <line num="86" count="20" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isForOfExpression(Tree) : boolean" num="91" count="507" type="method"/>
            <line num="92" count="507" type="stmt"/>
            <line num="93" count="507" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/NullDereferenceInConditionalCheck.java" name="NullDereferenceInConditionalCheck.java">
            <metrics coveredelements="37" coveredconditionals="8" complexity="13" loc="101" coveredmethods="8" methods="8" elements="37" classes="2" ncloc="67" statements="21" conditionals="8" coveredstatements="21"/>
            <class name="NullDereferenceInConditionalCheck">
               <metrics coveredelements="28" coveredconditionals="6" complexity="10" coveredmethods="6" methods="6" elements="28" statements="16" conditionals="6" coveredstatements="16"/>
            </class>
            <class name="NullDereferenceInConditionalCheck.NullExpressionUsageVisitor">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="3" visibility="public" signature="visitBinaryExpression(BinaryExpressionTree) : void" num="40" count="55" type="method"/>
            <line num="42" count="55" type="stmt"/>
            <line falsecount="40" truecount="15" num="42" type="cond"/>
            <line num="43" count="15" type="stmt"/>
            <line num="44" count="15" type="stmt"/>
            <line num="45" count="15" type="stmt"/>
            <line num="47" count="55" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNonNullLiteralOperand(BinaryExpressionTree) : ExpressionTree" num="50" count="15" type="method"/>
            <line num="51" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="51" type="cond"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAndWithEqualToNull(BinaryExpressionTree) : boolean" num="57" count="55" type="method"/>
            <line num="58" count="55" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOrWithNonEqualToNull(BinaryExpressionTree) : boolean" num="62" count="43" type="method"/>
            <line num="63" count="43" type="stmt"/>
            <line complexity="2" visibility="private" signature="isNullComparison(ExpressionTree,Tree.Kind,Tree.Kind) : boolean" num="67" count="19" type="method"/>
            <line num="68" count="19" type="stmt"/>
            <line num="69" count="19" type="stmt"/>
            <line falsecount="4" truecount="15" num="69" type="cond"/>
            <line num="70" count="15" type="stmt"/>
            <line num="71" count="15" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNullOrUndefined(Tree) : boolean" num="76" count="44" type="method"/>
            <line num="77" count="44" type="stmt"/>
            <line complexity="1" visibility="package" signature="NullExpressionUsageVisitor(ExpressionTree,JavaScriptCheck)" num="86" count="15" type="method"/>
            <line num="87" count="15" type="stmt"/>
            <line num="88" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitMemberExpression(MemberExpressionTree) : void" num="91" count="13" type="method"/>
            <line num="93" count="13" type="stmt"/>
            <line falsecount="2" truecount="11" num="93" type="cond"/>
            <line num="94" count="11" type="stmt"/>
            <line num="96" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/OSCommandCheck.java" name="OSCommandCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="OSCommandCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ObjectLiteralShorthandCheck.java" name="ObjectLiteralShorthandCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ObjectLiteralShorthandCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/OctalNumberCheck.java" name="OctalNumberCheck.java">
            <metrics coveredelements="15" coveredconditionals="5" complexity="6" loc="54" coveredmethods="1" methods="1" elements="16" classes="1" ncloc="30" statements="9" conditionals="6" coveredstatements="9"/>
            <class name="OctalNumberCheck">
               <metrics coveredelements="15" coveredconditionals="5" complexity="6" coveredmethods="1" methods="1" elements="16" statements="9" conditionals="6" coveredstatements="9"/>
            </class>
            <line complexity="6" visibility="public" signature="visitLiteral(LiteralTree) : void" num="36" count="9" type="method"/>
            <line num="38" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="38" type="cond"/>
            <line num="39" count="9" type="stmt"/>
            <line num="40" count="9" type="stmt"/>
            <line falsecount="3" truecount="6" num="40" type="cond"/>
            <line num="41" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="47" type="cond"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/OneStatementPerLineCheck.java" name="OneStatementPerLineCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="OneStatementPerLineCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/OpenCurlyBracesAtEOLCheck.java" name="OpenCurlyBracesAtEOLCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="29" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="OpenCurlyBracesAtEOLCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="OpenCurlyBracesAtEOLCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ParenthesesCheck.java" name="ParenthesesCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ParenthesesCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ParseIntCallWithoutBaseCheck.java" name="ParseIntCallWithoutBaseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ParseIntCallWithoutBaseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ParsingErrorCheck.java" name="ParsingErrorCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParsingErrorCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PostMessageCheck.java" name="PostMessageCheck.java">
            <metrics coveredelements="14" coveredconditionals="4" complexity="5" loc="57" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="31" statements="8" conditionals="4" coveredstatements="8"/>
            <class name="PostMessageCheck">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="14" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="4" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="39" count="9" type="method"/>
            <line num="41" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="41" type="cond"/>
            <line num="42" count="8" type="stmt"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="44" type="cond"/>
            <line num="45" count="6" type="stmt"/>
            <line num="49" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasWindowLikeName(ExpressionTree) : boolean" num="52" count="5" type="method"/>
            <line num="53" count="5" type="stmt"/>
            <line num="54" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferDefaultLastCheck.java" name="PreferDefaultLastCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferDefaultLastCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferForOfCheck.java" name="PreferForOfCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferForOfCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferNamespaceCheck.java" name="PreferNamespaceCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferNamespaceCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferObjectLiteralCheck.java" name="PreferObjectLiteralCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferObjectLiteralCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferPromiseShorthandCheck.java" name="PreferPromiseShorthandCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferPromiseShorthandCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferReadonlyCheck.java" name="PreferReadonlyCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferReadonlyCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PreferTypeGuardCheck.java" name="PreferTypeGuardCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PreferTypeGuardCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PrimitiveWrappersCheck.java" name="PrimitiveWrappersCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PrimitiveWrappersCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ProcessArgvCheck.java" name="ProcessArgvCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ProcessArgvCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/PseudoRandomCheck.java" name="PseudoRandomCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PseudoRandomCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ReassignedParameterCheck.java" name="ReassignedParameterCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReassignedParameterCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/RedeclaredSymbolCheck.java" name="RedeclaredSymbolCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="47" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="22" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RedeclaredSymbolCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RedeclaredSymbolCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="39" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/RedundantAssignmentCheck.java" name="RedundantAssignmentCheck.java">
            <metrics coveredelements="27" coveredconditionals="8" complexity="9" loc="73" coveredmethods="3" methods="3" elements="27" classes="1" ncloc="46" statements="16" conditionals="8" coveredstatements="16"/>
            <class name="RedundantAssignmentCheck">
               <metrics coveredelements="27" coveredconditionals="8" complexity="9" coveredmethods="3" methods="3" elements="27" statements="16" conditionals="8" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="package" signature="getTree(Tree) : AssignmentExpressionTree" num="39" count="163" type="method"/>
            <line num="41" count="163" type="stmt"/>
            <line falsecount="144" truecount="19" num="41" type="cond"/>
            <line num="42" count="19" type="stmt"/>
            <line num="44" count="144" type="stmt"/>
            <line complexity="6" visibility="package" signature="isProblem(AssignmentExpressionTree,ProgramState) : boolean" num="48" count="19" type="method"/>
            <line num="50" count="19" type="stmt"/>
            <line num="51" count="19" type="stmt"/>
            <line num="52" count="19" type="stmt"/>
            <line falsecount="18" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="18" type="stmt"/>
            <line falsecount="15" truecount="3" num="56" type="cond"/>
            <line num="57" count="3" type="stmt"/>
            <line num="59" count="15" type="stmt"/>
            <line falsecount="11" truecount="4" num="59" type="cond"/>
            <line num="60" count="4" type="stmt"/>
            <line num="63" count="11" type="stmt"/>
            <line num="64" count="11" type="stmt"/>
            <line num="65" count="11" type="stmt"/>
            <line complexity="1" visibility="package" signature="raiseIssue(AssignmentExpressionTree) : void" num="68" count="5" type="method"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ReferenceErrorCheck.java" name="ReferenceErrorCheck.java">
            <metrics coveredelements="24" coveredconditionals="5" complexity="12" loc="99" coveredmethods="4" methods="5" elements="31" classes="1" ncloc="65" statements="18" conditionals="8" coveredstatements="15"/>
            <class name="ReferenceErrorCheck">
               <metrics coveredelements="24" coveredconditionals="5" complexity="12" coveredmethods="4" methods="5" elements="31" statements="18" conditionals="8" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="62" count="84" type="method"/>
            <line num="64" count="84" type="stmt"/>
            <line falsecount="77" truecount="7" num="64" type="cond"/>
            <line num="69" count="7" type="stmt"/>
            <line num="72" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWithStatement(WithStatementTree) : void" num="75" count="1" type="method"/>
            <line complexity="3" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="80" count="3" type="method"/>
            <line num="82" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitExportClause(ExportClauseTree) : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/RegularExprCheck.java" name="RegularExprCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="RegularExprCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/RestrictPlusOperandsCheck.java" name="RestrictPlusOperandsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="RestrictPlusOperandsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ReturnInSetterCheck.java" name="ReturnInSetterCheck.java">
            <metrics coveredelements="13" coveredconditionals="4" complexity="4" loc="58" coveredmethods="2" methods="2" elements="13" classes="2" ncloc="30" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="ReturnInSetterCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="ReturnInSetterCheck.ForbiddenReturnVisitor">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="visitAccessorMethodDeclaration(AccessorMethodDeclarationTree) : void" num="37" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="39" type="cond"/>
            <line num="40" count="3" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitReturnStatement(ReturnStatementTree) : void" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="49" type="cond"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ReturnOfBooleanExpressionCheck.java" name="ReturnOfBooleanExpressionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReturnOfBooleanExpressionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ReturnValueNotIgnoredCheck.java" name="ReturnValueNotIgnoredCheck.java">
            <metrics coveredelements="34" coveredconditionals="10" complexity="12" loc="89" coveredmethods="4" methods="4" elements="34" classes="1" ncloc="58" statements="20" conditionals="10" coveredstatements="20"/>
            <class name="ReturnValueNotIgnoredCheck">
               <metrics coveredelements="34" coveredconditionals="10" complexity="12" coveredmethods="4" methods="4" elements="34" statements="20" conditionals="10" coveredstatements="20"/>
            </class>
            <line complexity="5" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="45" count="321" type="method"/>
            <line num="47" count="321" type="stmt"/>
            <line falsecount="265" truecount="56" num="47" type="cond"/>
            <line num="48" count="56" type="stmt"/>
            <line num="49" count="56" type="stmt"/>
            <line num="50" count="56" type="stmt"/>
            <line falsecount="34" truecount="22" num="50" type="cond"/>
            <line num="51" count="22" type="stmt"/>
            <line num="52" count="22" type="stmt"/>
            <line complexity="3" visibility="private" signature="hasCallbackArgumentWithSideEffects(CallExpressionTreeImpl) : boolean" num="57" count="23" type="method"/>
            <line num="58" count="23" type="stmt"/>
            <line num="59" count="21" type="stmt"/>
            <line falsecount="20" truecount="1" num="59" type="cond"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="22" type="stmt"/>
            <line complexity="2" visibility="private" signature="hasSideEffects(CallExpressionTree,ProgramState) : boolean" num="70" count="37" type="method"/>
            <line num="71" count="37" type="stmt"/>
            <line num="72" count="37" type="stmt"/>
            <line num="73" count="37" type="stmt"/>
            <line falsecount="6" truecount="31" num="73" type="cond"/>
            <line num="74" count="31" type="stmt"/>
            <line num="75" count="31" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCalleeName(CallExpressionTree) : String" num="80" count="22" type="method"/>
            <line num="81" count="22" type="stmt"/>
            <line num="82" count="22" type="stmt"/>
            <line falsecount="2" truecount="20" num="82" type="cond"/>
            <line num="83" count="20" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SameLineConditionalCheck.java" name="SameLineConditionalCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SameLineConditionalCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SameModuleImportsCheck.java" name="SameModuleImportsCheck.java">
            <metrics coveredelements="36" coveredconditionals="8" complexity="8" loc="93" coveredmethods="4" methods="4" elements="36" classes="1" ncloc="58" statements="24" conditionals="8" coveredstatements="24"/>
            <class name="SameModuleImportsCheck">
               <metrics coveredelements="36" coveredconditionals="8" complexity="8" coveredmethods="4" methods="4" elements="36" statements="24" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkImports(ListMultimap&lt;String, ImportDeclarationTree&gt;) : void" num="56" count="3" type="method"/>
            <line num="57" count="3" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="60" type="cond"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line falsecount="4" truecount="5" num="65" type="cond"/>
            <line num="66" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitImportDeclaration(ImportDeclarationTree) : void" num="72" count="13" type="method"/>
            <line num="74" count="13" type="stmt"/>
            <line num="76" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="76" type="cond"/>
            <line num="77" count="6" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
            <line falsecount="3" truecount="4" num="79" type="cond"/>
            <line num="80" count="4" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="addImportModule(ImportDeclarationTree,ListMultimap&lt;String, ImportDeclarationTree&gt;) : void" num="88" count="13" type="method"/>
            <line num="89" count="13" type="stmt"/>
            <line num="90" count="13" type="stmt"/>
            <line num="91" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SelectionTestedWithoutLengthCheck.java" name="SelectionTestedWithoutLengthCheck.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="2" loc="44" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="20" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="SelectionTestedWithoutLengthCheck">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="visitIfStatement(IfStatementTree) : void" num="35" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="38" type="cond"/>
            <line num="39" count="3" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SelfAssignmentCheck.java" name="SelfAssignmentCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SelfAssignmentCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SemicolonCheck.java" name="SemicolonCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SemicolonCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ShorthandPropertiesNotGroupedCheck.java" name="ShorthandPropertiesNotGroupedCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ShorthandPropertiesNotGroupedCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SocketsCheck.java" name="SocketsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SocketsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SpaceInModelPropertyNameCheck.java" name="SpaceInModelPropertyNameCheck.java">
            <metrics coveredelements="43" coveredconditionals="15" complexity="18" loc="101" coveredmethods="6" methods="6" elements="44" classes="1" ncloc="65" statements="22" conditionals="16" coveredstatements="22"/>
            <class name="SpaceInModelPropertyNameCheck">
               <metrics coveredelements="43" coveredconditionals="15" complexity="18" coveredmethods="6" methods="6" elements="44" statements="22" conditionals="16" coveredstatements="22"/>
            </class>
            <line complexity="5" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="44" count="7" type="method"/>
            <line num="46" count="7" type="stmt"/>
            <line falsecount="3" truecount="4" num="46" type="cond"/>
            <line num="47" count="4" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="7" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitSetMethodCall(CallExpressionTree) : void" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="60" type="cond"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="64" type="cond"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitDefaults(CallExpressionTree) : void" num="70" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="73" type="cond"/>
            <line num="74" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="76" type="cond"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBackboneSetMethod(DotMemberExpressionTree) : boolean" num="82" count="7" type="method"/>
            <line num="83" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkForSpaceInPropertyNames(ObjectLiteralTree) : void" num="86" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="88" type="cond"/>
            <line num="89" count="5" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkString(Tree) : void" num="95" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="96" type="cond"/>
            <line num="97" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SqlQueriesCheck.java" name="SqlQueriesCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SqlQueriesCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/StandardInputCheck.java" name="StandardInputCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StandardInputCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/StrictModeCheck.java" name="StrictModeCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="StrictModeCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="40" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/StringConcatenatedWithNonStringCheck.java" name="StringConcatenatedWithNonStringCheck.java">
            <metrics coveredelements="28" coveredconditionals="8" complexity="11" loc="82" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="49" statements="16" conditionals="8" coveredstatements="16"/>
            <class name="StringConcatenatedWithNonStringCheck">
               <metrics coveredelements="28" coveredconditionals="8" complexity="11" coveredmethods="4" methods="4" elements="28" statements="16" conditionals="8" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="package" signature="getTree(Tree) : BinaryExpressionTree" num="39" count="194" type="method"/>
            <line num="41" count="194" type="stmt"/>
            <line falsecount="168" truecount="26" num="41" type="cond"/>
            <line num="42" count="26" type="stmt"/>
            <line num="44" count="168" type="stmt"/>
            <line complexity="1" visibility="package" signature="isProblem(BinaryExpressionTree,ProgramState) : boolean" num="47" count="26" type="method"/>
            <line num="49" count="26" type="stmt"/>
            <line num="50" count="26" type="stmt"/>
            <line complexity="1" visibility="package" signature="raiseIssue(BinaryExpressionTree) : void" num="53" count="9" type="method"/>
            <line num="55" count="9" type="stmt"/>
            <line complexity="7" visibility="private" signature="getOnlyStringOperand(ExpressionTree,ExpressionTree,ProgramState) : ExpressionTree" num="60" count="26" type="method"/>
            <line num="62" count="26" type="stmt"/>
            <line num="63" count="26" type="stmt"/>
            <line num="65" count="26" type="stmt"/>
            <line num="66" count="26" type="stmt"/>
            <line num="69" count="26" type="stmt"/>
            <line falsecount="7" truecount="19" num="69" type="cond"/>
            <line num="71" count="19" type="stmt"/>
            <line falsecount="14" truecount="5" num="71" type="cond"/>
            <line num="72" count="5" type="stmt"/>
            <line num="74" count="14" type="stmt"/>
            <line falsecount="4" truecount="10" num="74" type="cond"/>
            <line num="75" count="10" type="stmt"/>
            <line num="79" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/StringConcatenationCheck.java" name="StringConcatenationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StringConcatenationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/StringLiteralsQuotesCheck.java" name="StringLiteralsQuotesCheck.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="3" loc="59" coveredmethods="2" methods="2" elements="6" classes="2" ncloc="32" statements="2" conditionals="2" coveredstatements="2"/>
            <class name="StringLiteralsQuotesCheck">
               <metrics coveredelements="6" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="StringLiteralsQuotesCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="configurations() : List&lt;Object&gt;" num="45" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="47" type="cond"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="50" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/StringsComparisonCheck.java" name="StringsComparisonCheck.java">
            <metrics coveredelements="25" coveredconditionals="7" complexity="8" loc="82" coveredmethods="4" methods="4" elements="27" classes="1" ncloc="51" statements="15" conditionals="8" coveredstatements="14"/>
            <class name="StringsComparisonCheck">
               <metrics coveredelements="25" coveredconditionals="7" complexity="8" coveredmethods="4" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="14"/>
            </class>
            <line complexity="2" visibility="package" signature="getTree(Tree) : BinaryExpressionTree" num="44" count="57" type="method"/>
            <line num="46" count="57" type="stmt"/>
            <line falsecount="48" truecount="9" num="46" type="cond"/>
            <line num="47" count="9" type="stmt"/>
            <line num="49" count="48" type="stmt"/>
            <line complexity="1" visibility="package" signature="isProblem(BinaryExpressionTree,ProgramState) : boolean" num="52" count="9" type="method"/>
            <line num="54" count="9" type="stmt"/>
            <line num="55" count="9" type="stmt"/>
            <line num="57" count="9" type="stmt"/>
            <line complexity="2" visibility="package" signature="raiseIssue(BinaryExpressionTree) : void" num="60" count="7" type="method"/>
            <line num="62" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="62" type="cond"/>
            <line num="63" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="hasOneSymbolLiteralOperand(BinaryExpressionTree) : boolean" num="71" count="7" type="method"/>
            <line num="72" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="7" type="stmt"/>
            <line falsecount="4" truecount="3" num="76" type="cond"/>
            <line num="77" count="3" type="stmt"/>
            <line num="80" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SuperInvocationCheck.java" name="SuperInvocationCheck.java">
            <metrics coveredelements="162" coveredconditionals="40" complexity="52" loc="341" coveredmethods="25" methods="25" elements="164" classes="3" ncloc="243" statements="97" conditionals="42" coveredstatements="97"/>
            <class name="SuperInvocationCheck">
               <metrics coveredelements="147" coveredconditionals="38" complexity="47" coveredmethods="21" methods="21" elements="149" statements="88" conditionals="40" coveredstatements="88"/>
            </class>
            <class name="SuperInvocationCheck.SuperDetector">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="SuperInvocationCheck.ThisDetector">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitSuper(SuperTree) : void" num="82" count="56" type="method"/>
            <line num="84" count="56" type="stmt"/>
            <line falsecount="7" truecount="49" num="84" type="cond"/>
            <line num="85" count="49" type="stmt"/>
            <line falsecount="37" truecount="12" num="85" type="cond"/>
            <line num="86" count="12" type="stmt"/>
            <line num="88" count="37" type="stmt"/>
            <line num="89" count="37" type="stmt"/>
            <line num="91" count="49" type="stmt"/>
            <line num="94" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMethodDeclaration(MethodDeclarationTree) : void" num="100" count="60" type="method"/>
            <line num="102" count="60" type="stmt"/>
            <line num="104" count="60" type="stmt"/>
            <line num="105" count="60" type="stmt"/>
            <line num="107" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="110" count="6" type="method"/>
            <line num="112" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="114" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="117" count="6" type="method"/>
            <line num="119" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="121" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkSuperOnlyInvokedInDerivedClassConstructor(SuperTree) : void" num="124" count="12" type="method"/>
            <line num="125" count="12" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkSuperInvokedInAnyDerivedClassConstructor(MethodDeclarationTree) : void" num="128" count="60" type="method"/>
            <line num="129" count="60" type="stmt"/>
            <line falsecount="24" truecount="36" num="129" type="cond"/>
            <line num="130" count="36" type="stmt"/>
            <line num="131" count="36" type="stmt"/>
            <line falsecount="34" truecount="2" num="131" type="cond"/>
            <line num="132" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkSuperInvokedBeforeThisOrSuper(SuperTree) : void" num="137" count="37" type="method"/>
            <line num="138" count="37" type="stmt"/>
            <line num="139" count="37" type="stmt"/>
            <line num="140" count="37" type="stmt"/>
            <line num="141" count="37" type="stmt"/>
            <line num="144" count="37" type="stmt"/>
            <line num="145" count="37" type="stmt"/>
            <line num="152" count="37" type="stmt"/>
            <line num="153" count="37" type="stmt"/>
            <line num="159" count="37" type="stmt"/>
            <line falsecount="34" truecount="3" num="159" type="cond"/>
            <line num="160" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkSuperHasCorrectNumberOfArguments(SuperTree) : void" num="165" count="37" type="method"/>
            <line num="166" count="37" type="stmt"/>
            <line num="167" count="37" type="stmt"/>
            <line num="169" count="37" type="stmt"/>
            <line falsecount="2" truecount="35" num="169" type="cond"/>
            <line num="170" count="35" type="stmt"/>
            <line num="171" count="35" type="stmt"/>
            <line falsecount="4" truecount="31" num="171" type="cond"/>
            <line num="172" count="31" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkSuperInvokedOnlyOnce(MethodDeclarationTree,List&lt;SuperTree&gt;) : void" num="178" count="60" type="method"/>
            <line num="179" count="60" type="stmt"/>
            <line falsecount="59" truecount="1" num="179" type="cond"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="pushSuperInvocation(SuperTree) : void" num="187" count="49" type="method"/>
            <line num="188" count="49" type="stmt"/>
            <line falsecount="1" truecount="48" num="188" type="cond"/>
            <line num="189" count="48" type="stmt"/>
            <line complexity="5" visibility="private" signature="compareNumberOfArguments(SuperTree,Symbol) : void" num="193" count="31" type="method"/>
            <line num="194" count="31" type="stmt"/>
            <line num="195" count="31" type="stmt"/>
            <line num="196" count="31" type="stmt"/>
            <line falsecount="29" truecount="2" num="196" type="cond"/>
            <line num="197" count="2" type="stmt"/>
            <line num="199" count="29" type="stmt"/>
            <line num="202" count="23" type="stmt"/>
            <line num="203" count="23" type="stmt"/>
            <line num="205" count="23" type="stmt"/>
            <line num="206" count="23" type="stmt"/>
            <line falsecount="15" truecount="8" num="206" type="cond"/>
            <line num="207" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="207" type="cond"/>
            <line num="208" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getConstructor(ClassTree) : Optional&lt;MethodDeclarationTree&gt;" num="213" count="28" type="method"/>
            <line num="214" count="28" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDeclarationTree(Symbol) : Optional&lt;ClassTree&gt;" num="225" count="29" type="method"/>
            <line num="226" count="29" type="stmt"/>
            <line num="229" count="29" type="stmt"/>
            <line falsecount="0" truecount="29" num="229" type="cond"/>
            <line num="230" count="29" type="stmt"/>
            <line num="231" count="29" type="stmt"/>
            <line num="232" count="29" type="stmt"/>
            <line falsecount="1" truecount="28" num="232" type="cond"/>
            <line num="233" count="28" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="isBefore(SyntaxToken,int,int) : boolean" num="243" count="17" type="method"/>
            <line num="244" count="17" type="stmt"/>
            <line falsecount="11" truecount="6" num="244" type="cond"/>
            <line num="245" count="6" type="stmt"/>
            <line num="247" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="247" type="cond"/>
            <line num="248" count="9" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInConstructor(Tree) : boolean" num="253" count="49" type="method"/>
            <line num="254" count="49" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInBaseClass(MethodDeclarationTree) : boolean" num="257" count="91" type="method"/>
            <line num="258" count="91" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInDummyDerivedClass(MethodDeclarationTree) : boolean" num="265" count="38" type="method"/>
            <line num="266" count="38" type="stmt"/>
            <line complexity="3" visibility="private" signature="getEnclosingConstructor(Tree) : MethodDeclarationTree" num="269" count="125" type="method"/>
            <line num="271" count="125" type="stmt"/>
            <line num="272" count="125" type="stmt"/>
            <line falsecount="10" truecount="115" num="272" type="cond"/>
            <line num="273" count="115" type="stmt"/>
            <line num="275" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="isConstructor(FunctionTree) : boolean" num="278" count="267" type="method"/>
            <line num="279" count="267" type="stmt"/>
            <line falsecount="7" truecount="260" num="279" type="cond"/>
            <line num="280" count="260" type="stmt"/>
            <line num="281" count="260" type="stmt"/>
            <line num="282" count="260" type="stmt"/>
            <line falsecount="0" truecount="260" num="282" type="cond"/>
            <line num="283" count="260" type="stmt"/>
            <line num="284" count="260" type="stmt"/>
            <line num="287" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="getEnclosingType(Tree) : Optional&lt;ClassTree&gt;" num="290" count="166" type="method"/>
            <line num="291" count="166" type="stmt"/>
            <line num="292" count="166" type="stmt"/>
            <line falsecount="161" truecount="5" num="292" type="cond"/>
            <line num="293" count="5" type="stmt"/>
            <line num="295" count="161" type="stmt"/>
            <line complexity="1" visibility="public" signature="detectIn(FunctionTree) : Set&lt;SuperTree&gt;" num="306" count="73" type="method"/>
            <line num="307" count="73" type="stmt"/>
            <line num="308" count="73" type="stmt"/>
            <line num="309" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSuper(SuperTree) : void" num="312" count="97" type="method"/>
            <line num="314" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="detectIn(FunctionTree) : Set&lt;IdentifierTree&gt;" num="326" count="37" type="method"/>
            <line num="327" count="37" type="stmt"/>
            <line num="328" count="37" type="stmt"/>
            <line num="329" count="37" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="332" count="124" type="method"/>
            <line num="334" count="124" type="stmt"/>
            <line falsecount="114" truecount="10" num="334" type="cond"/>
            <line num="335" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SwitchWithNotEnoughCaseCheck.java" name="SwitchWithNotEnoughCaseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SwitchWithNotEnoughCaseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SwitchWithoutDefaultCheck.java" name="SwitchWithoutDefaultCheck.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="5" loc="62" coveredmethods="2" methods="2" elements="18" classes="1" ncloc="35" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="SwitchWithoutDefaultCheck">
               <metrics coveredelements="18" coveredconditionals="6" complexity="5" coveredmethods="2" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="3" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="43" type="cond"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="46" type="cond"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDefaultClause(SwitchStatementTree) : DefaultClauseTree" num="52" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line num="55" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="55" type="cond"/>
            <line num="56" count="2" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/SymbolUsedAsConstructorCheck.java" name="SymbolUsedAsConstructorCheck.java">
            <metrics coveredelements="22" coveredconditionals="5" complexity="9" loc="77" coveredmethods="5" methods="5" elements="23" classes="1" ncloc="44" statements="12" conditionals="6" coveredstatements="12"/>
            <class name="SymbolUsedAsConstructorCheck">
               <metrics coveredelements="22" coveredconditionals="5" complexity="9" coveredmethods="5" methods="5" elements="23" statements="12" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="2" visibility="public" signature="visitNewExpression(NewExpressionTree) : void" num="42" count="10" type="method"/>
            <line num="44" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="isSymbol(ExpressionTree) : boolean" num="53" count="10" type="method"/>
            <line num="54" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="54" type="cond"/>
            <line num="55" count="10" type="stmt"/>
            <line num="56" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="56" type="cond"/>
            <line num="57" count="2" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSymbolShadowed(Tree) : boolean" num="63" count="9" type="method"/>
            <line num="64" count="9" type="stmt"/>
            <line num="65" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseError(NewExpressionTree) : void" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasWriteUsage(Symbol) : boolean" num="73" count="5" type="method"/>
            <line num="74" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TabCharacterCheck.java" name="TabCharacterCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TabCharacterCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TemplateStringMisuseCheck.java" name="TemplateStringMisuseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TemplateStringMisuseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ThrowLiteralCheck.java" name="ThrowLiteralCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ThrowLiteralCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TodoTagPresenceCheck.java" name="TodoTagPresenceCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TodoTagPresenceCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TooManyArgumentsCheck.java" name="TooManyArgumentsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TooManyArgumentsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TooManyBreakOrContinueInLoopCheck.java" name="TooManyBreakOrContinueInLoopCheck.java">
            <metrics coveredelements="52" coveredconditionals="6" complexity="20" loc="180" coveredmethods="13" methods="17" elements="68" classes="2" ncloc="131" statements="45" conditionals="6" coveredstatements="33"/>
            <class name="TooManyBreakOrContinueInLoopCheck">
               <metrics coveredelements="48" coveredconditionals="6" complexity="18" coveredmethods="11" methods="15" elements="64" statements="43" conditionals="6" coveredstatements="31"/>
            </class>
            <class name="TooManyBreakOrContinueInLoopCheck.JumpTarget">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="JumpTarget()" num="62" count="16" type="method"/>
            <line num="63" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="JumpTarget(String)" num="69" count="5" type="method"/>
            <line num="70" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBreakStatement(BreakStatementTree) : void" num="82" count="18" type="method"/>
            <line num="84" count="18" type="stmt"/>
            <line num="85" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitContinueStatement(ContinueStatementTree) : void" num="88" count="3" type="method"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="94" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="108" count="2" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="115" count="12" type="method"/>
            <line num="117" count="12" type="stmt"/>
            <line num="118" count="12" type="stmt"/>
            <line num="119" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatementTree) : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDoWhileStatement(DoWhileStatementTree) : void" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLabelledStatement(LabelledStatementTree) : void" num="143" count="5" type="method"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="5" type="stmt"/>
            <line num="147" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="enterScope() : void" num="150" count="16" type="method"/>
            <line num="151" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="leaveScope() : void" num="154" count="9" type="method"/>
            <line num="155" count="9" type="stmt"/>
            <line complexity="3" visibility="private" signature="increaseNumberOfJumpInScopes(SyntaxToken,SyntaxToken) : void" num="158" count="21" type="method"/>
            <line num="159" count="21" type="stmt"/>
            <line num="160" count="27" type="stmt"/>
            <line falsecount="11" truecount="16" num="160" type="cond"/>
            <line num="161" count="27" type="stmt"/>
            <line num="163" count="27" type="stmt"/>
            <line falsecount="7" truecount="20" num="163" type="cond"/>
            <line num="164" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="leaveScopeAndCheckNumberOfJump(SyntaxToken) : void" num="169" count="12" type="method"/>
            <line num="170" count="12" type="stmt"/>
            <line num="171" count="12" type="stmt"/>
            <line num="172" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="172" type="cond"/>
            <line num="173" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line num="175" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TooManyLinesInFileCheck.java" name="TooManyLinesInFileCheck.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="63" coveredmethods="3" methods="3" elements="6" classes="2" ncloc="34" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="TooManyLinesInFileCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TooManyLinesInFileCheck.Config">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="Config(int)" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TooManyLinesInFunctionCheck.java" name="TooManyLinesInFunctionCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TooManyLinesInFunctionCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TrailingCommaCheck.java" name="TrailingCommaCheck.java">
            <metrics coveredelements="22" coveredconditionals="6" complexity="7" loc="70" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="41" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="TrailingCommaCheck">
               <metrics coveredelements="22" coveredconditionals="6" complexity="7" coveredmethods="3" methods="3" elements="22" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="3" visibility="public" signature="visitObjectLiteral(ObjectLiteralTree) : void" num="43" count="2" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="47" type="cond"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitArrayLiteral(ArrayLiteralTree) : void" num="54" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="57" type="cond"/>
            <line num="58" count="3" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseIssue(Tree) : void" num="66" count="3" type="method"/>
            <line num="67" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TrailingCommentCheck.java" name="TrailingCommentCheck.java">
            <metrics coveredelements="19" coveredconditionals="4" complexity="7" loc="81" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="51" statements="11" conditionals="4" coveredstatements="11"/>
            <class name="TrailingCommentCheck">
               <metrics coveredelements="19" coveredconditionals="4" complexity="7" coveredmethods="4" methods="4" elements="19" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Tree.Kind&gt;" num="52" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFile(Tree) : void" num="57" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitNode(Tree) : void" num="63" count="40" type="method"/>
            <line num="65" count="40" type="stmt"/>
            <line num="66" count="40" type="stmt"/>
            <line num="67" count="14" type="stmt"/>
            <line falsecount="8" truecount="6" num="67" type="cond"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="69" type="cond"/>
            <line num="70" count="3" type="stmt"/>
            <line num="74" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLegalCommentPattern(String) : void" num="77" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TrailingWhitespaceCheck.java" name="TrailingWhitespaceCheck.java">
            <metrics coveredelements="13" coveredconditionals="4" complexity="5" loc="63" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="35" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="TrailingWhitespaceCheck">
               <metrics coveredelements="13" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Tree.Kind&gt;" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitFile(Tree) : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="53" type="cond"/>
            <line num="54" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/TryPromiseCheck.java" name="TryPromiseCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TryPromiseCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnaryPlusMinusWithObjectCheck.java" name="UnaryPlusMinusWithObjectCheck.java">
            <metrics coveredelements="23" coveredconditionals="5" complexity="7" loc="81" coveredmethods="4" methods="4" elements="24" classes="1" ncloc="52" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="UnaryPlusMinusWithObjectCheck">
               <metrics coveredelements="23" coveredconditionals="5" complexity="7" coveredmethods="4" methods="4" elements="24" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="2" visibility="package" signature="getTree(Tree) : UnaryExpressionTree" num="48" count="91" type="method"/>
            <line num="50" count="91" type="stmt"/>
            <line falsecount="73" truecount="18" num="50" type="cond"/>
            <line num="51" count="18" type="stmt"/>
            <line num="53" count="73" type="stmt"/>
            <line complexity="1" visibility="package" signature="isProblem(UnaryExpressionTree,ProgramState) : boolean" num="56" count="18" type="method"/>
            <line num="59" count="18" type="stmt"/>
            <line num="60" count="18" type="stmt"/>
            <line num="61" count="18" type="stmt"/>
            <line num="62" count="18" type="stmt"/>
            <line complexity="2" visibility="package" signature="raiseIssue(UnaryExpressionTree) : void" num="65" count="5" type="method"/>
            <line num="67" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="67" type="cond"/>
            <line num="68" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="isDateException(Tree) : boolean" num="73" count="5" type="method"/>
            <line num="74" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="74" type="cond"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnchangedLetVariableCheck.java" name="UnchangedLetVariableCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="47" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="22" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="UnchangedLetVariableCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="UnchangedLetVariableCheck.Configuration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UndefinedArgumentCheck.java" name="UndefinedArgumentCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UndefinedArgumentCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UndefinedAssignmentCheck.java" name="UndefinedAssignmentCheck.java">
            <metrics coveredelements="13" coveredconditionals="3" complexity="6" loc="58" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="31" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="UndefinedAssignmentCheck">
               <metrics coveredelements="13" coveredconditionals="3" complexity="6" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="2" visibility="public" signature="visitInitializedBindingElement(InitializedBindingElementTree) : void" num="37" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="39" type="cond"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUndefined(ExpressionTree) : boolean" num="55" count="3" type="method"/>
            <line num="56" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UniversalSelectorCheck.java" name="UniversalSelectorCheck.java">
            <metrics coveredelements="10" coveredconditionals="4" complexity="3" loc="42" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="19" statements="5" conditionals="4" coveredstatements="5"/>
            <class name="UniversalSelectorCheck">
               <metrics coveredelements="10" coveredconditionals="4" complexity="3" coveredmethods="1" methods="1" elements="10" statements="5" conditionals="4" coveredstatements="5"/>
            </class>
            <line complexity="3" visibility="protected" signature="visitSelector(String,CallExpressionTree) : void" num="32" count="7" type="method"/>
            <line num="34" count="7" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line falsecount="2" truecount="15" num="35" type="cond"/>
            <line num="36" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="36" type="cond"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnnecessaryTypeArgumentsCheck.java" name="UnnecessaryTypeArgumentsCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnnecessaryTypeArgumentsCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnreachableCodeCheck.java" name="UnreachableCodeCheck.java">
            <metrics coveredelements="82" coveredconditionals="23" complexity="23" loc="159" coveredmethods="9" methods="9" elements="83" classes="1" ncloc="123" statements="50" conditionals="24" coveredstatements="50"/>
            <class name="UnreachableCodeCheck">
               <metrics coveredelements="82" coveredconditionals="23" complexity="23" coveredmethods="9" methods="9" elements="83" statements="50" conditionals="24" coveredstatements="50"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitNode(Tree) : void" num="62" count="10" type="method"/>
            <line num="64" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="64" type="cond"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="68" type="cond"/>
            <line num="69" count="9" type="stmt"/>
            <line complexity="5" visibility="private" signature="check(ControlFlowGraph) : void" num="74" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line num="76" count="19" type="stmt"/>
            <line num="77" count="19" type="stmt"/>
            <line falsecount="3" truecount="16" num="77" type="cond"/>
            <line num="78" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="78" type="cond"/>
            <line num="79" count="2" type="stmt"/>
            <line num="82" count="14" type="stmt"/>
            <line num="83" count="14" type="stmt"/>
            <line num="84" count="14" type="stmt"/>
            <line falsecount="2" truecount="12" num="84" type="cond"/>
            <line num="85" count="12" type="stmt"/>
            <line num="86" count="12" type="stmt"/>
            <line num="88" count="14" type="stmt"/>
            <line num="89" count="14" type="stmt"/>
            <line num="90" count="15" type="stmt"/>
            <line complexity="3" visibility="private" signature="isDeclarationWithoutInit(Tree) : boolean" num="96" count="15" type="method"/>
            <line num="97" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="97" type="cond"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="100" type="cond"/>
            <line num="101" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="13" type="stmt"/>
            <line complexity="3" visibility="private" signature="isLastBreakInSwitchCase(Tree) : boolean" num="110" count="16" type="method"/>
            <line num="111" count="16" type="stmt"/>
            <line falsecount="13" truecount="3" num="111" type="cond"/>
            <line num="112" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="119" count="14" type="stmt"/>
            <line complexity="4" visibility="private" signature="unreachableTree(List&lt;Tree&gt;) : Tree" num="122" count="19" type="method"/>
            <line num="123" count="19" type="stmt"/>
            <line num="124" count="19" type="stmt"/>
            <line falsecount="16" truecount="3" num="124" type="cond"/>
            <line num="125" count="3" type="stmt"/>
            <line num="128" count="16" type="stmt"/>
            <line num="129" count="16" type="stmt"/>
            <line num="130" count="43" type="stmt"/>
            <line falsecount="14" truecount="29" num="130" type="cond"/>
            <line num="132" count="29" type="stmt"/>
            <line num="135" count="16" type="stmt"/>
            <line complexity="2" visibility="private" signature="skipDeclarations(List&lt;Tree&gt;) : List&lt;Tree&gt;" num="138" count="19" type="method"/>
            <line num="139" count="19" type="stmt"/>
            <line num="140" count="19" type="stmt"/>
            <line num="141" count="19" type="stmt"/>
            <line falsecount="3" truecount="16" num="141" type="cond"/>
            <line num="142" count="16" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="startIndex(Tree) : int" num="149" count="86" type="method"/>
            <line num="150" count="86" type="stmt"/>
            <line num="151" count="86" type="stmt"/>
            <line complexity="1" visibility="private" signature="endIndex(Tree) : int" num="154" count="58" type="method"/>
            <line num="155" count="58" type="stmt"/>
            <line num="156" count="58" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UntrustedContentCheck.java" name="UntrustedContentCheck.java">
            <metrics coveredelements="28" coveredconditionals="6" complexity="9" loc="93" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="61" statements="18" conditionals="6" coveredstatements="18"/>
            <class name="UntrustedContentCheck">
               <metrics coveredelements="28" coveredconditionals="6" complexity="9" coveredmethods="4" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Tree.Kind&gt;" num="49" count="4" type="method"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFile(Tree) : void" num="54" count="4" type="method"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitNode(Tree) : void" num="64" count="40" type="method"/>
            <line num="67" count="40" type="stmt"/>
            <line num="69" count="40" type="stmt"/>
            <line num="70" count="40" type="stmt"/>
            <line num="71" count="40" type="stmt"/>
            <line falsecount="16" truecount="24" num="71" type="cond"/>
            <line num="72" count="24" type="stmt"/>
            <line num="73" count="24" type="stmt"/>
            <line num="74" count="24" type="stmt"/>
            <line falsecount="7" truecount="17" num="74" type="cond"/>
            <line num="75" count="17" type="stmt"/>
            <line complexity="3" visibility="private" signature="isBad(URI) : boolean" num="83" count="24" type="method"/>
            <line num="85" count="24" type="stmt"/>
            <line num="86" count="28" type="stmt"/>
            <line num="87" count="28" type="stmt"/>
            <line falsecount="21" truecount="7" num="87" type="cond"/>
            <line num="88" count="7" type="stmt"/>
            <line num="91" count="17" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnusedCollectionCheck.java" name="UnusedCollectionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnusedCollectionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnusedFunctionArgumentCheck.java" name="UnusedFunctionArgumentCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnusedFunctionArgumentCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnusedImportCheck.java" name="UnusedImportCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnusedImportCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UnusedVariableCheck.java" name="UnusedVariableCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnusedVariableCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UpdatedConstVariableCheck.java" name="UpdatedConstVariableCheck.java">
            <metrics coveredelements="19" coveredconditionals="6" complexity="6" loc="63" coveredmethods="1" methods="1" elements="19" classes="1" ncloc="36" statements="12" conditionals="6" coveredstatements="12"/>
            <class name="UpdatedConstVariableCheck">
               <metrics coveredelements="19" coveredconditionals="6" complexity="6" coveredmethods="1" methods="1" elements="19" statements="12" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="6" visibility="public" signature="visitScript(ScriptTree) : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="47" type="cond"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="49" type="cond"/>
            <line num="50" count="5" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="54" type="cond"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UseOfEmptyReturnValueCheck.java" name="UseOfEmptyReturnValueCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UseOfEmptyReturnValueCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UseTypeAliasCheck.java" name="UseTypeAliasCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UseTypeAliasCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UselessExpressionStatementCheck.java" name="UselessExpressionStatementCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="24" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="UselessExpressionStatementCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="UselessExpressionStatementCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="38" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UselessIncrementCheck.java" name="UselessIncrementCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UselessIncrementCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UselessIntersectionCheck.java" name="UselessIntersectionCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UselessIntersectionCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/UselessStringOperationCheck.java" name="UselessStringOperationCheck.java">
            <metrics coveredelements="29" coveredconditionals="9" complexity="11" loc="85" coveredmethods="4" methods="4" elements="30" classes="1" ncloc="54" statements="16" conditionals="10" coveredstatements="16"/>
            <class name="UselessStringOperationCheck">
               <metrics coveredelements="29" coveredconditionals="9" complexity="11" coveredmethods="4" methods="4" elements="30" statements="16" conditionals="10" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitNode(Tree) : void" num="50" count="12" type="method"/>
            <line num="52" count="12" type="stmt"/>
            <line num="54" count="12" type="stmt"/>
            <line falsecount="1" truecount="11" num="54" type="cond"/>
            <line num="55" count="11" type="stmt"/>
            <line num="57" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="57" type="cond"/>
            <line num="58" count="11" type="stmt"/>
            <line num="60" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="60" type="cond"/>
            <line num="62" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="isReplaceExclusion(IdentifierTree,ArgumentListTree) : boolean" num="68" count="9" type="method"/>
            <line num="69" count="9" type="stmt"/>
            <line falsecount="4" truecount="5" num="69" type="cond"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="getVariable(MemberExpressionTree) : String" num="77" count="6" type="method"/>
            <line num="78" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="79" type="cond"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/ValuesNotConvertibleToNumbersCheck.java" name="ValuesNotConvertibleToNumbersCheck.java">
            <metrics coveredelements="45" coveredconditionals="14" complexity="16" loc="105" coveredmethods="7" methods="7" elements="45" classes="1" ncloc="72" statements="24" conditionals="14" coveredstatements="24"/>
            <class name="ValuesNotConvertibleToNumbersCheck">
               <metrics coveredelements="45" coveredconditionals="14" complexity="16" coveredmethods="7" methods="7" elements="45" statements="24" conditionals="14" coveredstatements="24"/>
            </class>
            <line complexity="2" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="39" count="217" type="method"/>
            <line num="41" count="217" type="stmt"/>
            <line falsecount="173" truecount="44" num="41" type="cond"/>
            <line num="47" count="44" type="stmt"/>
            <line complexity="7" visibility="private" signature="check(ProgramState,BinaryExpressionTree) : void" num="51" count="44" type="method"/>
            <line num="52" count="44" type="stmt"/>
            <line num="53" count="44" type="stmt"/>
            <line num="55" count="44" type="stmt"/>
            <line num="56" count="44" type="stmt"/>
            <line num="57" count="44" type="stmt"/>
            <line num="58" count="44" type="stmt"/>
            <line num="60" count="44" type="stmt"/>
            <line falsecount="33" truecount="11" num="60" type="cond"/>
            <line num="61" count="11" type="stmt"/>
            <line num="62" count="33" type="stmt"/>
            <line falsecount="26" truecount="7" num="62" type="cond"/>
            <line num="63" count="7" type="stmt"/>
            <line num="64" count="26" type="stmt"/>
            <line falsecount="17" truecount="9" num="64" type="cond"/>
            <line num="65" count="9" type="stmt"/>
            <line num="66" count="17" type="stmt"/>
            <line falsecount="14" truecount="3" num="66" type="cond"/>
            <line num="67" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkObjectIsComparedNumerically(Constraint,Constraint) : boolean" num="71" count="77" type="method"/>
            <line num="72" count="77" type="stmt"/>
            <line complexity="1" visibility="private" signature="isObjectNotConvertibleToNumber(Constraint) : boolean" num="76" count="77" type="method"/>
            <line num="77" count="77" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConvertibleToNumber(Constraint) : boolean" num="83" count="26" type="method"/>
            <line num="84" count="26" type="stmt"/>
            <line complexity="3" visibility="private" signature="raiseIssue(BinaryExpressionTree,boolean,boolean,String) : void" num="87" count="30" type="method"/>
            <line num="93" count="30" type="stmt"/>
            <line falsecount="9" truecount="21" num="93" type="cond"/>
            <line num="94" count="21" type="stmt"/>
            <line num="96" count="30" type="stmt"/>
            <line falsecount="20" truecount="10" num="96" type="cond"/>
            <line num="97" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseIssue(ExpressionTree,String) : void" num="101" count="31" type="method"/>
            <line num="102" count="31" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/VarDeclarationCheck.java" name="VarDeclarationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="VarDeclarationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/VariableDeclarationAfterUsageCheck.java" name="VariableDeclarationAfterUsageCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="VariableDeclarationAfterUsageCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/VariableDeclarationWithoutVarCheck.java" name="VariableDeclarationWithoutVarCheck.java">
            <metrics coveredelements="15" coveredconditionals="5" complexity="7" loc="58" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="33" statements="8" conditionals="6" coveredstatements="8"/>
            <class name="VariableDeclarationWithoutVarCheck">
               <metrics coveredelements="15" coveredconditionals="5" complexity="7" coveredmethods="2" methods="2" elements="16" statements="8" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="4" visibility="public" signature="visitScript(ScriptTree) : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1026" type="stmt"/>
            <line falsecount="1015" truecount="11" num="42" type="cond"/>
            <line num="43" count="11" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitSymbol(Symbol) : void" num="48" count="11" type="method"/>
            <line num="49" count="11" type="stmt"/>
            <line num="50" count="14" type="stmt"/>
            <line falsecount="8" truecount="6" num="50" type="cond"/>
            <line num="51" count="6" type="stmt"/>
            <line num="54" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="54" type="cond"/>
            <line num="55" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/VariableNameCheck.java" name="VariableNameCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="28" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="VariableNameCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="51" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/VariableShadowingCheck.java" name="VariableShadowingCheck.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="4" classes="2" ncloc="24" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="VariableShadowingCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="VariableShadowingCheck.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurations() : List&lt;Object&gt;" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/VoidUseCheck.java" name="VoidUseCheck.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="57" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="32" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="VoidUseCheck">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitNode(Tree) : void" num="45" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="isZero(ExpressionTree) : boolean" num="54" count="4" type="method"/>
            <line num="55" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/WebSQLDatabaseCheck.java" name="WebSQLDatabaseCheck.java">
            <metrics coveredelements="17" coveredconditionals="5" complexity="6" loc="62" coveredmethods="2" methods="2" elements="18" classes="1" ncloc="33" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="WebSQLDatabaseCheck">
               <metrics coveredelements="17" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="5" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="40" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="44" type="cond"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="47" type="cond"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="51" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="51" type="cond"/>
            <line num="52" count="3" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOpenDatabase(ExpressionTree) : boolean" num="59" count="10" type="method"/>
            <line num="60" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/WildcardImportCheck.java" name="WildcardImportCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="WildcardImportCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/WithStatementCheck.java" name="WithStatementCheck.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="WithStatementCheck">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="visitWithStatement(WithStatementTree) : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/WrongScopeDeclarationCheck.java" name="WrongScopeDeclarationCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="WrongScopeDeclarationCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/XpathCheck.java" name="XpathCheck.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="XpathCheck">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="eslintKey() : String" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/YieldOutsideGeneratorCheck.java" name="YieldOutsideGeneratorCheck.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="52" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="25" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="YieldOutsideGeneratorCheck">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="3" visibility="public" signature="visitYieldExpression(YieldExpressionTree) : void" num="37" count="5" type="method"/>
            <line num="39" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="41" type="cond"/>
            <line num="42" count="4" type="stmt"/>
            <line num="45" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="isGenerator(Tree) : boolean" num="48" count="3" type="method"/>
            <line num="49" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.checks.utils">
         <metrics coveredelements="80" complexity="43" loc="251" methods="19" classes="2" statements="74" coveredconditionals="25" coveredmethods="10" elements="129" ncloc="173" files="2" conditionals="36" coveredstatements="45"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/utils/CheckUtils.java" name="CheckUtils.java">
            <metrics coveredelements="80" coveredconditionals="25" complexity="28" loc="146" coveredmethods="10" methods="11" elements="84" classes="1" ncloc="107" statements="47" conditionals="26" coveredstatements="45"/>
            <class name="CheckUtils">
               <metrics coveredelements="80" coveredconditionals="25" complexity="28" coveredmethods="10" methods="11" elements="84" statements="47" conditionals="26" coveredstatements="45"/>
            </class>
            <line complexity="1" visibility="private" signature="CheckUtils()" num="44" count="0" type="method"/>
            <line complexity="4" visibility="public" signature="asString(Tree) : String" num="47" count="307" type="method"/>
            <line num="48" count="307" type="stmt"/>
            <line falsecount="146" truecount="161" num="48" type="cond"/>
            <line num="49" count="161" type="stmt"/>
            <line num="52" count="146" type="stmt"/>
            <line num="53" count="146" type="stmt"/>
            <line num="54" count="146" type="stmt"/>
            <line num="56" count="146" type="stmt"/>
            <line falsecount="146" truecount="213" num="56" type="cond"/>
            <line num="57" count="213" type="stmt"/>
            <line num="59" count="213" type="stmt"/>
            <line falsecount="17" truecount="196" num="59" type="cond"/>
            <line num="60" count="196" type="stmt"/>
            <line num="61" count="196" type="stmt"/>
            <line num="64" count="146" type="stmt"/>
            <line complexity="3" visibility="private" signature="appendChild(StringBuilder,SyntaxToken,Tree) : void" num="68" count="196" type="method"/>
            <line num="69" count="196" type="stmt"/>
            <line falsecount="146" truecount="50" num="69" type="cond"/>
            <line num="70" count="50" type="stmt"/>
            <line num="71" count="50" type="stmt"/>
            <line falsecount="37" truecount="13" num="71" type="cond"/>
            <line num="72" count="13" type="stmt"/>
            <line num="75" count="196" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSpaceRequired(SyntaxToken,SyntaxToken) : boolean" num="78" count="50" type="method"/>
            <line num="79" count="50" type="stmt"/>
            <line complexity="2" visibility="public" signature="removeParenthesis(ExpressionTree) : ExpressionTree" num="82" count="123" type="method"/>
            <line num="83" count="123" type="stmt"/>
            <line falsecount="115" truecount="8" num="83" type="cond"/>
            <line num="84" count="8" type="stmt"/>
            <line num="86" count="115" type="stmt"/>
            <line complexity="2" visibility="public" signature="parentIgnoreParentheses(Tree) : Tree" num="89" count="145" type="method"/>
            <line num="90" count="145" type="stmt"/>
            <line num="92" count="145" type="stmt"/>
            <line falsecount="129" truecount="16" num="92" type="cond"/>
            <line num="93" count="16" type="stmt"/>
            <line num="96" count="129" type="stmt"/>
            <line complexity="4" visibility="public" signature="buildControlFlowGraph(Tree) : ControlFlowGraph" num="99" count="40" type="method"/>
            <line num="100" count="40" type="stmt"/>
            <line num="101" count="40" type="stmt"/>
            <line falsecount="0" truecount="98" num="101" type="cond"/>
            <line num="102" count="98" type="stmt"/>
            <line falsecount="58" truecount="40" num="102" type="cond"/>
            <line num="103" count="40" type="stmt"/>
            <line num="105" count="58" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isDescendant(Tree,Tree) : boolean" num="110" count="5" type="method"/>
            <line num="111" count="5" type="stmt"/>
            <line num="112" count="5" type="stmt"/>
            <line falsecount="2" truecount="17" num="112" type="cond"/>
            <line num="113" count="17" type="stmt"/>
            <line falsecount="14" truecount="3" num="113" type="cond"/>
            <line num="114" count="3" type="stmt"/>
            <line num="116" count="14" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFirstAncestor(Tree,Kinds) : Tree" num="121" count="305" type="method"/>
            <line num="123" count="305" type="stmt"/>
            <line num="124" count="305" type="stmt"/>
            <line falsecount="3" truecount="889" num="124" type="cond"/>
            <line num="125" count="889" type="stmt"/>
            <line falsecount="587" truecount="302" num="125" type="cond"/>
            <line num="126" count="302" type="stmt"/>
            <line num="128" count="587" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="readLines(JavaScriptFile) : List&lt;String&gt;" num="133" count="3" type="method"/>
            <line num="134" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="newBufferedReader(JavaScriptFile) : BufferedReader" num="142" count="3" type="method"/>
            <line num="143" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/utils/FunctionReturns.java" name="FunctionReturns.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="105" coveredmethods="0" methods="8" elements="45" classes="1" ncloc="66" statements="27" conditionals="10" coveredstatements="0"/>
            <class name="FunctionReturns">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="8" elements="45" statements="27" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="getFunctionReturns(BlockTree) : FunctionReturns" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="containsTry(ControlFlowGraph) : boolean" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isThrowStatement(Tree) : boolean" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isReachableBlock(CfgBlock,ControlFlowGraph) : boolean" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsReturnWithValue() : boolean" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsReturnWithoutValue() : boolean" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsImplicitReturn() : boolean" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnStatements() : Set&lt;ReturnStatementTree&gt;" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.checks.annotations">
         <metrics coveredelements="0" complexity="0" loc="60" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="18" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/annotations/JavaScriptRule.java" name="JavaScriptRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JavaScriptRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/main/java/org/sonar/javascript/checks/annotations/TypeScriptRule.java" name="TypeScriptRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TypeScriptRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.se">
         <metrics coveredelements="1296" complexity="440" loc="2728" methods="189" classes="17" statements="859" coveredconditionals="285" coveredmethods="184" elements="1340" ncloc="1945" files="13" conditionals="292" coveredstatements="827"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/BlockExecution.java" name="BlockExecution.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="7" loc="59" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="29" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="BlockExecution">
               <metrics coveredelements="16" coveredconditionals="2" complexity="7" coveredmethods="5" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BlockExecution(CfgBlock,ProgramState)" num="33" count="39225" type="method"/>
            <line num="34" count="39225" type="stmt"/>
            <line num="35" count="39225" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="38" count="45123" type="method"/>
            <line num="40" count="45123" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="43" count="648" type="method"/>
            <line num="45" count="648" type="stmt"/>
            <line falsecount="646" truecount="2" num="45" type="cond"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="646" type="stmt"/>
            <line num="49" count="646" type="stmt"/>
            <line complexity="1" visibility="public" signature="block() : CfgBlock" num="52" count="44593" type="method"/>
            <line num="53" count="44593" type="stmt"/>
            <line complexity="1" visibility="public" signature="state() : ProgramState" num="56" count="22295" type="method"/>
            <line num="57" count="22295" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/Constraint.java" name="Constraint.java">
            <metrics coveredelements="82" coveredconditionals="14" complexity="27" loc="265" coveredmethods="19" methods="19" elements="82" classes="2" ncloc="182" statements="49" conditionals="14" coveredstatements="49"/>
            <class name="Constraint">
               <metrics coveredelements="80" coveredconditionals="14" complexity="26" coveredmethods="18" methods="18" elements="80" statements="48" conditionals="14" coveredstatements="48"/>
            </class>
            <class name="Constraint.ValueSubSet">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 118()" num="118" count="2" type="method"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="bitSet() : int" num="147" count="65592" type="method"/>
            <line num="148" count="65592" type="stmt"/>
            <line complexity="1" visibility="private" signature="Constraint(ValueSubSet)" num="153" count="36" type="method"/>
            <line num="154" count="36" type="stmt"/>
            <line complexity="1" visibility="private" signature="Constraint(int)" num="157" count="806621" type="method"/>
            <line num="158" count="806621" type="stmt"/>
            <line complexity="1" visibility="private" signature="get(int) : Constraint" num="161" count="806583" type="method"/>
            <line num="162" count="806583" type="stmt"/>
            <line complexity="1" visibility="private" signature="anyValue() : Constraint" num="165" count="2" type="method"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="36" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="or(Constraint) : Constraint" num="173" count="20" type="method"/>
            <line num="174" count="20" type="stmt"/>
            <line num="175" count="20" type="stmt"/>
            <line num="176" count="20" type="stmt"/>
            <line falsecount="20" truecount="38" num="176" type="cond"/>
            <line num="177" count="38" type="stmt"/>
            <line num="179" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(Constraint) : Constraint" num="182" count="803521" type="method"/>
            <line num="183" count="803521" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(Constraint) : Constraint" num="186" count="2762" type="method"/>
            <line num="187" count="2762" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : Constraint" num="190" count="300" type="method"/>
            <line num="191" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : Type" num="194" count="750" type="method"/>
            <line num="195" count="750" type="stmt"/>
            <line complexity="2" visibility="public" signature="numericRange() : Optional&lt;Range&lt;Integer&gt;&gt;" num="201" count="3619" type="method"/>
            <line num="202" count="3619" type="stmt"/>
            <line falsecount="2481" truecount="1138" num="202" type="cond"/>
            <line num="203" count="1138" type="stmt"/>
            <line num="206" count="2481" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSingleValue() : boolean" num="209" count="2774" type="method"/>
            <line num="210" count="2774" type="stmt"/>
            <line complexity="2" visibility="public" signature="typeSet() : Set&lt;Type&gt;" num="213" count="30" type="method"/>
            <line num="214" count="30" type="stmt"/>
            <line num="215" count="30" type="stmt"/>
            <line num="216" count="390" type="stmt"/>
            <line falsecount="293" truecount="97" num="216" type="cond"/>
            <line num="217" count="97" type="stmt"/>
            <line num="221" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStricterOrEqualTo(Constraint) : boolean" num="224" count="12644" type="method"/>
            <line num="225" count="12644" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIncompatibleWith(Constraint) : boolean" num="228" count="41106" type="method"/>
            <line num="229" count="41106" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="232" count="81791" type="method"/>
            <line num="234" count="81791" type="stmt"/>
            <line falsecount="81579" truecount="212" num="234" type="cond"/>
            <line num="235" count="212" type="stmt"/>
            <line num="237" count="81579" type="stmt"/>
            <line falsecount="81578" truecount="1" num="237" type="cond"/>
            <line num="238" count="1" type="stmt"/>
            <line num="241" count="81578" type="stmt"/>
            <line num="242" count="81578" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="245" count="609441" type="method"/>
            <line num="247" count="609441" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="250" count="2346" type="method"/>
            <line num="252" count="2346" type="stmt"/>
            <line num="253" count="2346" type="stmt"/>
            <line falsecount="1820" truecount="526" num="253" type="cond"/>
            <line num="254" count="526" type="stmt"/>
            <line num="257" count="1820" type="stmt"/>
            <line num="258" count="1820" type="stmt"/>
            <line num="259" count="32760" type="stmt"/>
            <line falsecount="29237" truecount="3523" num="259" type="cond"/>
            <line num="260" count="3523" type="stmt"/>
            <line num="263" count="1820" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/ExpressionStack.java" name="ExpressionStack.java">
            <metrics coveredelements="231" coveredconditionals="24" complexity="116" loc="384" coveredmethods="21" methods="21" elements="252" classes="1" ncloc="304" statements="207" conditionals="24" coveredstatements="186"/>
            <class name="ExpressionStack">
               <metrics coveredelements="231" coveredconditionals="24" complexity="116" coveredmethods="21" methods="21" elements="252" statements="207" conditionals="24" coveredstatements="186"/>
            </class>
            <line complexity="1" visibility="private" signature="ExpressionStack()" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="ExpressionStack(Deque&lt;SymbolicValue&gt;)" num="70" count="142233" type="method"/>
            <line num="71" count="142233" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyStack() : ExpressionStack" num="74" count="4894" type="method"/>
            <line num="75" count="4894" type="stmt"/>
            <line complexity="1" visibility="public" signature="push(SymbolicValue) : ExpressionStack" num="78" count="47804" type="method"/>
            <line num="79" count="47804" type="stmt"/>
            <line num="80" count="47804" type="stmt"/>
            <line num="81" count="47804" type="stmt"/>
            <line complexity="85" visibility="public" signature="execute(ExpressionTree,ProgramStateConstraints) : ExpressionStack" num="93" count="56248" type="method"/>
            <line num="94" count="56248" type="stmt"/>
            <line num="95" count="56248" type="stmt"/>
            <line num="96" count="56248" type="stmt"/>
            <line num="97" count="44" type="stmt"/>
            <line num="98" count="44" type="stmt"/>
            <line num="99" count="44" type="stmt"/>
            <line num="100" count="44" type="stmt"/>
            <line num="101" count="62" type="stmt"/>
            <line num="102" count="62" type="stmt"/>
            <line num="103" count="62" type="stmt"/>
            <line num="104" count="92" type="stmt"/>
            <line num="105" count="92" type="stmt"/>
            <line num="106" count="92" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="111" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="118" type="cond"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="3093" type="stmt"/>
            <line num="128" count="3093" type="stmt"/>
            <line num="129" count="3093" type="stmt"/>
            <line num="130" count="51" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="133" count="59" type="stmt"/>
            <line num="134" count="59" type="stmt"/>
            <line num="135" count="6" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="10" type="stmt"/>
            <line num="144" count="10" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="11" type="stmt"/>
            <line num="161" count="11" type="stmt"/>
            <line num="162" count="11" type="stmt"/>
            <line num="163" count="11" type="stmt"/>
            <line num="164" count="30" type="stmt"/>
            <line num="165" count="30" type="stmt"/>
            <line num="166" count="30" type="stmt"/>
            <line num="167" count="30" type="stmt"/>
            <line num="168" count="30" type="stmt"/>
            <line num="169" count="95" type="stmt"/>
            <line num="170" count="24" type="stmt"/>
            <line num="171" count="98" type="stmt"/>
            <line num="172" count="20" type="stmt"/>
            <line num="173" count="101" type="stmt"/>
            <line num="174" count="35" type="stmt"/>
            <line num="175" count="9" type="stmt"/>
            <line num="176" count="13" type="stmt"/>
            <line num="177" count="395" type="stmt"/>
            <line num="178" count="395" type="stmt"/>
            <line num="179" count="395" type="stmt"/>
            <line num="180" count="395" type="stmt"/>
            <line num="181" count="5" type="stmt"/>
            <line num="182" count="5" type="stmt"/>
            <line num="183" count="5" type="stmt"/>
            <line num="184" count="5" type="stmt"/>
            <line num="185" count="5" type="stmt"/>
            <line num="186" count="599" type="stmt"/>
            <line num="187" count="599" type="stmt"/>
            <line num="188" count="599" type="stmt"/>
            <line num="189" count="599" type="stmt"/>
            <line num="190" count="599" type="stmt"/>
            <line num="191" count="8" type="stmt"/>
            <line num="192" count="6" type="stmt"/>
            <line num="193" count="14" type="stmt"/>
            <line num="194" count="14" type="stmt"/>
            <line num="195" count="9" type="stmt"/>
            <line num="196" count="72" type="stmt"/>
            <line num="197" count="14" type="stmt"/>
            <line num="198" count="15" type="stmt"/>
            <line num="199" count="5" type="stmt"/>
            <line num="200" count="12" type="stmt"/>
            <line num="201" count="6" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="3" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="9" type="stmt"/>
            <line num="213" count="91" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="31" type="stmt"/>
            <line num="217" count="17" type="stmt"/>
            <line num="219" count="13" type="stmt"/>
            <line num="220" count="2365" type="stmt"/>
            <line num="221" count="62" type="stmt"/>
            <line num="222" count="62" type="stmt"/>
            <line num="223" count="36" type="stmt"/>
            <line num="225" count="47476" type="stmt"/>
            <line num="227" count="148" type="stmt"/>
            <line num="228" count="544" type="stmt"/>
            <line num="229" count="230" type="stmt"/>
            <line num="230" count="173" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="18" type="stmt"/>
            <line num="233" count="58" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="12" type="stmt"/>
            <line num="236" count="326" type="stmt"/>
            <line num="237" count="51820" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="56248" type="stmt"/>
            <line complexity="3" visibility="private" signature="executeNewExpression(NewExpressionTree,Deque&lt;SymbolicValue&gt;) : void" num="244" count="92" type="method"/>
            <line num="245" count="92" type="stmt"/>
            <line falsecount="91" truecount="1" num="245" type="cond"/>
            <line num="246" count="92" type="stmt"/>
            <line num="247" count="92" type="stmt"/>
            <line num="248" count="92" type="stmt"/>
            <line falsecount="14" truecount="78" num="248" type="cond"/>
            <line num="249" count="78" type="stmt"/>
            <line num="251" count="14" type="stmt"/>
            <line complexity="5" visibility="private" signature="executeCallExpression(CallExpressionTree,Deque&lt;SymbolicValue&gt;,ProgramStateConstraints) : void" num="255" count="3093" type="method"/>
            <line num="256" count="3093" type="stmt"/>
            <line num="257" count="3093" type="stmt"/>
            <line num="259" count="3093" type="stmt"/>
            <line falsecount="3093" truecount="24209" num="259" type="cond"/>
            <line num="260" count="24209" type="stmt"/>
            <line num="263" count="3093" type="stmt"/>
            <line num="265" count="3093" type="stmt"/>
            <line num="266" count="3093" type="stmt"/>
            <line falsecount="2876" truecount="217" num="266" type="cond"/>
            <line num="267" count="217" type="stmt"/>
            <line num="268" count="2876" type="stmt"/>
            <line falsecount="2840" truecount="36" num="268" type="cond"/>
            <line num="269" count="36" type="stmt"/>
            <line num="270" count="36" type="stmt"/>
            <line falsecount="1" truecount="35" num="270" type="cond"/>
            <line num="271" count="35" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="276" count="2840" type="stmt"/>
            <line complexity="1" visibility="private" signature="runNestedSymbolicExecution(Deque&lt;SymbolicValue&gt;,ProgramStateConstraints,List&lt;SymbolicValue&gt;,FunctionTree) : void" num="280" count="35" type="method"/>
            <line num="282" count="35" type="stmt"/>
            <line num="283" count="35" type="stmt"/>
            <line num="284" count="35" type="stmt"/>
            <line num="285" count="35" type="stmt"/>
            <line num="286" count="35" type="stmt"/>
            <line num="287" count="35" type="stmt"/>
            <line num="288" count="35" type="stmt"/>
            <line complexity="3" visibility="private" signature="initialProgramStateWithParameterConstraints(FunctionTree,List&lt;Constraint&gt;) : ProgramState" num="291" count="35" type="method"/>
            <line num="292" count="35" type="stmt"/>
            <line num="294" count="35" type="stmt"/>
            <line num="295" count="35" type="stmt"/>
            <line num="296" count="22" type="stmt"/>
            <line falsecount="20" truecount="2" num="296" type="cond"/>
            <line num="297" count="2" type="stmt"/>
            <line num="300" count="20" type="stmt"/>
            <line falsecount="3" truecount="17" num="300" type="cond"/>
            <line num="302" count="20" type="stmt"/>
            <line num="305" count="33" type="stmt"/>
            <line complexity="1" visibility="private" signature="copy() : Deque&lt;SymbolicValue&gt;" num="308" count="142233" type="method"/>
            <line num="309" count="142233" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : SymbolicValue" num="312" count="184306" type="method"/>
            <line num="313" count="184306" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="316" count="4092" type="method"/>
            <line num="317" count="4092" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="320" count="310332" type="method"/>
            <line num="321" count="310332" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="324" count="47542" type="method"/>
            <line num="326" count="47542" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="329" count="411" type="method"/>
            <line num="331" count="411" type="stmt"/>
            <line falsecount="1" truecount="410" num="331" type="cond"/>
            <line num="332" count="410" type="stmt"/>
            <line num="333" count="410" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="pop(Deque&lt;SymbolicValue&gt;,int) : void" num="338" count="113" type="method"/>
            <line num="339" count="113" type="stmt"/>
            <line falsecount="113" truecount="76" num="339" type="cond"/>
            <line num="340" count="76" type="stmt"/>
            <line complexity="2" visibility="public" signature="peek(int) : SymbolicValue" num="345" count="989" type="method"/>
            <line num="346" count="989" type="stmt"/>
            <line num="348" count="989" type="stmt"/>
            <line num="349" count="989" type="stmt"/>
            <line num="350" count="989" type="stmt"/>
            <line falsecount="989" truecount="324" num="350" type="cond"/>
            <line num="351" count="324" type="stmt"/>
            <line num="352" count="324" type="stmt"/>
            <line num="355" count="989" type="stmt"/>
            <line complexity="1" visibility="private" signature="pushUnknown(Deque&lt;SymbolicValue&gt;) : void" num="358" count="2861" type="method"/>
            <line num="359" count="2861" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeLastValue() : ExpressionStack" num="362" count="36131" type="method"/>
            <line num="363" count="36131" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Consumer&lt;Deque&lt;SymbolicValue&gt;&gt;) : ExpressionStack" num="373" count="38181" type="method"/>
            <line num="374" count="38181" type="stmt"/>
            <line num="375" count="38181" type="stmt"/>
            <line num="376" count="38181" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="379" count="1" type="method"/>
            <line num="381" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/LiveVariableAnalysis.java" name="LiveVariableAnalysis.java">
            <metrics coveredelements="129" coveredconditionals="34" complexity="36" loc="242" coveredmethods="18" methods="19" elements="132" classes="3" ncloc="179" statements="79" conditionals="34" coveredstatements="77"/>
            <class name="LiveVariableAnalysis">
               <metrics coveredelements="43" coveredconditionals="8" complexity="13" coveredmethods="8" methods="9" elements="46" statements="29" conditionals="8" coveredstatements="27"/>
            </class>
            <class name="LiveVariableAnalysis.BlockLiveness">
               <metrics coveredelements="29" coveredconditionals="8" complexity="6" coveredmethods="2" methods="2" elements="29" statements="19" conditionals="8" coveredstatements="19"/>
            </class>
            <class name="LiveVariableAnalysis.Usages">
               <metrics coveredelements="57" coveredconditionals="18" complexity="17" coveredmethods="8" methods="8" elements="57" statements="31" conditionals="18" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="getLiveOutSymbols(CfgBlock) : Set&lt;Symbol&gt;" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiveInSymbols(CfgBlock) : Set&lt;Symbol&gt;" num="58" count="38890" type="method"/>
            <line num="59" count="38890" type="stmt"/>
            <line num="60" count="38890" type="stmt"/>
            <line complexity="1" visibility="private" signature="LiveVariableAnalysis(ControlFlowGraph,Scope,boolean)" num="63" count="324" type="method"/>
            <line num="64" count="324" type="stmt"/>
            <line num="65" count="324" type="stmt"/>
            <line num="66" count="324" type="stmt"/>
            <line num="67" count="324" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(ControlFlowGraph,Scope) : LiveVariableAnalysis" num="70" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForSymbolicExecution(ControlFlowGraph,Scope) : LiveVariableAnalysis" num="74" count="323" type="method"/>
            <line num="75" count="323" type="stmt"/>
            <line complexity="3" visibility="private" signature="buildUsagesAndLivenesses(ControlFlowGraph,Usages,Set&lt;BlockLiveness&gt;) : void" num="79" count="324" type="method"/>
            <line num="80" count="324" type="stmt"/>
            <line num="81" count="324" type="stmt"/>
            <line num="82" count="1493" type="stmt"/>
            <line num="83" count="1493" type="stmt"/>
            <line num="84" count="1493" type="stmt"/>
            <line num="92" count="324" type="stmt"/>
            <line num="93" count="324" type="stmt"/>
            <line falsecount="324" truecount="2932" num="93" type="cond"/>
            <line num="94" count="2932" type="stmt"/>
            <line num="95" count="2932" type="stmt"/>
            <line num="96" count="2932" type="stmt"/>
            <line num="97" count="2932" type="stmt"/>
            <line falsecount="1770" truecount="1162" num="97" type="cond"/>
            <line num="98" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUsages() : Usages" num="103" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="BlockLiveness(CfgBlock,Usages)" num="114" count="1493" type="method"/>
            <line num="115" count="1493" type="stmt"/>
            <line num="116" count="1493" type="stmt"/>
            <line num="118" count="1493" type="stmt"/>
            <line num="119" count="6917" type="stmt"/>
            <line falsecount="4001" truecount="2916" num="119" type="cond"/>
            <line num="120" count="2916" type="stmt"/>
            <line num="122" count="6917" type="stmt"/>
            <line falsecount="6549" truecount="368" num="122" type="cond"/>
            <line num="123" count="368" type="stmt"/>
            <line complexity="3" visibility="private" signature="updateLiveInAndOut(Map&lt;CfgBlock, BlockLiveness&gt;) : boolean" num="128" count="2932" type="method"/>
            <line num="129" count="2932" type="stmt"/>
            <line num="130" count="2932" type="stmt"/>
            <line num="131" count="3917" type="stmt"/>
            <line num="134" count="2932" type="stmt"/>
            <line num="135" count="2932" type="stmt"/>
            <line num="137" count="2932" type="stmt"/>
            <line num="138" count="14299" type="stmt"/>
            <line num="139" count="14299" type="stmt"/>
            <line falsecount="13510" truecount="789" num="139" type="cond"/>
            <line num="140" count="789" type="stmt"/>
            <line num="141" count="13510" type="stmt"/>
            <line falsecount="10147" truecount="3363" num="141" type="cond"/>
            <line num="142" count="3363" type="stmt"/>
            <line num="146" count="2932" type="stmt"/>
            <line complexity="1" visibility="private" signature="Usages(Scope)" num="159" count="324" type="method"/>
            <line num="160" count="324" type="stmt"/>
            <line complexity="3" visibility="public" signature="getUsage(Tree) : Usage" num="163" count="14299" type="method"/>
            <line num="164" count="14299" type="stmt"/>
            <line falsecount="13449" truecount="850" num="164" type="cond"/>
            <line num="165" count="850" type="stmt"/>
            <line num="167" count="13449" type="stmt"/>
            <line falsecount="12603" truecount="846" num="167" type="cond"/>
            <line num="168" count="846" type="stmt"/>
            <line num="170" count="12603" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasUsagesInNestedFunctions(Symbol) : boolean" num="173" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="add(IdentifierTree) : Usage" num="177" count="2916" type="method"/>
            <line num="179" count="2916" type="stmt"/>
            <line num="180" count="2916" type="stmt"/>
            <line num="181" count="2916" type="stmt"/>
            <line falsecount="923" truecount="1993" num="181" type="cond"/>
            <line num="182" count="1993" type="stmt"/>
            <line num="184" count="2916" type="stmt"/>
            <line complexity="5" visibility="private" signature="addSymbol(Symbol) : void" num="187" count="2203" type="method"/>
            <line num="188" count="2203" type="stmt"/>
            <line falsecount="642" truecount="1561" num="188" type="cond"/>
            <line num="189" count="1561" type="stmt"/>
            <line num="192" count="642" type="stmt"/>
            <line num="194" count="642" type="stmt"/>
            <line falsecount="101" truecount="541" num="194" type="cond"/>
            <line num="195" count="541" type="stmt"/>
            <line num="196" count="541" type="stmt"/>
            <line num="197" count="2133" type="stmt"/>
            <line num="198" count="2133" type="stmt"/>
            <line falsecount="562" truecount="1571" num="198" type="cond"/>
            <line num="199" count="1571" type="stmt"/>
            <line num="202" count="541" type="stmt"/>
            <line falsecount="475" truecount="66" num="202" type="cond"/>
            <line num="203" count="66" type="stmt"/>
            <line complexity="3" visibility="private" signature="isLocalVariable(Symbol) : boolean" num="208" count="642" type="method"/>
            <line num="209" count="642" type="stmt"/>
            <line num="210" count="642" type="stmt"/>
            <line falsecount="101" truecount="570" num="210" type="cond"/>
            <line num="211" count="570" type="stmt"/>
            <line falsecount="29" truecount="541" num="211" type="cond"/>
            <line num="212" count="541" type="stmt"/>
            <line num="214" count="29" type="stmt"/>
            <line num="216" count="101" type="stmt"/>
            <line complexity="1" visibility="public" signature="neverReadSymbols() : Set&lt;Symbol&gt;" num="219" count="1" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="addAssignment(AssignmentExpressionTree) : void" num="223" count="368" type="method"/>
            <line num="224" count="368" type="stmt"/>
            <line complexity="2" visibility="private" signature="isRead(Usage) : boolean" num="228" count="15643" type="method"/>
            <line num="229" count="15643" type="stmt"/>
            <line falsecount="5710" truecount="9933" num="229" type="cond"/>
            <line num="230" count="9933" type="stmt"/>
            <line num="232" count="5710" type="stmt"/>
            <line complexity="2" visibility="private" signature="isWrite(Usage) : boolean" num="235" count="14299" type="method"/>
            <line num="236" count="14299" type="stmt"/>
            <line falsecount="4366" truecount="9933" num="236" type="cond"/>
            <line num="237" count="9933" type="stmt"/>
            <line num="239" count="4366" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/LocalVariables.java" name="LocalVariables.java">
            <metrics coveredelements="46" coveredconditionals="14" complexity="15" loc="106" coveredmethods="6" methods="6" elements="46" classes="1" ncloc="67" statements="26" conditionals="14" coveredstatements="26"/>
            <class name="LocalVariables">
               <metrics coveredelements="46" coveredconditionals="14" complexity="15" coveredmethods="6" methods="6" elements="46" statements="26" conditionals="14" coveredstatements="26"/>
            </class>
            <line complexity="4" visibility="public" signature="LocalVariables(Scope,ControlFlowGraph)" num="44" count="331" type="method"/>
            <line num="45" count="331" type="stmt"/>
            <line num="46" count="331" type="stmt"/>
            <line num="48" count="331" type="stmt"/>
            <line num="49" count="1499" type="stmt"/>
            <line num="50" count="6889" type="stmt"/>
            <line falsecount="3987" truecount="2902" num="50" type="cond"/>
            <line num="51" count="2902" type="stmt"/>
            <line num="56" count="331" type="stmt"/>
            <line num="57" count="540" type="stmt"/>
            <line falsecount="4" truecount="536" num="57" type="cond"/>
            <line num="58" count="536" type="stmt"/>
            <line num="60" count="540" type="stmt"/>
            <line falsecount="450" truecount="90" num="60" type="cond"/>
            <line num="61" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="trackableVariables() : Set&lt;Symbol&gt;" num="69" count="331" type="method"/>
            <line num="70" count="331" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionParameters() : Set&lt;Symbol&gt;" num="76" count="327" type="method"/>
            <line num="77" count="327" type="stmt"/>
            <line complexity="3" visibility="private" signature="isWrittenOutsideCfg(Symbol,SetMultimap&lt;Symbol, IdentifierTree&gt;) : boolean" num="80" count="540" type="method"/>
            <line num="81" count="540" type="stmt"/>
            <line num="82" count="2129" type="stmt"/>
            <line falsecount="2125" truecount="4" num="82" type="cond"/>
            <line num="83" count="4" type="stmt"/>
            <line num="86" count="536" type="stmt"/>
            <line complexity="3" visibility="private" signature="add(IdentifierTree,SetMultimap&lt;Symbol, IdentifierTree&gt;) : void" num="89" count="2902" type="method"/>
            <line num="90" count="2902" type="stmt"/>
            <line num="91" count="2902" type="stmt"/>
            <line falsecount="914" truecount="1988" num="91" type="cond"/>
            <line num="92" count="1988" type="stmt"/>
            <line complexity="3" visibility="private" signature="isLocalVariable(Symbol) : boolean" num="96" count="2199" type="method"/>
            <line num="97" count="2199" type="stmt"/>
            <line num="98" count="2199" type="stmt"/>
            <line falsecount="211" truecount="2056" num="98" type="cond"/>
            <line num="99" count="2056" type="stmt"/>
            <line falsecount="68" truecount="1988" num="99" type="cond"/>
            <line num="100" count="1988" type="stmt"/>
            <line num="102" count="68" type="stmt"/>
            <line num="104" count="211" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/ProgramState.java" name="ProgramState.java">
            <metrics coveredelements="222" coveredconditionals="43" complexity="65" loc="417" coveredmethods="38" methods="39" elements="229" classes="1" ncloc="321" statements="144" conditionals="46" coveredstatements="141"/>
            <class name="ProgramState">
               <metrics coveredelements="222" coveredconditionals="43" complexity="65" coveredmethods="38" methods="39" elements="229" statements="144" conditionals="46" coveredstatements="141"/>
            </class>
            <line complexity="4" visibility="private" signature="ProgramState(ImmutableMap&lt;Symbol, SymbolicValue&gt;,ImmutableMap&lt;SymbolicValue, Constraint&gt;,ExpressionStack,ImmutableSet&lt;Relation&gt;,int)" num="66" count="226102" type="method"/>
            <line num="73" count="226102" type="stmt"/>
            <line num="74" count="226102" type="stmt"/>
            <line falsecount="83665" truecount="142437" num="74" type="cond"/>
            <line num="75" count="142437" type="stmt"/>
            <line num="78" count="226102" type="stmt"/>
            <line num="79" count="226102" type="stmt"/>
            <line num="80" count="2553196" type="stmt"/>
            <line falsecount="27690" truecount="2525506" num="80" type="cond"/>
            <line num="81" count="2525506" type="stmt"/>
            <line num="85" count="226102" type="stmt"/>
            <line num="86" count="226102" type="stmt"/>
            <line num="87" count="2388" type="stmt"/>
            <line falsecount="400" truecount="1988" num="87" type="cond"/>
            <line num="88" count="1988" type="stmt"/>
            <line num="92" count="226102" type="stmt"/>
            <line num="93" count="226102" type="stmt"/>
            <line num="94" count="226102" type="stmt"/>
            <line num="95" count="226102" type="stmt"/>
            <line num="96" count="226102" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : ImmutableMap&lt;Symbol, SymbolicValue&gt;" num="99" count="971" type="method"/>
            <line num="100" count="971" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyState() : ProgramState" num="103" count="769" type="method"/>
            <line num="104" count="769" type="stmt"/>
            <line complexity="2" visibility="private" signature="addConstraint(SymbolicValue,Constraint) : ProgramState" num="113" count="1105" type="method"/>
            <line num="114" count="1105" type="stmt"/>
            <line falsecount="1105" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="1105" type="stmt"/>
            <line num="119" count="1105" type="stmt"/>
            <line num="120" count="1105" type="stmt"/>
            <line num="122" count="1105" type="stmt"/>
            <line complexity="2" visibility="public" signature="newSymbolicValue(Symbol,Constraint) : ProgramState" num="125" count="1388" type="method"/>
            <line num="126" count="1388" type="stmt"/>
            <line num="128" count="1388" type="stmt"/>
            <line num="129" count="1388" type="stmt"/>
            <line falsecount="283" truecount="1105" num="129" type="cond"/>
            <line num="130" count="1105" type="stmt"/>
            <line num="133" count="1388" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFunctionSymbolicValue(Symbol,FunctionTree) : ProgramState" num="136" count="23" type="method"/>
            <line num="137" count="23" type="stmt"/>
            <line num="138" count="23" type="stmt"/>
            <line complexity="2" visibility="private" signature="updateValue(ImmutableMap&lt;Symbol, SymbolicValue&gt;,Symbol,SymbolicValue) : ImmutableMap&lt;Symbol, SymbolicValue&gt;" num="141" count="1411" type="method"/>
            <line num="142" count="1411" type="stmt"/>
            <line num="143" count="1411" type="stmt"/>
            <line num="144" count="3476" type="stmt"/>
            <line falsecount="130" truecount="3346" num="144" type="cond"/>
            <line num="145" count="3346" type="stmt"/>
            <line num="148" count="1411" type="stmt"/>
            <line num="149" count="1411" type="stmt"/>
            <line complexity="3" visibility="public" signature="constrain(SymbolicValue,Constraint) : Optional&lt;ProgramState&gt;" num="152" count="39295" type="method"/>
            <line num="153" count="39295" type="stmt"/>
            <line num="155" count="39295" type="stmt"/>
            <line falsecount="2355" truecount="36940" num="155" type="cond"/>
            <line num="156" count="36940" type="stmt"/>
            <line num="158" count="36940" type="stmt"/>
            <line num="159" count="36940" type="stmt"/>
            <line num="160" count="40" type="stmt"/>
            <line falsecount="0" truecount="40" num="160" type="cond"/>
            <line num="161" count="40" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="168" count="39295" type="stmt"/>
            <line complexity="5" visibility="private" signature="constrainWithoutEquivalent(SymbolicValue,Constraint) : Optional&lt;ProgramState&gt;" num="171" count="39335" type="method"/>
            <line num="172" count="39335" type="stmt"/>
            <line falsecount="38939" truecount="396" num="172" type="cond"/>
            <line num="173" count="396" type="stmt"/>
            <line num="175" count="38939" type="stmt"/>
            <line falsecount="36656" truecount="2283" num="175" type="cond"/>
            <line num="176" count="2283" type="stmt"/>
            <line num="178" count="36656" type="stmt"/>
            <line num="179" count="36656" type="stmt"/>
            <line num="180" count="36656" type="stmt"/>
            <line complexity="4" visibility="private" signature="getEquivalentValues(SymbolicValue) : Set&lt;SymbolicValue&gt;" num="183" count="36940" type="method"/>
            <line num="184" count="36940" type="stmt"/>
            <line num="185" count="36940" type="stmt"/>
            <line num="186" count="204" type="stmt"/>
            <line falsecount="160" truecount="44" num="186" type="cond"/>
            <line num="188" count="44" type="stmt"/>
            <line falsecount="20" truecount="24" num="188" type="cond"/>
            <line num="189" count="24" type="stmt"/>
            <line num="190" count="20" type="stmt"/>
            <line falsecount="4" truecount="16" num="190" type="cond"/>
            <line num="191" count="16" type="stmt"/>
            <line num="196" count="36940" type="stmt"/>
            <line complexity="2" visibility="private" signature="replaceConstraint(SymbolicValue,Constraint) : ImmutableMap&lt;SymbolicValue, Constraint&gt;" num="199" count="36656" type="method"/>
            <line num="200" count="36656" type="stmt"/>
            <line num="201" count="36656" type="stmt"/>
            <line num="202" count="405587" type="stmt"/>
            <line falsecount="2343" truecount="403244" num="202" type="cond"/>
            <line num="203" count="403244" type="stmt"/>
            <line num="207" count="36656" type="stmt"/>
            <line num="208" count="36656" type="stmt"/>
            <line complexity="1" visibility="private" signature="newSymbolicValue() : SymbolicValue" num="211" count="1622" type="method"/>
            <line num="212" count="1622" type="stmt"/>
            <line num="213" count="1622" type="stmt"/>
            <line num="214" count="1622" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbolicValue(Symbol) : SymbolicValue" num="217" count="48119" type="method"/>
            <line num="219" count="48119" type="stmt"/>
            <line complexity="3" visibility="public" signature="getConstraint(SymbolicValue) : Constraint" num="222" count="713159" type="method"/>
            <line num="224" count="713159" type="stmt"/>
            <line num="225" count="713159" type="stmt"/>
            <line falsecount="542288" truecount="170871" num="225" type="cond"/>
            <line num="227" count="713159" type="stmt"/>
            <line falsecount="713101" truecount="58" num="227" type="cond"/>
            <line complexity="1" visibility="public" signature="getConstraint(Symbol) : Constraint" num="230" count="3250" type="method"/>
            <line num="231" count="3250" type="stmt"/>
            <line complexity="2" visibility="private" signature="constraintsBySymbol() : Map&lt;Symbol, Constraint&gt;" num="234" count="48896" type="method"/>
            <line num="235" count="48896" type="stmt"/>
            <line num="236" count="48896" type="stmt"/>
            <line num="237" count="565318" type="stmt"/>
            <line num="238" count="565318" type="stmt"/>
            <line falsecount="0" truecount="565318" num="238" type="cond"/>
            <line num="239" count="565318" type="stmt"/>
            <line num="243" count="48896" type="stmt"/>
            <line complexity="2" visibility="private" signature="functionsBySymbol() : Map&lt;Symbol, FunctionTree&gt;" num="246" count="48676" type="method"/>
            <line num="247" count="48676" type="stmt"/>
            <line num="248" count="48676" type="stmt"/>
            <line num="249" count="562378" type="stmt"/>
            <line falsecount="562158" truecount="220" num="249" type="cond"/>
            <line num="250" count="220" type="stmt"/>
            <line num="254" count="48676" type="stmt"/>
            <line complexity="1" visibility="public" signature="pushToStack(SymbolicValue) : ProgramState" num="257" count="47532" type="method"/>
            <line num="258" count="47532" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeLastValue() : ProgramState" num="261" count="35897" type="method"/>
            <line num="262" count="35897" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearStack(Tree) : ProgramState" num="265" count="4056" type="method"/>
            <line num="266" count="4056" type="stmt"/>
            <line num="269" count="4056" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEmptyStack(Tree) : void" num="272" count="35552" type="method"/>
            <line num="273" count="35552" type="stmt"/>
            <line complexity="1" visibility="private" signature="line(Tree) : int" num="276" count="39608" type="method"/>
            <line num="277" count="39608" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(ExpressionTree) : ProgramState" num="280" count="56211" type="method"/>
            <line num="281" count="56211" type="stmt"/>
            <line complexity="1" visibility="public" signature="withStack(ExpressionStack) : ProgramState" num="284" count="2061" type="method"/>
            <line num="285" count="2061" type="stmt"/>
            <line complexity="2" visibility="public" signature="assignment(Symbol) : ProgramState" num="288" count="970" type="method"/>
            <line num="289" count="970" type="stmt"/>
            <line num="290" count="970" type="stmt"/>
            <line num="291" count="970" type="stmt"/>
            <line falsecount="736" truecount="234" num="291" type="cond"/>
            <line num="292" count="234" type="stmt"/>
            <line num="293" count="234" type="stmt"/>
            <line num="294" count="234" type="stmt"/>
            <line num="296" count="970" type="stmt"/>
            <line num="297" count="970" type="stmt"/>
            <line num="298" count="970" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment(Symbol,SymbolicValue) : ProgramState" num="301" count="122" type="method"/>
            <line num="302" count="122" type="stmt"/>
            <line num="303" count="122" type="stmt"/>
            <line num="304" count="122" type="stmt"/>
            <line complexity="1" visibility="public" signature="relations() : Set&lt;Relation&gt;" num="307" count="435" type="method"/>
            <line num="308" count="435" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRelation(Relation) : ProgramState" num="311" count="422" type="method"/>
            <line num="312" count="422" type="stmt"/>
            <line num="316" count="422" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="319" count="693" type="method"/>
            <line num="321" count="693" type="stmt"/>
            <line falsecount="685" truecount="8" num="321" type="cond"/>
            <line num="322" count="8" type="stmt"/>
            <line num="324" count="685" type="stmt"/>
            <line falsecount="683" truecount="2" num="324" type="cond"/>
            <line num="325" count="2" type="stmt"/>
            <line num="328" count="683" type="stmt"/>
            <line num="330" count="683" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbolOverlaps() : Set&lt;Set&lt;Symbol&gt;&gt;" num="338" count="1366" type="method"/>
            <line num="339" count="1366" type="stmt"/>
            <line num="340" count="1366" type="stmt"/>
            <line num="341" count="5382" type="stmt"/>
            <line num="342" count="5382" type="stmt"/>
            <line num="344" count="1366" type="stmt"/>
            <line num="345" count="1366" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="348" count="47540" type="method"/>
            <line num="350" count="47540" type="stmt"/>
            <line complexity="1" visibility="private" signature="relationsOnSymbols() : Set&lt;RelationOnSymbols&gt;" num="353" count="48676" type="method"/>
            <line num="354" count="48676" type="stmt"/>
            <line num="355" count="48676" type="stmt"/>
            <line num="356" count="562378" type="stmt"/>
            <line num="359" count="48676" type="stmt"/>
            <line num="360" count="48676" type="stmt"/>
            <line num="361" count="608" type="stmt"/>
            <line num="362" count="627" type="stmt"/>
            <line num="363" count="667" type="stmt"/>
            <line num="367" count="48676" type="stmt"/>
            <line complexity="2" visibility="private" signature="constraintOnPeek() : Constraint" num="370" count="48676" type="method"/>
            <line num="372" count="48676" type="stmt"/>
            <line falsecount="2292" truecount="46384" num="372" type="cond"/>
            <line num="373" count="46384" type="stmt"/>
            <line num="375" count="2292" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekStack() : SymbolicValue" num="378" count="40848" type="method"/>
            <line num="379" count="40848" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekStack(int) : SymbolicValue" num="383" count="989" type="method"/>
            <line num="384" count="989" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeSymbols(Set&lt;Symbol&gt;) : ProgramState" num="387" count="38890" type="method"/>
            <line num="388" count="38890" type="stmt"/>
            <line num="389" count="38890" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStack() : ExpressionStack" num="396" count="2100" type="method"/>
            <line num="398" count="2100" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSymbolicValue(IdentifierTree,SymbolicExecution) : SymbolicValue" num="406" count="47513" type="method"/>
            <line num="408" count="47513" type="stmt"/>
            <line num="409" count="47513" type="stmt"/>
            <line falsecount="3275" truecount="44238" num="409" type="cond"/>
            <line num="410" count="44238" type="stmt"/>
            <line num="413" count="3275" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/ProgramStateConstraints.java" name="ProgramStateConstraints.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProgramStateConstraints">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/Relation.java" name="Relation.java">
            <metrics coveredelements="95" coveredconditionals="16" complexity="43" loc="264" coveredmethods="25" methods="25" elements="95" classes="2" ncloc="202" statements="54" conditionals="16" coveredstatements="54"/>
            <class name="Relation">
               <metrics coveredelements="47" coveredconditionals="8" complexity="19" coveredmethods="12" methods="12" elements="47" statements="27" conditionals="8" coveredstatements="27"/>
            </class>
            <class name="Relation.Operator">
               <metrics coveredelements="48" coveredconditionals="8" complexity="24" coveredmethods="13" methods="13" elements="48" statements="27" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="package" signature="Operator(String,Kind,Kind,Kind,Set&lt;Kind&gt;,BiFunction&lt;Range&lt;Integer&gt;, Range&lt;Integer&gt;, Optional&lt;Boolean&gt;&gt;)" num="103" count="16" type="method"/>
            <line num="105" count="16" type="stmt"/>
            <line num="106" count="16" type="stmt"/>
            <line num="107" count="16" type="stmt"/>
            <line num="108" count="16" type="stmt"/>
            <line num="109" count="16" type="stmt"/>
            <line num="110" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildOperatorByKind() : Map&lt;Kind, Operator&gt;" num="113" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="16" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="fromKind(Kind) : Operator" num="121" count="642" type="method"/>
            <line num="122" count="642" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCompatibleForSameOperands(Operator) : boolean" num="125" count="62" type="method"/>
            <line num="126" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="onReversedOperands() : Operator" num="129" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : Operator" num="133" count="201" type="method"/>
            <line num="134" count="201" type="stmt"/>
            <line complexity="1" visibility="public" signature="operatorString() : String" num="137" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="areEqual(Range&lt;Integer&gt;,Range&lt;Integer&gt;) : Optional&lt;Boolean&gt;" num="141" count="3" type="method"/>
            <line num="142" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="142" type="cond"/>
            <line complexity="1" visibility="private" signature="areNotEqual(Range,Range) : Optional&lt;Boolean&gt;" num="145" count="3" type="method"/>
            <line num="146" count="3" type="stmt"/>
            <line complexity="9" visibility="private" signature="lessThan(Range&lt;Integer&gt;,Range&lt;Integer&gt;) : Optional&lt;Boolean&gt;" num="149" count="444" type="method"/>
            <line num="150" count="444" type="stmt"/>
            <line falsecount="234" truecount="210" num="150" type="cond"/>
            <line num="153" count="210" type="stmt"/>
            <line num="155" count="234" type="stmt"/>
            <line falsecount="231" truecount="3" num="155" type="cond"/>
            <line num="158" count="3" type="stmt"/>
            <line num="161" count="231" type="stmt"/>
            <line complexity="1" visibility="private" signature="greaterThan(Range&lt;Integer&gt;,Range&lt;Integer&gt;) : Optional&lt;Boolean&gt;" num="165" count="19" type="method"/>
            <line num="166" count="19" type="stmt"/>
            <line complexity="2" visibility="private" signature="not(Optional&lt;Boolean&gt;) : Optional&lt;Boolean&gt;" num="169" count="3" type="method"/>
            <line num="170" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="170" type="cond"/>
            <line num="171" count="2" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="atLeastOneBoundIsOpen(BoundType,BoundType) : boolean" num="177" count="215" type="method"/>
            <line num="178" count="215" type="stmt"/>
            <line complexity="1" visibility="public" signature="Relation(Kind,SymbolicValue,SymbolicValue)" num="188" count="437" type="method"/>
            <line num="189" count="437" type="stmt"/>
            <line complexity="1" visibility="private" signature="Relation(Operator,SymbolicValue,SymbolicValue)" num="192" count="638" type="method"/>
            <line num="193" count="638" type="stmt"/>
            <line num="194" count="638" type="stmt"/>
            <line num="195" count="638" type="stmt"/>
            <line num="196" count="638" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : Relation" num="199" count="201" type="method"/>
            <line num="200" count="201" type="stmt"/>
            <line complexity="5" visibility="public" signature="isCompatibleWith(Relation) : boolean" num="203" count="118" type="method"/>
            <line num="204" count="118" type="stmt"/>
            <line num="206" count="118" type="stmt"/>
            <line falsecount="60" truecount="58" num="206" type="cond"/>
            <line num="207" count="58" type="stmt"/>
            <line num="209" count="60" type="stmt"/>
            <line falsecount="56" truecount="4" num="209" type="cond"/>
            <line num="210" count="4" type="stmt"/>
            <line num="213" count="118" type="stmt"/>
            <line complexity="1" visibility="public" signature="operands() : Set&lt;SymbolicValue&gt;" num="216" count="2388" type="method"/>
            <line num="217" count="2388" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftOperand() : SymbolicValue" num="220" count="2470" type="method"/>
            <line num="221" count="2470" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightOperand() : SymbolicValue" num="224" count="2473" type="method"/>
            <line num="225" count="2473" type="stmt"/>
            <line complexity="1" visibility="public" signature="operator() : Operator" num="228" count="871" type="method"/>
            <line num="229" count="871" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyNumericComparison(ProgramState) : Optional&lt;Boolean&gt;" num="232" count="1802" type="method"/>
            <line num="233" count="1802" type="stmt"/>
            <line num="234" count="1802" type="stmt"/>
            <line num="236" count="1802" type="stmt"/>
            <line falsecount="1365" truecount="437" num="236" type="cond"/>
            <line num="237" count="437" type="stmt"/>
            <line num="240" count="1365" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="243" count="43" type="method"/>
            <line num="245" count="43" type="stmt"/>
            <line falsecount="1" truecount="42" num="245" type="cond"/>
            <line num="246" count="42" type="stmt"/>
            <line num="247" count="42" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="254" count="2500" type="method"/>
            <line num="256" count="2500" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="259" count="1" type="method"/>
            <line num="261" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/RelationOnSymbols.java" name="RelationOnSymbols.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="4" loc="54" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="28" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="RelationOnSymbols">
               <metrics coveredelements="13" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="RelationOnSymbols(Relation.Operator,Symbol,Symbol)" num="32" count="678" type="method"/>
            <line num="33" count="678" type="stmt"/>
            <line num="34" count="678" type="stmt"/>
            <line num="35" count="678" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="38" count="37" type="method"/>
            <line num="40" count="37" type="stmt"/>
            <line falsecount="1" truecount="36" num="40" type="cond"/>
            <line num="41" count="36" type="stmt"/>
            <line num="42" count="36" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="49" count="1303" type="method"/>
            <line num="51" count="1303" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/SeCheck.java" name="SeCheck.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="15" loc="152" coveredmethods="12" methods="15" elements="26" classes="1" ncloc="66" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="SeCheck">
               <metrics coveredelements="20" coveredconditionals="0" complexity="15" coveredmethods="12" methods="15" elements="26" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="checkConditions(Map&lt;Tree, Collection&lt;Constraint&gt;&gt;) : void" num="50" count="220" type="method"/>
            <line complexity="1" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="61" count="55415" type="method"/>
            <line complexity="1" visibility="public" signature="afterBlockElement(ProgramState,Tree) : void" num="71" count="18014" type="method"/>
            <line complexity="1" visibility="public" signature="cleanupAndStartFileAnalysis(ScriptTree) : void" num="75" count="53" type="method"/>
            <line num="76" count="53" type="stmt"/>
            <line num="77" count="53" type="stmt"/>
            <line complexity="1" visibility="protected" signature="startOfFile(ScriptTree) : void" num="85" count="52" type="method"/>
            <line complexity="1" visibility="public" signature="endOfFile(ScriptTree) : void" num="89" count="49" type="method"/>
            <line complexity="1" visibility="public" signature="endOfExecution(Scope) : void" num="99" count="200" type="method"/>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="109" count="39" type="method"/>
            <line complexity="1" visibility="public" signature="addLineIssue(Tree,String) : LineIssue" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="122" count="292" type="method"/>
            <line num="124" count="292" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(TreeVisitorContext) : List&lt;Issue&gt;" num="132" count="22" type="method"/>
            <line num="134" count="22" type="stmt"/>
            <line num="135" count="22" type="stmt"/>
            <line num="136" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setContext(TreeVisitorContext) : void" num="145" count="23" type="method"/>
            <line num="146" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="getContext() : TreeVisitorContext" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/SeChecksDispatcher.java" name="SeChecksDispatcher.java">
            <metrics coveredelements="32" coveredconditionals="7" complexity="9" loc="105" coveredmethods="5" methods="5" elements="34" classes="1" ncloc="69" statements="21" conditionals="8" coveredstatements="20"/>
            <class name="SeChecksDispatcher">
               <metrics coveredelements="32" coveredconditionals="7" complexity="9" coveredmethods="5" methods="5" elements="34" statements="21" conditionals="8" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="SeChecksDispatcher(List&lt;SeCheck&gt;)" num="46" count="52" type="method"/>
            <line num="47" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="50" count="52" type="method"/>
            <line num="52" count="52" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitNode(Tree) : void" num="63" count="344" type="method"/>
            <line num="65" count="344" type="stmt"/>
            <line falsecount="292" truecount="52" num="65" type="cond"/>
            <line num="66" count="52" type="stmt"/>
            <line num="67" count="52" type="stmt"/>
            <line num="70" count="292" type="stmt"/>
            <line num="71" count="292" type="stmt"/>
            <line falsecount="4" truecount="288" num="71" type="cond"/>
            <line num="72" count="288" type="stmt"/>
            <line num="73" count="288" type="stmt"/>
            <line num="74" count="288" type="stmt"/>
            <line complexity="2" visibility="public" signature="leaveNode(Tree) : void" num="78" count="340" type="method"/>
            <line num="80" count="340" type="stmt"/>
            <line falsecount="290" truecount="50" num="80" type="cond"/>
            <line num="81" count="50" type="stmt"/>
            <line complexity="2" visibility="public" signature="scanFile(TreeVisitorContext) : List&lt;Issue&gt;" num="85" count="23" type="method"/>
            <line num="87" count="23" type="stmt"/>
            <line falsecount="23" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="23" type="stmt"/>
            <line num="92" count="23" type="stmt"/>
            <line num="95" count="23" type="stmt"/>
            <line num="97" count="21" type="stmt"/>
            <line num="99" count="21" type="stmt"/>
            <line num="100" count="21" type="stmt"/>
            <line num="103" count="21" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/SymbolicExecution.java" name="SymbolicExecution.java">
            <metrics coveredelements="390" coveredconditionals="125" complexity="96" loc="572" coveredmethods="27" methods="27" elements="395" classes="1" ncloc="441" statements="240" conditionals="128" coveredstatements="238"/>
            <class name="SymbolicExecution">
               <metrics coveredelements="390" coveredconditionals="125" complexity="96" coveredmethods="27" methods="27" elements="395" statements="240" conditionals="128" coveredstatements="238"/>
            </class>
            <line complexity="1" visibility="public" signature="SymbolicExecution(Scope,ControlFlowGraph,List&lt;SeCheck&gt;,boolean)" num="94" count="323" type="method"/>
            <line num="95" count="323" type="stmt"/>
            <line num="96" count="323" type="stmt"/>
            <line num="97" count="323" type="stmt"/>
            <line num="98" count="323" type="stmt"/>
            <line num="99" count="323" type="stmt"/>
            <line num="100" count="323" type="stmt"/>
            <line num="101" count="323" type="stmt"/>
            <line num="102" count="323" type="stmt"/>
            <line num="103" count="323" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitCfg(ProgramState) : void" num="106" count="323" type="method"/>
            <line num="107" count="323" type="stmt"/>
            <line num="108" count="288" type="stmt"/>
            <line num="111" count="323" type="stmt"/>
            <line num="113" count="323" type="stmt"/>
            <line falsecount="317" truecount="22829" num="113" type="cond"/>
            <line num="114" count="22829" type="stmt"/>
            <line num="116" count="22829" type="stmt"/>
            <line falsecount="531" truecount="22298" num="116" type="cond"/>
            <line num="117" count="22298" type="stmt"/>
            <line falsecount="22294" truecount="4" num="117" type="cond"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="121" count="22294" type="stmt"/>
            <line num="122" count="22292" type="stmt"/>
            <line num="126" count="317" type="stmt"/>
            <line falsecount="2" truecount="315" num="126" type="cond"/>
            <line num="127" count="315" type="stmt"/>
            <line num="128" count="281" type="stmt"/>
            <line num="129" count="281" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getReturnConstraint() : Constraint" num="137" count="35" type="method"/>
            <line num="138" count="35" type="stmt"/>
            <line falsecount="34" truecount="1" num="138" type="cond"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="34" type="stmt"/>
            <line falsecount="29" truecount="5" num="141" type="cond"/>
            <line num="142" count="5" type="stmt"/>
            <line num="145" count="29" type="stmt"/>
            <line complexity="2" visibility="private" signature="addReturnConstraint(Constraint) : void" num="149" count="2217" type="method"/>
            <line num="150" count="2217" type="stmt"/>
            <line falsecount="1951" truecount="266" num="150" type="cond"/>
            <line num="151" count="266" type="stmt"/>
            <line num="153" count="1951" type="stmt"/>
            <line complexity="2" visibility="private" signature="hasTryBranchingTree(CfgBlock) : boolean" num="157" count="22298" type="method"/>
            <line num="158" count="22298" type="stmt"/>
            <line falsecount="3091" truecount="19207" num="158" type="cond"/>
            <line num="159" count="19207" type="stmt"/>
            <line num="161" count="3091" type="stmt"/>
            <line complexity="7" visibility="private" signature="initialState(ProgramState) : ProgramState" num="164" count="323" type="method"/>
            <line num="165" count="323" type="stmt"/>
            <line num="167" count="323" type="stmt"/>
            <line num="168" count="532" type="stmt"/>
            <line num="169" count="532" type="stmt"/>
            <line falsecount="112" truecount="420" num="169" type="cond"/>
            <line num="170" count="420" type="stmt"/>
            <line num="172" count="112" type="stmt"/>
            <line falsecount="93" truecount="19" num="172" type="cond"/>
            <line num="173" count="19" type="stmt"/>
            <line num="175" count="93" type="stmt"/>
            <line falsecount="89" truecount="4" num="175" type="cond"/>
            <line num="176" count="4" type="stmt"/>
            <line num="179" count="532" type="stmt"/>
            <line falsecount="18" truecount="514" num="179" type="cond"/>
            <line num="180" count="514" type="stmt"/>
            <line num="184" count="323" type="stmt"/>
            <line num="185" count="323" type="stmt"/>
            <line falsecount="4" truecount="319" num="185" type="cond"/>
            <line num="187" count="319" type="stmt"/>
            <line num="190" count="323" type="stmt"/>
            <line num="192" count="323" type="stmt"/>
            <line complexity="2" visibility="private" signature="initiateFunctionDeclarationSymbols(ProgramState) : ProgramState" num="207" count="323" type="method"/>
            <line num="208" count="323" type="stmt"/>
            <line num="209" count="323" type="stmt"/>
            <line num="210" count="1484" type="stmt"/>
            <line num="211" count="6869" type="stmt"/>
            <line falsecount="6846" truecount="23" num="211" type="cond"/>
            <line num="212" count="23" type="stmt"/>
            <line num="214" count="23" type="stmt"/>
            <line num="215" count="23" type="stmt"/>
            <line num="220" count="323" type="stmt"/>
            <line complexity="2" visibility="private" signature="symbolIs(Symbol,Symbol.Kind) : boolean" num="223" count="737" type="method"/>
            <line num="224" count="737" type="stmt"/>
            <line num="225" count="1763" type="stmt"/>
            <line falsecount="1717" truecount="46" num="225" type="cond"/>
            <line num="226" count="46" type="stmt"/>
            <line num="230" count="691" type="stmt"/>
            <line complexity="8" visibility="private" signature="execute(BlockExecution) : void" num="233" count="22294" type="method"/>
            <line num="234" count="22294" type="stmt"/>
            <line num="235" count="22294" type="stmt"/>
            <line num="236" count="22294" type="stmt"/>
            <line num="238" count="22294" type="stmt"/>
            <line num="239" count="59085" type="stmt"/>
            <line num="240" count="59085" type="stmt"/>
            <line num="242" count="59083" type="stmt"/>
            <line falsecount="58997" truecount="86" num="242" type="cond"/>
            <line num="243" count="86" type="stmt"/>
            <line num="244" count="86" type="stmt"/>
            <line falsecount="9" truecount="77" num="244" type="cond"/>
            <line num="245" count="77" type="stmt"/>
            <line num="248" count="9" type="stmt"/>
            <line num="252" count="59083" type="stmt"/>
            <line num="253" count="59083" type="stmt"/>
            <line falsecount="18" truecount="59065" num="253" type="cond"/>
            <line num="254" count="59065" type="stmt"/>
            <line num="256" count="18" type="stmt"/>
            <line num="257" count="18" type="stmt"/>
            <line num="260" count="59065" type="stmt"/>
            <line falsecount="2854" truecount="56211" num="260" type="cond"/>
            <line num="261" count="56211" type="stmt"/>
            <line num="264" count="59065" type="stmt"/>
            <line num="266" count="59065" type="stmt"/>
            <line num="268" count="59065" type="stmt"/>
            <line falsecount="55396" truecount="3669" num="268" type="cond"/>
            <line num="269" count="3669" type="stmt"/>
            <line num="273" count="22292" type="stmt"/>
            <line num="275" count="22292" type="stmt"/>
            <line falsecount="18" truecount="22274" num="275" type="cond"/>
            <line num="276" count="22274" type="stmt"/>
            <line complexity="7" visibility="private" signature="executeAssignment(ProgramState,Tree) : ProgramState" num="280" count="59065" type="method"/>
            <line num="281" count="59065" type="stmt"/>
            <line num="283" count="59065" type="stmt"/>
            <line falsecount="58446" truecount="619" num="283" type="cond"/>
            <line num="284" count="619" type="stmt"/>
            <line num="285" count="619" type="stmt"/>
            <line num="287" count="58446" type="stmt"/>
            <line falsecount="58058" truecount="388" num="287" type="cond"/>
            <line num="288" count="388" type="stmt"/>
            <line num="290" count="58058" type="stmt"/>
            <line falsecount="58051" truecount="7" num="290" type="cond"/>
            <line num="291" count="7" type="stmt"/>
            <line num="292" count="7" type="stmt"/>
            <line num="293" count="7" type="stmt"/>
            <line num="295" count="58051" type="stmt"/>
            <line falsecount="58046" truecount="5" num="295" type="cond"/>
            <line num="296" count="5" type="stmt"/>
            <line num="297" count="5" type="stmt"/>
            <line num="298" count="5" type="stmt"/>
            <line num="300" count="58046" type="stmt"/>
            <line falsecount="58040" truecount="6" num="300" type="cond"/>
            <line num="301" count="6" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line num="303" count="6" type="stmt"/>
            <line num="305" count="58040" type="stmt"/>
            <line falsecount="58038" truecount="2" num="305" type="cond"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="311" count="59065" type="stmt"/>
            <line complexity="2" visibility="private" signature="presentsOf(List&lt;Optional&lt;T&gt;&gt;) : List&lt;T&gt;" num="317" count="13" type="method"/>
            <line num="318" count="13" type="stmt"/>
            <line num="319" count="13" type="stmt"/>
            <line num="320" count="28" type="stmt"/>
            <line falsecount="4" truecount="24" num="320" type="cond"/>
            <line num="321" count="24" type="stmt"/>
            <line num="324" count="13" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkForImplicitReturn(CfgBlock) : void" num="327" count="22292" type="method"/>
            <line num="328" count="22292" type="stmt"/>
            <line num="329" count="22292" type="stmt"/>
            <line falsecount="20077" truecount="2215" num="329" type="cond"/>
            <line num="330" count="2215" type="stmt"/>
            <line falsecount="2207" truecount="8" num="330" type="cond"/>
            <line num="331" count="8" type="stmt"/>
            <line num="332" count="8" type="stmt"/>
            <line num="334" count="2207" type="stmt"/>
            <line num="335" count="2207" type="stmt"/>
            <line num="337" count="2207" type="stmt"/>
            <line falsecount="84" truecount="2123" num="337" type="cond"/>
            <line num="338" count="2123" type="stmt"/>
            <line complexity="2" visibility="private" signature="executeInitializedBinding(InitializedBindingElementTree,ProgramState) : ProgramState" num="343" count="388" type="method"/>
            <line num="344" count="388" type="stmt"/>
            <line num="345" count="388" type="stmt"/>
            <line falsecount="387" truecount="1" num="345" type="cond"/>
            <line num="346" count="1" type="stmt"/>
            <line num="348" count="387" type="stmt"/>
            <line num="349" count="387" type="stmt"/>
            <line num="350" count="387" type="stmt"/>
            <line num="353" count="388" type="stmt"/>
            <line complexity="3" visibility="private" signature="executeInitializer(ProgramState,BindingElementTree) : ProgramState" num="356" count="388" type="method"/>
            <line num="357" count="388" type="stmt"/>
            <line falsecount="9" truecount="379" num="357" type="cond"/>
            <line num="358" count="379" type="stmt"/>
            <line num="359" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="359" type="cond"/>
            <line num="360" count="1" type="stmt"/>
            <line num="363" count="8" type="stmt"/>
            <line complexity="4" visibility="private" signature="isProducingUnconsumedValue(Tree) : boolean" num="366" count="59065" type="method"/>
            <line num="367" count="59065" type="stmt"/>
            <line falsecount="2849" truecount="56216" num="367" type="cond"/>
            <line num="368" count="56216" type="stmt"/>
            <line num="369" count="56216" type="stmt"/>
            <line num="370" count="56216" type="stmt"/>
            <line falsecount="52638" truecount="3578" num="370" type="cond"/>
            <line num="377" count="3578" type="stmt"/>
            <line num="378" count="52638" type="stmt"/>
            <line falsecount="52457" truecount="181" num="378" type="cond"/>
            <line num="379" count="181" type="stmt"/>
            <line num="380" count="181" type="stmt"/>
            <line num="383" count="55306" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParentIfParenthesised(Tree) : Tree" num="388" count="56216" type="method"/>
            <line num="389" count="56216" type="stmt"/>
            <line num="390" count="56216" type="stmt"/>
            <line falsecount="56216" truecount="48" num="390" type="cond"/>
            <line num="391" count="48" type="stmt"/>
            <line num="393" count="56216" type="stmt"/>
            <line complexity="2" visibility="private" signature="createSymbolicValuesForTrackedVariables(List&lt;? extends Tree&gt;,ProgramState) : ProgramState" num="396" count="20" type="method"/>
            <line num="397" count="20" type="stmt"/>
            <line num="398" count="20" type="stmt"/>
            <line num="399" count="36" type="stmt"/>
            <line num="400" count="36" type="stmt"/>
            <line falsecount="1" truecount="35" num="400" type="cond"/>
            <line num="401" count="35" type="stmt"/>
            <line num="404" count="20" type="stmt"/>
            <line complexity="1" visibility="private" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="407" count="59085" type="method"/>
            <line num="408" count="59085" type="stmt"/>
            <line num="409" count="58964" type="stmt"/>
            <line complexity="1" visibility="private" signature="afterBlockElement(ProgramState,Tree) : void" num="413" count="59065" type="method"/>
            <line num="414" count="59065" type="stmt"/>
            <line num="415" count="58944" type="stmt"/>
            <line complexity="1" visibility="private" signature="pushAllSuccessors(CfgBlock,ProgramState) : void" num="419" count="3168" type="method"/>
            <line num="420" count="3168" type="stmt"/>
            <line num="421" count="2941" type="stmt"/>
            <line complexity="2" visibility="private" signature="pushSuccessor(CfgBlock,ProgramState) : void" num="425" count="38890" type="method"/>
            <line num="426" count="38890" type="stmt"/>
            <line falsecount="0" truecount="38890" num="426" type="cond"/>
            <line num="427" count="38890" type="stmt"/>
            <line num="428" count="38890" type="stmt"/>
            <line complexity="8" visibility="private" signature="handleSuccessors(CfgBlock,ProgramState) : void" num="432" count="22274" type="method"/>
            <line num="433" count="22274" type="stmt"/>
            <line num="434" count="22274" type="stmt"/>
            <line num="436" count="22274" type="stmt"/>
            <line falsecount="3073" truecount="19201" num="436" type="cond"/>
            <line num="437" count="19201" type="stmt"/>
            <line num="438" count="19201" type="stmt"/>
            <line num="440" count="19201" type="stmt"/>
            <line falsecount="98" truecount="19103" num="440" type="cond"/>
            <line num="449" count="19103" type="stmt"/>
            <line num="450" count="19103" type="stmt"/>
            <line num="452" count="98" type="stmt"/>
            <line falsecount="29" truecount="69" num="452" type="cond"/>
            <line num="453" count="69" type="stmt"/>
            <line num="454" count="69" type="stmt"/>
            <line num="455" count="69" type="stmt"/>
            <line falsecount="33" truecount="36" num="455" type="cond"/>
            <line num="456" count="36" type="stmt"/>
            <line num="457" count="36" type="stmt"/>
            <line num="459" count="69" type="stmt"/>
            <line num="461" count="69" type="stmt"/>
            <line num="462" count="69" type="stmt"/>
            <line falsecount="2" truecount="67" num="462" type="cond"/>
            <line num="463" count="67" type="stmt"/>
            <line num="464" count="67" type="stmt"/>
            <line num="469" count="69" type="stmt"/>
            <line falsecount="66" truecount="3" num="469" type="cond"/>
            <line num="470" count="3" type="stmt"/>
            <line num="471" count="3" type="stmt"/>
            <line num="477" count="22274" type="stmt"/>
            <line falsecount="19106" truecount="3168" num="477" type="cond"/>
            <line num="478" count="3168" type="stmt"/>
            <line complexity="5" visibility="private" signature="pushConditionSuccessors(CfgBranchingBlock,ProgramState) : void" num="482" count="19103" type="method"/>
            <line num="483" count="19103" type="stmt"/>
            <line num="485" count="19103" type="stmt"/>
            <line num="486" count="19103" type="stmt"/>
            <line num="488" count="19103" type="stmt"/>
            <line num="489" count="19103" type="stmt"/>
            <line falsecount="2027" truecount="17076" num="489" type="cond"/>
            <line num="490" count="17076" type="stmt"/>
            <line num="491" count="17076" type="stmt"/>
            <line num="494" count="19103" type="stmt"/>
            <line num="495" count="19103" type="stmt"/>
            <line falsecount="233" truecount="18870" num="495" type="cond"/>
            <line num="496" count="18870" type="stmt"/>
            <line num="497" count="18870" type="stmt"/>
            <line num="500" count="19103" type="stmt"/>
            <line falsecount="19103" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="pushConditionSuccessor(CfgBlock,ProgramState,SymbolicValue,Constraint,Tree) : void" num="505" count="35946" type="method"/>
            <line num="508" count="35946" type="stmt"/>
            <line num="509" count="35946" type="stmt"/>
            <line falsecount="35885" truecount="61" num="509" type="cond"/>
            <line num="510" count="61" type="stmt"/>
            <line falsecount="54" truecount="7" num="510" type="cond"/>
            <line num="511" count="7" type="stmt"/>
            <line num="512" count="7" type="stmt"/>
            <line num="515" count="35885" type="stmt"/>
            <line num="516" count="35885" type="stmt"/>
            <line falsecount="333" truecount="35552" num="516" type="cond"/>
            <line num="517" count="35552" type="stmt"/>
            <line num="520" count="35946" type="stmt"/>
            <line complexity="2" visibility="private" signature="newSymbolicValue(ProgramState,Tree) : ProgramState" num="523" count="69" type="method"/>
            <line num="524" count="69" type="stmt"/>
            <line num="525" count="69" type="stmt"/>
            <line falsecount="2" truecount="67" num="525" type="cond"/>
            <line num="526" count="67" type="stmt"/>
            <line num="528" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="assignment(ProgramState,Tree) : ProgramState" num="531" count="998" type="method"/>
            <line num="532" count="998" type="stmt"/>
            <line num="533" count="998" type="stmt"/>
            <line falsecount="33" truecount="965" num="533" type="cond"/>
            <line num="534" count="965" type="stmt"/>
            <line num="536" count="33" type="stmt"/>
            <line complexity="10" visibility="public" signature="trackedVariable(Tree) : Symbol" num="539" count="48729" type="method"/>
            <line num="541" count="48729" type="stmt"/>
            <line num="543" count="48729" type="stmt"/>
            <line falsecount="48729" truecount="0" num="543" type="cond"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="48729" type="stmt"/>
            <line falsecount="30" truecount="48699" num="546" type="cond"/>
            <line num="547" count="48699" type="stmt"/>
            <line num="548" count="48699" type="stmt"/>
            <line num="549" count="48699" type="stmt"/>
            <line falsecount="3299" truecount="45400" num="549" type="cond"/>
            <line num="551" count="30" type="stmt"/>
            <line falsecount="29" truecount="1" num="551" type="cond"/>
            <line num="552" count="1" type="stmt"/>
            <line num="554" count="29" type="stmt"/>
            <line falsecount="27" truecount="2" num="554" type="cond"/>
            <line num="555" count="2" type="stmt"/>
            <line num="557" count="27" type="stmt"/>
            <line falsecount="23" truecount="4" num="557" type="cond"/>
            <line num="558" count="4" type="stmt"/>
            <line num="560" count="23" type="stmt"/>
            <line falsecount="21" truecount="2" num="560" type="cond"/>
            <line num="561" count="2" type="stmt"/>
            <line num="563" count="21" type="stmt"/>
            <line falsecount="19" truecount="2" num="563" type="cond"/>
            <line num="564" count="2" type="stmt"/>
            <line num="566" count="19" type="stmt"/>
            <line falsecount="18" truecount="1" num="566" type="cond"/>
            <line num="567" count="1" type="stmt"/>
            <line num="570" count="48729" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/Type.java" name="Type.java">
            <metrics coveredelements="20" coveredconditionals="4" complexity="7" loc="81" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="52" statements="11" conditionals="4" coveredstatements="11"/>
            <class name="Type">
               <metrics coveredelements="20" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="package" signature="Type(Constraint,BuiltInObjectSymbolicValue)" num="51" count="26" type="method"/>
            <line num="52" count="26" type="stmt"/>
            <line num="53" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraint() : Constraint" num="56" count="8521" type="method"/>
            <line num="57" count="8521" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPropertyValue(String) : SymbolicValue" num="60" count="265" type="method"/>
            <line num="61" count="265" type="stmt"/>
            <line falsecount="263" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="263" type="stmt"/>
            <line complexity="1" visibility="public" signature="prototype() : BuiltInObjectSymbolicValue" num="67" count="23" type="method"/>
            <line num="69" count="23" type="stmt"/>
            <line complexity="2" visibility="public" signature="find(Constraint) : Type" num="72" count="773" type="method"/>
            <line num="73" count="773" type="stmt"/>
            <line num="74" count="8131" type="stmt"/>
            <line falsecount="7640" truecount="491" num="74" type="cond"/>
            <line num="75" count="491" type="stmt"/>
            <line num="79" count="282" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.declaration">
         <metrics coveredelements="623" complexity="265" loc="2802" methods="261" classes="31" statements="386" coveredconditionals="8" coveredmethods="245" elements="655" ncloc="1858" files="29" conditionals="8" coveredstatements="370"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/AccessorMethodDeclarationTreeImpl.java" name="AccessorMethodDeclarationTreeImpl.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="15" loc="140" coveredmethods="13" methods="14" elements="38" classes="1" ncloc="103" statements="22" conditionals="2" coveredstatements="21"/>
            <class name="AccessorMethodDeclarationTreeImpl">
               <metrics coveredelements="36" coveredconditionals="2" complexity="15" coveredmethods="13" methods="14" elements="38" statements="22" conditionals="2" coveredstatements="21"/>
            </class>
            <line complexity="2" visibility="public" signature="AccessorMethodDeclarationTreeImpl(List&lt;DecoratorTree&gt;,InternalSyntaxToken,InternalSyntaxToken,Tree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree)" num="51" count="73" type="method"/>
            <line num="59" count="73" type="stmt"/>
            <line num="60" count="73" type="stmt"/>
            <line num="61" count="73" type="stmt"/>
            <line falsecount="45" truecount="28" num="61" type="cond"/>
            <line num="62" count="73" type="stmt"/>
            <line num="63" count="73" type="stmt"/>
            <line num="64" count="73" type="stmt"/>
            <line num="65" count="73" type="stmt"/>
            <line num="66" count="73" type="stmt"/>
            <line num="67" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;DecoratorTree&gt;" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticToken() : SyntaxToken" num="75" count="14" type="method"/>
            <line num="78" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessorToken() : InternalSyntaxToken" num="81" count="3" type="method"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Tree" num="86" count="48" type="method"/>
            <line num="88" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="91" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncToken() : SyntaxToken" num="97" count="3" type="method"/>
            <line num="100" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : ParameterListTree" num="103" count="67" type="method"/>
            <line num="105" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeAnnotationTree" num="108" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : BlockTree" num="114" count="78" type="method"/>
            <line num="116" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterList() : List&lt;BindingElementTree&gt;" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="124" count="569" type="method"/>
            <line num="126" count="569" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="129" count="435" type="method"/>
            <line num="131" count="435" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="136" count="291" type="method"/>
            <line num="138" count="291" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ArrayBindingPatternTreeImpl.java" name="ArrayBindingPatternTreeImpl.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="9" loc="115" coveredmethods="9" methods="9" elements="23" classes="2" ncloc="71" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ArrayBindingPatternTreeImpl">
               <metrics coveredelements="21" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <class name="ArrayBindingPatternTreeImpl.ElidedElementFilter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayBindingPatternTreeImpl(InternalSyntaxToken,SeparatedList&lt;Optional&lt;BindingElementTree&gt;&gt;,InternalSyntaxToken)" num="43" count="55" type="method"/>
            <line num="49" count="55" type="stmt"/>
            <line num="50" count="55" type="stmt"/>
            <line num="51" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBracketToken() : InternalSyntaxToken" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : SeparatedList&lt;Optional&lt;BindingElementTree&gt;&gt;" num="59" count="40" type="method"/>
            <line num="61" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBracketToken() : InternalSyntaxToken" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="69" count="1326" type="method"/>
            <line num="71" count="1326" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="74" count="191" type="method"/>
            <line num="76" count="191" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="83" count="84" type="method"/>
            <line num="85" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="96" count="42" type="method"/>
            <line num="98" count="42" type="stmt"/>
            <line num="100" count="42" type="stmt"/>
            <line num="101" count="87" type="stmt"/>
            <line num="104" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Optional&lt;BindingElementTree&gt;) : BindingElementTree" num="109" count="347" type="method"/>
            <line num="111" count="347" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/BindingPropertyTreeImpl.java" name="BindingPropertyTreeImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="8" loc="80" coveredmethods="6" methods="8" elements="18" classes="1" ncloc="50" statements="10" conditionals="0" coveredstatements="8"/>
            <class name="BindingPropertyTreeImpl">
               <metrics coveredelements="14" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="BindingPropertyTreeImpl(Tree,InternalSyntaxToken,BindingElementTree)" num="40" count="28" type="method"/>
            <line num="41" count="28" type="stmt"/>
            <line num="42" count="28" type="stmt"/>
            <line num="43" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Tree" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : BindingElementTree" num="56" count="31" type="method"/>
            <line num="58" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="61" count="623" type="method"/>
            <line num="63" count="623" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="66" count="114" type="method"/>
            <line num="68" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="71" count="57" type="method"/>
            <line num="73" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="76" count="24" type="method"/>
            <line num="78" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ClassTreeImpl.java" name="ClassTreeImpl.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="18" loc="198" coveredmethods="17" methods="18" elements="48" classes="1" ncloc="154" statements="30" conditionals="0" coveredstatements="29"/>
            <class name="ClassTreeImpl">
               <metrics coveredelements="46" coveredconditionals="0" complexity="18" coveredmethods="17" methods="18" elements="48" statements="30" conditionals="0" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="private" signature="ClassTreeImpl(Kind,List&lt;DecoratorTree&gt;,InternalSyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ExtendsClauseTree,FlowImplementsClauseTree,InternalSyntaxToken,List&lt;Tree&gt;,InternalSyntaxToken)" num="56" count="176" type="method"/>
            <line num="62" count="176" type="stmt"/>
            <line num="64" count="176" type="stmt"/>
            <line num="65" count="176" type="stmt"/>
            <line num="66" count="176" type="stmt"/>
            <line num="67" count="176" type="stmt"/>
            <line num="68" count="176" type="stmt"/>
            <line num="69" count="176" type="stmt"/>
            <line num="70" count="176" type="stmt"/>
            <line num="71" count="176" type="stmt"/>
            <line num="72" count="176" type="stmt"/>
            <line num="74" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="newClassExpression(List&lt;DecoratorTree&gt;,InternalSyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ExtendsClauseTree,FlowImplementsClauseTree,InternalSyntaxToken,List&lt;Tree&gt;,InternalSyntaxToken) : ClassTreeImpl" num="77" count="21" type="method"/>
            <line num="83" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="newClassDeclaration(List&lt;DecoratorTree&gt;,InternalSyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ExtendsClauseTree,FlowImplementsClauseTree,InternalSyntaxToken,List&lt;Tree&gt;,InternalSyntaxToken) : ClassTreeImpl" num="96" count="155" type="method"/>
            <line num="103" count="155" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;DecoratorTree&gt;" num="116" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classToken() : SyntaxToken" num="121" count="4" type="method"/>
            <line num="123" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : IdentifierTree" num="126" count="394" type="method"/>
            <line num="128" count="394" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="131" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendsClause() : ExtendsClauseTree" num="137" count="170" type="method"/>
            <line num="140" count="170" type="stmt"/>
            <line complexity="1" visibility="public" signature="implementsClause() : FlowImplementsClauseTree" num="143" count="3" type="method"/>
            <line num="146" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="149" count="4" type="method"/>
            <line num="151" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;Tree&gt;" num="154" count="171" type="method"/>
            <line num="156" count="171" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="159" count="4" type="method"/>
            <line num="161" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="164" count="1933" type="method"/>
            <line num="166" count="1933" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="169" count="887" type="method"/>
            <line num="171" count="887" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="178" count="592" type="method"/>
            <line num="180" count="592" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="183" count="11" type="method"/>
            <line num="185" count="11" type="stmt"/>
            <line num="186" count="11" type="stmt"/>
            <line num="187" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classType() : ClassType" num="195" count="264" type="method"/>
            <line num="196" count="264" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/DecoratorTreeImpl.java" name="DecoratorTreeImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="81" coveredmethods="6" methods="7" elements="16" classes="1" ncloc="52" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="DecoratorTreeImpl">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="DecoratorTreeImpl(SyntaxToken,SeparatedList&lt;IdentifierTree&gt;,ArgumentListTree)" num="41" count="46" type="method"/>
            <line num="42" count="46" type="stmt"/>
            <line num="43" count="46" type="stmt"/>
            <line num="44" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="47" count="16" type="method"/>
            <line num="49" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="52" count="54" type="method"/>
            <line num="54" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="atToken() : SyntaxToken" num="61" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : SeparatedList&lt;IdentifierTree&gt;" num="66" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentClause() : ArgumentListTree" num="71" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/DefaultExportDeclarationTreeImpl.java" name="DefaultExportDeclarationTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="9" loc="93" coveredmethods="8" methods="9" elements="22" classes="1" ncloc="61" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="DefaultExportDeclarationTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="9" coveredmethods="8" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultExportDeclarationTreeImpl(List&lt;DecoratorTree&gt;,InternalSyntaxToken,InternalSyntaxToken,Tree,InternalSyntaxToken)" num="42" count="13" type="method"/>
            <line num="46" count="13" type="stmt"/>
            <line num="47" count="13" type="stmt"/>
            <line num="48" count="13" type="stmt"/>
            <line num="49" count="13" type="stmt"/>
            <line num="50" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;DecoratorTree&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportToken() : SyntaxToken" num="58" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultToken() : SyntaxToken" num="63" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : Tree" num="68" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : InternalSyntaxToken" num="73" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="79" count="64" type="method"/>
            <line num="81" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="84" count="19" type="method"/>
            <line num="86" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ExportClauseTreeImpl.java" name="ExportClauseTreeImpl.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="84" coveredmethods="7" methods="8" elements="19" classes="1" ncloc="54" statements="11" conditionals="0" coveredstatements="10"/>
            <class name="ExportClauseTreeImpl">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="ExportClauseTreeImpl(SyntaxToken,NamedImportExportClauseTree,FromClauseTree,SyntaxToken)" num="40" count="13" type="method"/>
            <line num="41" count="13" type="stmt"/>
            <line num="42" count="13" type="stmt"/>
            <line num="43" count="13" type="stmt"/>
            <line num="44" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypeToken() : SyntaxToken" num="47" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="exports() : NamedImportExportClauseTree" num="53" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause() : FromClauseTree" num="58" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="64" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="70" count="19" type="method"/>
            <line num="72" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="75" count="20" type="method"/>
            <line num="77" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ExportDefaultBindingImpl.java" name="ExportDefaultBindingImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="75" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ExportDefaultBindingImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="ExportDefaultBindingImpl(IdentifierTree,FromClauseTree,SyntaxToken)" num="39" count="4" type="method"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="3" type="method"/>
            <line num="47" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportedDefaultIdentifier() : IdentifierTree" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause() : FromClauseTree" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="65" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ExportDefaultBindingWithExportListImpl.java" name="ExportDefaultBindingWithExportListImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="93" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="62" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ExportDefaultBindingWithExportListImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ExportDefaultBindingWithExportListImpl(IdentifierTree,SyntaxToken,NamedImportExportClauseTree,FromClauseTree,SyntaxToken)" num="42" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="3" type="method"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="58" count="5" type="method"/>
            <line num="60" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportedDefaultIdentifier() : IdentifierTree" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commaToken() : SyntaxToken" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportList() : NamedImportExportClauseTree" num="73" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause() : FromClauseTree" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="83" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ExportDefaultBindingWithNameSpaceExportImpl.java" name="ExportDefaultBindingWithNameSpaceExportImpl.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="11" loc="107" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="74" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="ExportDefaultBindingWithNameSpaceExportImpl">
               <metrics coveredelements="28" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="ExportDefaultBindingWithNameSpaceExportImpl(IdentifierTree,SyntaxToken,SyntaxToken,SyntaxToken,IdentifierTree,FromClauseTree,SyntaxToken)" num="43" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="57" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="62" count="6" type="method"/>
            <line num="64" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportedDefaultIdentifier() : IdentifierTree" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commaToken() : SyntaxToken" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="77" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asToken() : SyntaxToken" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="synonymIdentifier() : IdentifierTree" num="87" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause() : FromClauseTree" num="92" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="97" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ExtendsClauseTreeImpl.java" name="ExtendsClauseTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="64" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ExtendsClauseTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ExtendsClauseTreeImpl(SyntaxToken,Tree)" num="35" count="48" type="method"/>
            <line num="36" count="48" type="stmt"/>
            <line num="37" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="41" type="method"/>
            <line num="42" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="45" count="295" type="method"/>
            <line num="47" count="295" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendsToken() : SyntaxToken" num="50" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="superClass() : Tree" num="55" count="77" type="method"/>
            <line num="57" count="77" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="60" count="206" type="method"/>
            <line num="62" count="206" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/FieldDeclarationTreeImpl.java" name="FieldDeclarationTreeImpl.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="11" loc="113" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="80" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="FieldDeclarationTreeImpl">
               <metrics coveredelements="28" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="FieldDeclarationTreeImpl(List&lt;DecoratorTree&gt;,SyntaxToken,Tree,FlowTypeAnnotationTree,SyntaxToken,ExpressionTree,SyntaxToken)" num="45" count="61" type="method"/>
            <line num="50" count="61" type="stmt"/>
            <line num="51" count="61" type="stmt"/>
            <line num="52" count="61" type="stmt"/>
            <line num="53" count="61" type="stmt"/>
            <line num="54" count="61" type="stmt"/>
            <line num="55" count="61" type="stmt"/>
            <line num="56" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="59" count="374" type="method"/>
            <line num="61" count="374" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="64" count="241" type="method"/>
            <line num="66" count="241" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;DecoratorTree&gt;" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticToken() : SyntaxToken" num="74" count="13" type="method"/>
            <line num="77" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="propertyName() : Tree" num="80" count="20" type="method"/>
            <line num="82" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAnnotation() : FlowTypeAnnotationTree" num="85" count="4" type="method"/>
            <line num="88" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : SyntaxToken" num="91" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializer() : ExpressionTree" num="97" count="2" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="103" count="2" type="method"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="109" count="153" type="method"/>
            <line num="111" count="153" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/FromClauseTreeImpl.java" name="FromClauseTreeImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="68" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="FromClauseTreeImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="FromClauseTreeImpl(InternalSyntaxToken,LiteralTree)" num="37" count="170" type="method"/>
            <line num="39" count="170" type="stmt"/>
            <line num="40" count="170" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromToken() : SyntaxToken" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="module() : LiteralTree" num="49" count="13" type="method"/>
            <line num="51" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="47" type="method"/>
            <line num="56" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="59" count="749" type="method"/>
            <line num="61" count="749" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="64" count="523" type="method"/>
            <line num="66" count="523" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/FunctionDeclarationTreeImpl.java" name="FunctionDeclarationTreeImpl.java">
            <metrics coveredelements="40" coveredconditionals="2" complexity="16" loc="147" coveredmethods="15" methods="15" elements="40" classes="1" ncloc="109" statements="23" conditionals="2" coveredstatements="23"/>
            <class name="FunctionDeclarationTreeImpl">
               <metrics coveredelements="40" coveredconditionals="2" complexity="16" coveredmethods="15" methods="15" elements="40" statements="23" conditionals="2" coveredstatements="23"/>
            </class>
            <line complexity="2" visibility="private" signature="FunctionDeclarationTreeImpl(SyntaxToken,InternalSyntaxToken,InternalSyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree)" num="50" count="620" type="method"/>
            <line num="57" count="620" type="stmt"/>
            <line num="58" count="620" type="stmt"/>
            <line num="59" count="620" type="stmt"/>
            <line num="60" count="620" type="stmt"/>
            <line num="61" count="620" type="stmt"/>
            <line num="62" count="620" type="stmt"/>
            <line num="63" count="620" type="stmt"/>
            <line num="64" count="620" type="stmt"/>
            <line num="65" count="620" type="stmt"/>
            <line falsecount="36" truecount="584" num="65" type="cond"/>
            <line complexity="1" visibility="public" signature="create(SyntaxToken,InternalSyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree) : FunctionDeclarationTree" num="68" count="584" type="method"/>
            <line num="73" count="584" type="stmt"/>
            <line complexity="1" visibility="public" signature="createGenerator(InternalSyntaxToken,InternalSyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree) : FunctionDeclarationTree" num="76" count="36" type="method"/>
            <line num="81" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionKeyword() : SyntaxToken" num="84" count="6" type="method"/>
            <line num="86" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="89" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : IdentifierTree" num="95" count="1843" type="method"/>
            <line num="97" count="1843" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="100" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncToken() : SyntaxToken" num="106" count="251" type="method"/>
            <line num="109" count="251" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : ParameterListTree" num="112" count="599" type="method"/>
            <line num="114" count="599" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeAnnotationTree" num="117" count="2" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : BlockTree" num="123" count="1136" type="method"/>
            <line num="125" count="1136" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterList() : List&lt;BindingElementTree&gt;" num="128" count="87" type="method"/>
            <line num="130" count="87" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="133" count="9858" type="method"/>
            <line num="135" count="9858" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="138" count="4394" type="method"/>
            <line num="140" count="4394" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="143" count="2448" type="method"/>
            <line num="145" count="2448" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/FunctionTreeImpl.java" name="FunctionTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="7" loc="74" coveredmethods="6" methods="6" elements="20" classes="2" ncloc="44" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="FunctionTreeImpl">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="FunctionTreeImpl.SymbolUsagesVisitor">
               <metrics coveredelements="14" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="14" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="scope() : Scope" num="35" count="35" type="method"/>
            <line num="37" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope(Scope) : void" num="40" count="1104" type="method"/>
            <line num="41" count="1104" type="stmt"/>
            <line complexity="1" visibility="public" signature="outerScopeSymbolUsages() : Stream&lt;Usage&gt;" num="44" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="SymbolUsagesVisitor(FunctionTree)" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="outerScopeSymbolUsages(FunctionTree) : Stream&lt;Usage&gt;" num="57" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line num="60" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="64" count="9" type="method"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="68" type="cond"/>
            <line num="69" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ImportClauseTreeImpl.java" name="ImportClauseTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="8" loc="82" coveredmethods="6" methods="8" elements="20" classes="1" ncloc="51" statements="12" conditionals="0" coveredstatements="10"/>
            <class name="ImportClauseTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="ImportClauseTreeImpl(ImportSubClauseTree,SyntaxToken,ImportSubClauseTree)" num="38" count="20" type="method"/>
            <line num="39" count="20" type="stmt"/>
            <line num="40" count="20" type="stmt"/>
            <line num="41" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="ImportClauseTreeImpl(ImportSubClauseTree)" num="44" count="130" type="method"/>
            <line num="45" count="130" type="stmt"/>
            <line num="46" count="130" type="stmt"/>
            <line num="47" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstSubClause() : ImportSubClauseTree" num="50" count="170" type="method"/>
            <line num="52" count="170" type="stmt"/>
            <line complexity="1" visibility="public" signature="commaToken() : SyntaxToken" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondSubClause() : ImportSubClauseTree" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="68" count="31" type="method"/>
            <line num="70" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="73" count="709" type="method"/>
            <line num="75" count="709" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="78" count="519" type="method"/>
            <line num="80" count="519" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ImportDeclarationTreeImpl.java" name="ImportDeclarationTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="97" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="66" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ImportDeclarationTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ImportDeclarationTreeImpl(InternalSyntaxToken,SyntaxToken,ImportClauseTree,FromClauseTree,SyntaxToken)" num="42" count="145" type="method"/>
            <line num="49" count="145" type="stmt"/>
            <line num="50" count="145" type="stmt"/>
            <line num="51" count="145" type="stmt"/>
            <line num="52" count="145" type="stmt"/>
            <line num="53" count="145" type="stmt"/>
            <line complexity="1" visibility="public" signature="importToken() : SyntaxToken" num="56" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowImportTypeOrTypeOfToken() : SyntaxToken" num="61" count="15" type="method"/>
            <line num="64" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="importClause() : ImportClauseTree" num="67" count="6" type="method"/>
            <line num="69" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause() : FromClauseTree" num="72" count="16" type="method"/>
            <line num="74" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="77" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="83" count="85" type="method"/>
            <line num="85" count="85" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="88" count="716" type="method"/>
            <line num="90" count="716" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="93" count="532" type="method"/>
            <line num="95" count="532" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ImportModuleDeclarationTreeImpl.java" name="ImportModuleDeclarationTreeImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="75" coveredmethods="6" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="ImportModuleDeclarationTreeImpl">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="ImportModuleDeclarationTreeImpl(InternalSyntaxToken,LiteralTree,SyntaxToken)" num="39" count="4" type="method"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="importToken() : SyntaxToken" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="moduleName() : LiteralTree" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="61" count="45" type="method"/>
            <line num="63" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="66" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/InitializedBindingElementTreeImpl.java" name="InitializedBindingElementTreeImpl.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="8" loc="82" coveredmethods="8" methods="8" elements="18" classes="1" ncloc="51" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InitializedBindingElementTreeImpl">
               <metrics coveredelements="18" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="InitializedBindingElementTreeImpl(BindingElementTree,InternalSyntaxToken,ExpressionTree)" num="41" count="1825" type="method"/>
            <line num="42" count="1825" type="stmt"/>
            <line num="43" count="1825" type="stmt"/>
            <line num="44" count="1825" type="stmt"/>
            <line complexity="1" visibility="public" signature="left() : BindingElementTree" num="47" count="4228" type="method"/>
            <line num="49" count="4228" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : SyntaxToken" num="52" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="right() : ExpressionTree" num="57" count="2109" type="method"/>
            <line num="59" count="2109" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="62" count="8928" type="method"/>
            <line num="64" count="8928" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="67" count="53804" type="method"/>
            <line num="69" count="53804" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="72" count="7154" type="method"/>
            <line num="74" count="7155" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="77" count="2153" type="method"/>
            <line num="79" count="2153" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/MethodDeclarationTreeImpl.java" name="MethodDeclarationTreeImpl.java">
            <metrics coveredelements="43" coveredconditionals="2" complexity="17" loc="169" coveredmethods="16" methods="16" elements="43" classes="1" ncloc="130" statements="25" conditionals="2" coveredstatements="25"/>
            <class name="MethodDeclarationTreeImpl">
               <metrics coveredelements="43" coveredconditionals="2" complexity="17" coveredmethods="16" methods="16" elements="43" statements="25" conditionals="2" coveredstatements="25"/>
            </class>
            <line complexity="2" visibility="private" signature="MethodDeclarationTreeImpl(List&lt;DecoratorTree&gt;,InternalSyntaxToken,InternalSyntaxToken,InternalSyntaxToken,Tree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree)" num="52" count="176" type="method"/>
            <line num="62" count="176" type="stmt"/>
            <line num="63" count="176" type="stmt"/>
            <line num="64" count="176" type="stmt"/>
            <line num="65" count="176" type="stmt"/>
            <line num="66" count="176" type="stmt"/>
            <line falsecount="32" truecount="144" num="66" type="cond"/>
            <line num="67" count="176" type="stmt"/>
            <line num="68" count="176" type="stmt"/>
            <line num="69" count="176" type="stmt"/>
            <line num="70" count="176" type="stmt"/>
            <line num="71" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator(List&lt;DecoratorTree&gt;,InternalSyntaxToken,InternalSyntaxToken,Tree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree) : MethodDeclarationTreeImpl" num="74" count="32" type="method"/>
            <line num="83" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="method(List&lt;DecoratorTree&gt;,InternalSyntaxToken,InternalSyntaxToken,Tree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree) : MethodDeclarationTreeImpl" num="86" count="144" type="method"/>
            <line num="95" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;DecoratorTree&gt;" num="98" count="2" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticToken() : SyntaxToken" num="103" count="11" type="method"/>
            <line num="106" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="109" count="3" type="method"/>
            <line num="112" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Tree" num="115" count="422" type="method"/>
            <line num="117" count="422" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="120" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncToken() : SyntaxToken" num="126" count="8" type="method"/>
            <line num="129" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : ParameterListTree" num="132" count="153" type="method"/>
            <line num="134" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeAnnotationTree" num="137" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : BlockTree" num="143" count="169" type="method"/>
            <line num="145" count="169" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="148" count="1644" type="method"/>
            <line num="150" count="1644" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="153" count="1067" type="method"/>
            <line num="155" count="1067" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="160" count="752" type="method"/>
            <line num="162" count="752" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterList() : List&lt;BindingElementTree&gt;" num="165" count="54" type="method"/>
            <line num="167" count="54" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ModuleTreeImpl.java" name="ModuleTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="29" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ModuleTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ModuleTreeImpl(List&lt;Tree&gt;)" num="33" count="830" type="method"/>
            <line num="35" count="830" type="stmt"/>
            <line complexity="1" visibility="public" signature="items() : List&lt;Tree&gt;" num="39" count="196" type="method"/>
            <line num="41" count="196" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="1140" type="method"/>
            <line num="46" count="1140" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="49" count="2830" type="method"/>
            <line num="51" count="2830" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="54" count="1165" type="method"/>
            <line num="56" count="1165" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/NameSpaceExportDeclarationTreeImpl.java" name="NameSpaceExportDeclarationTreeImpl.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="112" coveredmethods="10" methods="11" elements="28" classes="1" ncloc="78" statements="17" conditionals="0" coveredstatements="16"/>
            <class name="NameSpaceExportDeclarationTreeImpl">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="10" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="NameSpaceExportDeclarationTreeImpl(InternalSyntaxToken,SyntaxToken,InternalSyntaxToken,InternalSyntaxToken,IdentifierTree,FromClauseTree,SyntaxToken)" num="44" count="7" type="method"/>
            <line num="49" count="7" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line num="51" count="7" type="stmt"/>
            <line num="52" count="7" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line num="54" count="7" type="stmt"/>
            <line num="55" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportToken() : SyntaxToken" num="59" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypeKeywordToken() : SyntaxToken" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="70" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="asToken() : SyntaxToken" num="75" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="synonymIdentifier() : IdentifierTree" num="81" count="2" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause() : FromClauseTree" num="87" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="92" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="98" count="53" type="method"/>
            <line num="100" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="103" count="10" type="method"/>
            <line num="105" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="108" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/NameSpaceImportTreeImpl.java" name="NameSpaceImportTreeImpl.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="7" loc="77" coveredmethods="5" methods="7" elements="16" classes="1" ncloc="47" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="NameSpaceImportTreeImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="NameSpaceImportTreeImpl(InternalSyntaxToken,InternalSyntaxToken,IdentifierTree)" num="39" count="40" type="method"/>
            <line num="40" count="40" type="stmt"/>
            <line num="41" count="40" type="stmt"/>
            <line num="42" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asToken() : SyntaxToken" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localName() : IdentifierTree" num="57" count="37" type="method"/>
            <line num="60" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="63" count="78" type="method"/>
            <line num="65" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="68" count="191" type="method"/>
            <line num="70" count="191" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="73" count="148" type="method"/>
            <line num="75" count="148" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/NamedExportDeclarationTreeImpl.java" name="NamedExportDeclarationTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="75" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="NamedExportDeclarationTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="NamedExportDeclarationTreeImpl(List&lt;DecoratorTree&gt;,InternalSyntaxToken,Tree)" num="39" count="37" type="method"/>
            <line num="40" count="37" type="stmt"/>
            <line num="41" count="37" type="stmt"/>
            <line num="42" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;DecoratorTree&gt;" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportToken() : SyntaxToken" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : Tree" num="56" count="13" type="method"/>
            <line num="58" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="61" count="88" type="method"/>
            <line num="63" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="66" count="61" type="method"/>
            <line num="68" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="71" count="7" type="method"/>
            <line num="73" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/NamedImportExportClauseTreeImpl.java" name="NamedImportExportClauseTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="82" coveredmethods="5" methods="7" elements="17" classes="1" ncloc="52" statements="10" conditionals="0" coveredstatements="8"/>
            <class name="NamedImportExportClauseTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="NamedImportExportClauseTreeImpl(Kind,InternalSyntaxToken,SeparatedList&lt;SpecifierTree&gt;,InternalSyntaxToken)" num="41" count="106" type="method"/>
            <line num="42" count="106" type="stmt"/>
            <line num="43" count="106" type="stmt"/>
            <line num="44" count="106" type="stmt"/>
            <line num="45" count="106" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="specifiers() : SeparatedList&lt;SpecifierTree&gt;" num="54" count="7" type="method"/>
            <line num="56" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="64" count="144" type="method"/>
            <line num="66" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="69" count="439" type="method"/>
            <line num="71" count="439" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="78" count="291" type="method"/>
            <line num="80" count="291" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ObjectBindingPatternTreeImpl.java" name="ObjectBindingPatternTreeImpl.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="8" loc="100" coveredmethods="8" methods="8" elements="21" classes="1" ncloc="60" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ObjectBindingPatternTreeImpl">
               <metrics coveredelements="21" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ObjectBindingPatternTreeImpl(SyntaxToken,SeparatedList&lt;BindingElementTree&gt;,SyntaxToken)" num="42" count="46" type="method"/>
            <line num="43" count="46" type="stmt"/>
            <line num="44" count="46" type="stmt"/>
            <line num="45" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : SeparatedList&lt;BindingElementTree&gt;" num="53" count="21" type="method"/>
            <line num="55" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="63" count="1054" type="method"/>
            <line num="65" count="1054" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="68" count="165" type="method"/>
            <line num="70" count="165" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="77" count="61" type="method"/>
            <line num="79" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="90" count="28" type="method"/>
            <line num="92" count="28" type="stmt"/>
            <line num="94" count="28" type="stmt"/>
            <line num="95" count="54" type="stmt"/>
            <line num="98" count="28" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ParameterListTreeImpl.java" name="ParameterListTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="8" loc="92" coveredmethods="8" methods="8" elements="22" classes="1" ncloc="61" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ParameterListTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterListTreeImpl(InternalSyntaxToken,SeparatedList&lt;BindingElementTree&gt;,InternalSyntaxToken)" num="44" count="1211" type="method"/>
            <line num="45" count="1211" type="stmt"/>
            <line num="46" count="1211" type="stmt"/>
            <line num="47" count="1211" type="stmt"/>
            <line num="48" count="1211" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="51" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : SeparatedList&lt;BindingElementTree&gt;" num="56" count="275" type="method"/>
            <line num="58" count="275" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="61" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="66" count="1281" type="method"/>
            <line num="68" count="1281" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="71" count="7048" type="method"/>
            <line num="73" count="7048" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="79" count="4754" type="method"/>
            <line num="81" count="4754" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterIdentifiers() : List&lt;IdentifierTree&gt;" num="84" count="1104" type="method"/>
            <line num="85" count="1104" type="stmt"/>
            <line num="87" count="1104" type="stmt"/>
            <line num="88" count="487" type="stmt"/>
            <line num="90" count="1104" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/ScriptTreeImpl.java" name="ScriptTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="76" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ScriptTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="ScriptTreeImpl(InternalSyntaxToken,ModuleTree,InternalSyntaxToken)" num="39" count="852" type="method"/>
            <line num="40" count="852" type="stmt"/>
            <line num="41" count="852" type="stmt"/>
            <line num="42" count="852" type="stmt"/>
            <line complexity="1" visibility="public" signature="shebangToken() : SyntaxToken" num="46" count="7" type="method"/>
            <line num="49" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="items() : ModuleTree" num="52" count="346" type="method"/>
            <line num="54" count="346" type="stmt"/>
            <line complexity="1" visibility="public" signature="EOFToken() : SyntaxToken" num="57" count="9" type="method"/>
            <line num="59" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="4160" type="method"/>
            <line num="64" count="4160" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="67" count="2870" type="method"/>
            <line num="69" count="2870" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="72" count="1148" type="method"/>
            <line num="74" count="1148" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/declaration/SpecifierTreeImpl.java" name="SpecifierTreeImpl.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="9" loc="93" coveredmethods="9" methods="9" elements="26" classes="1" ncloc="62" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="SpecifierTreeImpl">
               <metrics coveredelements="26" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="26" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SpecifierTreeImpl(Kind,SyntaxToken,IdentifierTree,SyntaxToken,IdentifierTree)" num="40" count="29" type="method"/>
            <line num="41" count="29" type="stmt"/>
            <line num="42" count="29" type="stmt"/>
            <line num="43" count="29" type="stmt"/>
            <line num="44" count="29" type="stmt"/>
            <line num="45" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="SpecifierTreeImpl(Kind,SyntaxToken,IdentifierTree)" num="48" count="110" type="method"/>
            <line num="49" count="110" type="stmt"/>
            <line num="50" count="110" type="stmt"/>
            <line num="51" count="110" type="stmt"/>
            <line num="52" count="110" type="stmt"/>
            <line num="53" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="56" count="236" type="method"/>
            <line num="58" count="236" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="61" count="580" type="method"/>
            <line num="63" count="580" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="66" count="387" type="method"/>
            <line num="68" count="387" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowImportTypeOrTypeOfToken() : SyntaxToken" num="71" count="3" type="method"/>
            <line num="74" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftName() : IdentifierTree" num="77" count="83" type="method"/>
            <line num="79" count="83" type="stmt"/>
            <line complexity="1" visibility="public" signature="asToken() : SyntaxToken" num="82" count="2" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightName() : IdentifierTree" num="88" count="119" type="method"/>
            <line num="91" count="119" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.symbols">
         <metrics coveredelements="137" complexity="57" loc="544" methods="50" classes="9" statements="79" coveredconditionals="13" coveredmethods="48" elements="143" ncloc="317" files="5" conditionals="14" coveredstatements="76"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/symbols/Symbol.java" name="Symbol.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="18" loc="145" coveredmethods="17" methods="18" elements="43" classes="2" ncloc="95" statements="25" conditionals="0" coveredstatements="24"/>
            <class name="Symbol">
               <metrics coveredelements="39" coveredconditionals="0" complexity="16" coveredmethods="16" methods="16" elements="39" statements="23" conditionals="0" coveredstatements="23"/>
            </class>
            <class name="Symbol.Kind">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="Kind(String)" num="50" count="30" type="method"/>
            <line num="51" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Symbol(String,Kind,Scope)" num="67" count="153826" type="method"/>
            <line num="68" count="153825" type="stmt"/>
            <line num="69" count="153825" type="stmt"/>
            <line num="70" count="153826" type="stmt"/>
            <line num="71" count="153826" type="stmt"/>
            <line num="72" count="153826" type="stmt"/>
            <line complexity="1" visibility="private" signature="addUsage(Usage) : void" num="75" count="8256" type="method"/>
            <line num="76" count="8256" type="stmt"/>
            <line num="77" count="8256" type="stmt"/>
            <line complexity="1" visibility="public" signature="addUsage(IdentifierTree,Usage.Kind) : void" num="80" count="8256" type="method"/>
            <line num="81" count="8256" type="stmt"/>
            <line num="82" count="8256" type="stmt"/>
            <line complexity="1" visibility="public" signature="usages() : Collection&lt;Usage&gt;" num="85" count="1310" type="method"/>
            <line num="86" count="1310" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExternal(boolean) : Symbol" num="89" count="149868" type="method"/>
            <line num="90" count="149869" type="stmt"/>
            <line num="91" count="149869" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : Scope" num="94" count="4382" type="method"/>
            <line num="95" count="4382" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="98" count="238905" type="method"/>
            <line num="99" count="238910" type="stmt"/>
            <line complexity="1" visibility="public" signature="external() : boolean" num="106" count="3200" type="method"/>
            <line num="107" count="3200" type="stmt"/>
            <line complexity="1" visibility="public" signature="is(Symbol.Kind) : boolean" num="110" count="8400" type="method"/>
            <line num="111" count="8400" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="114" count="4070" type="method"/>
            <line num="115" count="4070" type="stmt"/>
            <line complexity="1" visibility="public" signature="setKind(Kind) : void" num="118" count="91" type="method"/>
            <line num="119" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="addTypes(Set&lt;Type&gt;) : void" num="122" count="2113" type="method"/>
            <line num="123" count="2113" type="stmt"/>
            <line complexity="1" visibility="public" signature="addType(Type) : void" num="126" count="3098" type="method"/>
            <line num="127" count="3098" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="130" count="6017" type="method"/>
            <line num="131" count="6017" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVariable() : boolean" num="137" count="2046" type="method"/>
            <line num="138" count="2046" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="141" count="2345" type="method"/>
            <line num="143" count="2345" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/symbols/SymbolModel.java" name="SymbolModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SymbolModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/symbols/Type.java" name="Type.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="73" coveredmethods="0" methods="0" elements="0" classes="3" ncloc="31" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Type.Callability">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Type.Kind">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/symbols/TypeSet.java" name="TypeSet.java">
            <metrics coveredelements="82" coveredconditionals="13" complexity="32" loc="197" coveredmethods="25" methods="25" elements="84" classes="1" ncloc="137" statements="45" conditionals="14" coveredstatements="44"/>
            <class name="TypeSet">
               <metrics coveredelements="82" coveredconditionals="13" complexity="32" coveredmethods="25" methods="25" elements="84" statements="45" conditionals="14" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="TypeSet()" num="33" count="192235" type="method"/>
            <line num="34" count="192239" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="37" count="915" type="method"/>
            <line num="39" count="915" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="42" count="2654" type="method"/>
            <line num="44" count="2654" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="47" count="138" type="method"/>
            <line num="49" count="138" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Type&gt;" num="52" count="2892" type="method"/>
            <line num="54" count="2892" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : Object[]" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : boolean" num="67" count="8382" type="method"/>
            <line num="69" count="8382" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="77" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends Type&gt;) : boolean" num="82" count="2117" type="method"/>
            <line num="84" count="2117" type="stmt"/>
            <line complexity="1" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="87" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="92" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="97" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsOnlyAndUnique(Type.Kind) : boolean" num="102" count="39" type="method"/>
            <line num="103" count="39" type="stmt"/>
            <line complexity="2" visibility="public" signature="contains(Type.Kind) : boolean" num="109" count="5182" type="method"/>
            <line num="110" count="5182" type="stmt"/>
            <line num="111" count="2965" type="stmt"/>
            <line falsecount="2638" truecount="327" num="111" type="cond"/>
            <line num="112" count="327" type="stmt"/>
            <line num="115" count="4855" type="stmt"/>
            <line complexity="2" visibility="public" signature="containsOnly(Type.Kind) : boolean" num="121" count="1065" type="method"/>
            <line num="122" count="1065" type="stmt"/>
            <line num="123" count="57" type="stmt"/>
            <line falsecount="36" truecount="21" num="123" type="cond"/>
            <line num="124" count="21" type="stmt"/>
            <line num="127" count="1044" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyTypeSet() : TypeSet" num="130" count="175231" type="method"/>
            <line num="131" count="175231" type="stmt"/>
            <line complexity="2" visibility="public" signature="element() : Type" num="134" count="4" type="method"/>
            <line num="136" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="getUniqueKnownType() : Type" num="147" count="849" type="method"/>
            <line num="149" count="849" type="stmt"/>
            <line falsecount="330" truecount="519" num="149" type="cond"/>
            <line num="150" count="519" type="stmt"/>
            <line num="151" count="519" type="stmt"/>
            <line falsecount="30" truecount="489" num="151" type="cond"/>
            <line num="152" count="489" type="stmt"/>
            <line num="155" count="360" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="158" count="4" type="method"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="163" count="4" type="method"/>
            <line num="165" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="168" count="4" type="method"/>
            <line num="170" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="immutableCopy() : TypeSet" num="173" count="17006" type="method"/>
            <line num="174" count="17006" type="stmt"/>
            <line num="175" count="17006" type="stmt"/>
            <line num="176" count="17006" type="stmt"/>
            <line complexity="3" visibility="public" signature="getUniqueType(Type.Kind) : Type" num="182" count="2744" type="method"/>
            <line num="184" count="2744" type="stmt"/>
            <line num="185" count="2744" type="stmt"/>
            <line num="186" count="986" type="stmt"/>
            <line falsecount="551" truecount="435" num="186" type="cond"/>
            <line num="187" count="435" type="stmt"/>
            <line falsecount="73" truecount="362" num="187" type="cond"/>
            <line num="188" count="362" type="stmt"/>
            <line num="190" count="73" type="stmt"/>
            <line num="194" count="2671" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/symbols/Usage.java" name="Usage.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="76" coveredmethods="6" methods="7" elements="16" classes="2" ncloc="40" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="Usage">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="Usage.Kind">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Usage(IdentifierTree,Kind,Symbol)" num="47" count="8256" type="method"/>
            <line num="48" count="8256" type="stmt"/>
            <line num="49" count="8256" type="stmt"/>
            <line num="50" count="8256" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbol() : Symbol" num="53" count="65612" type="method"/>
            <line num="54" count="65612" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="57" count="14156" type="method"/>
            <line num="58" count="14156" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifierTree() : IdentifierTree" num="61" count="11416" type="method"/>
            <line num="62" count="11416" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeclaration() : boolean" num="65" count="109" type="method"/>
            <line num="66" count="109" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWrite() : boolean" num="69" count="2206" type="method"/>
            <line num="70" count="2206" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRead() : boolean" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.lexer">
         <metrics coveredelements="41" complexity="24" loc="531" methods="17" classes="5" statements="30" coveredconditionals="6" coveredmethods="13" elements="59" ncloc="305" files="5" conditionals="12" coveredstatements="22"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/lexer/JavaScriptKeyword.java" name="JavaScriptKeyword.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="6" loc="106" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="69" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="JavaScriptKeyword">
               <metrics coveredelements="16" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="JavaScriptKeyword(String)" num="78" count="114" type="method"/>
            <line num="79" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="82" count="38" type="method"/>
            <line num="84" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="87" count="119861" type="method"/>
            <line num="89" count="119865" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="92" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="keywordValues() : String[]" num="97" count="1565" type="method"/>
            <line num="98" count="1565" type="stmt"/>
            <line num="99" count="1565" type="stmt"/>
            <line num="100" count="1565" type="stmt"/>
            <line falsecount="1565" truecount="59469" num="100" type="cond"/>
            <line num="101" count="59469" type="stmt"/>
            <line num="103" count="1565" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/lexer/JavaScriptLexer.java" name="JavaScriptLexer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="90" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="40" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JavaScriptLexer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="JavaScriptLexer()" num="88" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/lexer/JavaScriptPunctuator.java" name="JavaScriptPunctuator.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="102" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="75" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="JavaScriptPunctuator">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="JavaScriptPunctuator(String)" num="83" count="159" type="method"/>
            <line num="84" count="159" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="87" count="53" type="method"/>
            <line num="89" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="92" count="1120016" type="method"/>
            <line num="94" count="1119998" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="97" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/lexer/JavaScriptRegexpChannel.java" name="JavaScriptRegexpChannel.java">
            <metrics coveredelements="11" coveredconditionals="4" complexity="10" loc="186" coveredmethods="1" methods="4" elements="28" classes="1" ncloc="99" statements="14" conditionals="10" coveredstatements="6"/>
            <class name="JavaScriptRegexpChannel">
               <metrics coveredelements="11" coveredconditionals="4" complexity="10" coveredmethods="1" methods="4" elements="28" statements="14" conditionals="10" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="JavaScriptRegexpChannel()" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLastToken(Lexer) : Token" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line complexity="3" visibility="package" signature="guessNextIsRegexp(String) : boolean" num="173" count="4" type="method"/>
            <line num="175" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="175" type="cond"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="179" count="35" type="stmt"/>
            <line falsecount="34" truecount="1" num="179" type="cond"/>
            <line num="180" count="1" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/lexer/JavaScriptTokenType.java" name="JavaScriptTokenType.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="47" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JavaScriptTokenType">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : String" num="32" count="4" type="method"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="37" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.visitors">
         <metrics coveredelements="29" complexity="15" loc="174" methods="15" classes="3" statements="22" coveredconditionals="0" coveredmethods="11" elements="37" ncloc="92" files="3" conditionals="0" coveredstatements="18"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/visitors/Issues.java" name="Issues.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="63" coveredmethods="5" methods="6" elements="16" classes="1" ncloc="35" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="Issues">
               <metrics coveredelements="14" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="Issues(JavaScriptCheck)" num="36" count="330" type="method"/>
            <line num="37" count="330" type="stmt"/>
            <line num="38" count="330" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLineIssue(Tree,String) : LineIssue" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="45" count="638" type="method"/>
            <line num="46" count="639" type="stmt"/>
            <line num="47" count="639" type="stmt"/>
            <line num="48" count="639" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="51" count="658" type="method"/>
            <line num="52" count="658" type="stmt"/>
            <line num="53" count="658" type="stmt"/>
            <line complexity="1" visibility="public" signature="getList() : List&lt;Issue&gt;" num="56" count="243" type="method"/>
            <line num="57" count="243" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="60" count="303" type="method"/>
            <line num="61" count="303" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/visitors/JavaScriptFileImpl.java" name="JavaScriptFileImpl.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="5" loc="53" coveredmethods="2" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="2"/>
            <class name="JavaScriptFileImpl">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="JavaScriptFileImpl(InputFile)" num="31" count="273" type="method"/>
            <line num="32" count="273" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileName() : String" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contents() : String" num="40" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : URI" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inputFile() : InputFile" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/visitors/JavaScriptVisitorContext.java" name="JavaScriptVisitorContext.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="58" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="31" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="JavaScriptVisitorContext">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="JavaScriptVisitorContext(ScriptTree,InputFile,Configuration)" num="36" count="272" type="method"/>
            <line num="37" count="272" type="stmt"/>
            <line num="38" count="272" type="stmt"/>
            <line num="40" count="272" type="stmt"/>
            <line num="41" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTopTree() : ScriptTree" num="44" count="1818" type="method"/>
            <line num="46" count="1818" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJavaScriptFile() : JavaScriptFile" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbolModel() : SymbolModel" num="54" count="1668" type="method"/>
            <line num="56" count="1668" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree.statement">
         <metrics coveredelements="0" complexity="0" loc="1182" methods="0" classes="28" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="314" files="28" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/BlockTree.java" name="BlockTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BlockTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/BreakStatementTree.java" name="BreakStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BreakStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/CaseClauseTree.java" name="CaseClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CaseClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/CatchBlockTree.java" name="CatchBlockTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CatchBlockTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ConditionalTree.java" name="ConditionalTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ContinueStatementTree.java" name="ContinueStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ContinueStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/DebuggerStatementTree.java" name="DebuggerStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DebuggerStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/DefaultClauseTree.java" name="DefaultClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DefaultClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/DoWhileStatementTree.java" name="DoWhileStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DoWhileStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ElseClauseTree.java" name="ElseClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ElseClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/EmptyStatementTree.java" name="EmptyStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EmptyStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ExpressionStatementTree.java" name="ExpressionStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExpressionStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/FinallyBlockTree.java" name="FinallyBlockTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FinallyBlockTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ForObjectStatementTree.java" name="ForObjectStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForObjectStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ForStatementTree.java" name="ForStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="23" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/IfStatementTree.java" name="IfStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IfStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/IterationStatementTree.java" name="IterationStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IterationStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/LabelledStatementTree.java" name="LabelledStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LabelledStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ReturnStatementTree.java" name="ReturnStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ReturnStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/StatementTree.java" name="StatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/SwitchClauseTree.java" name="SwitchClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SwitchClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/SwitchStatementTree.java" name="SwitchStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SwitchStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/ThrowStatementTree.java" name="ThrowStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ThrowStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/TryStatementTree.java" name="TryStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TryStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/VariableDeclarationTree.java" name="VariableDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VariableDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/VariableStatementTree.java" name="VariableStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VariableStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/WhileStatementTree.java" name="WhileStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WhileStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/statement/WithStatementTree.java" name="WithStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WithStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree.expression">
         <metrics coveredelements="0" complexity="0" loc="1571" methods="0" classes="36" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="377" files="36" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ArgumentListTree.java" name="ArgumentListTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArgumentListTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ArrayAssignmentPatternTree.java" name="ArrayAssignmentPatternTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayAssignmentPatternTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ArrayLiteralTree.java" name="ArrayLiteralTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayLiteralTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ArrowFunctionTree.java" name="ArrowFunctionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrowFunctionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/AssignmentExpressionTree.java" name="AssignmentExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssignmentExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/AssignmentPatternRestElementTree.java" name="AssignmentPatternRestElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssignmentPatternRestElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/BinaryExpressionTree.java" name="BinaryExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="73" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/BracketMemberExpressionTree.java" name="BracketMemberExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BracketMemberExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/CallExpressionTree.java" name="CallExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CallExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ComputedPropertyNameTree.java" name="ComputedPropertyNameTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComputedPropertyNameTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ConditionalExpressionTree.java" name="ConditionalExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/DotMemberExpressionTree.java" name="DotMemberExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DotMemberExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ExpressionTree.java" name="ExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/FunctionExpressionTree.java" name="FunctionExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="57" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="24" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/IdentifierTree.java" name="IdentifierTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="67" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IdentifierTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ImportTree.java" name="ImportTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/InitializedAssignmentPatternElementTree.java" name="InitializedAssignmentPatternElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InitializedAssignmentPatternElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/LexicalDeclarationTree.java" name="LexicalDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LexicalDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/LiteralTree.java" name="LiteralTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LiteralTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/MemberExpressionTree.java" name="MemberExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MemberExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/NewExpressionTree.java" name="NewExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NewExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/NewTargetTree.java" name="NewTargetTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NewTargetTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ObjectAssignmentPatternPairElementTree.java" name="ObjectAssignmentPatternPairElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectAssignmentPatternPairElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ObjectAssignmentPatternTree.java" name="ObjectAssignmentPatternTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectAssignmentPatternTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ObjectLiteralTree.java" name="ObjectLiteralTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectLiteralTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/PairPropertyTree.java" name="PairPropertyTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PairPropertyTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/ParenthesisedExpressionTree.java" name="ParenthesisedExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParenthesisedExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/RestElementTree.java" name="RestElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RestElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/SpreadElementTree.java" name="SpreadElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SpreadElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/SuperTree.java" name="SuperTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SuperTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/TaggedTemplateTree.java" name="TaggedTemplateTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TaggedTemplateTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/TemplateCharactersTree.java" name="TemplateCharactersTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TemplateCharactersTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/TemplateExpressionTree.java" name="TemplateExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TemplateExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/TemplateLiteralTree.java" name="TemplateLiteralTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TemplateLiteralTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/UnaryExpressionTree.java" name="UnaryExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="50" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="UnaryExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/YieldExpressionTree.java" name="YieldExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="YieldExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.parser">
         <metrics coveredelements="1540" complexity="563" loc="5405" methods="477" classes="18" statements="929" coveredconditionals="160" coveredmethods="468" elements="1574" ncloc="4408" files="6" conditionals="168" coveredstatements="912"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/parser/EcmaScriptLexer.java" name="EcmaScriptLexer.java">
            <metrics coveredelements="164" coveredconditionals="12" complexity="18" loc="604" coveredmethods="10" methods="11" elements="168" classes="1" ncloc="404" statements="145" conditionals="12" coveredstatements="142"/>
            <class name="EcmaScriptLexer">
               <metrics coveredelements="164" coveredconditionals="12" complexity="18" coveredmethods="10" methods="11" elements="168" statements="145" conditionals="12" coveredstatements="142"/>
            </class>
            <line complexity="4" visibility="package" signature="EcmaScriptLexer()" num="339" count="339" type="method"/>
            <line num="340" count="339" type="stmt"/>
            <line num="341" count="339" type="stmt"/>
            <line num="342" count="339" type="stmt"/>
            <line num="343" count="339" type="stmt"/>
            <line falsecount="339" truecount="4503" num="343" type="cond"/>
            <line num="344" count="4503" type="stmt"/>
            <line falsecount="4110" truecount="393" num="344" type="cond"/>
            <line num="345" count="393" type="stmt"/>
            <line num="346" count="393" type="stmt"/>
            <line num="348" count="4110" type="stmt"/>
            <line num="350" count="4503" type="stmt"/>
            <line num="352" count="339" type="stmt"/>
            <line complexity="1" visibility="public" signature="createGrammar() : LexerlessGrammar" num="355" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createGrammarBuilder() : LexerlessGrammarBuilder" num="359" count="782" type="method"/>
            <line num="360" count="782" type="stmt"/>
            <line num="362" count="782" type="stmt"/>
            <line num="366" count="782" type="stmt"/>
            <line num="368" count="782" type="stmt"/>
            <line num="370" count="782" type="stmt"/>
            <line complexity="1" visibility="private" signature="lexical(LexerlessGrammarBuilder) : void" num="376" count="782" type="method"/>
            <line num="377" count="782" type="stmt"/>
            <line num="379" count="782" type="stmt"/>
            <line num="380" count="782" type="stmt"/>
            <line num="385" count="782" type="stmt"/>
            <line num="387" count="782" type="stmt"/>
            <line num="392" count="782" type="stmt"/>
            <line num="394" count="782" type="stmt"/>
            <line num="396" count="782" type="stmt"/>
            <line num="403" count="782" type="stmt"/>
            <line num="410" count="782" type="stmt"/>
            <line num="411" count="782" type="stmt"/>
            <line num="415" count="782" type="stmt"/>
            <line num="418" count="782" type="stmt"/>
            <line num="421" count="782" type="stmt"/>
            <line num="425" count="782" type="stmt"/>
            <line num="434" count="782" type="stmt"/>
            <line num="435" count="782" type="stmt"/>
            <line num="436" count="782" type="stmt"/>
            <line num="437" count="782" type="stmt"/>
            <line num="441" count="782" type="stmt"/>
            <line num="443" count="782" type="stmt"/>
            <line num="447" count="782" type="stmt"/>
            <line num="450" count="782" type="stmt"/>
            <line num="451" count="782" type="stmt"/>
            <line num="452" count="782" type="stmt"/>
            <line num="453" count="782" type="stmt"/>
            <line num="454" count="782" type="stmt"/>
            <line num="455" count="782" type="stmt"/>
            <line num="456" count="782" type="stmt"/>
            <line num="457" count="782" type="stmt"/>
            <line num="458" count="782" type="stmt"/>
            <line num="459" count="782" type="stmt"/>
            <line num="462" count="782" type="stmt"/>
            <line num="463" count="782" type="stmt"/>
            <line num="470" count="782" type="stmt"/>
            <line num="471" count="782" type="stmt"/>
            <line num="472" count="782" type="stmt"/>
            <line num="473" count="782" type="stmt"/>
            <line num="474" count="782" type="stmt"/>
            <line num="475" count="782" type="stmt"/>
            <line num="478" count="782" type="stmt"/>
            <line num="479" count="782" type="stmt"/>
            <line num="480" count="782" type="stmt"/>
            <line num="481" count="782" type="stmt"/>
            <line num="482" count="782" type="stmt"/>
            <line num="483" count="782" type="stmt"/>
            <line num="484" count="782" type="stmt"/>
            <line num="485" count="782" type="stmt"/>
            <line num="488" count="782" type="stmt"/>
            <line num="489" count="782" type="stmt"/>
            <line num="490" count="782" type="stmt"/>
            <line num="491" count="782" type="stmt"/>
            <line num="492" count="782" type="stmt"/>
            <line num="494" count="782" type="stmt"/>
            <line num="495" count="782" type="stmt"/>
            <line complexity="1" visibility="private" signature="punctuators(LexerlessGrammarBuilder) : void" num="498" count="782" type="method"/>
            <line num="499" count="782" type="stmt"/>
            <line num="500" count="782" type="stmt"/>
            <line num="501" count="782" type="stmt"/>
            <line num="502" count="782" type="stmt"/>
            <line num="503" count="782" type="stmt"/>
            <line num="504" count="782" type="stmt"/>
            <line num="505" count="782" type="stmt"/>
            <line num="506" count="782" type="stmt"/>
            <line num="507" count="782" type="stmt"/>
            <line num="508" count="782" type="stmt"/>
            <line num="509" count="782" type="stmt"/>
            <line num="510" count="782" type="stmt"/>
            <line num="511" count="782" type="stmt"/>
            <line num="512" count="782" type="stmt"/>
            <line num="513" count="782" type="stmt"/>
            <line num="514" count="782" type="stmt"/>
            <line num="515" count="782" type="stmt"/>
            <line num="516" count="782" type="stmt"/>
            <line num="517" count="782" type="stmt"/>
            <line num="518" count="782" type="stmt"/>
            <line num="519" count="782" type="stmt"/>
            <line num="520" count="782" type="stmt"/>
            <line num="521" count="782" type="stmt"/>
            <line num="522" count="782" type="stmt"/>
            <line num="523" count="782" type="stmt"/>
            <line num="524" count="782" type="stmt"/>
            <line num="525" count="782" type="stmt"/>
            <line num="526" count="782" type="stmt"/>
            <line num="527" count="782" type="stmt"/>
            <line num="528" count="782" type="stmt"/>
            <line num="529" count="782" type="stmt"/>
            <line num="530" count="782" type="stmt"/>
            <line num="531" count="782" type="stmt"/>
            <line num="532" count="782" type="stmt"/>
            <line num="533" count="782" type="stmt"/>
            <line num="534" count="782" type="stmt"/>
            <line num="535" count="782" type="stmt"/>
            <line num="536" count="782" type="stmt"/>
            <line num="537" count="782" type="stmt"/>
            <line num="538" count="782" type="stmt"/>
            <line num="539" count="782" type="stmt"/>
            <line num="540" count="782" type="stmt"/>
            <line num="541" count="782" type="stmt"/>
            <line num="542" count="782" type="stmt"/>
            <line num="543" count="782" type="stmt"/>
            <line num="544" count="782" type="stmt"/>
            <line num="545" count="782" type="stmt"/>
            <line num="546" count="782" type="stmt"/>
            <line num="547" count="782" type="stmt"/>
            <line num="548" count="782" type="stmt"/>
            <line num="549" count="782" type="stmt"/>
            <line num="550" count="782" type="stmt"/>
            <line num="551" count="782" type="stmt"/>
            <line complexity="3" visibility="private" signature="keywords(LexerlessGrammarBuilder) : void" num="554" count="782" type="method"/>
            <line num="555" count="782" type="stmt"/>
            <line num="556" count="782" type="stmt"/>
            <line num="557" count="782" type="stmt"/>
            <line falsecount="782" truecount="29716" num="557" type="cond"/>
            <line num="558" count="29716" type="stmt"/>
            <line num="559" count="29716" type="stmt"/>
            <line num="560" count="29716" type="stmt"/>
            <line falsecount="1564" truecount="28152" num="560" type="cond"/>
            <line num="561" count="28152" type="stmt"/>
            <line num="564" count="782" type="stmt"/>
            <line complexity="2" visibility="private" signature="punctuator(LexerlessGrammarBuilder,GrammarRuleKey,String) : void" num="570" count="28152" type="method"/>
            <line num="571" count="28152" type="stmt"/>
            <line num="572" count="777232" type="stmt"/>
            <line falsecount="749067" truecount="28152" num="572" type="cond"/>
            <line num="573" count="28152" type="stmt"/>
            <line num="574" count="28152" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="word(LexerlessGrammarBuilder,String) : Object" num="580" count="13294" type="method"/>
            <line num="581" count="13294" type="stmt"/>
            <line complexity="1" visibility="private" signature="character(LexerlessGrammarBuilder,String) : Object" num="584" count="2346" type="method"/>
            <line num="585" count="2346" type="stmt"/>
            <line complexity="2" visibility="private" signature="punctuator(LexerlessGrammarBuilder,GrammarRuleKey,String,Object) : void" num="588" count="13294" type="method"/>
            <line num="589" count="13294" type="stmt"/>
            <line num="590" count="341716" type="stmt"/>
            <line falsecount="328429" truecount="13294" num="590" type="cond"/>
            <line num="591" count="13294" type="stmt"/>
            <line num="592" count="13294" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="598" count="80828" type="method"/>
            <line num="601" count="80828" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/parser/JavaScriptGrammar.java" name="JavaScriptGrammar.java">
            <metrics coveredelements="425" coveredconditionals="0" complexity="212" loc="2306" coveredmethods="212" methods="212" elements="425" classes="1" ncloc="1993" statements="213" conditionals="0" coveredstatements="213"/>
            <class name="JavaScriptGrammar">
               <metrics coveredelements="425" coveredconditionals="0" complexity="212" coveredmethods="212" methods="212" elements="425" statements="213" conditionals="0" coveredstatements="213"/>
            </class>
            <line complexity="1" visibility="public" signature="JavaScriptGrammar(GrammarBuilder&lt;InternalSyntaxToken&gt;,TreeFactory)" num="167" count="781" type="method"/>
            <line num="168" count="782" type="stmt"/>
            <line num="169" count="781" type="stmt"/>
            <line complexity="1" visibility="public" signature="EMPTY_STATEMENT() : EmptyStatementTree" num="176" count="782" type="method"/>
            <line num="177" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="DEBUGGER_STATEMENT() : DebuggerStatementTree" num="181" count="782" type="method"/>
            <line num="182" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="VARIABLE_STATEMENT() : VariableStatementTree" num="186" count="782" type="method"/>
            <line num="187" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="VARIABLE_DECLARATION() : VariableDeclarationTree" num="191" count="782" type="method"/>
            <line num="192" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_ELEMENT_LIST() : SeparatedList&lt;BindingElementTree&gt;" num="202" count="782" type="method"/>
            <line num="203" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="LABELLED_STATEMENT() : LabelledStatementTree" num="207" count="782" type="method"/>
            <line num="208" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONTINUE_STATEMENT() : ContinueStatementTree" num="212" count="782" type="method"/>
            <line num="213" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONTINUE_WITH_LABEL() : ContinueStatementTree" num="219" count="782" type="method"/>
            <line num="220" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONTINUE_WITHOUT_LABEL() : ContinueStatementTree" num="227" count="782" type="method"/>
            <line num="228" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BREAK_STATEMENT() : BreakStatementTree" num="232" count="782" type="method"/>
            <line num="233" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BREAK_WITH_LABEL() : BreakStatementTree" num="239" count="782" type="method"/>
            <line num="240" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BREAK_WITHOUT_LABEL() : BreakStatementTree" num="247" count="782" type="method"/>
            <line num="248" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="RETURN_STATEMENT() : ReturnStatementTree" num="252" count="782" type="method"/>
            <line num="253" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="RETURN_WITH_EXPRESSION() : ReturnStatementTree" num="259" count="782" type="method"/>
            <line num="260" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="RETURN_WITHOUT_EXPRESSION() : ReturnStatementTree" num="267" count="782" type="method"/>
            <line num="268" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="THROW_STATEMENT() : ThrowStatementTree" num="272" count="782" type="method"/>
            <line num="273" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="WITH_STATEMENT() : WithStatementTree" num="281" count="782" type="method"/>
            <line num="282" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BLOCK() : BlockTree" num="291" count="782" type="method"/>
            <line num="292" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="TRY_STATEMENT() : TryStatementTree" num="299" count="782" type="method"/>
            <line num="300" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="TRY_STATEMENT_WITHOUT_CATCH() : TryStatementTree" num="306" count="782" type="method"/>
            <line num="307" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="TRY_STATEMENT_WITH_CATCH() : TryStatementTree" num="314" count="782" type="method"/>
            <line num="315" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FINALLY_CLAUSE() : FinallyBlockTree" num="323" count="782" type="method"/>
            <line num="324" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CATCH_CLAUSE() : CatchBlockTree" num="328" count="782" type="method"/>
            <line num="329" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="SWITCH_STATEMENT() : SwitchStatementTree" num="341" count="782" type="method"/>
            <line num="342" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="SWITCH_CASES() : List&lt;SwitchClauseTree&gt;" num="354" count="782" type="method"/>
            <line num="355" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CASE_CLAUSE() : CaseClauseTree" num="360" count="782" type="method"/>
            <line num="361" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="DEFAULT_CLAUSE() : DefaultClauseTree" num="369" count="782" type="method"/>
            <line num="370" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IF_STATEMENT() : IfStatementTree" num="377" count="782" type="method"/>
            <line num="378" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ELSE_CLAUSE() : ElseClauseTree" num="389" count="782" type="method"/>
            <line num="390" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="WHILE_STATEMENT() : WhileStatementTree" num="396" count="782" type="method"/>
            <line num="397" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="DO_WHILE_STATEMENT() : DoWhileStatementTree" num="407" count="782" type="method"/>
            <line num="408" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPRESSION_STATEMENT() : ExpressionStatementTree" num="420" count="782" type="method"/>
            <line num="421" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FOR_OF_STATEMENT() : ForObjectStatementTree" num="428" count="782" type="method"/>
            <line num="429" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FOR_IN_STATEMENT() : ForObjectStatementTree" num="443" count="782" type="method"/>
            <line num="444" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FOR_STATEMENT() : ForStatementTree" num="458" count="782" type="method"/>
            <line num="459" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ITERATION_STATEMENT() : StatementTree" num="479" count="782" type="method"/>
            <line num="480" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="STATEMENT() : StatementTree" num="490" count="782" type="method"/>
            <line num="491" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="LITERAL() : LiteralTree" num="524" count="782" type="method"/>
            <line num="525" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NUMERIC_LITERAL() : LiteralTree" num="534" count="782" type="method"/>
            <line num="535" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="STRING_LITERAL() : LiteralTree" num="539" count="782" type="method"/>
            <line num="540" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FORMAL_PARAMETER_CLAUSE() : ParameterListTree" num="544" count="782" type="method"/>
            <line num="545" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FORMAL_PARAMETER_LIST() : SeparatedList&lt;BindingElementTree&gt;" num="565" count="782" type="method"/>
            <line num="566" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_REST_ELEMENT() : RestElementTree" num="575" count="782" type="method"/>
            <line num="576" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARRAY_LITERAL() : ArrayLiteralTree" num="580" count="782" type="method"/>
            <line num="581" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARRAY_LITERAL_ELEMENT() : ExpressionTree" num="589" count="782" type="method"/>
            <line num="590" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARRAY_ELEMENT_LIST() : List&lt;Tree&gt;" num="594" count="782" type="method"/>
            <line num="595" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="GENERATOR_EXPRESSION() : FunctionExpressionTree" num="608" count="782" type="method"/>
            <line num="609" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FUNCTION_EXPRESSION() : FunctionExpressionTree" num="621" count="782" type="method"/>
            <line num="622" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONDITIONAL_EXPRESSION() : ExpressionTree" num="634" count="782" type="method"/>
            <line num="635" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONDITIONAL_EXPRESSION_TAIL() : ConditionalExpressionTail" num="641" count="782" type="method"/>
            <line num="642" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONDITIONAL_OR_EXPRESSION() : ExpressionTree" num="661" count="782" type="method"/>
            <line num="662" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CONDITIONAL_AND_EXPRESSION() : ExpressionTree" num="672" count="782" type="method"/>
            <line num="673" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BITWISE_OR_EXPRESSION() : ExpressionTree" num="683" count="782" type="method"/>
            <line num="684" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BITWISE_XOR_EXPRESSION() : ExpressionTree" num="694" count="782" type="method"/>
            <line num="695" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BITWISE_AND_EXPRESSION() : ExpressionTree" num="705" count="782" type="method"/>
            <line num="706" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EQUALITY_EXPRESSION() : ExpressionTree" num="716" count="782" type="method"/>
            <line num="717" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="RELATIONAL_EXPRESSION() : ExpressionTree" num="732" count="782" type="method"/>
            <line num="733" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="SHIFT_EXPRESSION() : ExpressionTree" num="750" count="782" type="method"/>
            <line num="751" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ADDITIVE_EXPRESSION() : ExpressionTree" num="765" count="782" type="method"/>
            <line num="766" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="MULTIPLICATIVE_EXPRESSION() : ExpressionTree" num="779" count="782" type="method"/>
            <line num="780" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPONENTIATION_EXPRESSION() : ExpressionTree" num="794" count="782" type="method"/>
            <line num="795" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="UNARY_EXPRESSION() : ExpressionTree" num="804" count="782" type="method"/>
            <line num="805" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="POSTFIX_EXPRESSION() : ExpressionTree" num="824" count="782" type="method"/>
            <line num="825" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="LEFT_HAND_SIDE_EXPRESSION() : ExpressionTree" num="837" count="782" type="method"/>
            <line num="838" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="YIELD_EXPRESSION() : YieldExpressionTree" num="845" count="782" type="method"/>
            <line num="846" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IDENTIFIER_REFERENCE() : IdentifierTree" num="854" count="782" type="method"/>
            <line num="855" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_IDENTIFIER() : IdentifierTree" num="863" count="782" type="method"/>
            <line num="864" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="LABEL_IDENTIFIER_NO_LB() : InternalSyntaxToken" num="872" count="782" type="method"/>
            <line num="873" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IDENTIFIER_NAME() : IdentifierTree" num="879" count="782" type="method"/>
            <line num="880" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARROW_FUNCTION() : ArrowFunctionTree" num="884" count="782" type="method"/>
            <line num="885" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="MEMBER_EXPRESSION() : ExpressionTree" num="901" count="782" type="method"/>
            <line num="902" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="MEMBER_EXPRESSION_TAIL() : ExpressionTail" num="913" count="782" type="method"/>
            <line num="914" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="SUPER() : SuperTree" num="921" count="782" type="method"/>
            <line num="922" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IMPORT() : ImportTree" num="926" count="782" type="method"/>
            <line num="927" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NEW_TARGET() : NewTargetTree" num="931" count="782" type="method"/>
            <line num="932" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGUMENT_CLAUSE() : ArgumentListTree" num="939" count="782" type="method"/>
            <line num="940" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGUMENT_LIST() : SeparatedList&lt;ExpressionTree&gt;" num="947" count="782" type="method"/>
            <line num="948" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGUMENT() : ExpressionTree" num="957" count="782" type="method"/>
            <line num="958" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CALL_EXPRESSION() : ExpressionTree" num="962" count="782" type="method"/>
            <line num="963" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CALL_EXPRESSION_TAIL() : ExpressionTail" num="970" count="782" type="method"/>
            <line num="971" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BRACKET_ACCESS() : BracketAccessTail" num="979" count="782" type="method"/>
            <line num="980" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="DOT_ACCESS() : DotAccessTail" num="987" count="782" type="method"/>
            <line num="988" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="PARENTHESISED_EXPRESSION() : ParenthesisedExpressionTree" num="994" count="782" type="method"/>
            <line num="995" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CLASS_EXPRESSION() : ClassTree" num="1003" count="782" type="method"/>
            <line num="1004" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXTENDS_CLAUSE() : ExtendsClauseTree" num="1019" count="782" type="method"/>
            <line num="1020" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="COMPUTED_PROPERTY_NAME() : ComputedPropertyNameTree" num="1024" count="782" type="method"/>
            <line num="1025" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="LITERAL_PROPERTY_NAME() : ExpressionTree" num="1033" count="782" type="method"/>
            <line num="1034" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="PROPERTY_NAME() : Tree" num="1042" count="782" type="method"/>
            <line num="1043" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="PAIR_PROPERTY() : PairPropertyTree" num="1050" count="782" type="method"/>
            <line num="1051" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="PROPERTY_DEFINITION() : Tree" num="1059" count="782" type="method"/>
            <line num="1060" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="SPREAD_ELEMENT() : SpreadElementTree" num="1069" count="782" type="method"/>
            <line num="1070" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="OBJECT_LITERAL() : ObjectLiteralTree" num="1074" count="782" type="method"/>
            <line num="1075" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="PROPERTIES() : SeparatedList&lt;Tree&gt;" num="1083" count="782" type="method"/>
            <line num="1084" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NEW_EXPRESSION() : ExpressionTree" num="1091" count="782" type="method"/>
            <line num="1092" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="TEMPLATE_LITERAL() : TemplateLiteralTree" num="1099" count="782" type="method"/>
            <line num="1100" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="TEMPLATE_EXPRESSION() : TemplateExpressionTree" num="1117" count="782" type="method"/>
            <line num="1118" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="TEMPLATE_CHARACTERS() : TemplateCharactersTree" num="1127" count="782" type="method"/>
            <line num="1128" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="THIS() : IdentifierTree" num="1132" count="782" type="method"/>
            <line num="1133" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="PRIMARY_EXPRESSION() : ExpressionTree" num="1138" count="782" type="method"/>
            <line num="1139" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ASSIGNMENT_EXPRESSION() : ExpressionTree" num="1157" count="782" type="method"/>
            <line num="1158" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ASSIGNMENT_EXPRESSION_NOT_ARROW_FUNCTION() : ExpressionTree" num="1177" count="782" type="method"/>
            <line num="1178" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ASSIGNMENT_TOKEN() : InternalSyntaxToken" num="1197" count="782" type="method"/>
            <line num="1198" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPRESSION() : ExpressionTree" num="1215" count="782" type="method"/>
            <line num="1216" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPRESSION_NO_LINE_BREAK() : ExpressionTree" num="1220" count="782" type="method"/>
            <line num="1221" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FROM_CLAUSE() : FromClauseTree" num="1234" count="782" type="method"/>
            <line num="1235" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="DEFAULT_EXPORT_DECLARATION() : DefaultExportDeclarationTree" num="1239" count="782" type="method"/>
            <line num="1240" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NAMED_EXPORT_DECLARATION() : NamedExportDeclarationTree" num="1253" count="782" type="method"/>
            <line num="1254" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_CLAUSE() : ExportClauseTree" num="1271" count="782" type="method"/>
            <line num="1272" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_DEFAULT_BINDING_WITH_EXPORT_LIST() : ExportDefaultBindingWithExportList" num="1280" count="782" type="method"/>
            <line num="1281" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_DEFAULT_BINDING_WITH_NAMESPACE_EXPORT() : ExportDefaultBindingWithNameSpaceExport" num="1290" count="782" type="method"/>
            <line num="1291" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_DEFAULT_BINDING() : ExportDefaultBinding" num="1302" count="782" type="method"/>
            <line num="1303" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_LIST() : NamedImportExportClauseTree" num="1310" count="782" type="method"/>
            <line num="1311" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_LIST_BODY() : SeparatedList&lt;SpecifierTree&gt;" num="1319" count="782" type="method"/>
            <line num="1320" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_SPECIFIER() : SpecifierTree" num="1327" count="782" type="method"/>
            <line num="1328" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NAMESPACE_EXPORT_DECLARATION() : NameSpaceExportDeclarationTree" num="1337" count="782" type="method"/>
            <line num="1338" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="EXPORT_DECLARATION() : ExportDeclarationTree" num="1348" count="782" type="method"/>
            <line num="1349" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IMPORT_DECLARATION() : DeclarationTree" num="1358" count="782" type="method"/>
            <line num="1359" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IMPORT_CLAUSE() : ImportClauseTree" num="1379" count="782" type="method"/>
            <line num="1380" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NAMED_IMPORTS() : NamedImportExportClauseTree" num="1388" count="782" type="method"/>
            <line num="1389" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="IMPORT_SPECIFIER() : SpecifierTree" num="1399" count="782" type="method"/>
            <line num="1400" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="NAMESPACE_IMPORT() : NameSpaceImportTree" num="1409" count="782" type="method"/>
            <line num="1410" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="MODULE_BODY() : ModuleTree" num="1417" count="782" type="method"/>
            <line num="1418" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_PATTERN() : BindingElementTree" num="1435" count="782" type="method"/>
            <line num="1436" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="INITIALISED_BINDING_ELEMENT() : InitializedBindingElementTree" num="1442" count="782" type="method"/>
            <line num="1443" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="OBJECT_BINDING_PATTERN() : ObjectBindingPatternTree" num="1453" count="782" type="method"/>
            <line num="1454" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="REST_OBJECT_BINDING_ELEMENT() : RestElementTree" num="1469" count="782" type="method"/>
            <line num="1470" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_PROPERTY_LIST() : SeparatedList&lt;BindingElementTree&gt;" num="1474" count="782" type="method"/>
            <line num="1475" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_PROPERTY() : BindingElementTree" num="1481" count="782" type="method"/>
            <line num="1482" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="BINDING_ELEMENT() : BindingElementTree" num="1488" count="782" type="method"/>
            <line num="1489" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARRAY_BINDING_PATTERN() : ArrayBindingPatternTree" num="1498" count="782" type="method"/>
            <line num="1499" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="OBJECT_ASSIGNMENT_PATTERN() : ObjectAssignmentPatternTree" num="1510" count="782" type="method"/>
            <line num="1511" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ASSIGNMENT_PROPERTY() : Tree" num="1524" count="782" type="method"/>
            <line num="1525" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARRAY_ASSIGNMENT_PATTERN() : ArrayAssignmentPatternTree" num="1537" count="782" type="method"/>
            <line num="1538" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ASSIGNMENT_PATTERN_ELEMENT() : Tree" num="1549" count="782" type="method"/>
            <line num="1550" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="INITIALIZED_ASSIGNMENT_PATTERN_ELEMENT() : InitializedAssignmentPatternElementTree" num="1554" count="782" type="method"/>
            <line num="1555" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="INITIALIZED_OBJECT_ASSIGNMENT_PATTERN_ELEMENT() : InitializedAssignmentPatternElementTree" num="1559" count="782" type="method"/>
            <line num="1560" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="ASSIGNMENT_PATTERN_REST_ELEMENT() : AssignmentPatternRestElementTree" num="1564" count="782" type="method"/>
            <line num="1565" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CLASS_DECLARATION() : ClassTree" num="1573" count="782" type="method"/>
            <line num="1574" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CLASS_ELEMENT() : Tree" num="1588" count="782" type="method"/>
            <line num="1589" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="DECORATOR() : DecoratorTree" num="1600" count="782" type="method"/>
            <line num="1601" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="CLASS_FIELD_INITIALIZER() : FieldDeclarationTree" num="1609" count="782" type="method"/>
            <line num="1610" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="METHOD_DEFINITION() : FunctionTree" num="1620" count="782" type="method"/>
            <line num="1621" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FUNCTION_AND_GENERATOR_DECLARATION() : FunctionDeclarationTree" num="1655" count="782" type="method"/>
            <line num="1656" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_ELEMENT() : JsxElementTree" num="1675" count="782" type="method"/>
            <line num="1676" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_SELF_CLOSING_ELEMENT() : JsxSelfClosingElementTree" num="1684" count="782" type="method"/>
            <line num="1685" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_OPENING_ELEMENT() : JsxOpeningElementTree" num="1694" count="782" type="method"/>
            <line num="1695" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_EMPTY_OPENING_ELEMENT() : JsxEmptyOpeningElementTree" num="1703" count="782" type="method"/>
            <line num="1704" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_EMPTY_CLOSING_ELEMENT() : JsxEmptyClosingElementTree" num="1710" count="782" type="method"/>
            <line num="1711" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_CLOSING_ELEMENT() : JsxClosingElementTree" num="1718" count="782" type="method"/>
            <line num="1719" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_ELEMENT_NAME() : JsxElementNameTree" num="1727" count="782" type="method"/>
            <line num="1728" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_MEMBER_EXPRESSION() : ExpressionTree" num="1737" count="782" type="method"/>
            <line num="1738" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_IDENTIFIER() : JsxIdentifierTree" num="1744" count="782" type="method"/>
            <line num="1745" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_ATTRIBUTES() : List&lt;JsxAttributeTree&gt;" num="1749" count="782" type="method"/>
            <line num="1750" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_SPREAD_ATTRIBUTE() : JsxSpreadAttributeTree" num="1757" count="782" type="method"/>
            <line num="1758" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_STANDARD_ATTRIBUTE() : JsxAttributeTree" num="1767" count="782" type="method"/>
            <line num="1768" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_ATTRIBUTE_VALUE() : JsxAttributeValueTree" num="1777" count="782" type="method"/>
            <line num="1778" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSX_CHILD() : JsxChildTree" num="1788" count="782" type="method"/>
            <line num="1789" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="SCRIPT() : ScriptTree" num="1801" count="782" type="method"/>
            <line num="1802" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="VUE_SCRIPT() : ScriptTree" num="1811" count="782" type="method"/>
            <line num="1812" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="VUE_ELEMENT() : VueElement" num="1819" count="782" type="method"/>
            <line num="1820" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="VUE_SCRIPT_TAG() : VueScriptTag" num="1834" count="782" type="method"/>
            <line num="1835" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPE() : FlowTypeTree" num="1847" count="782" type="method"/>
            <line num="1848" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_ARRAY_TYPE_SHORTHAND_OR_HIGHER() : FlowTypeTree" num="1852" count="782" type="method"/>
            <line num="1853" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TOP_PRIORITY_TYPE() : FlowTypeTree" num="1862" count="782" type="method"/>
            <line num="1863" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPEOF_TYPE() : FlowTypeofTypeTree" num="1877" count="782" type="method"/>
            <line num="1878" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_CASTING_EXPRESSION() : FlowCastingExpressionTree" num="1889" count="782" type="method"/>
            <line num="1890" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_NAMESPACED_TYPE() : FlowNamespacedTypeTree" num="1899" count="782" type="method"/>
            <line num="1900" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TUPLE_TYPE() : FlowTupleTypeTree" num="1906" count="782" type="method"/>
            <line num="1907" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TUPLE_TYPE_ELEMENTS() : SeparatedList&lt;FlowTypeTree&gt;" num="1914" count="782" type="method"/>
            <line num="1915" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_PARENTHESISED_TYPE() : FlowParenthesisedTypeTree" num="1921" count="782" type="method"/>
            <line num="1922" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_ARRAY_TYPE_WITH_KEYWORD() : FlowArrayTypeWithKeywordTree" num="1926" count="782" type="method"/>
            <line num="1927" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_UNION_TYPE_OR_HIGHER() : FlowTypeTree" num="1931" count="782" type="method"/>
            <line num="1932" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_UNION_TYPE() : FlowTypeTree" num="1938" count="782" type="method"/>
            <line num="1939" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_UNION_TYPE_OR_HIGHER_NON_FUNCTION() : FlowTypeTree" num="1946" count="782" type="method"/>
            <line num="1947" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_INTERSECTION_TYPE_OR_HIGHER() : FlowTypeTree" num="1953" count="782" type="method"/>
            <line num="1954" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_INTERSECTION_TYPE_OR_HIGHER_NON_FUNCTION() : FlowTypeTree" num="1963" count="782" type="method"/>
            <line num="1964" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_SIMPLE_TYPE() : FlowSimpleTypeTree" num="1973" count="782" type="method"/>
            <line num="1974" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_OPTIONAL_TYPE() : FlowOptionalTypeTree" num="1983" count="782" type="method"/>
            <line num="1984" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_LITERAL_TYPE() : FlowLiteralTypeTree" num="1988" count="782" type="method"/>
            <line num="1989" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_TYPE_WITH_PARENTHESES_OR_HIGHER() : FlowTypeTree" num="2000" count="782" type="method"/>
            <line num="2001" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_TYPE_WITHOUT_PARENTHESES_OR_HIGHER() : FlowTypeTree" num="2011" count="782" type="method"/>
            <line num="2012" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_TYPE_PARAMETER_CLAUSE() : FlowFunctionTypeParameterClauseTree" num="2022" count="782" type="method"/>
            <line num="2023" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_TYPE_PARAMETER_LIST() : SeparatedList&lt;FlowFunctionTypeParameterTree&gt;" num="2043" count="782" type="method"/>
            <line num="2044" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_GENERIC_PARAMETER_CLAUSE() : FlowGenericParameterClauseTree" num="2052" count="782" type="method"/>
            <line num="2053" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_PARAMETERIZED_GENERICS_TYPE() : FlowParameterizedGenericsTypeTree" num="2062" count="782" type="method"/>
            <line num="2063" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_IMPLEMENTS_CLAUSE() : FlowImplementsClauseTree" num="2073" count="782" type="method"/>
            <line num="2074" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_EXTENDS_CLAUSE() : FlowImplementsClauseTree" num="2081" count="782" type="method"/>
            <line num="2082" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPE_TO_BE_EXTENDED() : FlowTypeTree" num="2089" count="782" type="method"/>
            <line num="2090" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_GENERIC_PARAMETER() : FlowGenericParameterTree" num="2094" count="782" type="method"/>
            <line num="2095" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_TYPE_PARAMETER() : FlowFunctionTypeParameterTree" num="2102" count="782" type="method"/>
            <line num="2103" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_TYPE_REST_PARAMETER() : FlowFunctionTypeParameterTree" num="2109" count="782" type="method"/>
            <line num="2110" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_OBJECT_TYPE() : FlowObjectTypeTree" num="2114" count="782" type="method"/>
            <line num="2115" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_OBJECT_TYPE_PROPERTIES() : SeparatedList&lt;Tree&gt;" num="2129" count="782" type="method"/>
            <line num="2130" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_PROPERTY_DEFINITION() : FlowPropertyDefinitionTree" num="2137" count="782" type="method"/>
            <line num="2138" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_METHOD_PROPERTY_DEFINITION_KEY() : FlowMethodPropertyDefinitionKeyTree" num="2158" count="782" type="method"/>
            <line num="2159" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_SIMPLE_PROPERTY_DEFINITION_KEY() : FlowSimplePropertyDefinitionKeyTree" num="2166" count="782" type="method"/>
            <line num="2167" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_INDEXER_PROPERTY_DEFINITION_KEY() : FlowIndexerPropertyDefinitionKeyTree" num="2173" count="782" type="method"/>
            <line num="2174" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPE_ANNOTATION() : FlowTypeAnnotationTree" num="2182" count="782" type="method"/>
            <line num="2183" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_ARROW_FUNCTION_RETURN_TYPE_ANNOTATION() : FlowTypeAnnotationTree" num="2187" count="782" type="method"/>
            <line num="2188" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPED_BINDING_ELEMENT() : FlowTypedBindingElementTree" num="2192" count="782" type="method"/>
            <line num="2193" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_OPTIONAL_BINDING_ELEMENT() : FlowOptionalBindingElementTree" num="2199" count="782" type="method"/>
            <line num="2200" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPE_ALIAS_STATEMENT() : FlowTypeAliasStatementTree" num="2206" count="782" type="method"/>
            <line num="2207" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_OPAQUE_TYPE() : FlowOpaqueTypeTree" num="2219" count="782" type="method"/>
            <line num="2220" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_TYPE_KEYWORD() : InternalSyntaxToken" num="2227" count="782" type="method"/>
            <line num="2228" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_INTERFACE_DECLARATION() : FlowInterfaceDeclarationTree" num="2232" count="782" type="method"/>
            <line num="2233" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_DECLARE() : FlowDeclareTree" num="2244" count="782" type="method"/>
            <line num="2245" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_EXPORT_DEFAULT_TYPE() : DefaultExportDeclarationTree" num="2262" count="782" type="method"/>
            <line num="2263" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_MODULE() : FlowModuleTree" num="2271" count="782" type="method"/>
            <line num="2272" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_FUNCTION_SIGNATURE() : FlowFunctionSignatureTree" num="2281" count="782" type="method"/>
            <line num="2282" count="782" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOW_MODULE_EXPORTS() : FlowModuleExportsTree" num="2291" count="782" type="method"/>
            <line num="2292" count="782" type="stmt"/>
            <line complexity="1" visibility="private" signature="ES6(T) : T" num="2302" count="4692" type="method"/>
            <line num="2303" count="4692" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/parser/JavaScriptNodeBuilder.java" name="JavaScriptNodeBuilder.java">
            <metrics coveredelements="36" coveredconditionals="6" complexity="14" loc="130" coveredmethods="6" methods="10" elements="43" classes="3" ncloc="92" statements="27" conditionals="6" coveredstatements="24"/>
            <class name="JavaScriptNodeBuilder">
               <metrics coveredelements="32" coveredconditionals="6" complexity="9" coveredmethods="5" methods="5" elements="32" statements="21" conditionals="6" coveredstatements="21"/>
            </class>
            <class name="JavaScriptNodeBuilder.LineColumnValue">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JavaScriptNodeBuilder.InternalSyntaxSpacing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="createNonTerminal(GrammarRuleKey,Rule,List&lt;Object&gt;,int,int) : Object" num="44" count="179328" type="method"/>
            <line num="46" count="179328" type="stmt"/>
            <line num="47" count="240957" type="stmt"/>
            <line falsecount="183556" truecount="57401" num="47" type="cond"/>
            <line num="48" count="57401" type="stmt"/>
            <line num="51" count="121927" type="stmt"/>
            <line complexity="2" visibility="public" signature="createTerminal(Input,int,int,List&lt;Trivia&gt;,TokenType) : Object" num="54" count="52621" type="method"/>
            <line num="56" count="52621" type="stmt"/>
            <line num="57" count="52621" type="stmt"/>
            <line num="58" count="52621" type="stmt"/>
            <line num="59" count="52621" type="stmt"/>
            <line num="60" count="52621" type="stmt"/>
            <line falsecount="52620" truecount="1" num="65" type="cond"/>
            <line complexity="3" visibility="private" signature="column(boolean,int,int) : int" num="70" count="55573" type="method"/>
            <line num="71" count="55573" type="stmt"/>
            <line falsecount="55572" truecount="1" num="71" type="cond"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="55572" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTrivias(List&lt;Trivia&gt;,boolean) : List&lt;SyntaxTrivia&gt;" num="77" count="52621" type="method"/>
            <line num="78" count="52621" type="stmt"/>
            <line num="79" count="52621" type="stmt"/>
            <line num="80" count="2952" type="stmt"/>
            <line num="81" count="2952" type="stmt"/>
            <line num="82" count="2952" type="stmt"/>
            <line num="84" count="52621" type="stmt"/>
            <line complexity="1" visibility="private" signature="tokenPosition(Input,int,int) : LineColumnValue" num="87" count="52621" type="method"/>
            <line num="88" count="52621" type="stmt"/>
            <line num="89" count="52621" type="stmt"/>
            <line num="90" count="52621" type="stmt"/>
            <line complexity="1" visibility="private" signature="LineColumnValue(int,int,String)" num="98" count="52621" type="method"/>
            <line num="99" count="52621" type="stmt"/>
            <line num="100" count="52621" type="stmt"/>
            <line num="101" count="52621" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="107" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLeaf() : boolean" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/parser/JavaScriptParser.java" name="JavaScriptParser.java">
            <metrics coveredelements="20" coveredconditionals="6" complexity="7" loc="68" coveredmethods="3" methods="4" elements="22" classes="1" ncloc="41" statements="12" conditionals="6" coveredstatements="11"/>
            <class name="JavaScriptParser">
               <metrics coveredelements="20" coveredconditionals="6" complexity="7" coveredmethods="3" methods="4" elements="22" statements="12" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="JavaScriptParser(GrammarRuleKey)" num="32" count="629" type="method"/>
            <line num="33" count="629" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(File) : Tree" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : Tree" num="48" count="826" type="method"/>
            <line num="50" count="826" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParents(Tree) : Tree" num="53" count="42588" type="method"/>
            <line num="54" count="42588" type="stmt"/>
            <line num="55" count="42588" type="stmt"/>
            <line num="56" count="42588" type="stmt"/>
            <line falsecount="42588" truecount="100320" num="56" type="cond"/>
            <line num="57" count="100320" type="stmt"/>
            <line num="58" count="100320" type="stmt"/>
            <line falsecount="8904" truecount="91416" num="58" type="cond"/>
            <line num="59" count="91416" type="stmt"/>
            <line num="60" count="91416" type="stmt"/>
            <line falsecount="49653" truecount="41763" num="60" type="cond"/>
            <line num="61" count="41763" type="stmt"/>
            <line num="65" count="42588" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/parser/JavaScriptParserBuilder.java" name="JavaScriptParserBuilder.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="38" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="JavaScriptParserBuilder">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="JavaScriptParserBuilder()" num="27" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createParser() : ActionParser&lt;Tree&gt;" num="30" count="596" type="method"/>
            <line num="31" count="596" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVueParser() : ActionParser&lt;Tree&gt;" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/parser/TreeFactory.java" name="TreeFactory.java">
            <metrics coveredelements="891" coveredconditionals="136" complexity="309" loc="2259" coveredmethods="235" methods="237" elements="911" classes="11" ncloc="1865" statements="530" conditionals="144" coveredstatements="520"/>
            <class name="TreeFactory">
               <metrics coveredelements="864" coveredconditionals="136" complexity="300" coveredmethods="226" methods="228" elements="884" statements="512" conditionals="144" coveredstatements="502"/>
            </class>
            <class name="TreeFactory.ConditionalExpressionTail">
               <metrics coveredelements="5" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TreeFactory.ExpressionTail">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TreeFactory.ArgumentsTail">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TreeFactory.TemplateLiteralTail">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TreeFactory.BracketAccessTail">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TreeFactory.DotAccessTail">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TreeFactory.VueScriptTag">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TreeFactory.VueElement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TreeFactory.ScriptVueElement">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TreeFactory.Tuple">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 313()" num="313" count="3" type="method"/>
            <line num="314" count="3" type="stmt"/>
            <line num="315" count="3" type="stmt"/>
            <line num="316" count="3" type="stmt"/>
            <line num="317" count="3" type="stmt"/>
            <line num="318" count="3" type="stmt"/>
            <line num="319" count="3" type="stmt"/>
            <line num="320" count="3" type="stmt"/>
            <line num="321" count="3" type="stmt"/>
            <line num="322" count="3" type="stmt"/>
            <line num="323" count="3" type="stmt"/>
            <line num="324" count="3" type="stmt"/>
            <line num="325" count="3" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line num="327" count="3" type="stmt"/>
            <line num="328" count="3" type="stmt"/>
            <line num="329" count="3" type="stmt"/>
            <line num="330" count="3" type="stmt"/>
            <line num="331" count="3" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line num="333" count="3" type="stmt"/>
            <line num="334" count="3" type="stmt"/>
            <line num="335" count="3" type="stmt"/>
            <line num="336" count="3" type="stmt"/>
            <line num="337" count="3" type="stmt"/>
            <line num="338" count="3" type="stmt"/>
            <line num="339" count="3" type="stmt"/>
            <line num="340" count="3" type="stmt"/>
            <line num="341" count="3" type="stmt"/>
            <line num="342" count="3" type="stmt"/>
            <line num="343" count="3" type="stmt"/>
            <line num="344" count="3" type="stmt"/>
            <line num="345" count="3" type="stmt"/>
            <line num="346" count="3" type="stmt"/>
            <line num="347" count="3" type="stmt"/>
            <line num="348" count="3" type="stmt"/>
            <line num="349" count="3" type="stmt"/>
            <line num="350" count="3" type="stmt"/>
            <line num="351" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="getBinaryOperator(InternalSyntaxToken) : Kind" num="367" count="974" type="method"/>
            <line num="368" count="974" type="stmt"/>
            <line num="369" count="974" type="stmt"/>
            <line falsecount="974" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="974" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPrefixOperator(InternalSyntaxToken) : Kind" num="375" count="241" type="method"/>
            <line num="376" count="241" type="stmt"/>
            <line num="377" count="241" type="stmt"/>
            <line falsecount="241" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="241" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyStatement(InternalSyntaxToken) : EmptyStatementTree" num="385" count="26" type="method"/>
            <line num="386" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="debuggerStatement(InternalSyntaxToken,Tree) : DebuggerStatementTree" num="389" count="4" type="method"/>
            <line num="390" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="variableStatement(VariableDeclarationTree,Tree) : VariableStatementTree" num="393" count="2140" type="method"/>
            <line num="394" count="2140" type="stmt"/>
            <line complexity="4" visibility="private" signature="variableDeclaration(InternalSyntaxToken,SeparatedList&lt;BindingElementTree&gt;) : VariableDeclarationTree" num="397" count="2338" type="method"/>
            <line num="398" count="2338" type="stmt"/>
            <line num="399" count="2338" type="stmt"/>
            <line falsecount="579" truecount="1759" num="399" type="cond"/>
            <line num="400" count="1759" type="stmt"/>
            <line num="402" count="579" type="stmt"/>
            <line falsecount="139" truecount="440" num="402" type="cond"/>
            <line num="403" count="440" type="stmt"/>
            <line num="405" count="139" type="stmt"/>
            <line falsecount="0" truecount="139" num="405" type="cond"/>
            <line num="406" count="139" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="2338" type="stmt"/>
            <line complexity="1" visibility="public" signature="variableDeclaration1(InternalSyntaxToken,SeparatedList&lt;BindingElementTree&gt;) : VariableDeclarationTree" num="414" count="2338" type="method"/>
            <line num="415" count="2338" type="stmt"/>
            <line complexity="2" visibility="private" signature="bindingElementList(BindingElementTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, BindingElementTree&gt;&gt;&gt;) : SeparatedList&lt;BindingElementTree&gt;" num="418" count="2338" type="method"/>
            <line num="420" count="2338" type="stmt"/>
            <line num="421" count="2338" type="stmt"/>
            <line num="423" count="2338" type="stmt"/>
            <line num="425" count="2338" type="stmt"/>
            <line falsecount="2284" truecount="54" num="425" type="cond"/>
            <line num="426" count="54" type="stmt"/>
            <line num="427" count="77" type="stmt"/>
            <line num="429" count="77" type="stmt"/>
            <line num="430" count="77" type="stmt"/>
            <line num="434" count="2338" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingElementList1(BindingElementTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, BindingElementTree&gt;&gt;&gt;) : SeparatedList&lt;BindingElementTree&gt;" num="437" count="2338" type="method"/>
            <line num="438" count="2338" type="stmt"/>
            <line complexity="1" visibility="public" signature="labelledStatement(InternalSyntaxToken,InternalSyntaxToken,StatementTree) : LabelledStatementTree" num="441" count="22" type="method"/>
            <line num="442" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="continueWithLabel(InternalSyntaxToken,InternalSyntaxToken,Tree) : ContinueStatementTree" num="445" count="4" type="method"/>
            <line num="446" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="continueWithoutLabel(InternalSyntaxToken,Tree) : ContinueStatementTree" num="449" count="14" type="method"/>
            <line num="450" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakWithLabel(InternalSyntaxToken,InternalSyntaxToken,Tree) : BreakStatementTree" num="453" count="11" type="method"/>
            <line num="454" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakWithoutLabel(InternalSyntaxToken,Tree) : BreakStatementTree" num="457" count="54" type="method"/>
            <line num="458" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnWithExpression(InternalSyntaxToken,ExpressionTree,Tree) : ReturnStatementTree" num="461" count="198" type="method"/>
            <line num="462" count="198" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnWithoutExpression(InternalSyntaxToken,Tree) : ReturnStatementTree" num="465" count="33" type="method"/>
            <line num="466" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="newThrowStatement(InternalSyntaxToken,ExpressionTree,Tree) : ThrowStatementTree" num="469" count="28" type="method"/>
            <line num="470" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="newWithStatement(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree) : WithStatementTree" num="473" count="5" type="method"/>
            <line num="477" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="newBlock(InternalSyntaxToken,Optional&lt;List&lt;StatementTree&gt;&gt;,InternalSyntaxToken) : BlockTree" num="480" count="2351" type="method"/>
            <line num="481" count="2351" type="stmt"/>
            <line falsecount="892" truecount="1459" num="481" type="cond"/>
            <line num="482" count="1459" type="stmt"/>
            <line num="484" count="892" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyBlock(InternalSyntaxToken,BlockTree) : FinallyBlockTree" num="487" count="29" type="method"/>
            <line num="488" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="tryStatementWithoutCatch(InternalSyntaxToken,BlockTree,FinallyBlockTree) : TryStatementTree" num="491" count="3" type="method"/>
            <line num="492" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="tryStatementWithCatch(InternalSyntaxToken,BlockTree,CatchBlockTree,Optional&lt;FinallyBlockTree&gt;) : TryStatementTree" num="495" count="70" type="method"/>
            <line num="496" count="70" type="stmt"/>
            <line complexity="1" visibility="public" signature="newCatchBlock(InternalSyntaxToken,InternalSyntaxToken,BindingElementTree,InternalSyntaxToken,BlockTree) : CatchBlockTree" num="499" count="72" type="method"/>
            <line num="503" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchStatement(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,InternalSyntaxToken,Optional&lt;List&lt;SwitchClauseTree&gt;&gt;,InternalSyntaxToken) : SwitchStatementTree" num="511" count="54" type="method"/>
            <line num="516" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchCases(Optional&lt;List&lt;SwitchClauseTree&gt;&gt;) : List&lt;SwitchClauseTree&gt;" num="526" count="54" type="method"/>
            <line num="527" count="54" type="stmt"/>
            <line complexity="2" visibility="public" signature="defaultClause(InternalSyntaxToken,InternalSyntaxToken,Optional&lt;List&lt;StatementTree&gt;&gt;) : DefaultClauseTree" num="530" count="20" type="method"/>
            <line num="531" count="20" type="stmt"/>
            <line falsecount="3" truecount="17" num="531" type="cond"/>
            <line num="532" count="17" type="stmt"/>
            <line num="534" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="caseClause(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,Optional&lt;List&lt;StatementTree&gt;&gt;) : CaseClauseTree" num="537" count="67" type="method"/>
            <line num="538" count="67" type="stmt"/>
            <line falsecount="8" truecount="59" num="538" type="cond"/>
            <line num="539" count="59" type="stmt"/>
            <line num="541" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseClause(InternalSyntaxToken,StatementTree) : ElseClauseTree" num="544" count="91" type="method"/>
            <line num="545" count="91" type="stmt"/>
            <line complexity="2" visibility="public" signature="ifStatement(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree,Optional&lt;ElseClauseTree&gt;) : IfStatementTree" num="548" count="532" type="method"/>
            <line num="552" count="532" type="stmt"/>
            <line falsecount="441" truecount="91" num="552" type="cond"/>
            <line num="553" count="91" type="stmt"/>
            <line num="561" count="441" type="stmt"/>
            <line complexity="1" visibility="public" signature="whileStatement(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree) : WhileStatementTree" num="569" count="80" type="method"/>
            <line num="573" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="doWhileStatement(InternalSyntaxToken,StatementTree,InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,Tree) : DoWhileStatementTree" num="581" count="31" type="method"/>
            <line num="585" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressionStatement(ExpressionTree,Tree) : ExpressionStatementTree" num="595" count="2759" type="method"/>
            <line num="596" count="2759" type="stmt"/>
            <line complexity="2" visibility="private" signature="nullableSemicolonToken(Tree) : InternalSyntaxToken" num="599" count="5552" type="method"/>
            <line num="601" count="5552" type="stmt"/>
            <line falsecount="772" truecount="4779" num="601" type="cond"/>
            <line num="602" count="4780" type="stmt"/>
            <line num="604" count="772" type="stmt"/>
            <line complexity="1" visibility="public" signature="forOfStatement(InternalSyntaxToken,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,Tree,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree) : ForObjectStatementTree" num="608" count="78" type="method"/>
            <line num="612" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="forInStatement(InternalSyntaxToken,InternalSyntaxToken,Tree,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree) : ForObjectStatementTree" num="622" count="102" type="method"/>
            <line num="627" count="102" type="stmt"/>
            <line complexity="1" visibility="public" signature="forStatement(InternalSyntaxToken,InternalSyntaxToken,Optional&lt;Tree&gt;,InternalSyntaxToken,Optional&lt;ExpressionTree&gt;,InternalSyntaxToken,Optional&lt;ExpressionTree&gt;,InternalSyntaxToken,StatementTree) : ForStatementTree" num="637" count="150" type="method"/>
            <line num="642" count="150" type="stmt"/>
            <line complexity="4" visibility="public" signature="arrayLiteralElements(Optional&lt;List&lt;InternalSyntaxToken&gt;&gt;,ExpressionTree,Optional&lt;List&lt;Tuple&lt;List&lt;InternalSyntaxToken&gt;, ExpressionTree&gt;&gt;&gt;,Optional&lt;List&lt;InternalSyntaxToken&gt;&gt;) : List&lt;Tree&gt;" num="666" count="127" type="method"/>
            <line num="671" count="127" type="stmt"/>
            <line num="674" count="127" type="stmt"/>
            <line falsecount="122" truecount="5" num="674" type="cond"/>
            <line num="675" count="5" type="stmt"/>
            <line num="679" count="127" type="stmt"/>
            <line num="682" count="127" type="stmt"/>
            <line falsecount="19" truecount="108" num="682" type="cond"/>
            <line num="683" count="108" type="stmt"/>
            <line num="684" count="145" type="stmt"/>
            <line num="685" count="145" type="stmt"/>
            <line num="690" count="127" type="stmt"/>
            <line falsecount="115" truecount="12" num="690" type="cond"/>
            <line num="691" count="12" type="stmt"/>
            <line num="694" count="127" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayLiteral(InternalSyntaxToken,Optional&lt;List&lt;Tree&gt;&gt;,InternalSyntaxToken) : ArrayLiteralTree" num="697" count="152" type="method"/>
            <line num="698" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="generatorExpression(InternalSyntaxToken,InternalSyntaxToken,Optional&lt;IdentifierTree&gt;,Optional&lt;FlowGenericParameterClauseTree&gt;,ParameterListTree,Optional&lt;FlowTypeAnnotationTree&gt;,BlockTree) : FunctionExpressionTree" num="703" count="11" type="method"/>
            <line num="710" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullLiteral(InternalSyntaxToken) : LiteralTree" num="713" count="138" type="method"/>
            <line num="714" count="138" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokenList(List&lt;InternalSyntaxToken&gt;) : List&lt;Tree&gt;" num="717" count="1" type="method"/>
            <line num="718" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanLiteral(InternalSyntaxToken) : LiteralTree" num="721" count="350" type="method"/>
            <line num="722" count="350" type="stmt"/>
            <line complexity="1" visibility="public" signature="numericLiteral(InternalSyntaxToken) : LiteralTree" num="725" count="1927" type="method"/>
            <line num="726" count="1927" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringLiteral(InternalSyntaxToken) : LiteralTree" num="729" count="965" type="method"/>
            <line num="730" count="965" type="stmt"/>
            <line complexity="1" visibility="public" signature="regexpLiteral(InternalSyntaxToken) : LiteralTree" num="733" count="3" type="method"/>
            <line num="734" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionExpression(Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,Optional&lt;IdentifierTree&gt;,Optional&lt;FlowGenericParameterClauseTree&gt;,ParameterListTree,Optional&lt;FlowTypeAnnotationTree&gt;,BlockTree) : FunctionExpressionTree" num="737" count="232" type="method"/>
            <line num="742" count="232" type="stmt"/>
            <line complexity="2" visibility="public" signature="formalParameterClause1(InternalSyntaxToken,SeparatedList&lt;BindingElementTree&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : ParameterListTree" num="745" count="371" type="method"/>
            <line num="751" count="371" type="stmt"/>
            <line falsecount="368" truecount="3" num="751" type="cond"/>
            <line num="752" count="3" type="stmt"/>
            <line num="754" count="371" type="stmt"/>
            <line complexity="1" visibility="public" signature="formalParameterClause2(InternalSyntaxToken,SeparatedList&lt;BindingElementTree&gt;,InternalSyntaxToken,RestElementTree,InternalSyntaxToken) : ParameterListTree" num="757" count="9" type="method"/>
            <line num="764" count="9" type="stmt"/>
            <line num="765" count="9" type="stmt"/>
            <line num="767" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="formalParameterClause3(InternalSyntaxToken,Optional&lt;RestElementTree&gt;,InternalSyntaxToken) : ParameterListTree" num="770" count="831" type="method"/>
            <line num="771" count="831" type="stmt"/>
            <line falsecount="828" truecount="3" num="771" type="cond"/>
            <line num="772" count="3" type="stmt"/>
            <line num="774" count="828" type="stmt"/>
            <line complexity="2" visibility="public" signature="bindingRestElement(InternalSyntaxToken,BindingElementTree,Optional&lt;FlowTypeAnnotationTree&gt;) : RestElementTree" num="777" count="22" type="method"/>
            <line num="778" count="22" type="stmt"/>
            <line falsecount="21" truecount="1" num="778" type="cond"/>
            <line num="779" count="1" type="stmt"/>
            <line num="782" count="21" type="stmt"/>
            <line complexity="2" visibility="public" signature="optionalConditionalExpression(ExpressionTree,Optional&lt;ConditionalExpressionTail&gt;) : ExpressionTree" num="786" count="8269" type="method"/>
            <line num="787" count="8269" type="stmt"/>
            <line falsecount="8221" truecount="48" num="787" type="cond"/>
            <line num="788" count="48" type="stmt"/>
            <line num="789" count="48" type="stmt"/>
            <line num="791" count="8221" type="stmt"/>
            <line complexity="1" visibility="public" signature="newConditionalOr(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="795" count="8269" type="method"/>
            <line num="796" count="8269" type="stmt"/>
            <line complexity="1" visibility="public" signature="newConditionalAnd(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="799" count="8337" type="method"/>
            <line num="800" count="8337" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBitwiseOr(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="803" count="8424" type="method"/>
            <line num="804" count="8424" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBitwiseXor(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="807" count="8427" type="method"/>
            <line num="808" count="8427" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBitwiseAnd(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="811" count="8429" type="method"/>
            <line num="812" count="8429" type="stmt"/>
            <line complexity="1" visibility="public" signature="newEquality(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="815" count="8432" type="method"/>
            <line num="816" count="8432" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRelational(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="819" count="8624" type="method"/>
            <line num="820" count="8624" type="stmt"/>
            <line complexity="1" visibility="public" signature="newShift(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="823" count="8897" type="method"/>
            <line num="824" count="8897" type="stmt"/>
            <line complexity="1" visibility="public" signature="newAdditive(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="827" count="8903" type="method"/>
            <line num="828" count="8903" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMultiplicative(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="831" count="9140" type="method"/>
            <line num="832" count="9140" type="stmt"/>
            <line complexity="3" visibility="public" signature="newExponentiation(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="835" count="9219" type="method"/>
            <line num="836" count="9219" type="stmt"/>
            <line falsecount="1" truecount="9218" num="836" type="cond"/>
            <line num="837" count="9218" type="stmt"/>
            <line num="840" count="1" type="stmt"/>
            <line num="841" count="1" type="stmt"/>
            <line num="843" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="843" type="cond"/>
            <line num="844" count="1" type="stmt"/>
            <line num="851" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildBinaryExpression(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="858" count="90281" type="method"/>
            <line num="859" count="90281" type="stmt"/>
            <line falsecount="926" truecount="89355" num="859" type="cond"/>
            <line num="860" count="89355" type="stmt"/>
            <line num="863" count="926" type="stmt"/>
            <line num="865" count="926" type="stmt"/>
            <line num="866" count="974" type="stmt"/>
            <line num="872" count="926" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefixExpression(InternalSyntaxToken,ExpressionTree) : ExpressionTree" num="875" count="241" type="method"/>
            <line num="876" count="241" type="stmt"/>
            <line complexity="3" visibility="public" signature="postfixExpression(ExpressionTree,Optional&lt;Tuple&lt;InternalSyntaxToken, InternalSyntaxToken&gt;&gt;) : ExpressionTree" num="879" count="9228" type="method"/>
            <line num="880" count="9228" type="stmt"/>
            <line falsecount="182" truecount="9046" num="880" type="cond"/>
            <line num="881" count="9046" type="stmt"/>
            <line num="883" count="182" type="stmt"/>
            <line falsecount="27" truecount="155" num="883" type="cond"/>
            <line num="884" count="182" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifierReference(InternalSyntaxToken) : IdentifierTree" num="887" count="6736" type="method"/>
            <line num="888" count="6736" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifier(InternalSyntaxToken) : IdentifierTree" num="891" count="4286" type="method"/>
            <line num="892" count="4286" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrowFunction(Optional&lt;InternalSyntaxToken&gt;,Optional&lt;FlowGenericParameterClauseTree&gt;,Tree,Optional&lt;FlowTypeAnnotationTree&gt;,Tree,InternalSyntaxToken,Tree) : ArrowFunctionTree" num="895" count="110" type="method"/>
            <line num="899" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifierName(InternalSyntaxToken) : IdentifierTree" num="902" count="1451" type="method"/>
            <line num="903" count="1451" type="stmt"/>
            <line complexity="1" visibility="public" signature="superExpression(InternalSyntaxToken) : SuperTree" num="906" count="65" type="method"/>
            <line num="907" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="importExpression(InternalSyntaxToken) : ImportTree" num="910" count="3" type="method"/>
            <line num="911" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="newTarget(SyntaxToken,SyntaxToken,SyntaxToken) : NewTargetTree" num="914" count="2" type="method"/>
            <line num="915" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberExpression(ExpressionTree,Optional&lt;List&lt;ExpressionTail&gt;&gt;) : ExpressionTree" num="918" count="10531" type="method"/>
            <line num="919" count="10531" type="stmt"/>
            <line complexity="3" visibility="public" signature="parameterListWithTrailingComma(T,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, T&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;) : SeparatedList&lt;T&gt;" num="922" count="1651" type="method"/>
            <line num="927" count="1651" type="stmt"/>
            <line num="928" count="1651" type="stmt"/>
            <line num="930" count="1651" type="stmt"/>
            <line num="932" count="1651" type="stmt"/>
            <line falsecount="1353" truecount="298" num="932" type="cond"/>
            <line num="933" count="298" type="stmt"/>
            <line num="934" count="408" type="stmt"/>
            <line num="935" count="408" type="stmt"/>
            <line num="939" count="1651" type="stmt"/>
            <line falsecount="1647" truecount="4" num="939" type="cond"/>
            <line num="940" count="4" type="stmt"/>
            <line num="942" count="1651" type="stmt"/>
            <line complexity="2" visibility="public" signature="argumentClause(InternalSyntaxToken,Optional&lt;SeparatedList&lt;ExpressionTree&gt;&gt;,InternalSyntaxToken) : ArgumentListTree" num="945" count="2188" type="method"/>
            <line num="946" count="2188" type="stmt"/>
            <line falsecount="1044" truecount="1144" num="948" type="cond"/>
            <line complexity="1" visibility="public" signature="simpleCallExpression(ExpressionTree,ArgumentListTree) : CallExpressionTree" num="952" count="1915" type="method"/>
            <line num="953" count="1915" type="stmt"/>
            <line complexity="1" visibility="public" signature="callExpression(CallExpressionTree,Optional&lt;List&lt;ExpressionTail&gt;&gt;) : ExpressionTree" num="956" count="1915" type="method"/>
            <line num="957" count="1915" type="stmt"/>
            <line complexity="5" visibility="private" signature="tailedExpression(ExpressionTree,Optional&lt;List&lt;ExpressionTail&gt;&gt;) : ExpressionTree" num="960" count="12446" type="method"/>
            <line num="961" count="12446" type="stmt"/>
            <line falsecount="871" truecount="11575" num="961" type="cond"/>
            <line num="962" count="11575" type="stmt"/>
            <line num="965" count="871" type="stmt"/>
            <line num="967" count="871" type="stmt"/>
            <line num="968" count="979" type="stmt"/>
            <line falsecount="907" truecount="72" num="968" type="cond"/>
            <line num="969" count="72" type="stmt"/>
            <line num="970" count="72" type="stmt"/>
            <line num="972" count="907" type="stmt"/>
            <line falsecount="62" truecount="845" num="972" type="cond"/>
            <line num="973" count="845" type="stmt"/>
            <line num="974" count="845" type="stmt"/>
            <line num="976" count="62" type="stmt"/>
            <line falsecount="56" truecount="6" num="976" type="cond"/>
            <line num="977" count="6" type="stmt"/>
            <line num="980" count="56" type="stmt"/>
            <line num="983" count="871" type="stmt"/>
            <line complexity="1" visibility="public" signature="parenthesisedExpression(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken) : ParenthesisedExpressionTree" num="986" count="102" type="method"/>
            <line num="987" count="102" type="stmt"/>
            <line complexity="2" visibility="public" signature="classExpression(Optional&lt;List&lt;DecoratorTree&gt;&gt;,InternalSyntaxToken,Optional&lt;IdentifierTree&gt;,Optional&lt;FlowGenericParameterClauseTree&gt;,Optional&lt;ExtendsClauseTree&gt;,Optional&lt;FlowImplementsClauseTree&gt;,InternalSyntaxToken,Optional&lt;List&lt;Tree&gt;&gt;,InternalSyntaxToken) : ClassTree" num="990" count="21" type="method"/>
            <line num="996" count="21" type="stmt"/>
            <line num="998" count="21" type="stmt"/>
            <line falsecount="15" truecount="6" num="998" type="cond"/>
            <line num="999" count="6" type="stmt"/>
            <line num="1000" count="14" type="stmt"/>
            <line num="1004" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="computedPropertyName(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken) : ComputedPropertyNameTree" num="1015" count="7" type="method"/>
            <line num="1016" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="pairProperty(Tree,InternalSyntaxToken,ExpressionTree) : PairPropertyTree" num="1019" count="152" type="method"/>
            <line num="1020" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="spreadElement(InternalSyntaxToken,ExpressionTree) : SpreadElementTree" num="1023" count="20" type="method"/>
            <line num="1024" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="properties(Tree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, Tree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;) : SeparatedList&lt;Tree&gt;" num="1027" count="144" type="method"/>
            <line num="1028" count="144" type="stmt"/>
            <line num="1029" count="144" type="stmt"/>
            <line num="1031" count="144" type="stmt"/>
            <line num="1033" count="144" type="stmt"/>
            <line falsecount="90" truecount="54" num="1033" type="cond"/>
            <line num="1034" count="54" type="stmt"/>
            <line num="1035" count="86" type="stmt"/>
            <line num="1037" count="86" type="stmt"/>
            <line num="1041" count="144" type="stmt"/>
            <line falsecount="129" truecount="15" num="1041" type="cond"/>
            <line num="1042" count="15" type="stmt"/>
            <line num="1045" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectLiteral(InternalSyntaxToken,Optional&lt;SeparatedList&lt;Tree&gt;&gt;,InternalSyntaxToken) : ObjectLiteralTree" num="1048" count="162" type="method"/>
            <line num="1049" count="162" type="stmt"/>
            <line complexity="2" visibility="public" signature="newExpressionWithArgument(InternalSyntaxToken,ExpressionTree,ArgumentListTree) : NewExpressionTree" num="1052" count="206" type="method"/>
            <line num="1053" count="206" type="stmt"/>
            <line falsecount="203" truecount="3" num="1054" type="cond"/>
            <line complexity="2" visibility="public" signature="newExpression(InternalSyntaxToken,ExpressionTree) : ExpressionTree" num="1060" count="90" type="method"/>
            <line num="1061" count="90" type="stmt"/>
            <line falsecount="89" truecount="1" num="1062" type="cond"/>
            <line complexity="2" visibility="public" signature="noSubstitutionTemplate(InternalSyntaxToken,Optional&lt;TemplateCharactersTree&gt;,InternalSyntaxToken) : TemplateLiteralTree" num="1067" count="18" type="method"/>
            <line num="1072" count="18" type="stmt"/>
            <line falsecount="5" truecount="13" num="1074" type="cond"/>
            <line complexity="1" visibility="public" signature="templateExpression(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken) : TemplateExpressionTree" num="1078" count="38" type="method"/>
            <line num="1082" count="38" type="stmt"/>
            <line complexity="4" visibility="public" signature="substitutionTemplate(InternalSyntaxToken,Optional&lt;TemplateCharactersTree&gt;,Optional&lt;List&lt;Tuple&lt;TemplateExpressionTree, Optional&lt;TemplateCharactersTree&gt;&gt;&gt;&gt;,InternalSyntaxToken) : TemplateLiteralTree" num="1085" count="31" type="method"/>
            <line num="1089" count="31" type="stmt"/>
            <line num="1091" count="31" type="stmt"/>
            <line falsecount="2" truecount="29" num="1091" type="cond"/>
            <line num="1092" count="29" type="stmt"/>
            <line num="1095" count="31" type="stmt"/>
            <line falsecount="0" truecount="31" num="1095" type="cond"/>
            <line num="1096" count="31" type="stmt"/>
            <line num="1097" count="38" type="stmt"/>
            <line num="1098" count="38" type="stmt"/>
            <line falsecount="24" truecount="14" num="1098" type="cond"/>
            <line num="1099" count="14" type="stmt"/>
            <line num="1104" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="templateCharacters(List&lt;InternalSyntaxToken&gt;) : TemplateCharactersTree" num="1107" count="56" type="method"/>
            <line num="1108" count="56" type="stmt"/>
            <line num="1109" count="56" type="stmt"/>
            <line num="1110" count="291" type="stmt"/>
            <line num="1112" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="thisExpression(InternalSyntaxToken) : IdentifierTree" num="1115" count="67" type="method"/>
            <line num="1116" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="labelToken(Tree,InternalSyntaxToken) : InternalSyntaxToken" num="1119" count="15" type="method"/>
            <line num="1120" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignmentExpression(ExpressionTree,InternalSyntaxToken,ExpressionTree) : ExpressionTree" num="1123" count="918" type="method"/>
            <line num="1124" count="918" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignmentWithArrayDestructuring(ExpressionTree,InternalSyntaxToken,ExpressionTree) : ExpressionTree" num="1127" count="24" type="method"/>
            <line num="1128" count="24" type="stmt"/>
            <line complexity="1" visibility="private" signature="commonAssignmentExpression(ExpressionTree,InternalSyntaxToken,ExpressionTree) : ExpressionTree" num="1131" count="942" type="method"/>
            <line num="1132" count="942" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression(ExpressionTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;&gt;) : ExpressionTree" num="1135" count="4399" type="method"/>
            <line num="1136" count="4399" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressionNoLineBreak(Tree,ExpressionTree) : ExpressionTree" num="1139" count="226" type="method"/>
            <line num="1140" count="226" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromClause(InternalSyntaxToken,LiteralTree) : FromClauseTree" num="1143" count="170" type="method"/>
            <line num="1144" count="170" type="stmt"/>
            <line complexity="2" visibility="public" signature="defaultExportDeclaration(Optional&lt;List&lt;DecoratorTree&gt;&gt;,InternalSyntaxToken,InternalSyntaxToken,Object) : DefaultExportDeclarationTree" num="1147" count="12" type="method"/>
            <line num="1150" count="12" type="stmt"/>
            <line num="1151" count="12" type="stmt"/>
            <line num="1152" count="12" type="stmt"/>
            <line falsecount="7" truecount="5" num="1152" type="cond"/>
            <line num="1153" count="5" type="stmt"/>
            <line num="1154" count="5" type="stmt"/>
            <line num="1156" count="7" type="stmt"/>
            <line num="1159" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="namedExportDeclaration(Optional&lt;List&lt;DecoratorTree&gt;&gt;,InternalSyntaxToken,Tree) : NamedExportDeclarationTree" num="1167" count="37" type="method"/>
            <line num="1168" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportSpecifier(IdentifierTree,InternalSyntaxToken,IdentifierTree) : SpecifierTree" num="1171" count="5" type="method"/>
            <line num="1172" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportSpecifier(IdentifierTree) : SpecifierTree" num="1175" count="13" type="method"/>
            <line num="1176" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="exportListBody(SpecifierTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, SpecifierTree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;) : SeparatedList&lt;SpecifierTree&gt;" num="1179" count="11" type="method"/>
            <line num="1183" count="11" type="stmt"/>
            <line num="1184" count="11" type="stmt"/>
            <line num="1186" count="11" type="stmt"/>
            <line num="1188" count="11" type="stmt"/>
            <line falsecount="7" truecount="4" num="1188" type="cond"/>
            <line num="1189" count="4" type="stmt"/>
            <line num="1190" count="5" type="stmt"/>
            <line num="1191" count="5" type="stmt"/>
            <line num="1195" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="1195" type="cond"/>
            <line num="1196" count="1" type="stmt"/>
            <line num="1199" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportList(InternalSyntaxToken,Optional&lt;SeparatedList&lt;SpecifierTree&gt;&gt;,InternalSyntaxToken) : NamedImportExportClauseTree" num="1202" count="20" type="method"/>
            <line num="1207" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="namespaceExportDeclaration(InternalSyntaxToken,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,Optional&lt;Tuple&lt;InternalSyntaxToken, IdentifierTree&gt;&gt;,FromClauseTree,Tree) : NameSpaceExportDeclarationTree" num="1213" count="7" type="method"/>
            <line num="1217" count="7" type="stmt"/>
            <line num="1218" count="7" type="stmt"/>
            <line num="1219" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="1219" type="cond"/>
            <line num="1220" count="2" type="stmt"/>
            <line num="1221" count="2" type="stmt"/>
            <line num="1223" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportClause(Optional&lt;InternalSyntaxToken&gt;,NamedImportExportClauseTree,Optional&lt;FromClauseTree&gt;,Tree) : ExportClauseTree" num="1230" count="13" type="method"/>
            <line num="1234" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportDefaultBinding(IdentifierTree,FromClauseTree,Tree) : ExportDefaultBinding" num="1237" count="4" type="method"/>
            <line num="1238" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportDefaultBindingWithNameSpaceExport(IdentifierTree,InternalSyntaxToken,InternalSyntaxToken,InternalSyntaxToken,IdentifierTree,FromClauseTree,Tree) : ExportDefaultBindingWithNameSpaceExport" num="1241" count="4" type="method"/>
            <line num="1245" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportDefaultBindingWithExportList(IdentifierTree,InternalSyntaxToken,NamedImportExportClauseTree,FromClauseTree,Tree) : ExportDefaultBindingWithExportList" num="1255" count="3" type="method"/>
            <line num="1259" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="importModuleDeclaration(InternalSyntaxToken,LiteralTree,Tree) : ImportModuleDeclarationTree" num="1267" count="4" type="method"/>
            <line num="1268" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="importSpecifier(IdentifierTree,InternalSyntaxToken,IdentifierTree) : SpecifierTree" num="1271" count="22" type="method"/>
            <line num="1272" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="importSpecifier(IdentifierTree) : SpecifierTree" num="1275" count="93" type="method"/>
            <line num="1276" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="importSpecifier(InternalSyntaxToken,IdentifierTree,InternalSyntaxToken,IdentifierTree) : SpecifierTree" num="1279" count="2" type="method"/>
            <line num="1280" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="importSpecifier(InternalSyntaxToken,IdentifierTree) : SpecifierTree" num="1283" count="4" type="method"/>
            <line num="1284" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="newImportSpecifierList(SpecifierTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, SpecifierTree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;) : SeparatedList&lt;SpecifierTree&gt;" num="1287" count="84" type="method"/>
            <line num="1291" count="84" type="stmt"/>
            <line num="1292" count="84" type="stmt"/>
            <line num="1294" count="84" type="stmt"/>
            <line num="1296" count="84" type="stmt"/>
            <line falsecount="53" truecount="31" num="1296" type="cond"/>
            <line num="1297" count="31" type="stmt"/>
            <line num="1298" count="35" type="stmt"/>
            <line num="1299" count="35" type="stmt"/>
            <line num="1303" count="84" type="stmt"/>
            <line falsecount="83" truecount="1" num="1303" type="cond"/>
            <line num="1304" count="1" type="stmt"/>
            <line num="1307" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="namedImports(InternalSyntaxToken,Optional&lt;SeparatedList&lt;SpecifierTree&gt;&gt;,InternalSyntaxToken) : NamedImportExportClauseTree" num="1310" count="86" type="method"/>
            <line num="1315" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="nameSpaceImport(InternalSyntaxToken,InternalSyntaxToken,IdentifierTree) : NameSpaceImportTree" num="1321" count="40" type="method"/>
            <line num="1322" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="importClauseWithTwoParts(IdentifierTree,InternalSyntaxToken,ImportSubClauseTree) : ImportClauseTree" num="1325" count="20" type="method"/>
            <line num="1326" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="importClause(ImportSubClauseTree) : ImportClauseTree" num="1329" count="130" type="method"/>
            <line num="1330" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="importDeclaration(InternalSyntaxToken,ImportClauseTree,FromClauseTree,Tree) : ImportDeclarationTree" num="1333" count="133" type="method"/>
            <line num="1334" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="importDeclaration(InternalSyntaxToken,InternalSyntaxToken,ImportClauseTree,FromClauseTree,Tree) : ImportDeclarationTree" num="1337" count="12" type="method"/>
            <line num="1344" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="module(List&lt;Tree&gt;) : ModuleTree" num="1347" count="830" type="method"/>
            <line num="1348" count="830" type="stmt"/>
            <line complexity="2" visibility="public" signature="classDeclaration(Optional&lt;List&lt;DecoratorTree&gt;&gt;,InternalSyntaxToken,IdentifierTree,Optional&lt;FlowGenericParameterClauseTree&gt;,Optional&lt;ExtendsClauseTree&gt;,Optional&lt;FlowImplementsClauseTree&gt;,InternalSyntaxToken,Optional&lt;List&lt;Tree&gt;&gt;,InternalSyntaxToken) : ClassTree" num="1353" count="155" type="method"/>
            <line num="1360" count="155" type="stmt"/>
            <line num="1362" count="155" type="stmt"/>
            <line falsecount="38" truecount="117" num="1362" type="cond"/>
            <line num="1363" count="117" type="stmt"/>
            <line num="1364" count="234" type="stmt"/>
            <line num="1367" count="155" type="stmt"/>
            <line complexity="1" visibility="public" signature="generatorMethod(Optional&lt;List&lt;DecoratorTree&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,Tree,Optional&lt;FlowGenericParameterClauseTree&gt;,ParameterListTree,Optional&lt;FlowTypeAnnotationTree&gt;,BlockTree) : MethodDeclarationTree" num="1377" count="32" type="method"/>
            <line num="1382" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="method(Optional&lt;List&lt;DecoratorTree&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,Optional&lt;InternalSyntaxToken&gt;,Tree,Optional&lt;FlowGenericParameterClauseTree&gt;,ParameterListTree,Optional&lt;FlowTypeAnnotationTree&gt;,BlockTree) : MethodDeclarationTree" num="1385" count="144" type="method"/>
            <line num="1390" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessor(Optional&lt;List&lt;DecoratorTree&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,Tree,Optional&lt;FlowGenericParameterClauseTree&gt;,ParameterListTree,Optional&lt;FlowTypeAnnotationTree&gt;,BlockTree) : AccessorMethodDeclarationTree" num="1393" count="73" type="method"/>
            <line num="1399" count="73" type="stmt"/>
            <line complexity="2" visibility="public" signature="functionAndGeneratorDeclaration(Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,Optional&lt;InternalSyntaxToken&gt;,IdentifierTree,Optional&lt;FlowGenericParameterClauseTree&gt;,ParameterListTree,Optional&lt;FlowTypeAnnotationTree&gt;,BlockTree) : FunctionDeclarationTree" num="1402" count="620" type="method"/>
            <line num="1407" count="620" type="stmt"/>
            <line falsecount="584" truecount="36" num="1407" type="cond"/>
            <line complexity="1" visibility="public" signature="initializedBindingElement(BindingElementTree,InternalSyntaxToken,ExpressionTree) : InitializedBindingElementTree" num="1414" count="1825" type="method"/>
            <line num="1415" count="1825" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingProperty(Tree,InternalSyntaxToken,BindingElementTree) : BindingPropertyTree" num="1418" count="28" type="method"/>
            <line num="1419" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="restObjectBindingElement(InternalSyntaxToken,BindingElementTree) : RestElementTree" num="1422" count="8" type="method"/>
            <line num="1423" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="bindingPropertyList(BindingElementTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, BindingElementTree&gt;&gt;&gt;) : SeparatedList&lt;BindingElementTree&gt;" num="1426" count="40" type="method"/>
            <line num="1430" count="40" type="stmt"/>
            <line num="1431" count="40" type="stmt"/>
            <line num="1433" count="40" type="stmt"/>
            <line num="1435" count="40" type="stmt"/>
            <line falsecount="19" truecount="21" num="1435" type="cond"/>
            <line num="1436" count="21" type="stmt"/>
            <line num="1438" count="26" type="stmt"/>
            <line num="1441" count="26" type="stmt"/>
            <line num="1445" count="40" type="stmt"/>
            <line complexity="4" visibility="public" signature="objectBindingPattern(InternalSyntaxToken,Optional&lt;SeparatedList&lt;BindingElementTree&gt;&gt;,Optional&lt;Tuple&lt;InternalSyntaxToken, RestElementTree&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : ObjectBindingPatternTree" num="1448" count="43" type="method"/>
            <line num="1456" count="43" type="stmt"/>
            <line num="1458" count="43" type="stmt"/>
            <line falsecount="3" truecount="40" num="1458" type="cond"/>
            <line num="1459" count="40" type="stmt"/>
            <line num="1461" count="3" type="stmt"/>
            <line num="1464" count="43" type="stmt"/>
            <line falsecount="38" truecount="5" num="1464" type="cond"/>
            <line num="1465" count="5" type="stmt"/>
            <line num="1466" count="5" type="stmt"/>
            <line num="1468" count="43" type="stmt"/>
            <line falsecount="40" truecount="3" num="1468" type="cond"/>
            <line num="1469" count="3" type="stmt"/>
            <line num="1472" count="43" type="stmt"/>
            <line complexity="2" visibility="public" signature="objectBindingPattern2(InternalSyntaxToken,RestElementTree,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : ObjectBindingPatternTree" num="1478" count="3" type="method"/>
            <line num="1481" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="1481" type="cond"/>
            <line num="1483" count="3" type="stmt"/>
            <line num="1484" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayBindingPattern(InternalSyntaxToken,Optional&lt;BindingElementTree&gt;,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, Optional&lt;BindingElementTree&gt;&gt;&gt;&gt;,Optional&lt;BindingElementTree&gt;,InternalSyntaxToken) : ArrayBindingPatternTree" num="1487" count="55" type="method"/>
            <line num="1494" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayAssignmentPattern(InternalSyntaxToken,Optional&lt;Tree&gt;,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, Optional&lt;Tree&gt;&gt;&gt;&gt;,Optional&lt;Tree&gt;,InternalSyntaxToken) : ArrayAssignmentPatternTree" num="1500" count="35" type="method"/>
            <line num="1507" count="35" type="stmt"/>
            <line complexity="6" visibility="private" signature="getSeparatedListOfOptional(Optional&lt;T&gt;,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, Optional&lt;T&gt;&gt;&gt;&gt;,Optional&lt;T&gt;) : SeparatedList&lt;java.util.Optional&lt;T&gt;&gt;" num="1513" count="90" type="method"/>
            <line num="1519" count="90" type="stmt"/>
            <line num="1520" count="90" type="stmt"/>
            <line num="1522" count="90" type="stmt"/>
            <line num="1524" count="90" type="stmt"/>
            <line falsecount="20" truecount="70" num="1524" type="cond"/>
            <line num="1525" count="70" type="stmt"/>
            <line num="1526" count="70" type="stmt"/>
            <line num="1529" count="90" type="stmt"/>
            <line falsecount="23" truecount="67" num="1529" type="cond"/>
            <line num="1530" count="67" type="stmt"/>
            <line num="1531" count="67" type="stmt"/>
            <line num="1532" count="94" type="stmt"/>
            <line falsecount="72" truecount="22" num="1532" type="cond"/>
            <line num="1533" count="22" type="stmt"/>
            <line num="1536" count="94" type="stmt"/>
            <line num="1537" count="94" type="stmt"/>
            <line num="1539" count="94" type="stmt"/>
            <line falsecount="39" truecount="55" num="1539" type="cond"/>
            <line num="1540" count="55" type="stmt"/>
            <line num="1541" count="55" type="stmt"/>
            <line num="1543" count="39" type="stmt"/>
            <line num="1548" count="90" type="stmt"/>
            <line falsecount="73" truecount="17" num="1548" type="cond"/>
            <line num="1549" count="17" type="stmt"/>
            <line num="1552" count="90" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertOptional(Optional&lt;T&gt;) : java.util.Optional&lt;T&gt;" num="1555" count="142" type="method"/>
            <line num="1556" count="142" type="stmt"/>
            <line falsecount="0" truecount="142" num="1556" type="cond"/>
            <line num="1557" count="142" type="stmt"/>
            <line num="1559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignmentNoCurly(Tree,ExpressionTree) : ExpressionTree" num="1563" count="52" type="method"/>
            <line num="1564" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipLookahead(Tree,ExpressionTree) : ExpressionTree" num="1567" count="115" type="method"/>
            <line num="1568" count="115" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipLookaheadAfter(ExpressionTree,Tree) : ExpressionTree" num="1571" count="0" type="method"/>
            <line num="1572" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="script(Optional&lt;InternalSyntaxToken&gt;,Optional&lt;ModuleTree&gt;,Tree,InternalSyntaxToken) : ScriptTree" num="1579" count="797" type="method"/>
            <line num="1580" count="797" type="stmt"/>
            <line falsecount="794" truecount="3" num="1581" type="cond"/>
            <line falsecount="7" truecount="790" num="1582" type="cond"/>
            <line complexity="1" visibility="public" signature="defaultExportExpression(Tree,ExpressionTree) : ExpressionTree" num="1586" count="5" type="method"/>
            <line num="1587" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxSelfClosingElement(InternalSyntaxToken,JsxElementNameTree,Optional&lt;List&lt;JsxAttributeTree&gt;&gt;,InternalSyntaxToken,InternalSyntaxToken) : JsxSelfClosingElementTree" num="1592" count="23" type="method"/>
            <line num="1598" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxStandardElement(JsxOpeningElementTree,Optional&lt;List&lt;JsxChildTree&gt;&gt;,JsxClosingElementTree) : JsxStandardElementTree" num="1601" count="15" type="method"/>
            <line num="1606" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxShortFragmentElement(JsxEmptyOpeningElementTree,Optional&lt;List&lt;JsxChildTree&gt;&gt;,JsxEmptyClosingElementTree) : JsxShortFragmentElementTree" num="1609" count="7" type="method"/>
            <line num="1614" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxOpeningElement(InternalSyntaxToken,JsxElementNameTree,Optional&lt;List&lt;JsxAttributeTree&gt;&gt;,InternalSyntaxToken) : JsxOpeningElementTree" num="1617" count="18" type="method"/>
            <line num="1623" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxClosingElement(InternalSyntaxToken,InternalSyntaxToken,JsxElementNameTree,InternalSyntaxToken) : JsxClosingElementTree" num="1630" count="16" type="method"/>
            <line num="1631" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxEmptyOpeningElement(InternalSyntaxToken,InternalSyntaxToken) : JsxEmptyOpeningElementTree" num="1634" count="7" type="method"/>
            <line num="1635" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxEmptyClosingElement(InternalSyntaxToken,InternalSyntaxToken,InternalSyntaxToken) : JsxEmptyClosingElementTree" num="1638" count="7" type="method"/>
            <line num="1639" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxJavaScriptExpression(InternalSyntaxToken,Optional&lt;ExpressionTree&gt;,InternalSyntaxToken) : JsxJavaScriptExpressionTree" num="1642" count="2" type="method"/>
            <line num="1643" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxJavaScriptExpression(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken) : JsxJavaScriptExpressionTree" num="1646" count="4" type="method"/>
            <line num="1647" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxStandardAttribute(JsxIdentifierTree,InternalSyntaxToken,JsxAttributeValueTree) : JsxStandardAttributeTree" num="1650" count="15" type="method"/>
            <line num="1651" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxSpreadAttribute(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken) : JsxSpreadAttributeTree" num="1654" count="4" type="method"/>
            <line num="1660" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxTextTree(InternalSyntaxToken) : JsxTextTree" num="1663" count="15" type="method"/>
            <line num="1664" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxIdentifier(InternalSyntaxToken) : JsxIdentifierTree" num="1667" count="30" type="method"/>
            <line num="1668" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxHtmlTag(InternalSyntaxToken) : JsxIdentifierTree" num="1671" count="45" type="method"/>
            <line num="1672" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsxMemberExpression(IdentifierTree,List&lt;Tuple&lt;InternalSyntaxToken, IdentifierTree&gt;&gt;) : ExpressionTree" num="1675" count="8" type="method"/>
            <line num="1676" count="8" type="stmt"/>
            <line num="1677" count="8" type="stmt"/>
            <line num="1678" count="9" type="stmt"/>
            <line num="1681" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="fieldDeclaration(Optional&lt;List&lt;DecoratorTree&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,Tree,Optional&lt;FlowTypeAnnotationTree&gt;,Optional&lt;Tuple&lt;InternalSyntaxToken, ExpressionTree&gt;&gt;,Tree) : FieldDeclarationTree" num="1684" count="61" type="method"/>
            <line num="1689" count="61" type="stmt"/>
            <line falsecount="40" truecount="21" num="1689" type="cond"/>
            <line num="1690" count="21" type="stmt"/>
            <line num="1700" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorator(InternalSyntaxToken,IdentifierTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, IdentifierTree&gt;&gt;&gt;,Optional&lt;ArgumentListTree&gt;) : DecoratorTree" num="1703" count="46" type="method"/>
            <line num="1707" count="46" type="stmt"/>
            <line num="1708" count="46" type="stmt"/>
            <line num="1709" count="46" type="stmt"/>
            <line num="1711" count="46" type="stmt"/>
            <line num="1712" count="7" type="stmt"/>
            <line num="1713" count="7" type="stmt"/>
            <line num="1716" count="46" type="stmt"/>
            <line num="1718" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignmentPatternRestElement(InternalSyntaxToken,ExpressionTree) : AssignmentPatternRestElementTree" num="1721" count="8" type="method"/>
            <line num="1722" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializedAssignmentPatternElement(ExpressionTree,InternalSyntaxToken,ExpressionTree) : InitializedAssignmentPatternElementTree" num="1725" count="10" type="method"/>
            <line num="1726" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectAssignmentPatternPairElement(IdentifierTree,InternalSyntaxToken,Tree) : ObjectAssignmentPatternPairElementTree" num="1729" count="15" type="method"/>
            <line num="1730" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyObjectAssignmentPattern(InternalSyntaxToken,InternalSyntaxToken) : ObjectAssignmentPatternTree" num="1733" count="2" type="method"/>
            <line num="1734" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="objectAssignmentPattern(InternalSyntaxToken,Tree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, Tree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : ObjectAssignmentPatternTree" num="1737" count="24" type="method"/>
            <line num="1744" count="24" type="stmt"/>
            <line num="1745" count="24" type="stmt"/>
            <line num="1747" count="24" type="stmt"/>
            <line num="1749" count="24" type="stmt"/>
            <line num="1750" count="15" type="stmt"/>
            <line num="1751" count="15" type="stmt"/>
            <line num="1754" count="24" type="stmt"/>
            <line falsecount="22" truecount="2" num="1754" type="cond"/>
            <line num="1755" count="2" type="stmt"/>
            <line num="1758" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="yieldExpression(InternalSyntaxToken,Optional&lt;Tuple&lt;InternalSyntaxToken, Tuple&lt;Optional&lt;InternalSyntaxToken&gt;, ExpressionTree&gt;&gt;&gt;) : YieldExpressionTree" num="1761" count="21" type="method"/>
            <line num="1762" count="21" type="stmt"/>
            <line num="1763" count="21" type="stmt"/>
            <line num="1765" count="21" type="stmt"/>
            <line falsecount="9" truecount="12" num="1765" type="cond"/>
            <line num="1766" count="12" type="stmt"/>
            <line num="1767" count="12" type="stmt"/>
            <line num="1769" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="conditionalExpressionTail(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,ExpressionTree) : ConditionalExpressionTail" num="1772" count="48" type="method"/>
            <line num="1773" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBracketAccess(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken) : BracketAccessTail" num="1776" count="72" type="method"/>
            <line num="1777" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentClauseTail(ArgumentListTree) : ArgumentsTail" num="1780" count="56" type="method"/>
            <line num="1781" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="dotAccess(InternalSyntaxToken,IdentifierTree) : DotAccessTail" num="1784" count="845" type="method"/>
            <line num="1785" count="845" type="stmt"/>
            <line complexity="1" visibility="public" signature="templateLiteralTailForMember(TemplateLiteralTree) : TemplateLiteralTail" num="1788" count="5" type="method"/>
            <line num="1789" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="templateLiteralTailForCall(TemplateLiteralTree) : TemplateLiteralTail" num="1792" count="1" type="method"/>
            <line num="1793" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendsClause(InternalSyntaxToken,Tree) : ExtendsClauseTree" num="1796" count="48" type="method"/>
            <line num="1797" count="48" type="stmt"/>
            <line complexity="3" visibility="public" signature="vueScript(Optional&lt;List&lt;VueElement&gt;&gt;,Tree,InternalSyntaxToken) : ScriptTree" num="1800" count="55" type="method"/>
            <line num="1801" count="55" type="stmt"/>
            <line falsecount="0" truecount="55" num="1801" type="cond"/>
            <line num="1802" count="55" type="stmt"/>
            <line num="1803" count="88" type="stmt"/>
            <line falsecount="44" truecount="44" num="1803" type="cond"/>
            <line num="1804" count="44" type="stmt"/>
            <line num="1805" count="44" type="stmt"/>
            <line num="1809" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="vueElement(InternalSyntaxToken) : VueElement" num="1812" count="53" type="method"/>
            <line num="1813" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="scriptVueElement(VueScriptTag,Optional&lt;InternalSyntaxToken&gt;,Optional&lt;ModuleTree&gt;,InternalSyntaxToken) : ScriptVueElement" num="1816" count="44" type="method"/>
            <line num="1822" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowSimpleType(IdentifierTree) : FlowSimpleTypeTree" num="1825" count="257" type="method"/>
            <line num="1826" count="257" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowSimpleType(SyntaxToken) : FlowSimpleTypeTree" num="1829" count="16" type="method"/>
            <line num="1830" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypeAnnotation(InternalSyntaxToken,FlowTypeTree) : FlowTypeAnnotationTree" num="1833" count="241" type="method"/>
            <line num="1834" count="241" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypedBindingElement(BindingElementTree,FlowTypeAnnotationTree) : FlowTypedBindingElementTree" num="1837" count="127" type="method"/>
            <line num="1838" count="127" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowOptionalType(InternalSyntaxToken,FlowTypeTree) : FlowOptionalTypeTree" num="1841" count="13" type="method"/>
            <line num="1842" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowLiteralType(Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : FlowLiteralTypeTree" num="1845" count="4" type="method"/>
            <line num="1846" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowLiteralType(InternalSyntaxToken) : FlowLiteralTypeTree" num="1849" count="1" type="method"/>
            <line num="1850" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionType(Optional&lt;FlowGenericParameterClauseTree&gt;,FlowFunctionTypeParameterClauseTree,InternalSyntaxToken,FlowTypeTree) : FlowFunctionTypeTree" num="1853" count="26" type="method"/>
            <line num="1859" count="26" type="stmt"/>
            <line complexity="2" visibility="public" signature="flowFunctionTypeParameterClause(InternalSyntaxToken,SeparatedList&lt;FlowFunctionTypeParameterTree&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : FlowFunctionTypeParameterClauseTree" num="1862" count="30" type="method"/>
            <line num="1868" count="30" type="stmt"/>
            <line num="1869" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="1869" type="cond"/>
            <line num="1870" count="0" type="stmt"/>
            <line num="1871" count="0" type="stmt"/>
            <line num="1872" count="0" type="stmt"/>
            <line num="1875" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionTypeParameterClause(InternalSyntaxToken,SeparatedList&lt;FlowFunctionTypeParameterTree&gt;,InternalSyntaxToken,FlowFunctionTypeParameterTree,InternalSyntaxToken) : FlowFunctionTypeParameterClauseTree" num="1878" count="1" type="method"/>
            <line num="1885" count="1" type="stmt"/>
            <line num="1886" count="1" type="stmt"/>
            <line num="1887" count="1" type="stmt"/>
            <line num="1888" count="1" type="stmt"/>
            <line num="1890" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="flowFunctionTypeParameterClause(InternalSyntaxToken,Optional&lt;FlowFunctionTypeParameterTree&gt;,InternalSyntaxToken) : FlowFunctionTypeParameterClauseTree" num="1893" count="14" type="method"/>
            <line num="1898" count="14" type="stmt"/>
            <line num="1899" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="1899" type="cond"/>
            <line num="1900" count="2" type="stmt"/>
            <line num="1902" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionTypeSingleParameterClause(FlowTypeTree) : FlowFunctionTypeParameterClauseTree" num="1905" count="5" type="method"/>
            <line num="1906" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterList(T,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, T&gt;&gt;&gt;) : SeparatedList&lt;T&gt;" num="1909" count="431" type="method"/>
            <line num="1913" count="431" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionTypeParameter(IdentifierTree,Optional&lt;SyntaxToken&gt;,FlowTypeAnnotationTree) : FlowFunctionTypeParameterTree" num="1916" count="30" type="method"/>
            <line num="1917" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionTypeParameter(FlowTypeTree) : FlowFunctionTypeParameterTree" num="1920" count="15" type="method"/>
            <line num="1921" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionTypeRestParameter(InternalSyntaxToken,FlowFunctionTypeParameterTree) : FlowFunctionTypeParameterTree" num="1924" count="3" type="method"/>
            <line num="1925" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowObjectType(SyntaxToken,Optional&lt;SeparatedList&lt;Tree&gt;&gt;,SyntaxToken) : FlowObjectTypeTree" num="1928" count="7" type="method"/>
            <line num="1929" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowStrictObjectType(SyntaxToken,SyntaxToken,Optional&lt;SeparatedList&lt;Tree&gt;&gt;,SyntaxToken,SyntaxToken) : FlowObjectTypeTree" num="1932" count="1" type="method"/>
            <line num="1935" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowPropertyDefinition(InternalSyntaxToken,Optional&lt;InternalSyntaxToken&gt;,FlowPropertyDefinitionKeyTree,FlowTypeAnnotationTree) : FlowPropertyDefinitionTree" num="1938" count="4" type="method"/>
            <line num="1939" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowPropertyDefinition(Optional&lt;InternalSyntaxToken&gt;,FlowPropertyDefinitionKeyTree,FlowTypeAnnotationTree) : FlowPropertyDefinitionTree" num="1942" count="30" type="method"/>
            <line num="1943" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowSimplePropertyDefinitionKeyTree(SyntaxToken,Optional&lt;SyntaxToken&gt;) : FlowSimplePropertyDefinitionKeyTree" num="1946" count="15" type="method"/>
            <line num="1947" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="flowIndexerPropertyDefinitionKey(InternalSyntaxToken,Optional&lt;Tuple&lt;IdentifierTree, InternalSyntaxToken&gt;&gt;,FlowTypeTree,InternalSyntaxToken) : FlowIndexerPropertyDefinitionKeyTree" num="1950" count="5" type="method"/>
            <line num="1954" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="1954" type="cond"/>
            <line num="1955" count="3" type="stmt"/>
            <line num="1957" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowOptionalBindingElement(BindingElementTree,InternalSyntaxToken) : FlowOptionalBindingElementTree" num="1961" count="5" type="method"/>
            <line num="1962" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypeAliasStatement(Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken,IdentifierTree,Optional&lt;FlowGenericParameterClauseTree&gt;,Optional&lt;FlowTypeAnnotationTree&gt;,InternalSyntaxToken,FlowTypeTree,Tree) : FlowTypeAliasStatementTree" num="1965" count="15" type="method"/>
            <line num="1970" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowInterfaceDeclaration(InternalSyntaxToken,IdentifierTree,Optional&lt;FlowGenericParameterClauseTree&gt;,Optional&lt;FlowImplementsClauseTree&gt;,InternalSyntaxToken,Optional&lt;SeparatedList&lt;Tree&gt;&gt;,InternalSyntaxToken) : FlowInterfaceDeclarationTree" num="1980" count="21" type="method"/>
            <line num="1989" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowModule(InternalSyntaxToken,InternalSyntaxToken,InternalSyntaxToken,Optional&lt;List&lt;FlowDeclareTree&gt;&gt;,InternalSyntaxToken) : FlowModuleTree" num="1999" count="3" type="method"/>
            <line num="2002" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="flowDeclare(InternalSyntaxToken,Tree,Optional&lt;Tree&gt;) : FlowDeclareTree" num="2005" count="15" type="method"/>
            <line num="2006" count="15" type="stmt"/>
            <line num="2007" count="15" type="stmt"/>
            <line falsecount="1" truecount="14" num="2007" type="cond"/>
            <line num="2008" count="14" type="stmt"/>
            <line num="2010" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowModuleExports(InternalSyntaxToken,InternalSyntaxToken,InternalSyntaxToken,FlowTypeAnnotationTree) : FlowModuleExportsTree" num="2013" count="2" type="method"/>
            <line num="2016" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowFunctionSignature(InternalSyntaxToken,IdentifierTree,Optional&lt;FlowGenericParameterClauseTree&gt;,FlowFunctionTypeParameterClauseTree,FlowTypeAnnotationTree) : FlowFunctionSignatureTree" num="2019" count="5" type="method"/>
            <line num="2024" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowExportDefaultType(InternalSyntaxToken,InternalSyntaxToken,FlowTypeTree,Tree) : DefaultExportDeclarationTree" num="2027" count="1" type="method"/>
            <line num="2028" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowOpaqueType(InternalSyntaxToken,InternalSyntaxToken,IdentifierTree) : FlowOpaqueTypeTree" num="2031" count="1" type="method"/>
            <line num="2032" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowArrayTypeShorthand(FlowTypeTree,InternalSyntaxToken,InternalSyntaxToken) : FlowArrayTypeShorthandTree" num="2035" count="0" type="method"/>
            <line num="2036" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowArrayTypeWithKeyword(InternalSyntaxToken,InternalSyntaxToken,FlowTypeTree,InternalSyntaxToken) : FlowArrayTypeWithKeywordTree" num="2039" count="2" type="method"/>
            <line num="2040" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowArrayTypeShorthand(FlowTypeTree,List&lt;Tuple&lt;InternalSyntaxToken, InternalSyntaxToken&gt;&gt;) : FlowArrayTypeShorthandTree" num="2043" count="4" type="method"/>
            <line num="2044" count="4" type="stmt"/>
            <line num="2045" count="4" type="stmt"/>
            <line num="2046" count="5" type="stmt"/>
            <line num="2048" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowParenthesisedType(InternalSyntaxToken,FlowTypeTree,InternalSyntaxToken) : FlowParenthesisedTypeTree" num="2051" count="2" type="method"/>
            <line num="2052" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTupleType(InternalSyntaxToken,Optional&lt;SeparatedList&lt;FlowTypeTree&gt;&gt;,InternalSyntaxToken) : FlowTupleTypeTree" num="2055" count="3" type="method"/>
            <line num="2060" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTupleTypeElements(FlowTypeTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, FlowTypeTree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;) : SeparatedList&lt;FlowTypeTree&gt;" num="2063" count="2" type="method"/>
            <line num="2068" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowNamespacedType(IdentifierTree,List&lt;Tuple&lt;InternalSyntaxToken, IdentifierTree&gt;&gt;) : FlowNamespacedTypeTree" num="2071" count="21" type="method"/>
            <line num="2072" count="21" type="stmt"/>
            <line num="2073" count="21" type="stmt"/>
            <line num="2074" count="21" type="stmt"/>
            <line num="2076" count="21" type="stmt"/>
            <line num="2077" count="22" type="stmt"/>
            <line num="2078" count="22" type="stmt"/>
            <line num="2081" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowUnionType(Optional&lt;SyntaxToken&gt;,SeparatedList&lt;FlowTypeTree&gt;) : FlowUnionTypeTree" num="2084" count="8" type="method"/>
            <line num="2085" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowIntersectionType(Optional&lt;SyntaxToken&gt;,SeparatedList&lt;FlowTypeTree&gt;) : FlowIntersectionTypeTree" num="2088" count="2" type="method"/>
            <line num="2089" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypeElements(FlowTypeTree,List&lt;Tuple&lt;InternalSyntaxToken, FlowTypeTree&gt;&gt;) : SeparatedList&lt;FlowTypeTree&gt;" num="2092" count="10" type="method"/>
            <line num="2093" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowMethodPropertyDefinitionKeyTree(Optional&lt;IdentifierTree&gt;,Optional&lt;FlowGenericParameterClauseTree&gt;,FlowFunctionTypeParameterClauseTree) : FlowMethodPropertyDefinitionKeyTree" num="2096" count="14" type="method"/>
            <line num="2099" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="flowGenericParameter(IdentifierTree,Optional&lt;FlowTypeAnnotationTree&gt;,Optional&lt;Tuple&lt;InternalSyntaxToken, FlowTypeTree&gt;&gt;) : FlowGenericParameterTree" num="2102" count="75" type="method"/>
            <line num="2106" count="75" type="stmt"/>
            <line falsecount="73" truecount="2" num="2106" type="cond"/>
            <line num="2107" count="2" type="stmt"/>
            <line num="2109" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowGenericParameterClause(InternalSyntaxToken,FlowGenericParameterTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, FlowGenericParameterTree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : FlowGenericParameterClauseTree" num="2113" count="71" type="method"/>
            <line num="2120" count="71" type="stmt"/>
            <line complexity="2" visibility="public" signature="flowParameterizedGenericsClause(FlowTypeTree,InternalSyntaxToken,Optional&lt;FlowTypeTree&gt;,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, FlowTypeTree&gt;&gt;&gt;,Optional&lt;InternalSyntaxToken&gt;,InternalSyntaxToken) : FlowParameterizedGenericsTypeTree" num="2123" count="3" type="method"/>
            <line num="2129" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="2129" type="cond"/>
            <line num="2130" count="0" type="stmt"/>
            <line num="2132" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowTypeofType(InternalSyntaxToken,Tree) : FlowTypeofTypeTree" num="2135" count="2" type="method"/>
            <line num="2136" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowCastingExpression(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,FlowTypeTree,InternalSyntaxToken) : FlowCastingExpressionTree" num="2139" count="3" type="method"/>
            <line num="2143" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowImplementsClause(InternalSyntaxToken,FlowTypeTree,Optional&lt;List&lt;Tuple&lt;InternalSyntaxToken, FlowTypeTree&gt;&gt;&gt;) : FlowImplementsClauseTree" num="2146" count="2" type="method"/>
            <line num="2147" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="vueScriptTag(InternalSyntaxToken,Optional&lt;List&lt;JsxAttributeTree&gt;&gt;,InternalSyntaxToken) : VueScriptTag" num="2150" count="44" type="method"/>
            <line num="2151" count="44" type="stmt"/>
            <line complexity="1" visibility="package" signature="ConditionalExpressionTail(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,ExpressionTree)" num="2160" count="48" type="method"/>
            <line num="2161" count="48" type="stmt"/>
            <line num="2162" count="48" type="stmt"/>
            <line num="2163" count="48" type="stmt"/>
            <line num="2164" count="48" type="stmt"/>
            <line complexity="1" visibility="private" signature="ArgumentsTail(ArgumentListTree)" num="2174" count="56" type="method"/>
            <line num="2175" count="56" type="stmt"/>
            <line complexity="1" visibility="private" signature="TemplateLiteralTail(TemplateLiteralTree)" num="2182" count="6" type="method"/>
            <line num="2183" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="BracketAccessTail(SyntaxToken,ExpressionTree,SyntaxToken)" num="2192" count="72" type="method"/>
            <line num="2193" count="72" type="stmt"/>
            <line num="2194" count="72" type="stmt"/>
            <line num="2195" count="72" type="stmt"/>
            <line complexity="1" visibility="private" signature="DotAccessTail(SyntaxToken,IdentifierTree)" num="2203" count="845" type="method"/>
            <line num="2204" count="845" type="stmt"/>
            <line num="2205" count="845" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScriptVueElement(InternalSyntaxToken,ModuleTree)" num="2220" count="44" type="method"/>
            <line num="2221" count="44" type="stmt"/>
            <line num="2222" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="Tuple(T,U)" num="2231" count="2192" type="method"/>
            <line num="2232" count="2192" type="stmt"/>
            <line num="2234" count="2192" type="stmt"/>
            <line num="2235" count="2192" type="stmt"/>
            <line complexity="1" visibility="public" signature="first() : T" num="2238" count="2867" type="method"/>
            <line num="2239" count="2867" type="stmt"/>
            <line complexity="1" visibility="public" signature="second() : U" num="2242" count="2326" type="method"/>
            <line num="2243" count="2326" type="stmt"/>
            <line complexity="2" visibility="private" signature="optionalList(Optional&lt;List&lt;T&gt;&gt;) : List&lt;T&gt;" num="2247" count="549" type="method"/>
            <line num="2248" count="549" type="stmt"/>
            <line falsecount="498" truecount="51" num="2248" type="cond"/>
            <line num="2249" count="51" type="stmt"/>
            <line num="2251" count="498" type="stmt"/>
            <line complexity="1" visibility="public" signature="newTuple(T,U) : Tuple&lt;T, U&gt;" num="2255" count="2192" type="method"/>
            <line num="2256" count="2192" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree">
         <metrics coveredelements="83" complexity="30" loc="256" methods="10" classes="3" statements="44" coveredconditionals="32" coveredmethods="9" elements="88" ncloc="160" files="3" conditionals="34" coveredstatements="42"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/JavaScriptCommentAnalyser.java" name="JavaScriptCommentAnalyser.java">
            <metrics coveredelements="25" coveredconditionals="11" complexity="8" loc="48" coveredmethods="2" methods="2" elements="27" classes="1" ncloc="25" statements="13" conditionals="12" coveredstatements="12"/>
            <class name="JavaScriptCommentAnalyser">
               <metrics coveredelements="25" coveredconditionals="11" complexity="8" coveredmethods="2" methods="2" elements="27" statements="13" conditionals="12" coveredstatements="12"/>
            </class>
            <line complexity="3" visibility="public" signature="isBlank(String) : boolean" num="24" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line falsecount="1" truecount="2" num="25" type="cond"/>
            <line num="26" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="26" type="cond"/>
            <line num="27" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="getContents(String) : String" num="33" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="34" type="cond"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="36" type="cond"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line falsecount="0" truecount="2" num="38" type="cond"/>
            <line num="39" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="39" type="cond"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/KindSet.java" name="KindSet.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="107" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="74" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="KindSet">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="KindSet(Kind)" num="94" count="14" type="method"/>
            <line num="95" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSubKinds() : Set&lt;Kind&gt;" num="98" count="462" type="method"/>
            <line num="99" count="462" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Kinds) : boolean" num="102" count="137290" type="method"/>
            <line num="104" count="137290" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/SyntacticEquivalence.java" name="SyntacticEquivalence.java">
            <metrics coveredelements="52" coveredconditionals="21" complexity="19" loc="101" coveredmethods="4" methods="5" elements="55" classes="1" ncloc="61" statements="28" conditionals="22" coveredstatements="27"/>
            <class name="SyntacticEquivalence">
               <metrics coveredelements="52" coveredconditionals="21" complexity="19" coveredmethods="4" methods="5" elements="55" statements="28" conditionals="22" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="private" signature="SyntacticEquivalence()" num="34" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="areEquivalent(List&lt;? extends Tree&gt;,List&lt;? extends Tree&gt;) : boolean" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="41" type="cond"/>
            <line num="42" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line falsecount="2" truecount="9" num="45" type="cond"/>
            <line num="46" count="9" type="stmt"/>
            <line num="47" count="9" type="stmt"/>
            <line num="48" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="areEquivalent(Tree,Tree) : boolean" num="58" count="170" type="method"/>
            <line num="59" count="170" type="stmt"/>
            <line complexity="9" visibility="private" signature="areEquivalent(JavaScriptTree,JavaScriptTree) : boolean" num="62" count="170" type="method"/>
            <line num="63" count="170" type="stmt"/>
            <line falsecount="164" truecount="6" num="63" type="cond"/>
            <line num="64" count="6" type="stmt"/>
            <line num="66" count="164" type="stmt"/>
            <line falsecount="163" truecount="1" num="66" type="cond"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="163" type="stmt"/>
            <line falsecount="159" truecount="4" num="69" type="cond"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="159" type="stmt"/>
            <line falsecount="77" truecount="82" num="71" type="cond"/>
            <line num="72" count="82" type="stmt"/>
            <line num="75" count="77" type="stmt"/>
            <line num="76" count="77" type="stmt"/>
            <line num="78" count="77" type="stmt"/>
            <line falsecount="39" truecount="88" num="78" type="cond"/>
            <line num="79" count="88" type="stmt"/>
            <line falsecount="50" truecount="38" num="79" type="cond"/>
            <line num="80" count="38" type="stmt"/>
            <line num="84" count="39" type="stmt"/>
            <line complexity="3" visibility="protected" signature="areLeafsEquivalent(JavaScriptTree,JavaScriptTree) : boolean" num="90" count="83" type="method"/>
            <line num="92" count="83" type="stmt"/>
            <line falsecount="83" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="83" type="stmt"/>
            <line falsecount="1" truecount="82" num="94" type="cond"/>
            <line num="95" count="82" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.sv">
         <metrics coveredelements="505" complexity="190" loc="1446" methods="101" classes="23" statements="277" coveredconditionals="145" coveredmethods="93" elements="528" ncloc="823" files="19" conditionals="150" coveredstatements="267"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/BuiltInFunctionSymbolicValue.java" name="BuiltInFunctionSymbolicValue.java">
            <metrics coveredelements="37" coveredconditionals="4" complexity="16" loc="132" coveredmethods="13" methods="14" elements="39" classes="4" ncloc="86" statements="21" conditionals="4" coveredstatements="20"/>
            <class name="BuiltInFunctionSymbolicValue">
               <metrics coveredelements="23" coveredconditionals="2" complexity="10" coveredmethods="8" methods="9" elements="25" statements="14" conditionals="2" coveredstatements="13"/>
            </class>
            <class name="BuiltInFunctionSymbolicValue.ArgumentsConstrainer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BuiltInFunctionSymbolicValue.ReturnSymbolicValue">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="BuiltInFunctionSymbolicValue.ListSignature">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="BuiltInFunctionSymbolicValue(Constraint,IntFunction&lt;Constraint&gt;)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuiltInFunctionSymbolicValue(Constraint,IntFunction&lt;Constraint&gt;,boolean)" num="45" count="42" type="method"/>
            <line num="46" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuiltInFunctionSymbolicValue(Constraint)" num="49" count="38" type="method"/>
            <line num="50" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuiltInFunctionSymbolicValue(Constraint,ArgumentsConstrainer,IntFunction&lt;Constraint&gt;,boolean)" num="53" count="462" type="method"/>
            <line num="59" count="462" type="stmt"/>
            <line num="60" count="462" type="stmt"/>
            <line num="61" count="462" type="stmt"/>
            <line num="62" count="462" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="70" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="call(List&lt;SymbolicValue&gt;) : SymbolicValue" num="75" count="245" type="method"/>
            <line num="77" count="245" type="stmt"/>
            <line falsecount="64" truecount="181" num="77" type="cond"/>
            <line num="78" count="181" type="stmt"/>
            <line num="80" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="signature() : IntFunction&lt;Constraint&gt;" num="83" count="42" type="method"/>
            <line num="85" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSideEffect() : boolean" num="88" count="31" type="method"/>
            <line num="89" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="ReturnSymbolicValue(List&lt;SymbolicValue&gt;)" num="101" count="64" type="method"/>
            <line num="102" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="105" count="108" type="method"/>
            <line num="107" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="110" count="416" type="method"/>
            <line num="112" count="416" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListSignature(List&lt;Constraint&gt;)" num="119" count="380" type="method"/>
            <line num="120" count="380" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(int) : Constraint" num="123" count="44" type="method"/>
            <line num="125" count="44" type="stmt"/>
            <line falsecount="11" truecount="33" num="125" type="cond"/>
            <line num="126" count="33" type="stmt"/>
            <line num="129" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/EqualitySymbolicValue.java" name="EqualitySymbolicValue.java">
            <metrics coveredelements="118" coveredconditionals="46" complexity="37" loc="163" coveredmethods="10" methods="10" elements="124" classes="1" ncloc="123" statements="64" conditionals="50" coveredstatements="62"/>
            <class name="EqualitySymbolicValue">
               <metrics coveredelements="118" coveredconditionals="46" complexity="37" coveredmethods="10" methods="10" elements="124" statements="64" conditionals="50" coveredstatements="62"/>
            </class>
            <line complexity="1" visibility="package" signature="EqualitySymbolicValue(Kind,SymbolicValue,SymbolicValue)" num="39" count="220" type="method"/>
            <line num="40" count="220" type="stmt"/>
            <line num="41" count="220" type="stmt"/>
            <line num="42" count="220" type="stmt"/>
            <line num="43" count="220" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="46" count="271" type="method"/>
            <line num="48" count="271" type="stmt"/>
            <line num="49" count="271" type="stmt"/>
            <line num="50" count="271" type="stmt"/>
            <line num="51" count="271" type="stmt"/>
            <line complexity="2" visibility="private" signature="constrainOperand(SymbolicValue,SymbolicValue,Constraint,ProgramState) : Optional&lt;ProgramState&gt;" num="54" count="542" type="method"/>
            <line num="55" count="542" type="stmt"/>
            <line falsecount="19" truecount="523" num="55" type="cond"/>
            <line num="56" count="523" type="stmt"/>
            <line num="58" count="19" type="stmt"/>
            <line complexity="12" visibility="private" signature="constrainOperand(SymbolicValue,SymbolicValue,ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="61" count="523" type="method"/>
            <line num="62" count="523" type="stmt"/>
            <line num="64" count="523" type="stmt"/>
            <line falsecount="379" truecount="144" num="64" type="cond"/>
            <line num="65" count="144" type="stmt"/>
            <line falsecount="70" truecount="74" num="65" type="cond"/>
            <line num="66" count="74" type="stmt"/>
            <line num="67" count="70" type="stmt"/>
            <line falsecount="0" truecount="70" num="67" type="cond"/>
            <line num="68" count="70" type="stmt"/>
            <line num="72" count="379" type="stmt"/>
            <line falsecount="207" truecount="172" num="72" type="cond"/>
            <line num="73" count="172" type="stmt"/>
            <line falsecount="96" truecount="76" num="73" type="cond"/>
            <line num="74" count="76" type="stmt"/>
            <line num="76" count="96" type="stmt"/>
            <line falsecount="83" truecount="13" num="76" type="cond"/>
            <line num="77" count="13" type="stmt"/>
            <line num="81" count="290" type="stmt"/>
            <line falsecount="243" truecount="47" num="81" type="cond"/>
            <line num="82" count="47" type="stmt"/>
            <line falsecount="26" truecount="21" num="82" type="cond"/>
            <line num="83" count="21" type="stmt"/>
            <line num="85" count="26" type="stmt"/>
            <line falsecount="23" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line num="90" count="266" type="stmt"/>
            <line complexity="6" visibility="private" signature="constraintOnNullOrUndefined(Constraint,boolean) : Constraint" num="93" count="144" type="method"/>
            <line num="94" count="144" type="stmt"/>
            <line num="95" count="144" type="stmt"/>
            <line falsecount="121" truecount="23" num="95" type="cond"/>
            <line num="96" count="23" type="stmt"/>
            <line num="97" count="121" type="stmt"/>
            <line falsecount="110" truecount="11" num="97" type="cond"/>
            <line num="98" count="11" type="stmt"/>
            <line falsecount="9" truecount="2" num="98" type="cond"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="9" type="stmt"/>
            <line num="102" count="110" type="stmt"/>
            <line falsecount="37" truecount="73" num="102" type="cond"/>
            <line num="103" count="73" type="stmt"/>
            <line num="105" count="37" type="stmt"/>
            <line num="107" count="142" type="stmt"/>
            <line falsecount="73" truecount="69" num="107" type="cond"/>
            <line complexity="5" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="110" count="1419" type="method"/>
            <line num="112" count="1419" type="stmt"/>
            <line num="113" count="1419" type="stmt"/>
            <line num="114" count="1419" type="stmt"/>
            <line falsecount="1093" truecount="326" num="114" type="cond"/>
            <line num="115" count="326" type="stmt"/>
            <line falsecount="207" truecount="119" num="115" type="cond"/>
            <line num="116" count="119" type="stmt"/>
            <line num="118" count="207" type="stmt"/>
            <line falsecount="173" truecount="34" num="118" type="cond"/>
            <line num="119" count="34" type="stmt"/>
            <line num="123" count="1266" type="stmt"/>
            <line num="124" count="1266" type="stmt"/>
            <line falsecount="1160" truecount="106" num="124" type="cond"/>
            <line num="125" count="106" type="stmt"/>
            <line num="128" count="1160" type="stmt"/>
            <line complexity="7" visibility="private" signature="resolveSingleValueEqualityConstraint(Constraint,Constraint) : Constraint" num="131" count="1266" type="method"/>
            <line num="132" count="1266" type="stmt"/>
            <line falsecount="1160" truecount="106" num="132" type="cond"/>
            <line num="133" count="106" type="stmt"/>
            <line falsecount="42" truecount="64" num="133" type="cond"/>
            <line num="134" count="64" type="stmt"/>
            <line num="136" count="42" type="stmt"/>
            <line falsecount="0" truecount="42" num="136" type="cond"/>
            <line num="137" count="42" type="stmt"/>
            <line num="140" count="1160" type="stmt"/>
            <line falsecount="1142" truecount="18" num="140" type="cond"/>
            <line num="141" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="1160" type="stmt"/>
            <line complexity="1" visibility="private" signature="sameSingleValues(Constraint,Constraint) : boolean" num="151" count="1266" type="method"/>
            <line num="152" count="1266" type="stmt"/>
            <line complexity="1" visibility="private" signature="differentSingleValues(Constraint,Constraint) : boolean" num="155" count="1160" type="method"/>
            <line num="156" count="1160" type="stmt"/>
            <line complexity="1" visibility="private" signature="bothSingleValueConstraints(Constraint,Constraint) : boolean" num="159" count="2426" type="method"/>
            <line num="160" count="2426" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/FunctionSymbolicValue.java" name="FunctionSymbolicValue.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="46" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FunctionSymbolicValue">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="baseConstraint(ProgramState) : Constraint" num="28" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPropertyValue(String) : SymbolicValue" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="instantiate() : SymbolicValue" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="call(List&lt;SymbolicValue&gt;) : SymbolicValue" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/FunctionWithTreeSymbolicValue.java" name="FunctionWithTreeSymbolicValue.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="48" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FunctionWithTreeSymbolicValue">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctionWithTreeSymbolicValue(FunctionTree)" num="31" count="82" type="method"/>
            <line num="32" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFunctionTree() : FunctionTree" num="35" count="266" type="method"/>
            <line num="36" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="39" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="44" count="363" type="method"/>
            <line num="46" count="363" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/IncDecSymbolicValue.java" name="IncDecSymbolicValue.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="6" loc="85" coveredmethods="5" methods="5" elements="23" classes="2" ncloc="51" statements="16" conditionals="2" coveredstatements="16"/>
            <class name="IncDecSymbolicValue">
               <metrics coveredelements="23" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="23" statements="16" conditionals="2" coveredstatements="16"/>
            </class>
            <class name="IncDecSymbolicValue.Sign">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IncDecSymbolicValue(Sign,SymbolicValue)" num="51" count="123" type="method"/>
            <line num="52" count="123" type="stmt"/>
            <line num="53" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="56" count="4" type="method"/>
            <line num="58" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="61" count="1060" type="method"/>
            <line num="63" count="1060" type="stmt"/>
            <line num="64" count="1060" type="stmt"/>
            <line falsecount="1044" truecount="16" num="64" type="cond"/>
            <line num="65" count="16" type="stmt"/>
            <line num="67" count="1044" type="stmt"/>
            <line complexity="1" visibility="public" signature="sign() : Sign" num="70" count="8" type="method"/>
            <line num="71" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 74()" num="74" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/InstanceOfSymbolicValue.java" name="InstanceOfSymbolicValue.java">
            <metrics coveredelements="46" coveredconditionals="18" complexity="16" loc="96" coveredmethods="3" methods="4" elements="48" classes="1" ncloc="56" statements="26" conditionals="18" coveredstatements="25"/>
            <class name="InstanceOfSymbolicValue">
               <metrics coveredelements="46" coveredconditionals="18" complexity="16" coveredmethods="3" methods="4" elements="48" statements="26" conditionals="18" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="InstanceOfSymbolicValue(SymbolicValue,SymbolicValue)" num="42" count="30" type="method"/>
            <line num="43" count="30" type="stmt"/>
            <line num="44" count="30" type="stmt"/>
            <line complexity="7" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="47" count="30" type="method"/>
            <line num="49" count="30" type="stmt"/>
            <line num="50" count="30" type="stmt"/>
            <line num="51" count="30" type="stmt"/>
            <line falsecount="22" truecount="8" num="51" type="cond"/>
            <line num="52" count="8" type="stmt"/>
            <line num="53" count="22" type="stmt"/>
            <line falsecount="2" truecount="20" num="53" type="cond"/>
            <line num="54" count="20" type="stmt"/>
            <line num="57" count="30" type="stmt"/>
            <line falsecount="15" truecount="15" num="57" type="cond"/>
            <line num="58" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="58" type="cond"/>
            <line num="61" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="61" type="cond"/>
            <line num="62" count="15" type="stmt"/>
            <line num="65" count="30" type="stmt"/>
            <line complexity="7" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="68" count="189" type="method"/>
            <line num="70" count="189" type="stmt"/>
            <line num="72" count="189" type="stmt"/>
            <line falsecount="174" truecount="15" num="72" type="cond"/>
            <line num="73" count="15" type="stmt"/>
            <line num="76" count="174" type="stmt"/>
            <line num="78" count="174" type="stmt"/>
            <line falsecount="23" truecount="151" num="78" type="cond"/>
            <line num="79" count="151" type="stmt"/>
            <line num="82" count="23" type="stmt"/>
            <line num="83" count="23" type="stmt"/>
            <line falsecount="5" truecount="33" num="83" type="cond"/>
            <line num="84" count="33" type="stmt"/>
            <line falsecount="15" truecount="18" num="84" type="cond"/>
            <line num="85" count="18" type="stmt"/>
            <line num="87" count="15" type="stmt"/>
            <line num="89" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/LiteralSymbolicValue.java" name="LiteralSymbolicValue.java">
            <metrics coveredelements="70" coveredconditionals="28" complexity="27" loc="120" coveredmethods="8" methods="9" elements="72" classes="1" ncloc="80" statements="35" conditionals="28" coveredstatements="34"/>
            <class name="LiteralSymbolicValue">
               <metrics coveredelements="70" coveredconditionals="28" complexity="27" coveredmethods="8" methods="9" elements="72" statements="35" conditionals="28" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="private" signature="LiteralSymbolicValue(LiteralTree)" num="37" count="982" type="method"/>
            <line num="38" count="982" type="stmt"/>
            <line num="39" count="982" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(LiteralTree) : SymbolicValue" num="42" count="982" type="method"/>
            <line num="43" count="982" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiteral() : LiteralTree" num="46" count="58" type="method"/>
            <line num="47" count="58" type="stmt"/>
            <line complexity="2" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="50" count="231" type="method"/>
            <line num="52" count="231" type="stmt"/>
            <line falsecount="228" truecount="3" num="52" type="cond"/>
            <line num="53" count="3" type="stmt"/>
            <line num="55" count="228" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="58" count="7356" type="method"/>
            <line num="60" count="7356" type="stmt"/>
            <line complexity="9" visibility="private" signature="getConstraint(LiteralTree) : Constraint" num="63" count="982" type="method"/>
            <line num="64" count="982" type="stmt"/>
            <line num="65" count="982" type="stmt"/>
            <line falsecount="806" truecount="176" num="65" type="cond"/>
            <line num="66" count="176" type="stmt"/>
            <line falsecount="81" truecount="95" num="66" type="cond"/>
            <line num="68" count="982" type="stmt"/>
            <line falsecount="746" truecount="236" num="68" type="cond"/>
            <line num="69" count="236" type="stmt"/>
            <line falsecount="31" truecount="205" num="69" type="cond"/>
            <line num="71" count="982" type="stmt"/>
            <line falsecount="414" truecount="568" num="71" type="cond"/>
            <line num="72" count="568" type="stmt"/>
            <line falsecount="428" truecount="140" num="72" type="cond"/>
            <line num="75" count="982" type="stmt"/>
            <line falsecount="981" truecount="1" num="75" type="cond"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="982" type="stmt"/>
            <line falsecount="1" truecount="981" num="79" type="cond"/>
            <line num="80" count="981" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="7" visibility="private" signature="isZero(LiteralTree) : boolean" num="85" count="568" type="method"/>
            <line num="86" count="568" type="stmt"/>
            <line num="88" count="568" type="stmt"/>
            <line falsecount="560" truecount="8" num="88" type="cond"/>
            <line num="93" count="8" type="stmt"/>
            <line num="96" count="560" type="stmt"/>
            <line num="97" count="560" type="stmt"/>
            <line falsecount="2" truecount="558" num="97" type="cond"/>
            <line num="98" count="558" type="stmt"/>
            <line num="100" count="560" type="stmt"/>
            <line falsecount="558" truecount="2" num="100" type="cond"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="560" type="stmt"/>
            <line complexity="4" visibility="private" signature="allZero(String) : boolean" num="106" count="568" type="method"/>
            <line num="107" count="568" type="stmt"/>
            <line falsecount="140" truecount="577" num="107" type="cond"/>
            <line num="108" count="577" type="stmt"/>
            <line num="109" count="577" type="stmt"/>
            <line falsecount="149" truecount="428" num="109" type="cond"/>
            <line num="110" count="428" type="stmt"/>
            <line num="113" count="140" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/LogicalNotSymbolicValue.java" name="LogicalNotSymbolicValue.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="10" loc="74" coveredmethods="6" methods="6" elements="30" classes="1" ncloc="43" statements="16" conditionals="8" coveredstatements="16"/>
            <class name="LogicalNotSymbolicValue">
               <metrics coveredelements="30" coveredconditionals="8" complexity="10" coveredmethods="6" methods="6" elements="30" statements="16" conditionals="8" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="private" signature="LogicalNotSymbolicValue(SymbolicValue)" num="31" count="50" type="method"/>
            <line num="32" count="50" type="stmt"/>
            <line num="33" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(SymbolicValue) : SymbolicValue" num="36" count="50" type="method"/>
            <line num="37" count="50" type="stmt"/>
            <line complexity="3" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="40" count="75" type="method"/>
            <line num="42" count="75" type="stmt"/>
            <line falsecount="38" truecount="37" num="42" type="cond"/>
            <line num="43" count="37" type="stmt"/>
            <line num="45" count="38" type="stmt"/>
            <line falsecount="1" truecount="37" num="45" type="cond"/>
            <line num="46" count="37" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="53" count="314" type="method"/>
            <line num="55" count="314" type="stmt"/>
            <line num="56" count="314" type="stmt"/>
            <line falsecount="244" truecount="70" num="56" type="cond"/>
            <line num="57" count="70" type="stmt"/>
            <line num="59" count="244" type="stmt"/>
            <line falsecount="194" truecount="50" num="59" type="cond"/>
            <line num="60" count="50" type="stmt"/>
            <line num="62" count="194" type="stmt"/>
            <line complexity="1" visibility="public" signature="negatedValue() : SymbolicValue" num="65" count="42" type="method"/>
            <line num="66" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/ObjectSymbolicValue.java" name="ObjectSymbolicValue.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ObjectSymbolicValue">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="28" count="65" type="method"/>
            <line num="30" count="65" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/PlusSymbolicValue.java" name="PlusSymbolicValue.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="14" loc="95" coveredmethods="8" methods="9" elements="33" classes="1" ncloc="51" statements="18" conditionals="6" coveredstatements="17"/>
            <class name="PlusSymbolicValue">
               <metrics coveredelements="31" coveredconditionals="6" complexity="14" coveredmethods="8" methods="9" elements="33" statements="18" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="PlusSymbolicValue(SymbolicValue,SymbolicValue)" num="39" count="114" type="method"/>
            <line num="40" count="114" type="stmt"/>
            <line num="41" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="44" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="49" count="99" type="method"/>
            <line num="52" count="99" type="stmt"/>
            <line num="53" count="99" type="stmt"/>
            <line num="55" count="99" type="stmt"/>
            <line falsecount="85" truecount="14" num="55" type="cond"/>
            <line num="57" count="14" type="stmt"/>
            <line num="60" count="85" type="stmt"/>
            <line falsecount="64" truecount="21" num="60" type="cond"/>
            <line num="61" count="21" type="stmt"/>
            <line num="63" count="64" type="stmt"/>
            <line falsecount="33" truecount="31" num="63" type="cond"/>
            <line num="64" count="31" type="stmt"/>
            <line num="68" count="33" type="stmt"/>
            <line complexity="1" visibility="private" signature="bothUndefined(Constraint,Constraint) : boolean" num="71" count="6" type="method"/>
            <line num="72" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="atLeastOneString(Constraint,Constraint) : boolean" num="75" count="85" type="method"/>
            <line num="76" count="85" type="stmt"/>
            <line complexity="1" visibility="private" signature="atLeastOneUndefined(Constraint,Constraint) : boolean" num="79" count="99" type="method"/>
            <line num="80" count="99" type="stmt"/>
            <line complexity="1" visibility="private" signature="atLeastOneNumberOrBoolean(Constraint,Constraint) : boolean" num="83" count="18" type="method"/>
            <line num="84" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="bothNumberOrBoolean(Constraint,Constraint) : boolean" num="87" count="64" type="method"/>
            <line num="88" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/RelationalSymbolicValue.java" name="RelationalSymbolicValue.java">
            <metrics coveredelements="45" coveredconditionals="16" complexity="16" loc="92" coveredmethods="7" methods="8" elements="47" classes="1" ncloc="58" statements="23" conditionals="16" coveredstatements="22"/>
            <class name="RelationalSymbolicValue">
               <metrics coveredelements="45" coveredconditionals="16" complexity="16" coveredmethods="7" methods="8" elements="47" statements="23" conditionals="16" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="package" signature="RelationalSymbolicValue(Kind,SymbolicValue,SymbolicValue)" num="33" count="398" type="method"/>
            <line num="34" count="398" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(Kind,SymbolicValue,SymbolicValue) : SymbolicValue" num="37" count="456" type="method"/>
            <line num="38" count="456" type="stmt"/>
            <line falsecount="178" truecount="278" num="38" type="cond"/>
            <line num="39" count="278" type="stmt"/>
            <line num="41" count="178" type="stmt"/>
            <line complexity="3" visibility="private" signature="createEquality(Kind,SymbolicValue,SymbolicValue) : SymbolicValue" num="44" count="278" type="method"/>
            <line num="45" count="278" type="stmt"/>
            <line num="46" count="278" type="stmt"/>
            <line falsecount="220" truecount="58" num="46" type="cond"/>
            <line num="47" count="58" type="stmt"/>
            <line falsecount="55" truecount="3" num="47" type="cond"/>
            <line num="49" count="220" type="stmt"/>
            <line complexity="3" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="52" count="434" type="method"/>
            <line num="54" count="434" type="stmt"/>
            <line falsecount="199" truecount="235" num="54" type="cond"/>
            <line num="55" count="235" type="stmt"/>
            <line num="57" count="199" type="stmt"/>
            <line falsecount="1" truecount="198" num="57" type="cond"/>
            <line num="58" count="198" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkRelationsAndConstrain(ProgramState,Relation) : Optional&lt;ProgramState&gt;" num="64" count="433" type="method"/>
            <line num="65" count="433" type="stmt"/>
            <line num="66" count="100" type="stmt"/>
            <line falsecount="88" truecount="12" num="66" type="cond"/>
            <line num="67" count="12" type="stmt"/>
            <line num="70" count="421" type="stmt"/>
            <line complexity="3" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="73" count="1802" type="method"/>
            <line num="75" count="1802" type="stmt"/>
            <line num="76" count="1802" type="stmt"/>
            <line falsecount="1593" truecount="209" num="76" type="cond"/>
            <line num="77" count="209" type="stmt"/>
            <line falsecount="1" truecount="208" num="77" type="cond"/>
            <line num="80" count="1593" type="stmt"/>
            <line complexity="1" visibility="public" signature="relationWhenTrue() : Relation" num="83" count="17" type="method"/>
            <line num="84" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/SimpleSymbolicValue.java" name="SimpleSymbolicValue.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="51" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="SimpleSymbolicValue">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleSymbolicValue(int)" num="33" count="1703" type="method"/>
            <line num="34" count="1703" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="37" count="5" type="method"/>
            <line num="39" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="42" count="35372" type="method"/>
            <line num="44" count="35372" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="47" count="693756" type="method"/>
            <line num="49" count="693756" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/SpecialSymbolicValue.java" name="SpecialSymbolicValue.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="4" loc="50" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="23" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="SpecialSymbolicValue">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="package" signature="SpecialSymbolicValue(Constraint)" num="33" count="4" type="method"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="37" count="55" type="method"/>
            <line num="39" count="55" type="stmt"/>
            <line falsecount="53" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="45" count="2409" type="method"/>
            <line num="47" count="2409" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/SymbolicValue.java" name="SymbolicValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SymbolicValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/SymbolicValueWithConstraint.java" name="SymbolicValueWithConstraint.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="48" coveredmethods="3" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="SymbolicValueWithConstraint">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="SymbolicValueWithConstraint(Constraint)" num="30" count="634" type="method"/>
            <line num="31" count="634" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="34" count="178" type="method"/>
            <line num="36" count="178" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="39" count="2164" type="method"/>
            <line num="41" count="2164" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/TypeOfComparisonSymbolicValue.java" name="TypeOfComparisonSymbolicValue.java">
            <metrics coveredelements="39" coveredconditionals="13" complexity="16" loc="110" coveredmethods="5" methods="6" elements="42" classes="1" ncloc="69" statements="22" conditionals="14" coveredstatements="21"/>
            <class name="TypeOfComparisonSymbolicValue">
               <metrics coveredelements="39" coveredconditionals="13" complexity="16" coveredmethods="5" methods="6" elements="42" statements="22" conditionals="14" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="private" signature="TypeOfComparisonSymbolicValue(TypeOfSymbolicValue,String)" num="57" count="58" type="method"/>
            <line num="58" count="58" type="stmt"/>
            <line num="59" count="58" type="stmt"/>
            <line num="60" count="58" type="stmt"/>
            <line num="61" count="58" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(SymbolicValue,SymbolicValue) : TypeOfComparisonSymbolicValue" num="64" count="278" type="method"/>
            <line num="66" count="278" type="stmt"/>
            <line num="67" count="278" type="stmt"/>
            <line falsecount="56" truecount="222" num="67" type="cond"/>
            <line num="68" count="222" type="stmt"/>
            <line num="70" count="278" type="stmt"/>
            <line complexity="4" visibility="private" signature="createTypeOfComparison(SymbolicValue,SymbolicValue) : TypeOfComparisonSymbolicValue" num="73" count="500" type="method"/>
            <line num="75" count="500" type="stmt"/>
            <line falsecount="442" truecount="58" num="75" type="cond"/>
            <line num="76" count="58" type="stmt"/>
            <line num="77" count="58" type="stmt"/>
            <line falsecount="0" truecount="58" num="77" type="cond"/>
            <line num="78" count="58" type="stmt"/>
            <line num="82" count="442" type="stmt"/>
            <line complexity="7" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="85" count="116" type="method"/>
            <line num="87" count="116" type="stmt"/>
            <line num="89" count="116" type="stmt"/>
            <line falsecount="6" truecount="110" num="89" type="cond"/>
            <line num="90" count="110" type="stmt"/>
            <line falsecount="55" truecount="55" num="90" type="cond"/>
            <line num="91" count="55" type="stmt"/>
            <line falsecount="1" truecount="54" num="91" type="cond"/>
            <line num="92" count="55" type="stmt"/>
            <line falsecount="1" truecount="54" num="92" type="cond"/>
            <line num="93" count="54" type="stmt"/>
            <line num="97" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="100" count="500" type="method"/>
            <line num="102" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/TypeOfSymbolicValue.java" name="TypeOfSymbolicValue.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="5" loc="60" coveredmethods="4" methods="5" elements="11" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="TypeOfSymbolicValue">
               <metrics coveredelements="9" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="TypeOfSymbolicValue(SymbolicValue)" num="37" count="62" type="method"/>
            <line num="38" count="62" type="stmt"/>
            <line num="39" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="operandValue() : SymbolicValue" num="42" count="108" type="method"/>
            <line num="43" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="46" count="6" type="method"/>
            <line num="48" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="51" count="61" type="method"/>
            <line num="53" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/UnaryMinusSymbolicValue.java" name="UnaryMinusSymbolicValue.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="66" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="36" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="UnaryMinusSymbolicValue">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="UnaryMinusSymbolicValue(SymbolicValue)" num="49" count="41" type="method"/>
            <line num="50" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="53" count="3" type="method"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="58" count="229" type="method"/>
            <line num="60" count="229" type="stmt"/>
            <line num="61" count="229" type="stmt"/>
            <line falsecount="227" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="227" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/sv/UnknownSymbolicValue.java" name="UnknownSymbolicValue.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="UnknownSymbolicValue">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="constrainDependencies(ProgramState,Constraint) : Optional&lt;ProgramState&gt;" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="38" count="2156" type="method"/>
            <line num="40" count="2156" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.limitations">
         <metrics coveredelements="30" complexity="8" loc="81" methods="5" classes="2" statements="19" coveredconditionals="6" coveredmethods="5" elements="30" ncloc="53" files="1" conditionals="6" coveredstatements="19"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/limitations/CrossProceduralLimitation.java" name="CrossProceduralLimitation.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="8" loc="81" coveredmethods="5" methods="5" elements="30" classes="2" ncloc="53" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="CrossProceduralLimitation">
               <metrics coveredelements="18" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <class name="CrossProceduralLimitation.FunctionArgumentsCollector">
               <metrics coveredelements="12" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="prepareForBranching(Tree,ProgramState) : ProgramState" num="36" count="19103" type="method"/>
            <line num="37" count="19103" type="stmt"/>
            <line falsecount="2496" truecount="16607" num="37" type="cond"/>
            <line num="38" count="16607" type="stmt"/>
            <line num="40" count="2496" type="stmt"/>
            <line complexity="1" visibility="private" signature="dropConstraintsOnSymbols(ProgramState,Set&lt;Symbol&gt;) : ProgramState" num="44" count="16607" type="method"/>
            <line num="45" count="16607" type="stmt"/>
            <line num="46" count="16607" type="stmt"/>
            <line num="47" count="39" type="stmt"/>
            <line num="49" count="16607" type="stmt"/>
            <line complexity="2" visibility="private" signature="conditionIsAmbiguous(ProgramState) : boolean" num="52" count="19103" type="method"/>
            <line num="53" count="19103" type="stmt"/>
            <line num="54" count="19103" type="stmt"/>
            <line falsecount="19061" truecount="42" num="54" type="cond"/>
            <line num="55" count="42" type="stmt"/>
            <line num="57" count="19061" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect(Tree) : Set&lt;Symbol&gt;" num="64" count="16608" type="method"/>
            <line num="65" count="16608" type="stmt"/>
            <line num="66" count="16608" type="stmt"/>
            <line num="67" count="16608" type="stmt"/>
            <line num="68" count="16608" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="71" count="85" type="method"/>
            <line num="73" count="85" type="stmt"/>
            <line num="74" count="50" type="stmt"/>
            <line falsecount="8" truecount="42" num="74" type="cond"/>
            <line num="75" count="42" type="stmt"/>
            <line num="78" count="85" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.builtins">
         <metrics coveredelements="121" complexity="53" loc="1135" methods="38" classes="14" statements="93" coveredconditionals="14" coveredmethods="29" elements="145" ncloc="739" files="12" conditionals="14" coveredstatements="78"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/ArrayBuiltInProperties.java" name="ArrayBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="97" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="66" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ArrayBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ArrayBuiltInProperties()" num="94" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/BooleanBuiltInProperties.java" name="BooleanBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="44" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BooleanBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BooleanBuiltInProperties()" num="41" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/BuiltInConstructorSymbolicValue.java" name="BuiltInConstructorSymbolicValue.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="7" loc="67" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="38" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="BuiltInConstructorSymbolicValue">
               <metrics coveredelements="18" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="18" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="private" signature="BuiltInConstructorSymbolicValue(Map&lt;String, BuiltInProperty&gt;,Constraint,BuiltInObjectSymbolicValue)" num="34" count="16" type="method"/>
            <line num="35" count="16" type="stmt"/>
            <line num="36" count="16" type="stmt"/>
            <line num="37" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructor(Map&lt;String, BuiltInProperty&gt;,Constraint,BuiltInObjectSymbolicValue) : BuiltInConstructorSymbolicValue" num="40" count="16" type="method"/>
            <line num="42" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="instantiate() : SymbolicValue" num="45" count="78" type="method"/>
            <line num="47" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="call(List&lt;SymbolicValue&gt;) : SymbolicValue" num="50" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrototypeOfInstances() : BuiltInObjectSymbolicValue" num="55" count="53" type="method"/>
            <line num="56" count="53" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPropertyValue(String) : SymbolicValue" num="59" count="48" type="method"/>
            <line num="61" count="48" type="stmt"/>
            <line falsecount="46" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="46" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/BuiltInObjectSymbolicValue.java" name="BuiltInObjectSymbolicValue.java">
            <metrics coveredelements="36" coveredconditionals="4" complexity="9" loc="148" coveredmethods="7" methods="7" elements="36" classes="1" ncloc="106" statements="25" conditionals="4" coveredstatements="25"/>
            <class name="BuiltInObjectSymbolicValue">
               <metrics coveredelements="36" coveredconditionals="4" complexity="9" coveredmethods="7" methods="7" elements="36" statements="25" conditionals="4" coveredstatements="25"/>
            </class>
            <line num="68" count="68" type="stmt"/>
            <line num="69" count="68" type="stmt"/>
            <line num="71" count="68" type="stmt"/>
            <line num="72" count="68" type="stmt"/>
            <line num="74" count="68" type="stmt"/>
            <line num="75" count="30" type="stmt"/>
            <line num="77" count="38" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="80" count="34" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="84" count="30" type="stmt"/>
            <line complexity="1" visibility="package" signature="BuiltInObjectSymbolicValue(Map&lt;String, BuiltInProperty&gt;,BuiltInObjectSymbolicValue,Constraint)" num="109" count="34" type="method"/>
            <line num="110" count="34" type="stmt"/>
            <line num="111" count="34" type="stmt"/>
            <line num="112" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Map&lt;String, BuiltInProperty&gt;,BuiltInObjectSymbolicValue,Constraint) : BuiltInObjectSymbolicValue" num="115" count="18" type="method"/>
            <line num="116" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="find(String) : Optional&lt;SymbolicValue&gt;" num="119" count="3276" type="method"/>
            <line num="120" count="3276" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint() : Constraint" num="123" count="425" type="method"/>
            <line num="124" count="425" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseConstraint(ProgramState) : Constraint" num="127" count="327" type="method"/>
            <line num="129" count="327" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPropertyValue(String) : SymbolicValue" num="132" count="414" type="method"/>
            <line num="134" count="414" type="stmt"/>
            <line num="135" count="414" type="stmt"/>
            <line falsecount="178" truecount="236" num="135" type="cond"/>
            <line num="136" count="236" type="stmt"/>
            <line num="138" count="178" type="stmt"/>
            <line falsecount="93" truecount="85" num="138" type="cond"/>
            <line num="139" count="85" type="stmt"/>
            <line num="141" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="prototype() : BuiltInObjectSymbolicValue" num="144" count="15" type="method"/>
            <line num="145" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/BuiltInProperty.java" name="BuiltInProperty.java">
            <metrics coveredelements="52" coveredconditionals="6" complexity="21" loc="164" coveredmethods="15" methods="15" elements="52" classes="3" ncloc="111" statements="31" conditionals="6" coveredstatements="31"/>
            <class name="BuiltInProperty">
               <metrics coveredelements="44" coveredconditionals="6" complexity="17" coveredmethods="11" methods="11" elements="44" statements="27" conditionals="6" coveredstatements="27"/>
            </class>
            <class name="BuiltInProperty.MutableBuiltinProperty">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BuiltInProperty.BuiltinMethod">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="property(Constraint) : BuiltInProperty" num="60" count="84" type="method"/>
            <line num="61" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraintOnRecentProperty(Constraint) : Constraint" num="64" count="12" type="method"/>
            <line num="65" count="12" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint) : BuiltInProperty" num="68" count="38" type="method"/>
            <line num="69" count="38" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint,List&lt;Constraint&gt;) : BuiltInProperty" num="72" count="308" type="method"/>
            <line num="73" count="308" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint,List&lt;Constraint&gt;,boolean) : BuiltInProperty" num="76" count="68" type="method"/>
            <line num="77" count="68" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint,IntFunction&lt;Constraint&gt;) : BuiltInProperty" num="80" count="32" type="method"/>
            <line num="83" count="32" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint,IntFunction&lt;Constraint&gt;,boolean) : BuiltInProperty" num="86" count="10" type="method"/>
            <line num="90" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint,ArgumentsConstrainer,List&lt;Constraint&gt;) : BuiltInProperty" num="93" count="4" type="method"/>
            <line num="98" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="method(Constraint,ArgumentsConstrainer,List&lt;Constraint&gt;,boolean) : BuiltInProperty" num="101" count="376" type="method"/>
            <line num="107" count="376" type="stmt"/>
            <line complexity="1" visibility="private" signature="method(BuiltInFunctionSymbolicValue) : BuiltInProperty" num="110" count="460" type="method"/>
            <line num="111" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="MutableBuiltinProperty(Constraint)" num="118" count="84" type="method"/>
            <line num="119" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="access() : SymbolicValue" num="122" count="15" type="method"/>
            <line num="124" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuiltinMethod(BuiltInFunctionSymbolicValue)" num="133" count="460" type="method"/>
            <line num="134" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="access() : SymbolicValue" num="137" count="237" type="method"/>
            <line num="139" count="237" type="stmt"/>
            <line complexity="5" visibility="public" signature="getIsSomethingArgumentsConstrainer(Constraint) : ArgumentsConstrainer" num="144" count="4" type="method"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="40" type="stmt"/>
            <line num="147" count="40" type="stmt"/>
            <line num="149" count="40" type="stmt"/>
            <line falsecount="36" truecount="4" num="149" type="cond"/>
            <line num="150" count="4" type="stmt"/>
            <line num="152" count="36" type="stmt"/>
            <line falsecount="20" truecount="16" num="152" type="cond"/>
            <line num="153" count="16" type="stmt"/>
            <line num="155" count="20" type="stmt"/>
            <line falsecount="16" truecount="4" num="155" type="cond"/>
            <line num="156" count="4" type="stmt"/>
            <line num="159" count="16" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/DateBuiltInProperties.java" name="DateBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="107" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="76" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DateBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DateBuiltInProperties()" num="104" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/FunctionBuiltInProperties.java" name="FunctionBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="50" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="FunctionBuiltInProperties()" num="47" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/MathBuiltInProperties.java" name="MathBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="86" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="60" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MathBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MathBuiltInProperties()" num="83" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/NumberBuiltInProperties.java" name="NumberBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="76" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="45" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NumberBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="NumberBuiltInProperties()" num="73" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/ObjectBuiltInProperties.java" name="ObjectBuiltInProperties.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="81" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="51" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectBuiltInProperties">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ObjectBuiltInProperties()" num="78" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/RegexpBuiltInProperties.java" name="RegexpBuiltInProperties.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="78" coveredmethods="1" methods="2" elements="9" classes="1" ncloc="48" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="RegexpBuiltInProperties">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="1" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="RegexpBuiltInProperties()" num="66" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="dollarProperties() : Map&lt;String, BuiltInProperty&gt;" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="72" type="cond"/>
            <line num="73" count="18" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/builtins/StringBuiltInProperties.java" name="StringBuiltInProperties.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="6" loc="137" coveredmethods="0" methods="1" elements="17" classes="1" ncloc="100" statements="16" conditionals="0" coveredstatements="7"/>
            <class name="StringBuiltInProperties">
               <metrics coveredelements="7" coveredconditionals="0" complexity="6" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="7"/>
            </class>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="53" count="8" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="StringBuiltInProperties()" num="134" count="0" type="method"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree.lexical">
         <metrics coveredelements="0" complexity="0" loc="73" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="18" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/lexical/SyntaxToken.java" name="SyntaxToken.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SyntaxToken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/lexical/SyntaxTrivia.java" name="SyntaxTrivia.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SyntaxTrivia">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.flow">
         <metrics coveredelements="593" complexity="261" loc="2722" methods="258" classes="34" statements="353" coveredconditionals="6" coveredmethods="246" elements="617" ncloc="1718" files="34" conditionals="6" coveredstatements="341"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowArrayTypeShorthandTreeImpl.java" name="FlowArrayTypeShorthandTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="72" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="43" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowArrayTypeShorthandTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowArrayTypeShorthandTreeImpl(FlowTypeTree,SyntaxToken,SyntaxToken)" num="37" count="5" type="method"/>
            <line num="38" count="5" type="stmt"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="16" type="method"/>
            <line num="45" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="11" type="method"/>
            <line num="50" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lBracketToken() : SyntaxToken" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rBracketToken() : SyntaxToken" num="63" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowArrayTypeWithKeywordTreeImpl.java" name="FlowArrayTypeWithKeywordTreeImpl.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="79" coveredmethods="7" methods="8" elements="19" classes="1" ncloc="49" statements="11" conditionals="0" coveredstatements="10"/>
            <class name="FlowArrayTypeWithKeywordTreeImpl">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowArrayTypeWithKeywordTreeImpl(SyntaxToken,SyntaxToken,FlowTypeTree,SyntaxToken)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="5" type="method"/>
            <line num="47" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayToken() : SyntaxToken" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracketToken() : SyntaxToken" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="65" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracketToken() : SyntaxToken" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowCastingExpressionTreeImpl.java" name="FlowCastingExpressionTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="10" loc="95" coveredmethods="9" methods="10" elements="24" classes="1" ncloc="63" statements="14" conditionals="0" coveredstatements="13"/>
            <class name="FlowCastingExpressionTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="10" coveredmethods="9" methods="10" elements="24" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowCastingExpressionTreeImpl(SyntaxToken,ExpressionTree,SyntaxToken,FlowTypeTree,SyntaxToken)" num="41" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="51" count="101" type="method"/>
            <line num="53" count="101" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="56" count="5" type="method"/>
            <line num="58" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftParenthesisToken() : SyntaxToken" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : ExpressionTree" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightParenthesisToken() : SyntaxToken" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="91" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowDeclareTreeImpl.java" name="FlowDeclareTreeImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="73" coveredmethods="6" methods="7" elements="16" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="FlowDeclareTreeImpl">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowDeclareTreeImpl(SyntaxToken,Tree,SyntaxToken)" num="37" count="15" type="method"/>
            <line num="38" count="15" type="stmt"/>
            <line num="39" count="15" type="stmt"/>
            <line num="40" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="72" type="method"/>
            <line num="45" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="44" type="method"/>
            <line num="50" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="declareToken() : SyntaxToken" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredObject() : Tree" num="58" count="5" type="method"/>
            <line num="60" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="69" count="14" type="method"/>
            <line num="71" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowFunctionSignatureTreeImpl.java" name="FlowFunctionSignatureTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="93" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="61" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="FlowFunctionSignatureTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowFunctionSignatureTreeImpl(SyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,FlowFunctionTypeParameterClauseTree,FlowTypeAnnotationTree)" num="45" count="5" type="method"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="14" type="method"/>
            <line num="55" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="58" count="10" type="method"/>
            <line num="60" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionToken() : SyntaxToken" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : IdentifierTree" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="73" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : FlowFunctionTypeParameterClauseTree" num="79" count="4" type="method"/>
            <line num="81" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeAnnotationTree" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowFunctionTypeParameterClauseTreeImpl.java" name="FlowFunctionTypeParameterClauseTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="83" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="55" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowFunctionTypeParameterClauseTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowFunctionTypeParameterClauseTreeImpl(InternalSyntaxToken,SeparatedList&lt;FlowFunctionTypeParameterTree&gt;,InternalSyntaxToken)" num="40" count="50" type="method"/>
            <line num="45" count="50" type="stmt"/>
            <line num="46" count="50" type="stmt"/>
            <line num="47" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="50" count="49" type="method"/>
            <line num="52" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="55" count="203" type="method"/>
            <line num="57" count="203" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="62" count="119" type="method"/>
            <line num="64" count="119" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftParenthesis() : SyntaxToken" num="67" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : SeparatedList&lt;FlowFunctionTypeParameterTree&gt;" num="73" count="13" type="method"/>
            <line num="75" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightParenthesis() : SyntaxToken" num="78" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowFunctionTypeParameterTreeImpl.java" name="FlowFunctionTypeParameterTreeImpl.java">
            <metrics coveredelements="40" coveredconditionals="4" complexity="13" loc="113" coveredmethods="11" methods="11" elements="40" classes="1" ncloc="81" statements="25" conditionals="4" coveredstatements="25"/>
            <class name="FlowFunctionTypeParameterTreeImpl">
               <metrics coveredelements="40" coveredconditionals="4" complexity="13" coveredmethods="11" methods="11" elements="40" statements="25" conditionals="4" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowFunctionTypeParameterTreeImpl(IdentifierTree,SyntaxToken,FlowTypeAnnotationTree)" num="42" count="30" type="method"/>
            <line num="43" count="30" type="stmt"/>
            <line num="44" count="30" type="stmt"/>
            <line num="45" count="30" type="stmt"/>
            <line num="46" count="30" type="stmt"/>
            <line num="47" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="FlowFunctionTypeParameterTreeImpl(FlowTypeTree)" num="50" count="15" type="method"/>
            <line num="51" count="15" type="stmt"/>
            <line num="52" count="15" type="stmt"/>
            <line num="53" count="15" type="stmt"/>
            <line num="54" count="15" type="stmt"/>
            <line num="55" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="FlowFunctionTypeParameterTreeImpl(InternalSyntaxToken,FlowFunctionTypeParameterTree)" num="58" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line num="60" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line num="62" count="3" type="stmt"/>
            <line num="63" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="63" type="cond"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="66" count="45" type="method"/>
            <line num="68" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="71" count="158" type="method"/>
            <line num="73" count="158" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="76" count="88" type="method"/>
            <line num="78" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsisToken() : SyntaxToken" num="81" count="2" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifier() : IdentifierTree" num="87" count="7" type="method"/>
            <line num="90" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryToken() : SyntaxToken" num="93" count="5" type="method"/>
            <line num="96" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAnnotation() : FlowTypeAnnotationTree" num="99" count="7" type="method"/>
            <line num="102" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="type() : FlowTypeTree" num="105" count="6" type="method"/>
            <line num="107" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="107" type="cond"/>
            <line num="108" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowFunctionTypeTreeImpl.java" name="FlowFunctionTypeTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="85" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="56" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowFunctionTypeTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowFunctionTypeTreeImpl(FlowGenericParameterClauseTree,FlowFunctionTypeParameterClauseTree,SyntaxToken,FlowTypeTree)" num="40" count="26" type="method"/>
            <line num="44" count="26" type="stmt"/>
            <line num="45" count="26" type="stmt"/>
            <line num="46" count="26" type="stmt"/>
            <line num="47" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="50" count="17" type="method"/>
            <line num="52" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="55" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : FlowFunctionTypeParameterClauseTree" num="61" count="6" type="method"/>
            <line num="63" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleArrowToken() : SyntaxToken" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeTree" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="76" count="111" type="method"/>
            <line num="78" count="111" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="78" type="method"/>
            <line num="83" count="78" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowGenericParameterClauseTreeImpl.java" name="FlowGenericParameterClauseTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="78" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="49" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowGenericParameterClauseTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowGenericParameterClauseTreeImpl(SyntaxToken,SeparatedList&lt;FlowGenericParameterTree&gt;,SyntaxToken)" num="39" count="71" type="method"/>
            <line num="40" count="71" type="stmt"/>
            <line num="41" count="71" type="stmt"/>
            <line num="42" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="23" type="method"/>
            <line num="47" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="320" type="method"/>
            <line num="52" count="320" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracketToken() : SyntaxToken" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameters() : SeparatedList&lt;FlowGenericParameterTree&gt;" num="64" count="6" type="method"/>
            <line num="66" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracketToken() : SyntaxToken" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="74" count="230" type="method"/>
            <line num="76" count="230" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowGenericParameterTreeImpl.java" name="FlowGenericParameterTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="89" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="59" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowGenericParameterTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowGenericParameterTreeImpl(IdentifierTree,FlowTypeAnnotationTree,SyntaxToken,FlowTypeTree)" num="41" count="75" type="method"/>
            <line num="46" count="75" type="stmt"/>
            <line num="47" count="75" type="stmt"/>
            <line num="48" count="75" type="stmt"/>
            <line num="49" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="52" count="29" type="method"/>
            <line num="54" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="57" count="272" type="method"/>
            <line num="59" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifier() : IdentifierTree" num="62" count="113" type="method"/>
            <line num="64" count="113" type="stmt"/>
            <line complexity="1" visibility="public" signature="superTypeAnnotation() : FlowTypeAnnotationTree" num="67" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : SyntaxToken" num="73" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultType() : FlowTypeTree" num="79" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="85" count="230" type="method"/>
            <line num="87" count="230" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowImplementsClauseTreeImpl.java" name="FlowImplementsClauseTreeImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="67" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="FlowImplementsClauseTreeImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowImplementsClauseTreeImpl(SyntaxToken,SeparatedList&lt;FlowTypeTree&gt;)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="2" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="implementsOrExtendsToken() : SyntaxToken" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : SeparatedList&lt;FlowTypeTree&gt;" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowIndexerPropertyDefinitionKeyTreeImpl.java" name="FlowIndexerPropertyDefinitionKeyTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="92" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="61" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="FlowIndexerPropertyDefinitionKeyTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowIndexerPropertyDefinitionKeyTreeImpl(SyntaxToken,IdentifierTree,SyntaxToken,FlowTypeTree,SyntaxToken)" num="41" count="5" type="method"/>
            <line num="44" count="5" type="stmt"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="51" count="12" type="method"/>
            <line num="53" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifier() : IdentifierTree" num="56" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="68" count="3" type="method"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="lbracketToken() : SyntaxToken" num="73" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rbracketToken() : SyntaxToken" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="83" count="15" type="method"/>
            <line num="85" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="88" count="6" type="method"/>
            <line num="90" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowInterfaceDeclarationTreeImpl.java" name="FlowInterfaceDeclarationTreeImpl.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="11" loc="115" coveredmethods="9" methods="11" elements="28" classes="1" ncloc="82" statements="17" conditionals="0" coveredstatements="15"/>
            <class name="FlowInterfaceDeclarationTreeImpl">
               <metrics coveredelements="24" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowInterfaceDeclarationTreeImpl(SyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,FlowImplementsClauseTree,SyntaxToken,SeparatedList&lt;FlowPropertyDefinitionTree&gt;,SyntaxToken)" num="47" count="21" type="method"/>
            <line num="52" count="21" type="stmt"/>
            <line num="53" count="21" type="stmt"/>
            <line num="54" count="21" type="stmt"/>
            <line num="55" count="21" type="stmt"/>
            <line num="56" count="21" type="stmt"/>
            <line num="57" count="21" type="stmt"/>
            <line num="58" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="61" count="57" type="method"/>
            <line num="63" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="66" count="93" type="method"/>
            <line num="68" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="74" count="67" type="method"/>
            <line num="76" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="interfaceToken() : SyntaxToken" num="79" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : IdentifierTree" num="84" count="33" type="method"/>
            <line num="86" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="89" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendsClause() : FlowImplementsClauseTree" num="95" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftCurlyBraceToken() : SyntaxToken" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="properties() : SeparatedList&lt;FlowPropertyDefinitionTree&gt;" num="106" count="5" type="method"/>
            <line num="108" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightCurlyBraceToken() : SyntaxToken" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowIntersectionTypeTreeImpl.java" name="FlowIntersectionTypeTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="67" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowIntersectionTypeTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowIntersectionTypeTreeImpl(SyntaxToken,SeparatedList&lt;FlowTypeTree&gt;)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="startAndToken() : SyntaxToken" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subTypes() : SeparatedList&lt;FlowTypeTree&gt;" num="58" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowLiteralTypeTreeImpl.java" name="FlowLiteralTypeTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="66" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowLiteralTypeTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowLiteralTypeTreeImpl(SyntaxToken,SyntaxToken)" num="36" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="41" count="12" type="method"/>
            <line num="43" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="46" count="10" type="method"/>
            <line num="48" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="minusToken() : SyntaxToken" num="51" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="literalToken() : SyntaxToken" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowMethodPropertyDefinitionKeyTreeImpl.java" name="FlowMethodPropertyDefinitionKeyTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="78" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="49" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowMethodPropertyDefinitionKeyTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowMethodPropertyDefinitionKeyTreeImpl(IdentifierTree,FlowGenericParameterClauseTree,FlowFunctionTypeParameterClauseTree)" num="39" count="14" type="method"/>
            <line num="42" count="14" type="stmt"/>
            <line num="43" count="14" type="stmt"/>
            <line num="44" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="47" count="115" type="method"/>
            <line num="49" count="115" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="52" count="75" type="method"/>
            <line num="54" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="57" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodName() : IdentifierTree" num="63" count="16" type="method"/>
            <line num="66" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : FlowFunctionTypeParameterClauseTree" num="69" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="74" count="40" type="method"/>
            <line num="76" count="40" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowModuleExportsTreeImpl.java" name="FlowModuleExportsTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="79" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="49" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowModuleExportsTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowModuleExportsTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken,FlowTypeAnnotationTree)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="5" type="method"/>
            <line num="47" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="moduleToken() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dotToken() : SyntaxToken" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exportsToken() : SyntaxToken" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAnnotation() : FlowTypeAnnotationTree" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowModuleTreeImpl.java" name="FlowModuleTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="90" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="59" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="FlowModuleTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowModuleTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken,List&lt;FlowDeclareTree&gt;,SyntaxToken)" num="40" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="51" count="10" type="method"/>
            <line num="53" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="56" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="moduleToken() : SyntaxToken" num="61" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="moduleName() : SyntaxToken" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;FlowDeclareTree&gt;" num="76" count="4" type="method"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowNamespacedTypeTreeImpl.java" name="FlowNamespacedTypeTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="FlowNamespacedTypeTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowNamespacedTypeTreeImpl(SeparatedList&lt;IdentifierTree&gt;)" num="35" count="21" type="method"/>
            <line num="36" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="39" count="8" type="method"/>
            <line num="41" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="44" count="95" type="method"/>
            <line num="46" count="95" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifiers() : SeparatedList&lt;IdentifierTree&gt;" num="49" count="5" type="method"/>
            <line num="51" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="54" count="72" type="method"/>
            <line num="56" count="72" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowObjectTypeTreeImpl.java" name="FlowObjectTypeTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="96" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="65" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="FlowObjectTypeTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowObjectTypeTreeImpl(SyntaxToken,SyntaxToken,SeparatedList&lt;FlowPropertyDefinitionTree&gt;,SyntaxToken,SyntaxToken)" num="41" count="8" type="method"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="52" count="17" type="method"/>
            <line num="54" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="lcurlyToken() : SyntaxToken" num="57" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="lpipeToken() : SyntaxToken" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="properties() : SeparatedList&lt;FlowPropertyDefinitionTree&gt;" num="68" count="7" type="method"/>
            <line num="70" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="rpipeToken() : SyntaxToken" num="73" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="rcurlyToken() : SyntaxToken" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="84" count="35" type="method"/>
            <line num="86" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="92" count="20" type="method"/>
            <line num="94" count="20" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowOpaqueTypeTreeImpl.java" name="FlowOpaqueTypeTreeImpl.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="7" loc="72" coveredmethods="3" methods="7" elements="16" classes="1" ncloc="43" statements="9" conditionals="0" coveredstatements="5"/>
            <class name="FlowOpaqueTypeTreeImpl">
               <metrics coveredelements="8" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowOpaqueTypeTreeImpl(SyntaxToken,SyntaxToken,IdentifierTree)" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="opaqueToken() : SyntaxToken" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeToken() : SyntaxToken" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAlias() : IdentifierTree" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowOptionalBindingElementTreeImpl.java" name="FlowOptionalBindingElementTreeImpl.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="7" loc="72" coveredmethods="7" methods="7" elements="15" classes="1" ncloc="43" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="FlowOptionalBindingElementTreeImpl">
               <metrics coveredelements="15" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowOptionalBindingElementTreeImpl(BindingElementTree,SyntaxToken)" num="38" count="5" type="method"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="11" type="method"/>
            <line num="45" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="13" type="method"/>
            <line num="50" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingElement() : BindingElementTree" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="questionToken() : SyntaxToken" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="63" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowOptionalTypeTreeImpl.java" name="FlowOptionalTypeTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="65" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowOptionalTypeTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowOptionalTypeTreeImpl(SyntaxToken,FlowTypeTree)" num="36" count="13" type="method"/>
            <line num="37" count="13" type="stmt"/>
            <line num="38" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="41" count="32" type="method"/>
            <line num="43" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="46" count="27" type="method"/>
            <line num="48" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="questionToken() : SyntaxToken" num="56" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="61" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowParameterizedGenericsTypeTreeImpl.java" name="FlowParameterizedGenericsTypeTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="85" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="55" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowParameterizedGenericsTypeTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowParameterizedGenericsTypeTreeImpl(FlowTypeTree,SyntaxToken,SeparatedList&lt;FlowTypeTree&gt;,SyntaxToken)" num="40" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="47" count="5" type="method"/>
            <line num="49" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="52" count="5" type="method"/>
            <line num="54" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracketToken() : SyntaxToken" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : SeparatedList&lt;FlowTypeTree&gt;" num="71" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracketToken() : SyntaxToken" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowParenthesisedTypeTreeImpl.java" name="FlowParenthesisedTypeTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="72" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="43" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowParenthesisedTypeTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowParenthesisedTypeTreeImpl(SyntaxToken,FlowTypeTree,SyntaxToken)" num="37" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftParenthesisToken() : SyntaxToken" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightParenthesisToken() : SyntaxToken" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowPropertyDefinitionTreeImpl.java" name="FlowPropertyDefinitionTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="85" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="55" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowPropertyDefinitionTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowPropertyDefinitionTreeImpl(SyntaxToken,SyntaxToken,FlowPropertyDefinitionKeyTree,FlowTypeAnnotationTree)" num="40" count="34" type="method"/>
            <line num="43" count="34" type="stmt"/>
            <line num="44" count="34" type="stmt"/>
            <line num="45" count="34" type="stmt"/>
            <line num="46" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="49" count="351" type="method"/>
            <line num="51" count="351" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="54" count="138" type="method"/>
            <line num="56" count="138" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticToken() : SyntaxToken" num="59" count="10" type="method"/>
            <line num="62" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="plusOrMinusToken() : SyntaxToken" num="65" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="key() : FlowPropertyDefinitionKeyTree" num="71" count="27" type="method"/>
            <line num="73" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAnnotation() : FlowTypeAnnotationTree" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="67" type="method"/>
            <line num="83" count="67" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowSimplePropertyDefinitionKeyTreeImpl.java" name="FlowSimplePropertyDefinitionKeyTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="65" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowSimplePropertyDefinitionKeyTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowSimplePropertyDefinitionKeyTreeImpl(SyntaxToken,SyntaxToken)" num="35" count="15" type="method"/>
            <line num="36" count="15" type="stmt"/>
            <line num="37" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="58" type="method"/>
            <line num="42" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="nameToken() : SyntaxToken" num="45" count="7" type="method"/>
            <line num="47" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryToken() : SyntaxToken" num="50" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="56" count="54" type="method"/>
            <line num="58" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="61" count="21" type="method"/>
            <line num="63" count="21" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowSimpleTypeTreeImpl.java" name="FlowSimpleTypeTreeImpl.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="8" loc="74" coveredmethods="6" methods="7" elements="20" classes="1" ncloc="44" statements="11" conditionals="2" coveredstatements="10"/>
            <class name="FlowSimpleTypeTreeImpl">
               <metrics coveredelements="18" coveredconditionals="2" complexity="8" coveredmethods="6" methods="7" elements="20" statements="11" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowSimpleTypeTreeImpl(SyntaxToken)" num="38" count="16" type="method"/>
            <line num="39" count="16" type="stmt"/>
            <line num="40" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="FlowSimpleTypeTreeImpl(IdentifierTree)" num="43" count="257" type="method"/>
            <line num="44" count="257" type="stmt"/>
            <line num="45" count="257" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="48" count="182" type="method"/>
            <line num="50" count="182" type="stmt"/>
            <line complexity="2" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="53" count="1002" type="method"/>
            <line num="55" count="1002" type="stmt"/>
            <line falsecount="51" truecount="951" num="55" type="cond"/>
            <line num="56" count="951" type="stmt"/>
            <line num="58" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="61" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="66" count="581" type="method"/>
            <line num="68" count="581" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIdentifierTree() : Optional&lt;IdentifierTree&gt;" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowTupleTypeTreeImpl.java" name="FlowTupleTypeTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="74" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowTupleTypeTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowTupleTypeTreeImpl(SyntaxToken,SeparatedList&lt;FlowTypeTree&gt;,SyntaxToken)" num="39" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="10" type="method"/>
            <line num="47" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracketToken() : SyntaxToken" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : SeparatedList&lt;FlowTypeTree&gt;" num="60" count="3" type="method"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracketToken() : SyntaxToken" num="65" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowTypeAliasStatementTreeImpl.java" name="FlowTypeAliasStatementTreeImpl.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="12" loc="120" coveredmethods="11" methods="12" elements="31" classes="1" ncloc="86" statements="19" conditionals="0" coveredstatements="18"/>
            <class name="FlowTypeAliasStatementTreeImpl">
               <metrics coveredelements="29" coveredconditionals="0" complexity="12" coveredmethods="11" methods="12" elements="31" statements="19" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowTypeAliasStatementTreeImpl(SyntaxToken,SyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,FlowTypeAnnotationTree,SyntaxToken,FlowTypeTree,SyntaxToken)" num="46" count="15" type="method"/>
            <line num="52" count="15" type="stmt"/>
            <line num="53" count="15" type="stmt"/>
            <line num="54" count="15" type="stmt"/>
            <line num="55" count="15" type="stmt"/>
            <line num="56" count="15" type="stmt"/>
            <line num="57" count="15" type="stmt"/>
            <line num="58" count="15" type="stmt"/>
            <line num="59" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="65" type="method"/>
            <line num="64" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="67" count="57" type="method"/>
            <line num="69" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="opaqueToken() : SyntaxToken" num="72" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeToken() : SyntaxToken" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAlias() : IdentifierTree" num="83" count="13" type="method"/>
            <line num="85" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="88" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="superTypeAnnotation() : FlowTypeAnnotationTree" num="94" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : SyntaxToken" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="105" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="110" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="116" count="31" type="method"/>
            <line num="118" count="31" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowTypeAnnotationTreeImpl.java" name="FlowTypeAnnotationTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="65" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowTypeAnnotationTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowTypeAnnotationTreeImpl(SyntaxToken,FlowTypeTree)" num="36" count="241" type="method"/>
            <line num="37" count="241" type="stmt"/>
            <line num="38" count="241" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="41" count="146" type="method"/>
            <line num="43" count="146" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="46" count="995" type="method"/>
            <line num="48" count="995" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="51" count="632" type="method"/>
            <line num="53" count="632" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="56" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : FlowTypeTree" num="61" count="14" type="method"/>
            <line num="63" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowTypedBindingElementTreeImpl.java" name="FlowTypedBindingElementTreeImpl.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="7" loc="72" coveredmethods="7" methods="7" elements="15" classes="1" ncloc="43" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="FlowTypedBindingElementTreeImpl">
               <metrics coveredelements="15" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowTypedBindingElementTreeImpl(BindingElementTree,FlowTypeAnnotationTree)" num="38" count="128" type="method"/>
            <line num="39" count="128" type="stmt"/>
            <line num="40" count="128" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="403" type="method"/>
            <line num="45" count="403" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="560" type="method"/>
            <line num="50" count="560" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingElement() : BindingElementTree" num="53" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAnnotation() : FlowTypeAnnotationTree" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="63" count="125" type="method"/>
            <line num="65" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="68" count="370" type="method"/>
            <line num="70" count="370" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowTypeofTypeTreeImpl.java" name="FlowTypeofTypeTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="64" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowTypeofTypeTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowTypeofTypeTreeImpl(SyntaxToken,Tree)" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="5" type="method"/>
            <line num="42" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="45" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeofToken() : SyntaxToken" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : Tree" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/flow/FlowUnionTypeTreeImpl.java" name="FlowUnionTypeTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="69" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="41" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowUnionTypeTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowUnionTypeTreeImpl(SyntaxToken,SeparatedList&lt;FlowTypeTree&gt;)" num="40" count="8" type="method"/>
            <line num="41" count="8" type="stmt"/>
            <line num="42" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="23" type="method"/>
            <line num="47" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="17" type="method"/>
            <line num="52" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="startPipeToken() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subTypes() : SeparatedList&lt;FlowTypeTree&gt;" num="60" count="5" type="method"/>
            <line num="62" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api">
         <metrics coveredelements="4" complexity="1" loc="197" methods="1" classes="3" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" ncloc="50" files="3" conditionals="0" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/CustomJavaScriptRulesDefinition.java" name="CustomJavaScriptRulesDefinition.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="69" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="CustomJavaScriptRulesDefinition">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="define(RulesDefinition.Context) : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/CustomRuleRepository.java" name="CustomRuleRepository.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CustomRuleRepository">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/JavaScriptCheck.java" name="JavaScriptCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JavaScriptCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree.flow">
         <metrics coveredelements="0" complexity="0" loc="1285" methods="0" classes="37" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="367" files="37" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowArrayTypeShorthandTree.java" name="FlowArrayTypeShorthandTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowArrayTypeShorthandTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowArrayTypeTree.java" name="FlowArrayTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowArrayTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowArrayTypeWithKeywordTree.java" name="FlowArrayTypeWithKeywordTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowArrayTypeWithKeywordTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowCastingExpressionTree.java" name="FlowCastingExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowCastingExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowDeclareTree.java" name="FlowDeclareTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowDeclareTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowFunctionSignatureTree.java" name="FlowFunctionSignatureTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowFunctionSignatureTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowFunctionTypeParameterClauseTree.java" name="FlowFunctionTypeParameterClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowFunctionTypeParameterClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowFunctionTypeParameterTree.java" name="FlowFunctionTypeParameterTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowFunctionTypeParameterTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowFunctionTypeTree.java" name="FlowFunctionTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowFunctionTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowGenericParameterClauseTree.java" name="FlowGenericParameterClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowGenericParameterClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowGenericParameterTree.java" name="FlowGenericParameterTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowGenericParameterTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowImplementsClauseTree.java" name="FlowImplementsClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowImplementsClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowIndexerPropertyDefinitionKeyTree.java" name="FlowIndexerPropertyDefinitionKeyTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowIndexerPropertyDefinitionKeyTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowInterfaceDeclarationTree.java" name="FlowInterfaceDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowInterfaceDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowIntersectionTypeTree.java" name="FlowIntersectionTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowIntersectionTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowLiteralTypeTree.java" name="FlowLiteralTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowLiteralTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowMethodPropertyDefinitionKeyTree.java" name="FlowMethodPropertyDefinitionKeyTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowMethodPropertyDefinitionKeyTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowModuleExportsTree.java" name="FlowModuleExportsTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowModuleExportsTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowModuleTree.java" name="FlowModuleTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowModuleTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowNamespacedTypeTree.java" name="FlowNamespacedTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowNamespacedTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowObjectTypeTree.java" name="FlowObjectTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowObjectTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowOpaqueTypeTree.java" name="FlowOpaqueTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowOpaqueTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowOptionalBindingElementTree.java" name="FlowOptionalBindingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowOptionalBindingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowOptionalTypeTree.java" name="FlowOptionalTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowOptionalTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowParameterizedGenericsTypeTree.java" name="FlowParameterizedGenericsTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowParameterizedGenericsTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowParenthesisedTypeTree.java" name="FlowParenthesisedTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowParenthesisedTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowPropertyDefinitionKeyTree.java" name="FlowPropertyDefinitionKeyTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowPropertyDefinitionKeyTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowPropertyDefinitionTree.java" name="FlowPropertyDefinitionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowPropertyDefinitionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowSimplePropertyDefinitionKeyTree.java" name="FlowSimplePropertyDefinitionKeyTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowSimplePropertyDefinitionKeyTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowSimpleTypeTree.java" name="FlowSimpleTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowSimpleTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowTupleTypeTree.java" name="FlowTupleTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowTupleTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowTypeAliasStatementTree.java" name="FlowTypeAliasStatementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowTypeAliasStatementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowTypeAnnotationTree.java" name="FlowTypeAnnotationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowTypeAnnotationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowTypeTree.java" name="FlowTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowTypedBindingElementTree.java" name="FlowTypedBindingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowTypedBindingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowTypeofTypeTree.java" name="FlowTypeofTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowTypeofTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/flow/FlowUnionTypeTree.java" name="FlowUnionTypeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlowUnionTypeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.symbols.type">
         <metrics coveredelements="526" complexity="195" loc="1476" methods="111" classes="18" statements="308" coveredconditionals="138" coveredmethods="94" elements="565" ncloc="956" files="14" conditionals="146" coveredstatements="294"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/AngularJS.java" name="AngularJS.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="7" loc="80" coveredmethods="4" methods="5" elements="18" classes="1" ncloc="50" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="AngularJS">
               <metrics coveredelements="17" coveredconditionals="4" complexity="7" coveredmethods="4" methods="5" elements="18" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="AngularJS()" num="50" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="isModule(CallExpressionTree) : boolean" num="53" count="1530" type="method"/>
            <line num="55" count="1530" type="stmt"/>
            <line falsecount="1154" truecount="376" num="55" type="cond"/>
            <line num="56" count="376" type="stmt"/>
            <line num="57" count="376" type="stmt"/>
            <line num="59" count="1154" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAngularModule(MemberExpressionTree) : boolean" num="65" count="376" type="method"/>
            <line num="66" count="376" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAngularModuleMethod(MemberExpressionTree) : boolean" num="69" count="371" type="method"/>
            <line num="70" count="371" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIdentifierName(ExpressionTree) : String" num="73" count="396" type="method"/>
            <line num="74" count="396" type="stmt"/>
            <line falsecount="101" truecount="295" num="74" type="cond"/>
            <line num="75" count="295" type="stmt"/>
            <line num="77" count="101" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/ArrayType.java" name="ArrayType.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="52" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ArrayType">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="ArrayType()" num="29" count="125" type="method"/>
            <line num="30" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="33" count="496" type="method"/>
            <line num="35" count="496" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Type) : ArrayType" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : ArrayType" num="44" count="121" type="method"/>
            <line num="45" count="121" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementType() : Type" num="48" count="23" type="method"/>
            <line num="50" count="23" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/Backbone.java" name="Backbone.java">
            <metrics coveredelements="29" coveredconditionals="10" complexity="11" loc="77" coveredmethods="3" methods="4" elements="32" classes="1" ncloc="44" statements="16" conditionals="12" coveredstatements="16"/>
            <class name="Backbone">
               <metrics coveredelements="29" coveredconditionals="10" complexity="11" coveredmethods="3" methods="4" elements="32" statements="16" conditionals="12" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="private" signature="Backbone()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isModel(CallExpressionTree) : boolean" num="37" count="1563" type="method"/>
            <line num="38" count="1563" type="stmt"/>
            <line complexity="5" visibility="private" signature="isModelExtendMethod(ExpressionTree) : boolean" num="42" count="1563" type="method"/>
            <line num="43" count="1563" type="stmt"/>
            <line falsecount="1154" truecount="409" num="43" type="cond"/>
            <line num="44" count="409" type="stmt"/>
            <line num="46" count="409" type="stmt"/>
            <line falsecount="388" truecount="21" num="46" type="cond"/>
            <line num="47" count="21" type="stmt"/>
            <line falsecount="16" truecount="5" num="47" type="cond"/>
            <line num="48" count="5" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="50" type="cond"/>
            <line num="51" count="16" type="stmt"/>
            <line num="52" count="16" type="stmt"/>
            <line num="57" count="1542" type="stmt"/>
            <line complexity="4" visibility="public" signature="getModelProperty(ObjectLiteralTree,String) : PairPropertyTree" num="63" count="8" type="method"/>
            <line num="65" count="8" type="stmt"/>
            <line num="67" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="67" type="cond"/>
            <line num="68" count="7" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="70" type="cond"/>
            <line num="71" count="5" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/BuiltInMethods.java" name="BuiltInMethods.java">
            <metrics coveredelements="16" coveredconditionals="5" complexity="6" loc="85" coveredmethods="2" methods="3" elements="18" classes="1" ncloc="54" statements="9" conditionals="6" coveredstatements="9"/>
            <class name="BuiltInMethods">
               <metrics coveredelements="16" coveredconditionals="5" complexity="6" coveredmethods="2" methods="3" elements="18" statements="9" conditionals="6" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="BuiltInMethods()" num="35" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="inferType(CallExpressionTree) : Type" num="61" count="1848" type="method"/>
            <line num="63" count="1848" type="stmt"/>
            <line falsecount="1248" truecount="600" num="63" type="cond"/>
            <line num="64" count="600" type="stmt"/>
            <line num="66" count="600" type="stmt"/>
            <line falsecount="0" truecount="600" num="66" type="cond"/>
            <line num="67" count="600" type="stmt"/>
            <line num="68" count="600" type="stmt"/>
            <line num="72" count="1248" type="stmt"/>
            <line complexity="2" visibility="private" signature="inferStringMethodReturnType(ExpressionTree,String) : Type" num="76" count="600" type="method"/>
            <line num="78" count="600" type="stmt"/>
            <line falsecount="399" truecount="201" num="78" type="cond"/>
            <line num="79" count="201" type="stmt"/>
            <line num="82" count="399" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/ClassType.java" name="ClassType.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="7" loc="72" coveredmethods="7" methods="7" elements="19" classes="1" ncloc="43" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="ClassType">
               <metrics coveredelements="19" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="19" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="protected" signature="ClassType()" num="35" count="176" type="method"/>
            <line num="36" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="39" count="45" type="method"/>
            <line num="41" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : ClassType" num="44" count="176" type="method"/>
            <line num="45" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="createObject() : ObjectType" num="48" count="147" type="method"/>
            <line num="49" count="147" type="stmt"/>
            <line num="50" count="147" type="stmt"/>
            <line num="51" count="147" type="stmt"/>
            <line complexity="1" visibility="public" signature="addMethod(IdentifierTree,FunctionType,Scope) : void" num="54" count="132" type="method"/>
            <line num="55" count="132" type="stmt"/>
            <line num="56" count="132" type="stmt"/>
            <line num="57" count="132" type="stmt"/>
            <line num="58" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="properties() : Collection&lt;Symbol&gt;" num="63" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="property(String) : Symbol" num="67" count="39" type="method"/>
            <line num="70" count="39" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/FunctionType.java" name="FunctionType.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="46" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="20" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FunctionType">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="FunctionType()" num="28" count="1078" type="method"/>
            <line num="29" count="1078" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="32" count="485" type="method"/>
            <line num="34" count="485" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(FunctionTree) : FunctionType" num="37" count="1078" type="method"/>
            <line num="38" count="1078" type="stmt"/>
            <line num="39" count="1078" type="stmt"/>
            <line num="40" count="1078" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionTree() : FunctionTree" num="43" count="175" type="method"/>
            <line num="44" count="175" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/JQuery.java" name="JQuery.java">
            <metrics coveredelements="24" coveredconditionals="6" complexity="9" loc="80" coveredmethods="5" methods="5" elements="24" classes="1" ncloc="42" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="JQuery">
               <metrics coveredelements="24" coveredconditionals="6" complexity="9" coveredmethods="5" methods="5" elements="24" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="JQuery(String[])" num="42" count="272" type="method"/>
            <line num="43" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="isJQueryObject(IdentifierTree) : boolean" num="46" count="12031" type="method"/>
            <line num="48" count="12031" type="stmt"/>
            <line complexity="2" visibility="private" signature="isDirectJQuerySelectorObject(ExpressionTree) : boolean" num="51" count="2077" type="method"/>
            <line num="52" count="2077" type="stmt"/>
            <line falsecount="367" truecount="1710" num="52" type="cond"/>
            <line num="53" count="1710" type="stmt"/>
            <line num="54" count="1710" type="stmt"/>
            <line num="57" count="367" type="stmt"/>
            <line complexity="4" visibility="protected" signature="isSelectorObject(ExpressionTree) : boolean" num="61" count="2077" type="method"/>
            <line num="62" count="2077" type="stmt"/>
            <line falsecount="1948" truecount="129" num="62" type="cond"/>
            <line num="63" count="129" type="stmt"/>
            <line num="66" count="1948" type="stmt"/>
            <line falsecount="1528" truecount="420" num="66" type="cond"/>
            <line num="68" count="420" type="stmt"/>
            <line num="69" count="420" type="stmt"/>
            <line num="73" count="1528" type="stmt"/>
            <line complexity="1" visibility="private" signature="isJQuerySelectorMethod(IdentifierTree) : boolean" num="76" count="35" type="method"/>
            <line num="77" count="35" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/ObjectType.java" name="ObjectType.java">
            <metrics coveredelements="38" coveredconditionals="2" complexity="28" loc="184" coveredmethods="17" methods="27" elements="58" classes="4" ncloc="139" statements="29" conditionals="2" coveredstatements="19"/>
            <class name="ObjectType">
               <metrics coveredelements="20" coveredconditionals="2" complexity="10" coveredmethods="8" methods="9" elements="22" statements="11" conditionals="2" coveredstatements="10"/>
            </class>
            <class name="ObjectType.FrameworkType">
               <metrics coveredelements="10" coveredconditionals="0" complexity="10" coveredmethods="5" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="ObjectType.BuiltInObjectType">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ObjectType.WebApiType">
               <metrics coveredelements="6" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="ObjectType(Callability)" num="32" count="2946" type="method"/>
            <line num="33" count="2946" type="stmt"/>
            <line complexity="1" visibility="public" signature="classType(ClassType) : void" num="36" count="147" type="method"/>
            <line num="37" count="147" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="40" count="618" type="method"/>
            <line num="42" count="618" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="45" count="23" type="method"/>
            <line num="47" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="classType() : ClassType" num="50" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : ObjectType" num="55" count="1307" type="method"/>
            <line num="56" count="1307" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Callability) : ObjectType" num="59" count="1567" type="method"/>
            <line num="60" count="1567" type="stmt"/>
            <line complexity="2" visibility="public" signature="property(String) : Symbol" num="63" count="89" type="method"/>
            <line num="65" count="89" type="stmt"/>
            <line falsecount="50" truecount="39" num="65" type="cond"/>
            <line num="66" count="39" type="stmt"/>
            <line num="68" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="78" count="316" type="method"/>
            <line num="80" count="316" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="89" count="109" type="method"/>
            <line num="91" count="109" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="100" count="68" type="method"/>
            <line num="102" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="111" count="39" type="method"/>
            <line num="113" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="122" count="90" type="method"/>
            <line num="124" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="136" count="30" type="method"/>
            <line num="138" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="150" count="100" type="method"/>
            <line num="152" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="161" count="85" type="method"/>
            <line num="163" count="85" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="172" count="11" type="method"/>
            <line num="174" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/PrimitiveOperations.java" name="PrimitiveOperations.java">
            <metrics coveredelements="60" coveredconditionals="14" complexity="19" loc="162" coveredmethods="8" methods="9" elements="65" classes="2" ncloc="113" statements="40" conditionals="16" coveredstatements="38"/>
            <class name="PrimitiveOperations">
               <metrics coveredelements="44" coveredconditionals="12" complexity="13" coveredmethods="5" methods="6" elements="45" statements="27" conditionals="12" coveredstatements="27"/>
            </class>
            <class name="PrimitiveOperations.OperationKey">
               <metrics coveredelements="16" coveredconditionals="2" complexity="6" coveredmethods="3" methods="3" elements="20" statements="13" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 37()" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="PrimitiveOperations()" num="84" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="put(Type.Kind,Type.Kind,Tree.Kind,Type) : void" num="87" count="20" type="method"/>
            <line num="88" count="20" type="stmt"/>
            <line complexity="3" visibility="package" signature="getType(ExpressionTree,ExpressionTree,Tree.Kind) : Type" num="91" count="881" type="method"/>
            <line num="93" count="881" type="stmt"/>
            <line falsecount="496" truecount="385" num="93" type="cond"/>
            <line num="94" count="385" type="stmt"/>
            <line num="96" count="496" type="stmt"/>
            <line falsecount="403" truecount="93" num="96" type="cond"/>
            <line num="97" count="93" type="stmt"/>
            <line num="100" count="403" type="stmt"/>
            <line complexity="4" visibility="package" signature="getType(UnaryExpressionTree) : Type" num="104" count="381" type="method"/>
            <line num="106" count="381" type="stmt"/>
            <line num="107" count="381" type="stmt"/>
            <line falsecount="129" truecount="252" num="107" type="cond"/>
            <line num="108" count="252" type="stmt"/>
            <line num="110" count="129" type="stmt"/>
            <line falsecount="89" truecount="40" num="110" type="cond"/>
            <line num="111" count="40" type="stmt"/>
            <line num="113" count="89" type="stmt"/>
            <line falsecount="8" truecount="81" num="113" type="cond"/>
            <line num="114" count="81" type="stmt"/>
            <line num="117" count="8" type="stmt"/>
            <line complexity="3" visibility="package" signature="getType(Type,Type,Tree.Kind) : Type" num="120" count="403" type="method"/>
            <line num="122" count="403" type="stmt"/>
            <line falsecount="266" truecount="137" num="122" type="cond"/>
            <line num="123" count="137" type="stmt"/>
            <line num="125" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="OperationKey(Type.Kind,Type.Kind,Tree.Kind)" num="134" count="157" type="method"/>
            <line num="135" count="157" type="stmt"/>
            <line num="136" count="157" type="stmt"/>
            <line num="137" count="157" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="140" count="110" type="method"/>
            <line num="142" count="110" type="stmt"/>
            <line falsecount="110" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="110" type="stmt"/>
            <line falsecount="110" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="110" type="stmt"/>
            <line num="150" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="153" count="157" type="method"/>
            <line num="155" count="157" type="stmt"/>
            <line num="156" count="157" type="stmt"/>
            <line num="157" count="157" type="stmt"/>
            <line num="158" count="157" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/PrimitiveType.java" name="PrimitiveType.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="9" loc="74" coveredmethods="8" methods="9" elements="18" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="PrimitiveType">
               <metrics coveredelements="16" coveredconditionals="0" complexity="9" coveredmethods="8" methods="9" elements="18" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="26" count="509" type="method"/>
            <line num="28" count="509" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="37" count="499" type="method"/>
            <line num="39" count="499" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="48" count="1194" type="method"/>
            <line num="50" count="1194" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="59" count="191" type="method"/>
            <line num="61" count="191" type="stmt"/>
            <line complexity="1" visibility="public" signature="callability() : Callability" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="70" count="5" type="method"/>
            <line num="72" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/TypableTree.java" name="TypableTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TypableTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/TypeVisitor.java" name="TypeVisitor.java">
            <metrics coveredelements="239" coveredconditionals="81" complexity="68" loc="380" coveredmethods="24" methods="24" elements="243" classes="1" ncloc="288" statements="135" conditionals="84" coveredstatements="134"/>
            <class name="TypeVisitor">
               <metrics coveredelements="239" coveredconditionals="81" complexity="68" coveredmethods="24" methods="24" elements="243" statements="135" conditionals="84" coveredstatements="134"/>
            </class>
            <line complexity="2" visibility="public" signature="TypeVisitor(Configuration)" num="65" count="272" type="method"/>
            <line num="66" count="272" type="stmt"/>
            <line falsecount="175" truecount="97" num="66" type="cond"/>
            <line num="67" count="97" type="stmt"/>
            <line num="69" count="175" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="73" count="868" type="method"/>
            <line num="75" count="868" type="stmt"/>
            <line num="76" count="868" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitInitializedBindingElement(InitializedBindingElementTree) : void" num="79" count="1743" type="method"/>
            <line num="82" count="1743" type="stmt"/>
            <line falsecount="1713" truecount="30" num="82" type="cond"/>
            <line num="83" count="30" type="stmt"/>
            <line num="86" count="1713" type="stmt"/>
            <line num="87" count="1713" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitLiteral(LiteralTree) : void" num="90" count="3133" type="method"/>
            <line num="92" count="3133" type="stmt"/>
            <line falsecount="1359" truecount="1774" num="92" type="cond"/>
            <line num="93" count="1774" type="stmt"/>
            <line num="95" count="1359" type="stmt"/>
            <line falsecount="467" truecount="892" num="95" type="cond"/>
            <line num="96" count="892" type="stmt"/>
            <line num="98" count="467" type="stmt"/>
            <line falsecount="130" truecount="337" num="98" type="cond"/>
            <line num="99" count="337" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayLiteral(ArrayLiteralTree) : void" num="103" count="118" type="method"/>
            <line num="105" count="118" type="stmt"/>
            <line num="106" count="118" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectLiteral(ObjectLiteralTree) : void" num="109" count="113" type="method"/>
            <line num="111" count="113" type="stmt"/>
            <line num="112" count="113" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="115" count="593" type="method"/>
            <line num="117" count="593" type="stmt"/>
            <line num="118" count="593" type="stmt"/>
            <line num="120" count="593" type="stmt"/>
            <line num="125" count="593" type="stmt"/>
            <line num="126" count="593" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="129" count="223" type="method"/>
            <line num="131" count="223" type="stmt"/>
            <line falsecount="170" truecount="53" num="131" type="cond"/>
            <line num="132" count="53" type="stmt"/>
            <line num="134" count="223" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitClass(ClassTree) : void" num="137" count="132" type="method"/>
            <line num="139" count="132" type="stmt"/>
            <line num="140" count="132" type="stmt"/>
            <line falsecount="7" truecount="125" num="140" type="cond"/>
            <line num="141" count="125" type="stmt"/>
            <line num="144" count="132" type="stmt"/>
            <line num="145" count="221" type="stmt"/>
            <line num="146" count="221" type="stmt"/>
            <line falsecount="87" truecount="134" num="146" type="cond"/>
            <line num="147" count="134" type="stmt"/>
            <line num="150" count="87" type="stmt"/>
            <line num="153" count="134" type="stmt"/>
            <line falsecount="2" truecount="132" num="153" type="cond"/>
            <line num="155" count="132" type="stmt"/>
            <line num="156" count="132" type="stmt"/>
            <line num="160" count="132" type="stmt"/>
            <line complexity="8" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="163" count="1848" type="method"/>
            <line num="165" count="1848" type="stmt"/>
            <line num="167" count="1848" type="stmt"/>
            <line num="169" count="1848" type="stmt"/>
            <line falsecount="1657" truecount="191" num="169" type="cond"/>
            <line num="170" count="191" type="stmt"/>
            <line num="172" count="1657" type="stmt"/>
            <line falsecount="1563" truecount="94" num="172" type="cond"/>
            <line num="173" count="94" type="stmt"/>
            <line num="175" count="1563" type="stmt"/>
            <line falsecount="1542" truecount="21" num="175" type="cond"/>
            <line num="176" count="21" type="stmt"/>
            <line num="178" count="1542" type="stmt"/>
            <line falsecount="1539" truecount="3" num="178" type="cond"/>
            <line num="179" count="3" type="stmt"/>
            <line num="181" count="1539" type="stmt"/>
            <line falsecount="1534" truecount="5" num="181" type="cond"/>
            <line num="182" count="5" type="stmt"/>
            <line num="184" count="1534" type="stmt"/>
            <line falsecount="1530" truecount="4" num="184" type="cond"/>
            <line num="185" count="4" type="stmt"/>
            <line num="187" count="1530" type="stmt"/>
            <line falsecount="1520" truecount="10" num="187" type="cond"/>
            <line num="188" count="10" type="stmt"/>
            <line num="191" count="1848" type="stmt"/>
            <line complexity="1" visibility="private" signature="addType(ExpressionTree,Type) : void" num="194" count="5170" type="method"/>
            <line num="195" count="5170" type="stmt"/>
            <line complexity="4" visibility="private" signature="inferParameterType(CallExpressionTree) : void" num="198" count="1848" type="method"/>
            <line num="199" count="1848" type="stmt"/>
            <line num="200" count="1848" type="stmt"/>
            <line falsecount="1681" truecount="167" num="200" type="cond"/>
            <line num="202" count="167" type="stmt"/>
            <line num="203" count="167" type="stmt"/>
            <line num="204" count="167" type="stmt"/>
            <line falsecount="161" truecount="6" num="204" type="cond"/>
            <line num="206" count="167" type="stmt"/>
            <line falsecount="167" truecount="91" num="206" type="cond"/>
            <line num="207" count="91" type="stmt"/>
            <line num="208" count="91" type="stmt"/>
            <line complexity="3" visibility="private" signature="inferParameterType(Tree,List&lt;ExpressionTree&gt;,int) : void" num="213" count="91" type="method"/>
            <line num="214" count="91" type="stmt"/>
            <line falsecount="6" truecount="85" num="214" type="cond"/>
            <line num="215" count="85" type="stmt"/>
            <line num="216" count="85" type="stmt"/>
            <line falsecount="0" truecount="85" num="216" type="cond"/>
            <line num="217" count="85" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="visitNewExpression(NewExpressionTree) : void" num="228" count="280" type="method"/>
            <line num="230" count="280" type="stmt"/>
            <line num="232" count="280" type="stmt"/>
            <line num="234" count="280" type="stmt"/>
            <line falsecount="265" truecount="15" num="234" type="cond"/>
            <line num="235" count="15" type="stmt"/>
            <line num="236" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="236" type="cond"/>
            <line num="237" count="15" type="stmt"/>
            <line num="240" count="265" type="stmt"/>
            <line falsecount="251" truecount="14" num="240" type="cond"/>
            <line num="241" count="14" type="stmt"/>
            <line num="243" count="251" type="stmt"/>
            <line falsecount="236" truecount="15" num="243" type="cond"/>
            <line num="244" count="15" type="stmt"/>
            <line num="246" count="236" type="stmt"/>
            <line falsecount="218" truecount="18" num="246" type="cond"/>
            <line num="247" count="18" type="stmt"/>
            <line num="249" count="218" type="stmt"/>
            <line falsecount="202" truecount="16" num="249" type="cond"/>
            <line num="250" count="16" type="stmt"/>
            <line num="252" count="202" type="stmt"/>
            <line falsecount="172" truecount="30" num="252" type="cond"/>
            <line num="253" count="30" type="stmt"/>
            <line num="256" count="172" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="261" count="10798" type="method"/>
            <line num="263" count="10798" type="stmt"/>
            <line falsecount="10701" truecount="96" num="263" type="cond"/>
            <line num="264" count="96" type="stmt"/>
            <line num="267" count="10798" type="stmt"/>
            <line falsecount="10782" truecount="16" num="267" type="cond"/>
            <line num="268" count="16" type="stmt"/>
            <line num="271" count="10798" type="stmt"/>
            <line falsecount="10616" truecount="182" num="271" type="cond"/>
            <line num="272" count="182" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParenthesisedExpression(ParenthesisedExpressionTree) : void" num="276" count="91" type="method"/>
            <line num="278" count="91" type="stmt"/>
            <line num="279" count="91" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitMemberExpression(MemberExpressionTree) : void" num="282" count="877" type="method"/>
            <line num="284" count="877" type="stmt"/>
            <line num="286" count="877" type="stmt"/>
            <line falsecount="873" truecount="4" num="286" type="cond"/>
            <line num="287" count="4" type="stmt"/>
            <line num="290" count="877" type="stmt"/>
            <line falsecount="873" truecount="4" num="290" type="cond"/>
            <line num="291" count="4" type="stmt"/>
            <line num="294" count="877" type="stmt"/>
            <line falsecount="818" truecount="59" num="294" type="cond"/>
            <line num="295" count="59" type="stmt"/>
            <line num="296" count="59" type="stmt"/>
            <line falsecount="55" truecount="4" num="296" type="cond"/>
            <line num="297" count="4" type="stmt"/>
            <line num="301" count="818" type="stmt"/>
            <line complexity="4" visibility="private" signature="resolveObjectPropertyAccess(MemberExpressionTree) : void" num="305" count="818" type="method"/>
            <line num="306" count="818" type="stmt"/>
            <line num="307" count="818" type="stmt"/>
            <line falsecount="731" truecount="87" num="307" type="cond"/>
            <line num="308" count="87" type="stmt"/>
            <line num="309" count="87" type="stmt"/>
            <line num="310" count="87" type="stmt"/>
            <line falsecount="80" truecount="7" num="310" type="cond"/>
            <line num="311" count="7" type="stmt"/>
            <line num="313" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitBinaryExpression(BinaryExpressionTree) : void" num="318" count="881" type="method"/>
            <line num="320" count="881" type="stmt"/>
            <line num="322" count="881" type="stmt"/>
            <line num="328" count="881" type="stmt"/>
            <line falsecount="293" truecount="588" num="328" type="cond"/>
            <line num="329" count="588" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="333" count="381" type="method"/>
            <line num="335" count="381" type="stmt"/>
            <line num="337" count="381" type="stmt"/>
            <line num="338" count="381" type="stmt"/>
            <line falsecount="8" truecount="373" num="338" type="cond"/>
            <line num="339" count="373" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="343" count="168" type="method"/>
            <line num="345" count="168" type="stmt"/>
            <line num="347" count="168" type="stmt"/>
            <line num="348" count="168" type="stmt"/>
            <line num="349" count="168" type="stmt"/>
            <line num="351" count="168" type="stmt"/>
            <line complexity="3" visibility="private" signature="inferType(Tree,ExpressionTree) : void" num="354" count="2581" type="method"/>
            <line num="355" count="2581" type="stmt"/>
            <line num="357" count="2581" type="stmt"/>
            <line falsecount="115" truecount="2466" num="357" type="cond"/>
            <line num="358" count="2466" type="stmt"/>
            <line num="360" count="2466" type="stmt"/>
            <line falsecount="0" truecount="2466" num="360" type="cond"/>
            <line num="361" count="2466" type="stmt"/>
            <line complexity="2" visibility="private" signature="addTypes(Symbol,TypeSet) : void" num="366" count="2604" type="method"/>
            <line num="367" count="2604" type="stmt"/>
            <line falsecount="2113" truecount="491" num="367" type="cond"/>
            <line num="368" count="491" type="stmt"/>
            <line num="370" count="2113" type="stmt"/>
            <line complexity="1" visibility="private" signature="addTypes(ExpressionTree,TypeSet) : void" num="374" count="98" type="method"/>
            <line num="375" count="98" type="stmt"/>
            <line num="376" count="61" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/Utils.java" name="Utils.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="39" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Utils">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="Utils()" num="29" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isPropertyAccess(DotMemberExpressionTree,Type.Kind,String) : boolean" num="32" count="2021" type="method"/>
            <line num="33" count="2021" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifierWithName(ExpressionTree,String) : boolean" num="36" count="948" type="method"/>
            <line num="37" count="948" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/type/WebAPI.java" name="WebAPI.java">
            <metrics coveredelements="42" coveredconditionals="16" complexity="19" loc="119" coveredmethods="5" methods="6" elements="43" classes="1" ncloc="70" statements="21" conditionals="16" coveredstatements="21"/>
            <class name="WebAPI">
               <metrics coveredelements="42" coveredconditionals="16" complexity="19" coveredmethods="5" methods="6" elements="43" statements="21" conditionals="16" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="private" signature="WebAPI()" num="56" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="isWindow(ExpressionTree) : boolean" num="59" count="2419" type="method"/>
            <line num="62" count="2419" type="stmt"/>
            <line falsecount="2031" truecount="388" num="62" type="cond"/>
            <line num="63" count="388" type="stmt"/>
            <line num="64" count="388" type="stmt"/>
            <line falsecount="385" truecount="3" num="64" type="cond"/>
            <line num="65" count="3" type="stmt"/>
            <line num="71" count="2416" type="stmt"/>
            <line falsecount="1598" truecount="818" num="71" type="cond"/>
            <line num="72" count="818" type="stmt"/>
            <line num="74" count="818" type="stmt"/>
            <line falsecount="814" truecount="4" num="74" type="cond"/>
            <line num="75" count="4" type="stmt"/>
            <line num="82" count="2412" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDocument(IdentifierTree) : boolean" num="85" count="10798" type="method"/>
            <line num="86" count="10798" type="stmt"/>
            <line complexity="4" visibility="public" signature="isElement(ExpressionTree) : boolean" num="89" count="2416" type="method"/>
            <line num="91" count="2416" type="stmt"/>
            <line falsecount="2031" truecount="385" num="91" type="cond"/>
            <line num="92" count="385" type="stmt"/>
            <line num="93" count="385" type="stmt"/>
            <line falsecount="380" truecount="5" num="93" type="cond"/>
            <line num="94" count="5" type="stmt"/>
            <line num="98" count="2411" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDocumentUsed(DotMemberExpressionTree,List&lt;String&gt;) : boolean" num="102" count="1203" type="method"/>
            <line num="103" count="1203" type="stmt"/>
            <line complexity="5" visibility="public" signature="isElementList(ExpressionTree) : boolean" num="106" count="1534" type="method"/>
            <line num="107" count="1534" type="stmt"/>
            <line falsecount="1154" truecount="380" num="107" type="cond"/>
            <line num="108" count="380" type="stmt"/>
            <line num="110" count="380" type="stmt"/>
            <line falsecount="376" truecount="4" num="110" type="cond"/>
            <line num="111" count="4" type="stmt"/>
            <line num="115" count="1530" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.visitors">
         <metrics coveredelements="403" complexity="191" loc="1374" methods="183" classes="12" statements="226" coveredconditionals="15" coveredmethods="172" elements="425" ncloc="875" files="12" conditionals="16" coveredstatements="216"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/DoubleDispatchVisitor.java" name="DoubleDispatchVisitor.java">
            <metrics coveredelements="269" coveredconditionals="5" complexity="139" loc="726" coveredmethods="128" methods="136" elements="286" classes="1" ncloc="565" statements="144" conditionals="6" coveredstatements="136"/>
            <class name="DoubleDispatchVisitor">
               <metrics coveredelements="269" coveredconditionals="5" complexity="139" coveredmethods="128" methods="136" elements="286" statements="144" conditionals="6" coveredstatements="136"/>
            </class>
            <line complexity="1" visibility="public" signature="getContext() : TreeVisitorContext" num="166" count="962" type="method"/>
            <line num="168" count="962" type="stmt"/>
            <line num="169" count="962" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanTree(TreeVisitorContext) : void" num="172" count="1147" type="method"/>
            <line num="174" count="1146" type="stmt"/>
            <line num="175" count="1146" type="stmt"/>
            <line complexity="2" visibility="protected" signature="scan(Tree) : void" num="178" count="10827" type="method"/>
            <line num="179" count="10827" type="stmt"/>
            <line falsecount="0" truecount="10827" num="179" type="cond"/>
            <line num="180" count="10827" type="stmt"/>
            <line complexity="3" visibility="protected" signature="scanChildren(Tree) : void" num="184" count="134646" type="method"/>
            <line num="185" count="134647" type="stmt"/>
            <line num="187" count="134647" type="stmt"/>
            <line num="189" count="134647" type="stmt"/>
            <line falsecount="134647" truecount="341950" num="189" type="cond"/>
            <line num="190" count="341950" type="stmt"/>
            <line num="191" count="341949" type="stmt"/>
            <line falsecount="31472" truecount="310477" num="191" type="cond"/>
            <line num="192" count="310477" type="stmt"/>
            <line complexity="1" visibility="protected" signature="scan(List&lt;T&gt;) : void" num="197" count="99" type="method"/>
            <line num="198" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="201" count="1177" type="method"/>
            <line num="202" count="1177" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitModule(ModuleTree) : void" num="205" count="1165" type="method"/>
            <line num="206" count="1164" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportDeclaration(ImportDeclarationTree) : void" num="209" count="519" type="method"/>
            <line num="210" count="519" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportModuleDeclaration(ImportModuleDeclarationTree) : void" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportClause(ImportClauseTree) : void" num="217" count="519" type="method"/>
            <line num="218" count="519" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNamedImportExportClause(NamedImportExportClauseTree) : void" num="221" count="291" type="method"/>
            <line num="222" count="291" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNameSpaceImport(NameSpaceImportTree) : void" num="225" count="148" type="method"/>
            <line num="226" count="148" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSpecifier(SpecifierTree) : void" num="229" count="387" type="method"/>
            <line num="230" count="387" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFromClause(FromClauseTree) : void" num="233" count="523" type="method"/>
            <line num="234" count="523" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDefaultExportDeclaration(DefaultExportDeclarationTree) : void" num="237" count="1" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNameSpaceExportDeclaration(NameSpaceExportDeclarationTree) : void" num="241" count="1" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNamedExportDeclaration(NamedExportDeclarationTree) : void" num="245" count="7" type="method"/>
            <line num="246" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExportDefaultBinding(ExportDefaultBinding) : void" num="249" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExportDefaultBindingWithNameSpaceExport(ExportDefaultBindingWithNameSpaceExport) : void" num="253" count="1" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExportDefaultBindingWithExportList(ExportDefaultBindingWithExportList) : void" num="257" count="1" type="method"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitVariableStatement(VariableStatementTree) : void" num="261" count="8171" type="method"/>
            <line num="262" count="8171" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitVariableDeclaration(VariableDeclarationTree) : void" num="265" count="6739" type="method"/>
            <line num="266" count="6739" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClass(ClassTree) : void" num="269" count="592" type="method"/>
            <line num="270" count="592" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExtendsClause(ExtendsClauseTree) : void" num="273" count="206" type="method"/>
            <line num="274" count="206" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDecorator(DecoratorTree) : void" num="277" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMethodDeclaration(MethodDeclarationTree) : void" num="281" count="752" type="method"/>
            <line num="282" count="752" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAccessorMethodDeclaration(AccessorMethodDeclarationTree) : void" num="285" count="291" type="method"/>
            <line num="286" count="291" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFieldDeclaration(FieldDeclarationTree) : void" num="289" count="153" type="method"/>
            <line num="290" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParameterList(ParameterListTree) : void" num="293" count="4750" type="method"/>
            <line num="294" count="4750" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArgumentList(ArgumentListTree) : void" num="297" count="8735" type="method"/>
            <line num="298" count="8735" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="301" count="2448" type="method"/>
            <line num="302" count="2448" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBlock(BlockTree) : void" num="305" count="9016" type="method"/>
            <line num="306" count="9016" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitEmptyStatement(EmptyStatementTree) : void" num="309" count="38" type="method"/>
            <line num="310" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLabelledStatement(LabelledStatementTree) : void" num="313" count="43" type="method"/>
            <line num="314" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExpressionStatement(ExpressionStatementTree) : void" num="317" count="10152" type="method"/>
            <line num="318" count="10152" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitIfStatement(IfStatementTree) : void" num="321" count="2027" type="method"/>
            <line num="322" count="2027" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitElseClause(ElseClauseTree) : void" num="325" count="328" type="method"/>
            <line num="326" count="328" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="329" count="575" type="method"/>
            <line num="330" count="575" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatementTree) : void" num="333" count="260" type="method"/>
            <line num="334" count="260" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDoWhileStatement(DoWhileStatementTree) : void" num="337" count="104" type="method"/>
            <line num="338" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitContinueStatement(ContinueStatementTree) : void" num="341" count="36" type="method"/>
            <line num="342" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="345" count="29507" type="method"/>
            <line num="346" count="29507" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBreakStatement(BreakStatementTree) : void" num="349" count="192" type="method"/>
            <line num="350" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitReturnStatement(ReturnStatementTree) : void" num="353" count="915" type="method"/>
            <line num="354" count="915" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWithStatement(WithStatementTree) : void" num="357" count="13" type="method"/>
            <line num="358" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="361" count="38" type="method"/>
            <line num="362" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDefaultClause(DefaultClauseTree) : void" num="365" count="32" type="method"/>
            <line num="366" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCaseClause(CaseClauseTree) : void" num="369" count="174" type="method"/>
            <line num="370" count="174" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitThrowStatement(ThrowStatementTree) : void" num="373" count="92" type="method"/>
            <line num="374" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTryStatement(TryStatementTree) : void" num="377" count="244" type="method"/>
            <line num="378" count="244" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCatchBlock(CatchBlockTree) : void" num="381" count="240" type="method"/>
            <line num="382" count="240" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFinallyBlock(FinallyBlockTree) : void" num="385" count="96" type="method"/>
            <line num="386" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDebugger(DebuggerStatementTree) : void" num="389" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayBindingPattern(ArrayBindingPatternTree) : void" num="393" count="84" type="method"/>
            <line num="394" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectBindingPattern(ObjectBindingPatternTree) : void" num="397" count="61" type="method"/>
            <line num="398" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectLiteral(ObjectLiteralTree) : void" num="401" count="515" type="method"/>
            <line num="402" count="515" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBindingProperty(BindingPropertyTree) : void" num="405" count="57" type="method"/>
            <line num="406" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitInitializedBindingElement(InitializedBindingElementTree) : void" num="409" count="5412" type="method"/>
            <line num="410" count="5412" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLiteral(LiteralTree) : void" num="413" count="10071" type="method"/>
            <line num="414" count="10070" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrayLiteral(ArrayLiteralTree) : void" num="417" count="499" type="method"/>
            <line num="418" count="499" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="421" count="1995" type="method"/>
            <line num="422" count="1995" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpressionTree) : void" num="425" count="174" type="method"/>
            <line num="426" count="174" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrowFunction(ArrowFunctionTree) : void" num="429" count="339" type="method"/>
            <line num="430" count="339" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldExpression(YieldExpressionTree) : void" num="433" count="42" type="method"/>
            <line num="434" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBinaryExpression(BinaryExpressionTree) : void" num="437" count="3698" type="method"/>
            <line num="438" count="3698" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="441" count="1443" type="method"/>
            <line num="442" count="1443" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMemberExpression(MemberExpressionTree) : void" num="445" count="3813" type="method"/>
            <line num="446" count="3813" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTaggedTemplate(TaggedTemplateTree) : void" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCallExpression(CallExpressionTree) : void" num="453" count="7925" type="method"/>
            <line num="454" count="7925" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTemplateLiteral(TemplateLiteralTree) : void" num="457" count="80" type="method"/>
            <line num="458" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTemplateExpression(TemplateExpressionTree) : void" num="461" count="80" type="method"/>
            <line num="462" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTemplateCharacters(TemplateCharactersTree) : void" num="465" count="76" type="method"/>
            <line num="466" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParenthesisedExpression(ParenthesisedExpressionTree) : void" num="469" count="394" type="method"/>
            <line num="470" count="394" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComputedPropertyName(ComputedPropertyNameTree) : void" num="473" count="15" type="method"/>
            <line num="474" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPairProperty(PairPropertyTree) : void" num="477" count="599" type="method"/>
            <line num="478" count="599" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNewExpression(NewExpressionTree) : void" num="481" count="1181" type="method"/>
            <line num="482" count="1181" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="485" count="955" type="method"/>
            <line num="486" count="955" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitRestElement(RestElementTree) : void" num="489" count="33" type="method"/>
            <line num="490" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSpreadElement(SpreadElementTree) : void" num="493" count="20" type="method"/>
            <line num="494" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSuper(SuperTree) : void" num="497" count="332" type="method"/>
            <line num="498" count="332" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImport(ImportTree) : void" num="501" count="0" type="method"/>
            <line num="502" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNewTarget(NewTargetTree) : void" num="505" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExportClause(ExportClauseTree) : void" num="509" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="513" count="292" type="method"/>
            <line num="514" count="292" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxIdentifier(JsxIdentifierTree) : void" num="517" count="6" type="method"/>
            <line num="518" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxText(JsxTextTree) : void" num="521" count="2" type="method"/>
            <line num="522" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxSpreadAttribute(JsxSpreadAttributeTree) : void" num="525" count="1" type="method"/>
            <line num="526" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxStandardAttribute(JsxStandardAttributeTree) : void" num="529" count="1" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxJavaScriptExpression(JsxJavaScriptExpressionTree) : void" num="533" count="2" type="method"/>
            <line num="534" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxClosingElement(JsxClosingElementTree) : void" num="537" count="2" type="method"/>
            <line num="538" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxOpeningElement(JsxOpeningElementTree) : void" num="541" count="2" type="method"/>
            <line num="542" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxStandardElement(JsxStandardElementTree) : void" num="545" count="2" type="method"/>
            <line num="546" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxSelfClosingElement(JsxSelfClosingElementTree) : void" num="549" count="2" type="method"/>
            <line num="550" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitToken(SyntaxToken) : void" num="553" count="162131" type="method"/>
            <line num="554" count="162131" type="stmt"/>
            <line num="555" count="9365" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComment(SyntaxTrivia) : void" num="559" count="9365" type="method"/>
            <line complexity="1" visibility="public" signature="visitArrayAssignmentPattern(ArrayAssignmentPatternTree) : void" num="563" count="45" type="method"/>
            <line num="564" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentPatternRestElement(AssignmentPatternRestElementTree) : void" num="567" count="13" type="method"/>
            <line num="568" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitInitializedAssignmentPatternElement(InitializedAssignmentPatternElementTree) : void" num="571" count="9" type="method"/>
            <line num="572" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectAssignmentPatternPairElement(ObjectAssignmentPatternPairElementTree) : void" num="575" count="17" type="method"/>
            <line num="576" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitObjectAssignmentPattern(ObjectAssignmentPatternTree) : void" num="579" count="29" type="method"/>
            <line num="580" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowSimpleType(FlowSimpleTypeTree) : void" num="583" count="581" type="method"/>
            <line num="584" count="581" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowLiteralType(FlowLiteralTypeTree) : void" num="587" count="1" type="method"/>
            <line num="588" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowFunctionType(FlowFunctionTypeTree) : void" num="591" count="78" type="method"/>
            <line num="592" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowFunctionTypeParameterClause(FlowFunctionTypeParameterClauseTree) : void" num="595" count="119" type="method"/>
            <line num="596" count="119" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowFunctionTypeParameter(FlowFunctionTypeParameterTree) : void" num="599" count="88" type="method"/>
            <line num="600" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowObjectTypeTree(FlowObjectTypeTree) : void" num="603" count="20" type="method"/>
            <line num="604" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowPropertyType(FlowPropertyDefinitionTreeImpl) : void" num="607" count="67" type="method"/>
            <line num="608" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowPropertyTypeKey(FlowPropertyDefinitionKeyTree) : void" num="611" count="27" type="method"/>
            <line num="612" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowOptionalType(FlowOptionalTypeTree) : void" num="615" count="1" type="method"/>
            <line num="616" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowTypeAnnotation(FlowTypeAnnotationTree) : void" num="619" count="632" type="method"/>
            <line num="620" count="632" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowParenthesisedType(FlowParenthesisedTypeTree) : void" num="623" count="1" type="method"/>
            <line num="624" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowTupleType(FlowTupleTypeTree) : void" num="627" count="1" type="method"/>
            <line num="628" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowArrayTypeShorthand(FlowArrayTypeShorthandTree) : void" num="631" count="1" type="method"/>
            <line num="632" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowArrayTypeWithKeywordTree(FlowArrayTypeWithKeywordTree) : void" num="635" count="1" type="method"/>
            <line num="636" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowUnionType(FlowUnionTypeTree) : void" num="639" count="1" type="method"/>
            <line num="640" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowIntersectionType(FlowIntersectionTypeTree) : void" num="643" count="1" type="method"/>
            <line num="644" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowTypedBindingElement(FlowTypedBindingElementTree) : void" num="647" count="370" type="method"/>
            <line num="648" count="370" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowTypeofType(FlowTypeofTypeTree) : void" num="651" count="1" type="method"/>
            <line num="652" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowCastingExpression(FlowCastingExpressionTree) : void" num="655" count="1" type="method"/>
            <line num="656" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowOptionalBindingElement(FlowOptionalBindingElementTree) : void" num="659" count="1" type="method"/>
            <line num="660" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowTypeAliasStatement(FlowTypeAliasStatementTree) : void" num="663" count="31" type="method"/>
            <line num="664" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowDeclare(FlowDeclareTree) : void" num="667" count="14" type="method"/>
            <line num="668" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowModule(FlowModuleTree) : void" num="671" count="1" type="method"/>
            <line num="672" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowModuleExports(FlowModuleExportsTree) : void" num="675" count="1" type="method"/>
            <line num="676" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowFunctionSignature(FlowFunctionSignatureTree) : void" num="679" count="1" type="method"/>
            <line num="680" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowOpaqueType(FlowOpaqueTypeTree) : void" num="683" count="1" type="method"/>
            <line num="684" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowNamespacedType(FlowNamespacedTypeTree) : void" num="687" count="72" type="method"/>
            <line num="688" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowInterfaceDeclaration(FlowInterfaceDeclarationTree) : void" num="691" count="67" type="method"/>
            <line num="692" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowMethodPropertyDefinitionKey(FlowMethodPropertyDefinitionKeyTree) : void" num="695" count="40" type="method"/>
            <line num="696" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowGenericParameter(FlowGenericParameterTree) : void" num="699" count="174" type="method"/>
            <line num="700" count="174" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowGenericParameterClause(FlowGenericParameterClauseTree) : void" num="703" count="230" type="method"/>
            <line num="704" count="230" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowParameterizedGenerics(FlowParameterizedGenericsTypeTree) : void" num="707" count="1" type="method"/>
            <line num="708" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowImplementsClause(FlowImplementsClauseTree) : void" num="711" count="0" type="method"/>
            <line num="712" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxEmptyClosingElement(JsxEmptyClosingElementTree) : void" num="715" count="1" type="method"/>
            <line num="716" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxEmptyOpeningElement(JsxEmptyOpeningElementTree) : void" num="719" count="1" type="method"/>
            <line num="720" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitJsxShortFragmentElement(JsxShortFragmentElementTree) : void" num="723" count="1" type="method"/>
            <line num="724" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/DoubleDispatchVisitorCheck.java" name="DoubleDispatchVisitorCheck.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="57" coveredmethods="3" methods="4" elements="10" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="DoubleDispatchVisitorCheck">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile(TreeVisitorContext) : List&lt;Issue&gt;" num="31" count="59" type="method"/>
            <line num="33" count="59" type="stmt"/>
            <line num="34" count="59" type="stmt"/>
            <line num="35" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLineIssue(Tree,String) : LineIssue" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="47" count="292" type="method"/>
            <line num="49" count="292" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="52" count="12" type="method"/>
            <line num="54" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/FileIssue.java" name="FileIssue.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="31" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="FileIssue">
               <metrics coveredelements="13" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="FileIssue(JavaScriptCheck,String)" num="32" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : String" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="check() : JavaScriptCheck" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost() : Double" num="47" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost(double) : Issue" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/Issue.java" name="Issue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Issue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/IssueLocation.java" name="IssueLocation.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="8" loc="67" coveredmethods="8" methods="8" elements="18" classes="1" ncloc="36" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="IssueLocation">
               <metrics coveredelements="18" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="IssueLocation(Tree,String)" num="32" count="1055" type="method"/>
            <line num="33" count="1055" type="stmt"/>
            <line complexity="1" visibility="public" signature="IssueLocation(Tree)" num="36" count="33" type="method"/>
            <line num="37" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="IssueLocation(Tree,Tree,String)" num="40" count="1075" type="method"/>
            <line num="41" count="1075" type="stmt"/>
            <line num="42" count="1075" type="stmt"/>
            <line num="43" count="1075" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : String" num="46" count="215" type="method"/>
            <line num="48" count="215" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLine() : int" num="51" count="3085" type="method"/>
            <line num="52" count="3085" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLineOffset() : int" num="55" count="195" type="method"/>
            <line num="56" count="195" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="59" count="143" type="method"/>
            <line num="60" count="143" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLineOffset() : int" num="63" count="194" type="method"/>
            <line num="64" count="194" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/JavaScriptFile.java" name="JavaScriptFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JavaScriptFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/LineIssue.java" name="LineIssue.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="7" loc="77" coveredmethods="7" methods="7" elements="22" classes="1" ncloc="44" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="LineIssue">
               <metrics coveredelements="22" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="22" statements="15" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="LineIssue(JavaScriptCheck,int,String)" num="38" count="25" type="method"/>
            <line num="39" count="25" type="stmt"/>
            <line num="40" count="25" type="stmt"/>
            <line num="41" count="25" type="stmt"/>
            <line num="42" count="25" type="stmt"/>
            <line num="43" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="LineIssue(JavaScriptCheck,Tree,String)" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : String" num="53" count="18" type="method"/>
            <line num="54" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="57" count="67" type="method"/>
            <line num="58" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="check() : JavaScriptCheck" num="61" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost() : Double" num="66" count="5" type="method"/>
            <line num="69" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost(double) : Issue" num="72" count="3" type="method"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/PreciseIssue.java" name="PreciseIssue.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="9" loc="82" coveredmethods="9" methods="9" elements="25" classes="1" ncloc="50" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="PreciseIssue">
               <metrics coveredelements="25" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="25" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="PreciseIssue(JavaScriptCheck,IssueLocation)" num="35" count="675" type="method"/>
            <line num="36" count="675" type="stmt"/>
            <line num="37" count="675" type="stmt"/>
            <line num="38" count="675" type="stmt"/>
            <line num="39" count="675" type="stmt"/>
            <line complexity="1" visibility="public" signature="check() : JavaScriptCheck" num="42" count="13" type="method"/>
            <line num="44" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost() : Double" num="47" count="18" type="method"/>
            <line num="50" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost(double) : PreciseIssue" num="53" count="17" type="method"/>
            <line num="55" count="17" type="stmt"/>
            <line num="56" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="primaryLocation() : IssueLocation" num="59" count="3649" type="method"/>
            <line num="60" count="3649" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondaryLocations() : List&lt;IssueLocation&gt;" num="63" count="55" type="method"/>
            <line num="64" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(IssueLocation) : PreciseIssue" num="67" count="61" type="method"/>
            <line num="68" count="61" type="stmt"/>
            <line num="69" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(Tree,String) : PreciseIssue" num="72" count="46" type="method"/>
            <line num="73" count="46" type="stmt"/>
            <line num="74" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(Tree) : PreciseIssue" num="77" count="288" type="method"/>
            <line num="78" count="288" type="stmt"/>
            <line num="79" count="288" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/SubscriptionVisitor.java" name="SubscriptionVisitor.java">
            <metrics coveredelements="40" coveredconditionals="10" complexity="15" loc="101" coveredmethods="9" methods="10" elements="41" classes="1" ncloc="61" statements="21" conditionals="10" coveredstatements="21"/>
            <class name="SubscriptionVisitor">
               <metrics coveredelements="40" coveredconditionals="10" complexity="15" coveredmethods="9" methods="10" elements="41" statements="21" conditionals="10" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="visitNode(Tree) : void" num="37" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="leaveNode(Tree) : void" num="41" count="27312" type="method"/>
            <line complexity="1" visibility="public" signature="visitFile(Tree) : void" num="45" count="191" type="method"/>
            <line complexity="1" visibility="public" signature="leaveFile(Tree) : void" num="49" count="218" type="method"/>
            <line complexity="1" visibility="public" signature="getContext() : TreeVisitorContext" num="53" count="629" type="method"/>
            <line num="55" count="629" type="stmt"/>
            <line num="56" count="629" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanTree(TreeVisitorContext) : void" num="59" count="225" type="method"/>
            <line num="61" count="225" type="stmt"/>
            <line num="62" count="225" type="stmt"/>
            <line num="63" count="225" type="stmt"/>
            <line num="64" count="218" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanTree(Tree) : void" num="67" count="943" type="method"/>
            <line num="68" count="943" type="stmt"/>
            <line num="69" count="943" type="stmt"/>
            <line complexity="3" visibility="private" signature="visit(Tree) : void" num="72" count="81694" type="method"/>
            <line num="73" count="81694" type="stmt"/>
            <line num="74" count="81694" type="stmt"/>
            <line falsecount="53995" truecount="27699" num="74" type="cond"/>
            <line num="75" count="27699" type="stmt"/>
            <line num="77" count="81687" type="stmt"/>
            <line num="78" count="81678" type="stmt"/>
            <line falsecount="53988" truecount="27690" num="78" type="cond"/>
            <line num="79" count="27690" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isSubscribed(Tree) : boolean" num="83" count="81694" type="method"/>
            <line num="84" count="81694" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitChildren(Tree) : void" num="87" count="81687" type="method"/>
            <line num="88" count="81687" type="stmt"/>
            <line num="90" count="81687" type="stmt"/>
            <line falsecount="44490" truecount="37197" num="90" type="cond"/>
            <line num="91" count="37197" type="stmt"/>
            <line falsecount="37188" truecount="87723" num="91" type="cond"/>
            <line num="92" count="87723" type="stmt"/>
            <line num="94" count="87723" type="stmt"/>
            <line falsecount="6972" truecount="80751" num="94" type="cond"/>
            <line num="95" count="80751" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/SubscriptionVisitorCheck.java" name="SubscriptionVisitorCheck.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="59" coveredmethods="3" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="SubscriptionVisitorCheck">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile(TreeVisitorContext) : List&lt;Issue&gt;" num="33" count="169" type="method"/>
            <line num="35" count="169" type="stmt"/>
            <line num="36" count="169" type="stmt"/>
            <line num="37" count="162" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLineIssue(Tree,String) : LineIssue" num="43" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="49" count="55" type="method"/>
            <line num="51" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="54" count="6" type="method"/>
            <line num="56" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/TreeVisitor.java" name="TreeVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TreeVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/visitors/TreeVisitorContext.java" name="TreeVisitorContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TreeVisitorContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.cfg">
         <metrics coveredelements="637" complexity="157" loc="1193" methods="67" classes="9" statements="422" coveredconditionals="160" coveredmethods="64" elements="657" ncloc="826" files="8" conditionals="168" coveredstatements="413"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/CfgBlock.java" name="CfgBlock.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CfgBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/CfgBranchingBlock.java" name="CfgBranchingBlock.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CfgBranchingBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/ControlFlowGraph.java" name="ControlFlowGraph.java">
            <metrics coveredelements="39" coveredconditionals="6" complexity="14" loc="113" coveredmethods="10" methods="10" elements="39" classes="1" ncloc="63" statements="23" conditionals="6" coveredstatements="23"/>
            <class name="ControlFlowGraph">
               <metrics coveredelements="39" coveredconditionals="6" complexity="14" coveredmethods="10" methods="10" elements="39" statements="23" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="package" signature="ControlFlowGraph(Set&lt;JsCfgBlock&gt;,CfgBlock,JsCfgEndBlock)" num="51" count="548" type="method"/>
            <line num="52" count="548" type="stmt"/>
            <line num="53" count="548" type="stmt"/>
            <line num="54" count="548" type="stmt"/>
            <line num="56" count="548" type="stmt"/>
            <line num="57" count="2307" type="stmt"/>
            <line num="58" count="2374" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(ScriptTree) : ControlFlowGraph" num="63" count="144" type="method"/>
            <line num="64" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(BlockTree) : ControlFlowGraph" num="67" count="407" type="method"/>
            <line num="68" count="407" type="stmt"/>
            <line complexity="1" visibility="public" signature="start() : CfgBlock" num="71" count="465" type="method"/>
            <line num="72" count="465" type="stmt"/>
            <line complexity="1" visibility="public" signature="end() : CfgBlock" num="75" count="23280" type="method"/>
            <line num="76" count="23280" type="stmt"/>
            <line complexity="1" visibility="public" signature="blocks() : Set&lt;CfgBlock&gt;" num="79" count="2022" type="method"/>
            <line num="80" count="2022" type="stmt"/>
            <line complexity="3" visibility="public" signature="unreachableBlocks() : Set&lt;CfgBlock&gt;" num="83" count="12" type="method"/>
            <line num="84" count="12" type="stmt"/>
            <line num="85" count="12" type="stmt"/>
            <line num="86" count="100" type="stmt"/>
            <line falsecount="79" truecount="21" num="86" type="cond"/>
            <line num="87" count="21" type="stmt"/>
            <line num="90" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="disconnectingJumps(CfgBlock) : Set&lt;SyntaxToken&gt;" num="93" count="16" type="method"/>
            <line num="94" count="16" type="stmt"/>
            <line complexity="2" visibility="package" signature="trueSuccessorFor(CfgBlock) : CfgBlock" num="97" count="95" type="method"/>
            <line num="98" count="95" type="stmt"/>
            <line falsecount="5" truecount="90" num="98" type="cond"/>
            <line num="99" count="90" type="stmt"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="2" visibility="package" signature="falseSuccessorFor(CfgBlock) : CfgBlock" num="105" count="89" type="method"/>
            <line num="106" count="89" type="stmt"/>
            <line falsecount="5" truecount="84" num="106" type="cond"/>
            <line num="107" count="84" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/ControlFlowGraphBuilder.java" name="ControlFlowGraphBuilder.java">
            <metrics coveredelements="532" coveredconditionals="148" complexity="114" loc="724" coveredmethods="31" methods="32" elements="549" classes="2" ncloc="602" statements="361" conditionals="156" coveredstatements="353"/>
            <class name="ControlFlowGraphBuilder">
               <metrics coveredelements="528" coveredconditionals="148" complexity="113" coveredmethods="30" methods="31" elements="545" statements="358" conditionals="156" coveredstatements="350"/>
            </class>
            <class name="ControlFlowGraphBuilder.Breakable">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="package" signature="createGraph(ScriptTree) : ControlFlowGraph" num="141" count="144" type="method"/>
            <line num="142" count="144" type="stmt"/>
            <line num="143" count="144" type="stmt"/>
            <line falsecount="1" truecount="143" num="143" type="cond"/>
            <line num="144" count="143" type="stmt"/>
            <line num="146" count="144" type="stmt"/>
            <line complexity="1" visibility="package" signature="createGraph(BlockTree) : ControlFlowGraph" num="149" count="407" type="method"/>
            <line num="150" count="407" type="stmt"/>
            <line complexity="1" visibility="private" signature="createGraph(List&lt;? extends Tree&gt;) : ControlFlowGraph" num="153" count="551" type="method"/>
            <line num="154" count="551" type="stmt"/>
            <line num="155" count="551" type="stmt"/>
            <line num="156" count="548" type="stmt"/>
            <line num="157" count="548" type="stmt"/>
            <line num="158" count="548" type="stmt"/>
            <line num="159" count="548" type="stmt"/>
            <line complexity="3" visibility="private" signature="removeEmptyBlocks() : void" num="162" count="548" type="method"/>
            <line num="163" count="548" type="stmt"/>
            <line num="164" count="548" type="stmt"/>
            <line num="165" count="2682" type="stmt"/>
            <line falsecount="1759" truecount="923" num="165" type="cond"/>
            <line num="166" count="923" type="stmt"/>
            <line num="167" count="923" type="stmt"/>
            <line num="168" count="923" type="stmt"/>
            <line num="169" count="162" type="stmt"/>
            <line num="174" count="548" type="stmt"/>
            <line num="176" count="548" type="stmt"/>
            <line num="177" count="1759" type="stmt"/>
            <line num="180" count="548" type="stmt"/>
            <line falsecount="441" truecount="107" num="180" type="cond"/>
            <line num="181" count="107" type="stmt"/>
            <line complexity="1" visibility="private" signature="build(List&lt;? extends Tree&gt;) : void" num="185" count="1219" type="method"/>
            <line num="186" count="1219" type="stmt"/>
            <line num="187" count="2613" type="stmt"/>
            <line complexity="19" visibility="private" signature="build(Tree) : void" num="191" count="3265" type="method"/>
            <line num="192" count="3265" type="stmt"/>
            <line falsecount="1931" truecount="1334" num="192" type="cond"/>
            <line num="193" count="1334" type="stmt"/>
            <line num="194" count="1931" type="stmt"/>
            <line falsecount="1469" truecount="462" num="194" type="cond"/>
            <line num="195" count="462" type="stmt"/>
            <line num="196" count="1469" type="stmt"/>
            <line falsecount="1138" truecount="331" num="196" type="cond"/>
            <line num="197" count="331" type="stmt"/>
            <line num="198" count="1138" type="stmt"/>
            <line falsecount="1080" truecount="58" num="198" type="cond"/>
            <line num="199" count="58" type="stmt"/>
            <line num="200" count="1080" type="stmt"/>
            <line falsecount="1059" truecount="21" num="200" type="cond"/>
            <line num="201" count="21" type="stmt"/>
            <line num="202" count="1059" type="stmt"/>
            <line falsecount="938" truecount="121" num="202" type="cond"/>
            <line num="203" count="121" type="stmt"/>
            <line num="204" count="938" type="stmt"/>
            <line falsecount="928" truecount="10" num="204" type="cond"/>
            <line num="205" count="10" type="stmt"/>
            <line num="206" count="928" type="stmt"/>
            <line falsecount="917" truecount="11" num="206" type="cond"/>
            <line num="207" count="11" type="stmt"/>
            <line num="208" count="917" type="stmt"/>
            <line falsecount="881" truecount="36" num="208" type="cond"/>
            <line num="209" count="36" type="stmt"/>
            <line num="210" count="881" type="stmt"/>
            <line falsecount="760" truecount="121" num="210" type="cond"/>
            <line num="211" count="121" type="stmt"/>
            <line num="212" count="760" type="stmt"/>
            <line falsecount="126" truecount="634" num="212" type="cond"/>
            <line num="213" count="634" type="stmt"/>
            <line num="214" count="126" type="stmt"/>
            <line falsecount="110" truecount="16" num="214" type="cond"/>
            <line num="215" count="16" type="stmt"/>
            <line num="216" count="110" type="stmt"/>
            <line falsecount="97" truecount="13" num="216" type="cond"/>
            <line num="217" count="13" type="stmt"/>
            <line num="218" count="97" type="stmt"/>
            <line falsecount="82" truecount="15" num="218" type="cond"/>
            <line num="219" count="15" type="stmt"/>
            <line num="220" count="82" type="stmt"/>
            <line falsecount="68" truecount="14" num="220" type="cond"/>
            <line num="221" count="14" type="stmt"/>
            <line num="222" count="68" type="stmt"/>
            <line falsecount="66" truecount="2" num="222" type="cond"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="66" type="stmt"/>
            <line falsecount="1" truecount="65" num="226" type="cond"/>
            <line num="239" count="65" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="240" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildExpressions(List&lt;? extends Tree&gt;) : void" num="247" count="1613" type="method"/>
            <line num="248" count="1613" type="stmt"/>
            <line num="249" count="1157" type="stmt"/>
            <line complexity="34" visibility="private" signature="buildExpression(Tree) : void" num="253" count="7983" type="method"/>
            <line num="254" count="7983" type="stmt"/>
            <line falsecount="27" truecount="7956" num="254" type="cond"/>
            <line num="255" count="7956" type="stmt"/>
            <line num="258" count="7983" type="stmt"/>
            <line falsecount="7568" truecount="415" num="258" type="cond"/>
            <line num="259" count="415" type="stmt"/>
            <line num="260" count="415" type="stmt"/>
            <line num="261" count="415" type="stmt"/>
            <line num="263" count="7568" type="stmt"/>
            <line falsecount="7138" truecount="430" num="263" type="cond"/>
            <line num="264" count="430" type="stmt"/>
            <line num="265" count="430" type="stmt"/>
            <line num="266" count="430" type="stmt"/>
            <line num="268" count="7138" type="stmt"/>
            <line falsecount="6969" truecount="169" num="268" type="cond"/>
            <line num="269" count="169" type="stmt"/>
            <line num="270" count="169" type="stmt"/>
            <line num="272" count="6969" type="stmt"/>
            <line falsecount="6911" truecount="58" num="272" type="cond"/>
            <line num="273" count="58" type="stmt"/>
            <line num="274" count="58" type="stmt"/>
            <line num="276" count="6911" type="stmt"/>
            <line falsecount="6883" truecount="28" num="276" type="cond"/>
            <line num="277" count="28" type="stmt"/>
            <line num="278" count="28" type="stmt"/>
            <line num="280" count="6883" type="stmt"/>
            <line falsecount="6590" truecount="293" num="280" type="cond"/>
            <line num="281" count="293" type="stmt"/>
            <line num="282" count="293" type="stmt"/>
            <line num="284" count="6590" type="stmt"/>
            <line falsecount="6571" truecount="19" num="284" type="cond"/>
            <line num="285" count="19" type="stmt"/>
            <line num="286" count="19" type="stmt"/>
            <line num="287" count="19" type="stmt"/>
            <line num="289" count="6571" type="stmt"/>
            <line falsecount="5631" truecount="940" num="289" type="cond"/>
            <line num="290" count="940" type="stmt"/>
            <line num="291" count="940" type="stmt"/>
            <line num="292" count="940" type="stmt"/>
            <line num="294" count="5631" type="stmt"/>
            <line falsecount="5137" truecount="494" num="294" type="cond"/>
            <line num="295" count="494" type="stmt"/>
            <line num="296" count="494" type="stmt"/>
            <line num="298" count="5137" type="stmt"/>
            <line falsecount="4750" truecount="387" num="298" type="cond"/>
            <line num="299" count="387" type="stmt"/>
            <line num="300" count="387" type="stmt"/>
            <line num="301" count="387" type="stmt"/>
            <line num="303" count="4750" type="stmt"/>
            <line falsecount="4732" truecount="18" num="303" type="cond"/>
            <line num="304" count="18" type="stmt"/>
            <line num="305" count="18" type="stmt"/>
            <line num="306" count="18" type="stmt"/>
            <line num="308" count="4732" type="stmt"/>
            <line falsecount="4731" truecount="1" num="308" type="cond"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="312" count="4731" type="stmt"/>
            <line falsecount="4650" truecount="81" num="312" type="cond"/>
            <line num="313" count="81" type="stmt"/>
            <line num="314" count="81" type="stmt"/>
            <line falsecount="2" truecount="79" num="314" type="cond"/>
            <line num="315" count="79" type="stmt"/>
            <line num="317" count="81" type="stmt"/>
            <line num="319" count="4650" type="stmt"/>
            <line falsecount="4631" truecount="19" num="319" type="cond"/>
            <line num="320" count="19" type="stmt"/>
            <line num="321" count="19" type="stmt"/>
            <line num="322" count="19" type="stmt"/>
            <line falsecount="0" truecount="19" num="322" type="cond"/>
            <line num="323" count="19" type="stmt"/>
            <line num="324" count="19" type="stmt"/>
            <line num="326" count="19" type="stmt"/>
            <line num="327" count="19" type="stmt"/>
            <line num="328" count="19" type="stmt"/>
            <line num="329" count="19" type="stmt"/>
            <line num="331" count="4631" type="stmt"/>
            <line falsecount="4606" truecount="25" num="331" type="cond"/>
            <line num="332" count="25" type="stmt"/>
            <line num="333" count="25" type="stmt"/>
            <line num="334" count="25" type="stmt"/>
            <line falsecount="0" truecount="25" num="334" type="cond"/>
            <line num="335" count="25" type="stmt"/>
            <line num="336" count="25" type="stmt"/>
            <line num="338" count="25" type="stmt"/>
            <line num="339" count="25" type="stmt"/>
            <line num="340" count="25" type="stmt"/>
            <line num="341" count="25" type="stmt"/>
            <line num="343" count="4606" type="stmt"/>
            <line falsecount="4591" truecount="15" num="343" type="cond"/>
            <line num="344" count="15" type="stmt"/>
            <line num="345" count="15" type="stmt"/>
            <line num="346" count="15" type="stmt"/>
            <line num="347" count="15" type="stmt"/>
            <line num="348" count="15" type="stmt"/>
            <line num="349" count="15" type="stmt"/>
            <line num="350" count="15" type="stmt"/>
            <line num="351" count="15" type="stmt"/>
            <line num="352" count="15" type="stmt"/>
            <line num="353" count="15" type="stmt"/>
            <line num="355" count="4591" type="stmt"/>
            <line falsecount="4589" truecount="2" num="355" type="cond"/>
            <line num="356" count="2" type="stmt"/>
            <line num="357" count="2" type="stmt"/>
            <line num="359" count="4589" type="stmt"/>
            <line falsecount="4562" truecount="27" num="359" type="cond"/>
            <line num="360" count="27" type="stmt"/>
            <line num="361" count="27" type="stmt"/>
            <line num="363" count="4562" type="stmt"/>
            <line falsecount="4558" truecount="4" num="363" type="cond"/>
            <line num="364" count="4" type="stmt"/>
            <line num="365" count="4" type="stmt"/>
            <line num="367" count="4558" type="stmt"/>
            <line falsecount="4554" truecount="4" num="367" type="cond"/>
            <line num="368" count="4" type="stmt"/>
            <line num="369" count="4" type="stmt"/>
            <line num="371" count="4554" type="stmt"/>
            <line falsecount="4553" truecount="1" num="371" type="cond"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="376" count="4553" type="stmt"/>
            <line falsecount="4547" truecount="6" num="376" type="cond"/>
            <line num="377" count="6" type="stmt"/>
            <line num="378" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="378" type="cond"/>
            <line num="379" count="2" type="stmt"/>
            <line num="382" count="4547" type="stmt"/>
            <line falsecount="4537" truecount="10" num="382" type="cond"/>
            <line num="383" count="10" type="stmt"/>
            <line num="384" count="10" type="stmt"/>
            <line num="386" count="4537" type="stmt"/>
            <line falsecount="4532" truecount="5" num="386" type="cond"/>
            <line num="387" count="5" type="stmt"/>
            <line num="388" count="5" type="stmt"/>
            <line num="390" count="4532" type="stmt"/>
            <line falsecount="4528" truecount="4" num="390" type="cond"/>
            <line num="391" count="4" type="stmt"/>
            <line num="392" count="4" type="stmt"/>
            <line num="394" count="4528" type="stmt"/>
            <line falsecount="4519" truecount="9" num="394" type="cond"/>
            <line num="395" count="9" type="stmt"/>
            <line num="396" count="9" type="stmt"/>
            <line num="397" count="18" type="stmt"/>
            <line falsecount="2" truecount="16" num="397" type="cond"/>
            <line num="398" count="16" type="stmt"/>
            <line num="401" count="4519" type="stmt"/>
            <line falsecount="4517" truecount="2" num="401" type="cond"/>
            <line num="402" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="buildCondition(ExpressionTree,JsCfgBlock,JsCfgBlock) : void" num="407" count="711" type="method"/>
            <line num="408" count="711" type="stmt"/>
            <line num="409" count="711" type="stmt"/>
            <line num="410" count="711" type="stmt"/>
            <line falsecount="656" truecount="55" num="410" type="cond"/>
            <line num="411" count="55" type="stmt"/>
            <line num="412" count="55" type="stmt"/>
            <line num="413" count="55" type="stmt"/>
            <line num="414" count="55" type="stmt"/>
            <line num="415" count="55" type="stmt"/>
            <line num="417" count="656" type="stmt"/>
            <line falsecount="638" truecount="18" num="417" type="cond"/>
            <line num="418" count="18" type="stmt"/>
            <line num="419" count="18" type="stmt"/>
            <line num="420" count="18" type="stmt"/>
            <line num="421" count="18" type="stmt"/>
            <line num="422" count="18" type="stmt"/>
            <line num="424" count="638" type="stmt"/>
            <line falsecount="624" truecount="14" num="424" type="cond"/>
            <line num="425" count="14" type="stmt"/>
            <line num="428" count="624" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitBlock(BlockTree) : void" num="432" count="634" type="method"/>
            <line num="433" count="634" type="stmt"/>
            <line complexity="1" visibility="private" signature="addBreakable(JsCfgBlock,JsCfgBlock,String) : void" num="436" count="226" type="method"/>
            <line num="437" count="226" type="stmt"/>
            <line complexity="1" visibility="private" signature="removeBreakable() : void" num="440" count="222" type="method"/>
            <line num="441" count="222" type="stmt"/>
            <line complexity="2" visibility="private" signature="visitReturnStatement(ReturnStatementTree) : void" num="444" count="121" type="method"/>
            <line num="445" count="121" type="stmt"/>
            <line num="446" count="121" type="stmt"/>
            <line num="447" count="121" type="stmt"/>
            <line falsecount="36" truecount="85" num="447" type="cond"/>
            <line num="448" count="85" type="stmt"/>
            <line complexity="6" visibility="private" signature="visitContinueStatement(ContinueStatementTree) : void" num="452" count="11" type="method"/>
            <line num="453" count="11" type="stmt"/>
            <line num="454" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="454" type="cond"/>
            <line num="455" count="11" type="stmt"/>
            <line num="456" count="13" type="stmt"/>
            <line falsecount="4" truecount="9" num="456" type="cond"/>
            <line num="457" count="9" type="stmt"/>
            <line num="458" count="9" type="stmt"/>
            <line num="461" count="11" type="stmt"/>
            <line falsecount="9" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="9" type="stmt"/>
            <line num="465" count="9" type="stmt"/>
            <line complexity="5" visibility="private" signature="visitBreakStatement(BreakStatementTree) : void" num="468" count="36" type="method"/>
            <line num="469" count="36" type="stmt"/>
            <line num="470" count="36" type="stmt"/>
            <line falsecount="7" truecount="29" num="470" type="cond"/>
            <line num="471" count="36" type="stmt"/>
            <line num="472" count="41" type="stmt"/>
            <line falsecount="6" truecount="35" num="472" type="cond"/>
            <line num="473" count="35" type="stmt"/>
            <line num="474" count="35" type="stmt"/>
            <line num="477" count="36" type="stmt"/>
            <line falsecount="35" truecount="0" num="477" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="480" count="35" type="stmt"/>
            <line num="481" count="35" type="stmt"/>
            <line complexity="2" visibility="private" signature="raiseRecognitionException(Tree,String,String) : void" num="484" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="487" type="cond"/>
            <line num="488" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="visitIfStatement(IfStatementTree) : void" num="493" count="331" type="method"/>
            <line num="494" count="331" type="stmt"/>
            <line num="495" count="331" type="stmt"/>
            <line falsecount="267" truecount="64" num="495" type="cond"/>
            <line num="496" count="64" type="stmt"/>
            <line num="498" count="331" type="stmt"/>
            <line num="499" count="331" type="stmt"/>
            <line num="500" count="331" type="stmt"/>
            <line num="501" count="331" type="stmt"/>
            <line num="502" count="331" type="stmt"/>
            <line num="503" count="331" type="stmt"/>
            <line complexity="6" visibility="private" signature="visitForStatement(ForStatementTree) : void" num="506" count="58" type="method"/>
            <line num="507" count="58" type="stmt"/>
            <line num="508" count="58" type="stmt"/>
            <line num="509" count="58" type="stmt"/>
            <line num="511" count="58" type="stmt"/>
            <line num="513" count="58" type="stmt"/>
            <line falsecount="33" truecount="25" num="513" type="cond"/>
            <line num="514" count="25" type="stmt"/>
            <line num="515" count="25" type="stmt"/>
            <line num="516" count="25" type="stmt"/>
            <line num="518" count="33" type="stmt"/>
            <line num="521" count="58" type="stmt"/>
            <line falsecount="24" truecount="34" num="521" type="cond"/>
            <line num="522" count="34" type="stmt"/>
            <line num="523" count="34" type="stmt"/>
            <line num="524" count="34" type="stmt"/>
            <line num="526" count="24" type="stmt"/>
            <line num="529" count="58" type="stmt"/>
            <line num="530" count="58" type="stmt"/>
            <line falsecount="32" truecount="26" num="530" type="cond"/>
            <line num="531" count="26" type="stmt"/>
            <line num="533" count="58" type="stmt"/>
            <line falsecount="50" truecount="8" num="533" type="cond"/>
            <line num="534" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="538" count="21" type="method"/>
            <line num="539" count="21" type="stmt"/>
            <line num="540" count="21" type="stmt"/>
            <line num="541" count="21" type="stmt"/>
            <line num="542" count="21" type="stmt"/>
            <line num="543" count="21" type="stmt"/>
            <line num="544" count="21" type="stmt"/>
            <line num="545" count="21" type="stmt"/>
            <line num="546" count="21" type="stmt"/>
            <line num="547" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitWhileStatement(WhileStatementTree) : void" num="550" count="121" type="method"/>
            <line num="551" count="121" type="stmt"/>
            <line num="552" count="121" type="stmt"/>
            <line num="553" count="121" type="stmt"/>
            <line num="554" count="117" type="stmt"/>
            <line num="555" count="117" type="stmt"/>
            <line num="556" count="117" type="stmt"/>
            <line num="557" count="117" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitDoWhileStatement(DoWhileStatementTree) : void" num="560" count="10" type="method"/>
            <line num="561" count="10" type="stmt"/>
            <line num="562" count="10" type="stmt"/>
            <line num="563" count="10" type="stmt"/>
            <line num="564" count="10" type="stmt"/>
            <line num="565" count="10" type="stmt"/>
            <line num="566" count="10" type="stmt"/>
            <line num="567" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitLabelledStatement(LabelledStatementTree) : void" num="570" count="16" type="method"/>
            <line num="571" count="16" type="stmt"/>
            <line num="573" count="16" type="stmt"/>
            <line num="575" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="575" type="cond"/>
            <line num="576" count="2" type="stmt"/>
            <line num="577" count="2" type="stmt"/>
            <line num="580" count="14" type="stmt"/>
            <line num="583" count="16" type="stmt"/>
            <line num="585" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="585" type="cond"/>
            <line num="586" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitTryStatement(TryStatementTree) : void" num="590" count="13" type="method"/>
            <line num="591" count="13" type="stmt"/>
            <line num="593" count="13" type="stmt"/>
            <line falsecount="8" truecount="5" num="593" type="cond"/>
            <line num="594" count="5" type="stmt"/>
            <line num="595" count="5" type="stmt"/>
            <line num="596" count="5" type="stmt"/>
            <line num="597" count="5" type="stmt"/>
            <line num="600" count="13" type="stmt"/>
            <line falsecount="2" truecount="11" num="600" type="cond"/>
            <line num="601" count="11" type="stmt"/>
            <line num="602" count="11" type="stmt"/>
            <line num="603" count="11" type="stmt"/>
            <line num="604" count="11" type="stmt"/>
            <line num="605" count="11" type="stmt"/>
            <line num="606" count="11" type="stmt"/>
            <line num="607" count="11" type="stmt"/>
            <line num="610" count="13" type="stmt"/>
            <line falsecount="8" truecount="5" num="610" type="cond"/>
            <line num="611" count="5" type="stmt"/>
            <line num="614" count="13" type="stmt"/>
            <line num="615" count="13" type="stmt"/>
            <line num="616" count="13" type="stmt"/>
            <line num="617" count="13" type="stmt"/>
            <line num="619" count="13" type="stmt"/>
            <line num="620" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitThrowStatement(ThrowStatementTree) : void" num="623" count="15" type="method"/>
            <line num="624" count="15" type="stmt"/>
            <line num="625" count="15" type="stmt"/>
            <line num="626" count="15" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitSwitchStatement(SwitchStatementTree) : void" num="629" count="14" type="method"/>
            <line num="630" count="14" type="stmt"/>
            <line num="631" count="14" type="stmt"/>
            <line num="632" count="14" type="stmt"/>
            <line num="633" count="14" type="stmt"/>
            <line num="634" count="14" type="stmt"/>
            <line num="636" count="14" type="stmt"/>
            <line num="637" count="34" type="stmt"/>
            <line falsecount="8" truecount="26" num="637" type="cond"/>
            <line num="639" count="26" type="stmt"/>
            <line num="640" count="26" type="stmt"/>
            <line num="641" count="26" type="stmt"/>
            <line falsecount="3" truecount="23" num="641" type="cond"/>
            <line num="642" count="23" type="stmt"/>
            <line num="645" count="26" type="stmt"/>
            <line num="646" count="26" type="stmt"/>
            <line num="647" count="26" type="stmt"/>
            <line num="648" count="26" type="stmt"/>
            <line num="652" count="8" type="stmt"/>
            <line num="653" count="8" type="stmt"/>
            <line num="654" count="8" type="stmt"/>
            <line num="656" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="656" type="cond"/>
            <line num="657" count="8" type="stmt"/>
            <line num="663" count="14" type="stmt"/>
            <line num="664" count="14" type="stmt"/>
            <line num="665" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildLoopBody(StatementTree,JsCfgBlock,JsCfgBlock) : JsCfgBlock" num="668" count="210" type="method"/>
            <line num="669" count="210" type="stmt"/>
            <line num="670" count="210" type="stmt"/>
            <line num="671" count="210" type="stmt"/>
            <line num="672" count="206" type="stmt"/>
            <line num="673" count="206" type="stmt"/>
            <line num="674" count="206" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildSubFlow(StatementTree,JsCfgBlock) : void" num="677" count="616" type="method"/>
            <line num="678" count="616" type="stmt"/>
            <line num="679" count="616" type="stmt"/>
            <line complexity="1" visibility="private" signature="createBranchingBlock(Tree,JsCfgBlock,JsCfgBlock) : JsCfgBranchingBlock" num="682" count="695" type="method"/>
            <line num="683" count="695" type="stmt"/>
            <line num="684" count="695" type="stmt"/>
            <line num="685" count="695" type="stmt"/>
            <line complexity="1" visibility="private" signature="createSimpleBlock(Tree,JsCfgBlock) : JsCfgBlock" num="688" count="165" type="method"/>
            <line num="689" count="165" type="stmt"/>
            <line num="690" count="165" type="stmt"/>
            <line num="691" count="165" type="stmt"/>
            <line complexity="1" visibility="private" signature="createSimpleBlock(JsCfgBlock) : JsCfgBlock" num="694" count="1720" type="method"/>
            <line num="695" count="1720" type="stmt"/>
            <line num="696" count="1720" type="stmt"/>
            <line num="697" count="1720" type="stmt"/>
            <line complexity="1" visibility="private" signature="createForwardingBlock() : JsCfgForwardingBlock" num="700" count="282" type="method"/>
            <line num="701" count="282" type="stmt"/>
            <line num="702" count="282" type="stmt"/>
            <line num="703" count="282" type="stmt"/>
            <line complexity="1" visibility="package" signature="Breakable(JsCfgBlock,JsCfgBlock,String)" num="716" count="226" type="method"/>
            <line num="717" count="226" type="stmt"/>
            <line num="718" count="226" type="stmt"/>
            <line num="719" count="226" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/JsCfgBlock.java" name="JsCfgBlock.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="16" loc="113" coveredmethods="12" methods="12" elements="40" classes="1" ncloc="69" statements="22" conditionals="6" coveredstatements="22"/>
            <class name="JsCfgBlock">
               <metrics coveredelements="40" coveredconditionals="6" complexity="16" coveredmethods="12" methods="12" elements="40" statements="22" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="package" signature="JsCfgBlock(JsCfgBlock)" num="42" count="1750" type="method"/>
            <line num="43" count="1750" type="stmt"/>
            <line num="44" count="1749" type="stmt"/>
            <line complexity="1" visibility="package" signature="JsCfgBlock()" num="47" count="1551" type="method"/>
            <line complexity="1" visibility="public" signature="predecessors() : Set&lt;CfgBlock&gt;" num="50" count="1251" type="method"/>
            <line num="52" count="1251" type="stmt"/>
            <line complexity="1" visibility="public" signature="successors() : Set&lt;CfgBlock&gt;" num="55" count="9582" type="method"/>
            <line num="57" count="9582" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;Tree&gt;" num="60" count="152646" type="method"/>
            <line num="62" count="152646" type="stmt"/>
            <line complexity="1" visibility="public" signature="addElement(Tree) : void" num="65" count="8209" type="method"/>
            <line num="66" count="8209" type="stmt"/>
            <line num="67" count="8208" type="stmt"/>
            <line complexity="1" visibility="package" signature="addPredecessor(JsCfgBlock) : void" num="70" count="2374" type="method"/>
            <line num="71" count="2374" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceSuccessors(Map&lt;JsCfgBlock, JsCfgBlock&gt;) : void" num="79" count="1065" type="method"/>
            <line num="80" count="1065" type="stmt"/>
            <line complexity="2" visibility="package" signature="replacement(JsCfgBlock,Map&lt;JsCfgBlock, JsCfgBlock&gt;) : JsCfgBlock" num="83" count="2453" type="method"/>
            <line num="84" count="2453" type="stmt"/>
            <line num="85" count="2453" type="stmt"/>
            <line falsecount="612" truecount="1841" num="85" type="cond"/>
            <line complexity="1" visibility="package" signature="disconnectingJumps() : Set&lt;SyntaxToken&gt;" num="91" count="939" type="method"/>
            <line num="92" count="939" type="stmt"/>
            <line complexity="1" visibility="package" signature="addDisconnectingJump(SyntaxToken) : void" num="95" count="342" type="method"/>
            <line num="96" count="342" type="stmt"/>
            <line complexity="4" visibility="package" signature="skipEmptyBlocks() : JsCfgBlock" num="99" count="930" type="method"/>
            <line num="100" count="930" type="stmt"/>
            <line num="101" count="930" type="stmt"/>
            <line num="102" count="930" type="stmt"/>
            <line falsecount="928" truecount="1217" num="102" type="cond"/>
            <line num="103" count="1217" type="stmt"/>
            <line num="104" count="1217" type="stmt"/>
            <line num="105" count="1217" type="stmt"/>
            <line falsecount="2" truecount="1215" num="105" type="cond"/>
            <line num="106" count="1215" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="111" count="928" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/JsCfgBranchingBlock.java" name="JsCfgBranchingBlock.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="6" loc="64" coveredmethods="6" methods="6" elements="15" classes="1" ncloc="35" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="JsCfgBranchingBlock">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="JsCfgBranchingBlock(Tree,JsCfgBlock,JsCfgBlock)" num="33" count="697" type="method"/>
            <line num="34" count="697" type="stmt"/>
            <line num="35" count="697" type="stmt"/>
            <line num="36" count="697" type="stmt"/>
            <line complexity="1" visibility="public" signature="trueSuccessor() : JsCfgBlock" num="39" count="17167" type="method"/>
            <line num="41" count="17167" type="stmt"/>
            <line complexity="1" visibility="public" signature="falseSuccessor() : JsCfgBlock" num="44" count="18958" type="method"/>
            <line num="46" count="18958" type="stmt"/>
            <line complexity="1" visibility="public" signature="branchingTree() : Tree" num="49" count="74451" type="method"/>
            <line num="51" count="74451" type="stmt"/>
            <line complexity="1" visibility="public" signature="successors() : ImmutableSet&lt;CfgBlock&gt;" num="54" count="22011" type="method"/>
            <line num="56" count="22011" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceSuccessors(Map&lt;JsCfgBlock, JsCfgBlock&gt;) : void" num="59" count="694" type="method"/>
            <line num="61" count="694" type="stmt"/>
            <line num="62" count="694" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/JsCfgEndBlock.java" name="JsCfgEndBlock.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="46" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="JsCfgEndBlock">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="successors() : ImmutableSet&lt;CfgBlock&gt;" num="32" count="1980" type="method"/>
            <line num="34" count="1980" type="stmt"/>
            <line complexity="1" visibility="public" signature="addElement(Tree) : void" num="37" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceSuccessors(Map&lt;JsCfgBlock, JsCfgBlock&gt;) : void" num="42" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/cfg/JsCfgForwardingBlock.java" name="JsCfgForwardingBlock.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="54" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="JsCfgForwardingBlock">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="successors() : ImmutableSet&lt;CfgBlock&gt;" num="35" count="893" type="method"/>
            <line num="37" count="893" type="stmt"/>
            <line num="38" count="892" type="stmt"/>
            <line complexity="1" visibility="public" signature="addElement(Tree) : void" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="setSuccessor(JsCfgBlock) : void" num="46" count="287" type="method"/>
            <line num="47" count="287" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceSuccessors(Map&lt;JsCfgBlock, JsCfgBlock&gt;) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree">
         <metrics coveredelements="4" complexity="3" loc="1249" methods="3" classes="6" statements="3" coveredconditionals="0" coveredmethods="2" elements="6" ncloc="393" files="5" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/Kinds.java" name="Kinds.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Kinds">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/ModuleTree.java" name="ModuleTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModuleTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/ScriptTree.java" name="ScriptTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScriptTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/SeparatedList.java" name="SeparatedList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SeparatedList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/Tree.java" name="Tree.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="1114" coveredmethods="2" methods="3" elements="6" classes="2" ncloc="358" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="Tree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Tree.Kind">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="package" signature="Kind(Class&lt;? extends Tree&gt;)" num="1099" count="597" type="method"/>
            <line num="1100" count="597" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssociatedInterface() : Class&lt;? extends Tree&gt;" num="1103" count="0" type="method"/>
            <line num="1104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Kinds) : boolean" num="1107" count="2953597" type="method"/>
            <line num="1109" count="2953597" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.lexical">
         <metrics coveredelements="77" complexity="36" loc="263" methods="34" classes="2" statements="51" coveredconditionals="4" coveredmethods="28" elements="89" ncloc="181" files="2" conditionals="4" coveredstatements="45"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/lexical/InternalSyntaxToken.java" name="InternalSyntaxToken.java">
            <metrics coveredelements="46" coveredconditionals="2" complexity="20" loc="143" coveredmethods="17" methods="19" elements="50" classes="1" ncloc="100" statements="29" conditionals="2" coveredstatements="27"/>
            <class name="InternalSyntaxToken">
               <metrics coveredelements="46" coveredconditionals="2" complexity="20" coveredmethods="17" methods="19" elements="50" statements="29" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="InternalSyntaxToken(int,int,String,List&lt;SyntaxTrivia&gt;,int,boolean)" num="42" count="52687" type="method"/>
            <line num="43" count="52687" type="stmt"/>
            <line num="44" count="52687" type="stmt"/>
            <line num="45" count="52687" type="stmt"/>
            <line num="46" count="52687" type="stmt"/>
            <line num="47" count="52687" type="stmt"/>
            <line num="48" count="52687" type="stmt"/>
            <line num="49" count="52687" type="stmt"/>
            <line complexity="2" visibility="private" signature="calculateEndOffsets() : void" num="52" count="52687" type="method"/>
            <line num="53" count="52687" type="stmt"/>
            <line num="54" count="52687" type="stmt"/>
            <line num="55" count="52687" type="stmt"/>
            <line num="57" count="52687" type="stmt"/>
            <line falsecount="52656" truecount="31" num="57" type="cond"/>
            <line num="58" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="62" count="153" type="method"/>
            <line num="64" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="endColumn() : int" num="67" count="191" type="method"/>
            <line num="69" count="191" type="stmt"/>
            <line complexity="1" visibility="public" signature="toIndex() : int" num="72" count="545" type="method"/>
            <line num="73" count="545" type="stmt"/>
            <line complexity="1" visibility="public" signature="text() : String" num="76" count="100983" type="method"/>
            <line num="78" count="100983" type="stmt"/>
            <line complexity="1" visibility="public" signature="trivias() : List&lt;SyntaxTrivia&gt;" num="81" count="185674" type="method"/>
            <line num="83" count="185674" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="86" count="88488" type="method"/>
            <line num="88" count="88488" type="stmt"/>
            <line complexity="1" visibility="public" signature="column() : int" num="91" count="3994" type="method"/>
            <line num="93" count="3994" type="stmt"/>
            <line complexity="1" visibility="public" signature="startIndex() : int" num="96" count="2976" type="method"/>
            <line num="97" count="2976" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="100" count="46048" type="method"/>
            <line num="102" count="46048" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLeaf() : boolean" num="105" count="95172" type="method"/>
            <line num="107" count="95172" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEOF() : boolean" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="119" count="162132" type="method"/>
            <line num="121" count="162132" type="stmt"/>
            <line complexity="1" visibility="public" signature="is(TokenType) : boolean" num="124" count="2659" type="method"/>
            <line num="125" count="2659" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstToken() : SyntaxToken" num="128" count="85684" type="method"/>
            <line num="130" count="85684" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastToken() : SyntaxToken" num="133" count="5141" type="method"/>
            <line num="135" count="5141" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="138" count="8" type="method"/>
            <line num="140" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/lexical/InternalSyntaxTrivia.java" name="InternalSyntaxTrivia.java">
            <metrics coveredelements="31" coveredconditionals="2" complexity="16" loc="120" coveredmethods="11" methods="15" elements="39" classes="1" ncloc="81" statements="22" conditionals="2" coveredstatements="18"/>
            <class name="InternalSyntaxTrivia">
               <metrics coveredelements="31" coveredconditionals="2" complexity="16" coveredmethods="11" methods="15" elements="39" statements="22" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="InternalSyntaxTrivia(String,int,int)" num="40" count="2952" type="method"/>
            <line num="41" count="2952" type="stmt"/>
            <line num="42" count="2952" type="stmt"/>
            <line num="43" count="2952" type="stmt"/>
            <line num="44" count="2952" type="stmt"/>
            <line complexity="2" visibility="private" signature="calculateEndOffsets() : void" num="47" count="2952" type="method"/>
            <line num="48" count="2952" type="stmt"/>
            <line num="49" count="2952" type="stmt"/>
            <line num="50" count="2952" type="stmt"/>
            <line num="52" count="2952" type="stmt"/>
            <line falsecount="2907" truecount="45" num="52" type="cond"/>
            <line num="53" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="57" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="endColumn() : int" num="62" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="text() : String" num="67" count="2055" type="method"/>
            <line num="69" count="2055" type="stmt"/>
            <line complexity="1" visibility="public" signature="trivias() : List&lt;SyntaxTrivia&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="77" count="1667" type="method"/>
            <line num="79" count="1667" type="stmt"/>
            <line complexity="1" visibility="public" signature="column() : int" num="82" count="179" type="method"/>
            <line num="84" count="179" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLeaf() : boolean" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String,int,int) : SyntaxTrivia" num="102" count="2952" type="method"/>
            <line num="103" count="2952" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="106" count="9365" type="method"/>
            <line num="108" count="9365" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstToken() : SyntaxToken" num="111" count="6" type="method"/>
            <line num="113" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastToken() : SyntaxToken" num="116" count="6" type="method"/>
            <line num="118" count="6" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree.declaration">
         <metrics coveredelements="0" complexity="0" loc="1389" methods="0" classes="31" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="429" files="31" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/AccessorMethodDeclarationTree.java" name="AccessorMethodDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="63" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AccessorMethodDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ArrayBindingPatternTree.java" name="ArrayBindingPatternTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayBindingPatternTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/BindingElementTree.java" name="BindingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BindingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/BindingPropertyTree.java" name="BindingPropertyTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BindingPropertyTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ClassTree.java" name="ClassTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="68" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="27" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/DeclarationTree.java" name="DeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/DecoratorTree.java" name="DecoratorTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DecoratorTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/DefaultExportDeclarationTree.java" name="DefaultExportDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DefaultExportDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ExportClauseTree.java" name="ExportClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExportClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ExportDeclarationTree.java" name="ExportDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExportDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ExportDefaultBinding.java" name="ExportDefaultBinding.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExportDefaultBinding">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ExportDefaultBindingWithExportList.java" name="ExportDefaultBindingWithExportList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExportDefaultBindingWithExportList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ExportDefaultBindingWithNameSpaceExport.java" name="ExportDefaultBindingWithNameSpaceExport.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExportDefaultBindingWithNameSpaceExport">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ExtendsClauseTree.java" name="ExtendsClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExtendsClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/FieldDeclarationTree.java" name="FieldDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="55" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="23" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FieldDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/FromClauseTree.java" name="FromClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FromClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/FunctionDeclarationTree.java" name="FunctionDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="24" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/FunctionTree.java" name="FunctionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ImportClauseTree.java" name="ImportClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ImportDeclarationTree.java" name="ImportDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ImportModuleDeclarationTree.java" name="ImportModuleDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportModuleDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ImportSubClauseTree.java" name="ImportSubClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportSubClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/InitializedBindingElementTree.java" name="InitializedBindingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InitializedBindingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/MethodDeclarationTree.java" name="MethodDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/NameSpaceExportDeclarationTree.java" name="NameSpaceExportDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NameSpaceExportDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/NameSpaceImportTree.java" name="NameSpaceImportTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NameSpaceImportTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/NamedExportDeclarationTree.java" name="NamedExportDeclarationTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NamedExportDeclarationTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/NamedImportExportClauseTree.java" name="NamedImportExportClauseTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NamedImportExportClauseTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ObjectBindingPatternTree.java" name="ObjectBindingPatternTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectBindingPatternTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/ParameterListTree.java" name="ParameterListTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterListTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/declaration/SpecifierTree.java" name="SpecifierTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SpecifierTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.expression">
         <metrics coveredelements="639" complexity="306" loc="3048" methods="301" classes="35" statements="396" coveredconditionals="9" coveredmethods="268" elements="707" ncloc="1963" files="34" conditionals="10" coveredstatements="362"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ArgumentListTreeImpl.java" name="ArgumentListTreeImpl.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="7" loc="80" coveredmethods="7" methods="7" elements="17" classes="1" ncloc="51" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="ArgumentListTreeImpl">
               <metrics coveredelements="17" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="ArgumentListTreeImpl(InternalSyntaxToken,SeparatedList&lt;ExpressionTree&gt;,InternalSyntaxToken)" num="41" count="2188" type="method"/>
            <line num="42" count="2188" type="stmt"/>
            <line num="43" count="2188" type="stmt"/>
            <line num="44" count="2188" type="stmt"/>
            <line num="45" count="2188" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="arguments() : SeparatedList&lt;ExpressionTree&gt;" num="53" count="4831" type="method"/>
            <line num="55" count="4831" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="63" count="269146" type="method"/>
            <line num="65" count="269146" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="68" count="13473" type="method"/>
            <line num="70" count="13473" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="76" count="8735" type="method"/>
            <line num="78" count="8735" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ArrayAssignmentPatternTreeImpl.java" name="ArrayAssignmentPatternTreeImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="9" loc="93" coveredmethods="6" methods="9" elements="20" classes="2" ncloc="60" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="ArrayAssignmentPatternTreeImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="5" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="ArrayAssignmentPatternTreeImpl.ElidedElementFilter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayAssignmentPatternTreeImpl(SyntaxToken,SeparatedList&lt;Optional&lt;Tree&gt;&gt;,SyntaxToken)" num="40" count="35" type="method"/>
            <line num="41" count="35" type="stmt"/>
            <line num="42" count="35" type="stmt"/>
            <line num="43" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="46" count="1790" type="method"/>
            <line num="48" count="1790" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="51" count="130" type="method"/>
            <line num="53" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBracketToken() : SyntaxToken" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : SeparatedList&lt;Optional&lt;Tree&gt;&gt;" num="65" count="7" type="method"/>
            <line num="67" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBracketToken() : SyntaxToken" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="80" count="45" type="method"/>
            <line num="82" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Optional&lt;Tree&gt;) : Tree" num="87" count="233" type="method"/>
            <line num="89" count="233" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ArrayLiteralTreeImpl.java" name="ArrayLiteralTreeImpl.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="10" loc="104" coveredmethods="10" methods="10" elements="23" classes="1" ncloc="70" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ArrayLiteralTreeImpl">
               <metrics coveredelements="23" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="23" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayLiteralTreeImpl(SyntaxToken,List&lt;Tree&gt;,SyntaxToken)" num="46" count="152" type="method"/>
            <line num="47" count="152" type="stmt"/>
            <line num="48" count="152" type="stmt"/>
            <line num="49" count="152" type="stmt"/>
            <line num="50" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBracketToken() : SyntaxToken" num="56" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;ExpressionTree&gt;" num="61" count="141" type="method"/>
            <line num="63" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementsAndCommas() : List&lt;Tree&gt;" num="66" count="16" type="method"/>
            <line num="68" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBracketToken() : SyntaxToken" num="71" count="13" type="method"/>
            <line num="73" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="76" count="7952" type="method"/>
            <line num="78" count="7952" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="81" count="114" type="method"/>
            <line num="83" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="86" count="118" type="method"/>
            <line num="88" count="118" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="91" count="863" type="method"/>
            <line num="93" count="863" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="100" count="499" type="method"/>
            <line num="102" count="499" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ArrowFunctionTreeImpl.java" name="ArrowFunctionTreeImpl.java">
            <metrics coveredelements="40" coveredconditionals="3" complexity="17" loc="149" coveredmethods="13" methods="15" elements="46" classes="1" ncloc="109" statements="27" conditionals="4" coveredstatements="24"/>
            <class name="ArrowFunctionTreeImpl">
               <metrics coveredelements="40" coveredconditionals="3" complexity="17" coveredmethods="13" methods="15" elements="46" statements="27" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrowFunctionTreeImpl(SyntaxToken,FlowGenericParameterClauseTree,Tree,FlowTypeAnnotationTree,InternalSyntaxToken,Tree)" num="54" count="110" type="method"/>
            <line num="55" count="110" type="stmt"/>
            <line num="56" count="110" type="stmt"/>
            <line num="57" count="110" type="stmt"/>
            <line num="58" count="110" type="stmt"/>
            <line num="59" count="110" type="stmt"/>
            <line num="60" count="110" type="stmt"/>
            <line num="62" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncToken() : SyntaxToken" num="65" count="9" type="method"/>
            <line num="68" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Tree" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="77" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : Tree" num="83" count="6" type="method"/>
            <line num="85" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeAnnotationTree" num="88" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleArrowToken() : SyntaxToken" num="94" count="5" type="method"/>
            <line num="96" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : Tree" num="99" count="115" type="method"/>
            <line num="101" count="115" type="stmt"/>
            <line complexity="2" visibility="public" signature="parameterList() : List&lt;BindingElementTree&gt;" num="104" count="6" type="method"/>
            <line num="106" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="106" type="cond"/>
            <line num="107" count="6" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="114" count="1303" type="method"/>
            <line num="116" count="1303" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="119" count="525" type="method"/>
            <line num="121" count="525" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="124" count="339" type="method"/>
            <line num="126" count="339" type="stmt"/>
            <line complexity="2" visibility="public" signature="parameterIdentifiers() : List&lt;IdentifierTree&gt;" num="129" count="85" type="method"/>
            <line num="130" count="85" type="stmt"/>
            <line falsecount="76" truecount="9" num="130" type="cond"/>
            <line num="131" count="9" type="stmt"/>
            <line num="133" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="137" count="31" type="method"/>
            <line num="139" count="31" type="stmt"/>
            <line num="140" count="31" type="stmt"/>
            <line num="141" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/AssignmentExpressionTreeImpl.java" name="AssignmentExpressionTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="9" loc="89" coveredmethods="8" methods="9" elements="21" classes="1" ncloc="57" statements="12" conditionals="0" coveredstatements="11"/>
            <class name="AssignmentExpressionTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="9" coveredmethods="8" methods="9" elements="21" statements="12" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="AssignmentExpressionTreeImpl(Kind,ExpressionTree,InternalSyntaxToken,ExpressionTree)" num="42" count="942" type="method"/>
            <line num="43" count="942" type="stmt"/>
            <line num="44" count="942" type="stmt"/>
            <line num="45" count="942" type="stmt"/>
            <line num="46" count="942" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable() : ExpressionTree" num="50" count="5773" type="method"/>
            <line num="52" count="5773" type="stmt"/>
            <line complexity="1" visibility="public" signature="operatorToken() : SyntaxToken" num="55" count="803" type="method"/>
            <line num="57" count="803" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="60" count="2140" type="method"/>
            <line num="62" count="2140" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="65" count="55396" type="method"/>
            <line num="67" count="55396" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="70" count="5061" type="method"/>
            <line num="72" count="5061" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="75" count="3647" type="method"/>
            <line num="77" count="3647" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="80" count="30" type="method"/>
            <line num="82" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/AssignmentPatternRestElementTreeImpl.java" name="AssignmentPatternRestElementTreeImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="66" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="AssignmentPatternRestElementTreeImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="AssignmentPatternRestElementTreeImpl(InternalSyntaxToken,ExpressionTree)" num="37" count="8" type="method"/>
            <line num="38" count="8" type="stmt"/>
            <line num="39" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsisToken() : SyntaxToken" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="element() : ExpressionTree" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="52" count="13" type="method"/>
            <line num="54" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="57" count="27" type="method"/>
            <line num="59" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="62" count="13" type="method"/>
            <line num="64" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/BinaryExpressionTreeImpl.java" name="BinaryExpressionTreeImpl.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="9" loc="92" coveredmethods="9" methods="9" elements="21" classes="1" ncloc="59" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="BinaryExpressionTreeImpl">
               <metrics coveredelements="21" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="21" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="BinaryExpressionTreeImpl(Kind,ExpressionTree,InternalSyntaxToken,ExpressionTree)" num="44" count="976" type="method"/>
            <line num="45" count="976" type="stmt"/>
            <line num="46" count="976" type="stmt"/>
            <line num="47" count="976" type="stmt"/>
            <line num="48" count="976" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftOperand() : ExpressionTree" num="52" count="1753" type="method"/>
            <line num="54" count="1753" type="stmt"/>
            <line complexity="1" visibility="public" signature="operatorToken() : SyntaxToken" num="57" count="149" type="method"/>
            <line num="59" count="149" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightOperand() : ExpressionTree" num="62" count="1655" type="method"/>
            <line num="64" count="1655" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="67" count="69591" type="method"/>
            <line num="69" count="69591" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="72" count="6645" type="method"/>
            <line num="74" count="6645" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="77" count="3698" type="method"/>
            <line num="79" count="3698" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="82" count="289" type="method"/>
            <line num="84" count="289" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="87" count="588" type="method"/>
            <line num="89" count="588" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/BracketMemberExpressionTreeImpl.java" name="BracketMemberExpressionTreeImpl.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="10" loc="93" coveredmethods="10" methods="10" elements="23" classes="1" ncloc="61" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="BracketMemberExpressionTreeImpl">
               <metrics coveredelements="23" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="23" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BracketMemberExpressionTreeImpl(ExpressionTree,SyntaxToken,ExpressionTree,SyntaxToken)" num="42" count="72" type="method"/>
            <line num="43" count="72" type="stmt"/>
            <line num="44" count="72" type="stmt"/>
            <line num="45" count="72" type="stmt"/>
            <line num="46" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : ExpressionTree" num="49" count="101" type="method"/>
            <line num="51" count="101" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBracketToken() : SyntaxToken" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="property() : ExpressionTree" num="59" count="26" type="method"/>
            <line num="61" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="64" count="4" type="method"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBracketToken() : SyntaxToken" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="74" count="2404" type="method"/>
            <line num="76" count="2404" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="79" count="423" type="method"/>
            <line num="81" count="423" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="84" count="273" type="method"/>
            <line num="86" count="273" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="89" count="14" type="method"/>
            <line num="91" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/CallExpressionTreeImpl.java" name="CallExpressionTreeImpl.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="81" coveredmethods="8" methods="8" elements="17" classes="1" ncloc="49" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="CallExpressionTreeImpl">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="CallExpressionTreeImpl(ExpressionTree,ArgumentListTree)" num="40" count="1971" type="method"/>
            <line num="41" count="1971" type="stmt"/>
            <line num="42" count="1971" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee() : ExpressionTree" num="46" count="18373" type="method"/>
            <line num="48" count="18373" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentClause() : ArgumentListTree" num="51" count="4638" type="method"/>
            <line num="53" count="4638" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="56" count="267938" type="method"/>
            <line num="58" count="267938" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="61" count="17684" type="method"/>
            <line num="63" count="17684" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="66" count="7935" type="method"/>
            <line num="68" count="7935" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="71" count="1097" type="method"/>
            <line num="73" count="1097" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="76" count="328" type="method"/>
            <line num="78" count="328" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ComputedPropertyNameTreeImpl.java" name="ComputedPropertyNameTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="74" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ComputedPropertyNameTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="ComputedPropertyNameTreeImpl(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken)" num="38" count="7" type="method"/>
            <line num="39" count="7" type="stmt"/>
            <line num="40" count="7" type="stmt"/>
            <line num="41" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="50" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="60" count="88" type="method"/>
            <line num="62" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="65" count="32" type="method"/>
            <line num="67" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="15" type="method"/>
            <line num="72" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ConditionalExpressionTreeImpl.java" name="ConditionalExpressionTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="11" loc="103" coveredmethods="9" methods="11" elements="26" classes="1" ncloc="70" statements="15" conditionals="0" coveredstatements="13"/>
            <class name="ConditionalExpressionTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="26" statements="15" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalExpressionTreeImpl(ExpressionTree,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,ExpressionTree)" num="43" count="48" type="method"/>
            <line num="47" count="48" type="stmt"/>
            <line num="48" count="48" type="stmt"/>
            <line num="49" count="48" type="stmt"/>
            <line num="50" count="48" type="stmt"/>
            <line num="51" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : ExpressionTree" num="54" count="16" type="method"/>
            <line num="56" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryToken() : SyntaxToken" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="trueExpression() : ExpressionTree" num="64" count="19" type="method"/>
            <line num="66" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="falseExpression() : ExpressionTree" num="74" count="18" type="method"/>
            <line num="76" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="79" count="4039" type="method"/>
            <line num="81" count="4039" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="84" count="22" type="method"/>
            <line num="86" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="89" count="344" type="method"/>
            <line num="91" count="344" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="94" count="174" type="method"/>
            <line num="96" count="174" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/DotMemberExpressionTreeImpl.java" name="DotMemberExpressionTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="9" loc="88" coveredmethods="9" methods="9" elements="20" classes="1" ncloc="56" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="DotMemberExpressionTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="DotMemberExpressionTreeImpl(ExpressionTree,SyntaxToken,IdentifierTree)" num="42" count="854" type="method"/>
            <line num="43" count="854" type="stmt"/>
            <line num="44" count="854" type="stmt"/>
            <line num="45" count="854" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : ExpressionTree" num="48" count="6773" type="method"/>
            <line num="50" count="6773" type="stmt"/>
            <line complexity="1" visibility="public" signature="dotToken() : SyntaxToken" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="property() : IdentifierTree" num="58" count="2575" type="method"/>
            <line num="60" count="2575" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="63" count="15" type="method"/>
            <line num="65" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="68" count="42940" type="method"/>
            <line num="70" count="42940" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="73" count="876" type="method"/>
            <line num="75" count="876" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="78" count="5650" type="method"/>
            <line num="80" count="5650" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="83" count="3540" type="method"/>
            <line num="85" count="3540" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/FunctionExpressionTreeImpl.java" name="FunctionExpressionTreeImpl.java">
            <metrics coveredelements="45" coveredconditionals="2" complexity="18" loc="165" coveredmethods="16" methods="17" elements="47" classes="1" ncloc="125" statements="28" conditionals="2" coveredstatements="27"/>
            <class name="FunctionExpressionTreeImpl">
               <metrics coveredelements="45" coveredconditionals="2" complexity="18" coveredmethods="16" methods="17" elements="47" statements="28" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="2" visibility="private" signature="FunctionExpressionTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree)" num="55" count="243" type="method"/>
            <line num="61" count="243" type="stmt"/>
            <line num="62" count="243" type="stmt"/>
            <line num="63" count="243" type="stmt"/>
            <line num="64" count="243" type="stmt"/>
            <line num="65" count="243" type="stmt"/>
            <line num="66" count="243" type="stmt"/>
            <line num="67" count="243" type="stmt"/>
            <line num="68" count="243" type="stmt"/>
            <line num="69" count="243" type="stmt"/>
            <line falsecount="11" truecount="232" num="69" type="cond"/>
            <line num="71" count="243" type="stmt"/>
            <line complexity="1" visibility="public" signature="createGenerator(SyntaxToken,SyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree) : FunctionExpressionTree" num="74" count="11" type="method"/>
            <line num="78" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(SyntaxToken,SyntaxToken,IdentifierTree,FlowGenericParameterClauseTree,ParameterListTree,FlowTypeAnnotationTree,BlockTree) : FunctionExpressionTree" num="81" count="232" type="method"/>
            <line num="86" count="232" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionKeyword() : SyntaxToken" num="89" count="28" type="method"/>
            <line num="91" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="94" count="3" type="method"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : IdentifierTree" num="100" count="515" type="method"/>
            <line num="103" count="515" type="stmt"/>
            <line complexity="1" visibility="public" signature="genericParameterClause() : FlowGenericParameterClauseTree" num="106" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncToken() : SyntaxToken" num="112" count="88" type="method"/>
            <line num="115" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterClause() : ParameterListTree" num="118" count="229" type="method"/>
            <line num="120" count="229" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnType() : FlowTypeAnnotationTree" num="123" count="2" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="129" count="8305" type="method"/>
            <line num="131" count="8305" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : BlockTree" num="134" count="411" type="method"/>
            <line num="136" count="411" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterList() : List&lt;BindingElementTree&gt;" num="139" count="110" type="method"/>
            <line num="141" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="144" count="1429" type="method"/>
            <line num="146" count="1429" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="149" count="955" type="method"/>
            <line num="151" count="955" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="154" count="222" type="method"/>
            <line num="156" count="222" type="stmt"/>
            <line num="157" count="222" type="stmt"/>
            <line num="158" count="222" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/IdentifierTreeImpl.java" name="IdentifierTreeImpl.java">
            <metrics coveredelements="40" coveredconditionals="4" complexity="17" loc="129" coveredmethods="15" methods="15" elements="40" classes="1" ncloc="92" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="IdentifierTreeImpl">
               <metrics coveredelements="40" coveredconditionals="4" complexity="17" coveredmethods="15" methods="15" elements="40" statements="21" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="IdentifierTreeImpl(Kind,InternalSyntaxToken)" num="49" count="12540" type="method"/>
            <line num="50" count="12540" type="stmt"/>
            <line num="51" count="12540" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="3065451" type="method"/>
            <line num="56" count="3065451" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifierToken() : SyntaxToken" num="59" count="88747" type="method"/>
            <line num="61" count="88747" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="64" count="88446" type="method"/>
            <line num="66" count="88446" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="8" type="method"/>
            <line num="71" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbolUsage() : Optional&lt;Usage&gt;" num="74" count="9" type="method"/>
            <line num="76" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="symbol() : Optional&lt;Symbol&gt;" num="79" count="65704" type="method"/>
            <line num="81" count="65704" type="stmt"/>
            <line falsecount="59436" truecount="6268" num="81" type="cond"/>
            <line num="82" count="6268" type="stmt"/>
            <line num="84" count="59436" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSymbolUsage(Usage) : void" num="87" count="8256" type="method"/>
            <line num="88" count="8256" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="91" count="6656" type="method"/>
            <line num="93" count="6656" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(Type) : void" num="96" count="294" type="method"/>
            <line num="98" count="294" type="stmt"/>
            <line num="99" count="294" type="stmt"/>
            <line falsecount="29" truecount="265" num="99" type="cond"/>
            <line num="100" count="265" type="stmt"/>
            <line num="102" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="106" count="101590" type="method"/>
            <line num="108" count="101590" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="111" count="61092" type="method"/>
            <line num="113" count="61092" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope() : Scope" num="116" count="12" type="method"/>
            <line num="118" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="scope(Scope) : void" num="121" count="10839" type="method"/>
            <line num="122" count="10839" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="125" count="3405" type="method"/>
            <line num="127" count="3405" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ImportTreeImpl.java" name="ImportTreeImpl.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="6" loc="65" coveredmethods="3" methods="6" elements="12" classes="1" ncloc="36" statements="6" conditionals="0" coveredstatements="3"/>
            <class name="ImportTreeImpl">
               <metrics coveredelements="6" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="ImportTreeImpl(InternalSyntaxToken)" num="36" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="99" type="method"/>
            <line num="42" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/InitializedAssignmentPatternElementTreeImpl.java" name="InitializedAssignmentPatternElementTreeImpl.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="7" loc="74" coveredmethods="5" methods="7" elements="16" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="InitializedAssignmentPatternElementTreeImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="InitializedAssignmentPatternElementTreeImpl(ExpressionTree,SyntaxToken,ExpressionTree)" num="39" count="10" type="method"/>
            <line num="40" count="10" type="stmt"/>
            <line num="41" count="10" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="26" type="method"/>
            <line num="47" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="27" type="method"/>
            <line num="52" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="left() : ExpressionTree" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : SyntaxToken" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="right() : ExpressionTree" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="9" type="method"/>
            <line num="72" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/LiteralTreeImpl.java" name="LiteralTreeImpl.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="9" loc="87" coveredmethods="8" methods="9" elements="19" classes="1" ncloc="53" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="LiteralTreeImpl">
               <metrics coveredelements="17" coveredconditionals="0" complexity="9" coveredmethods="8" methods="9" elements="19" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="LiteralTreeImpl(Kind,SyntaxToken)" num="40" count="3383" type="method"/>
            <line num="41" count="3383" type="stmt"/>
            <line num="42" count="3383" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="178040" type="method"/>
            <line num="47" count="178040" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="50" count="1306" type="method"/>
            <line num="52" count="1306" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="56" count="1439" type="method"/>
            <line num="58" count="1439" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="61" count="3003" type="method"/>
            <line num="63" count="3003" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="71" count="17078" type="method"/>
            <line num="73" count="17078" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="76" count="13213" type="method"/>
            <line num="78" count="13213" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="8" type="method"/>
            <line num="83" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/NewExpressionTreeImpl.java" name="NewExpressionTreeImpl.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="10" loc="100" coveredmethods="10" methods="10" elements="26" classes="1" ncloc="67" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="NewExpressionTreeImpl">
               <metrics coveredelements="26" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="26" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="NewExpressionTreeImpl(Kind,InternalSyntaxToken,ExpressionTree)" num="45" count="90" type="method"/>
            <line num="46" count="90" type="stmt"/>
            <line num="47" count="90" type="stmt"/>
            <line num="48" count="90" type="stmt"/>
            <line num="49" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="NewExpressionTreeImpl(Kind,InternalSyntaxToken,ExpressionTree,ArgumentListTree)" num="53" count="206" type="method"/>
            <line num="54" count="206" type="stmt"/>
            <line num="55" count="206" type="stmt"/>
            <line num="56" count="206" type="stmt"/>
            <line num="57" count="206" type="stmt"/>
            <line complexity="1" visibility="public" signature="newKeyword() : SyntaxToken" num="60" count="30" type="method"/>
            <line num="62" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="65" count="1346" type="method"/>
            <line num="67" count="1346" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentClause() : ArgumentListTree" num="70" count="360" type="method"/>
            <line num="73" count="360" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="76" count="11932" type="method"/>
            <line num="78" count="11932" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="81" count="1760" type="method"/>
            <line num="83" count="1760" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="86" count="1191" type="method"/>
            <line num="88" count="1191" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="91" count="256" type="method"/>
            <line num="93" count="256" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="96" count="280" type="method"/>
            <line num="98" count="280" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/NewTargetTreeImpl.java" name="NewTargetTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="8" loc="80" coveredmethods="7" methods="8" elements="18" classes="1" ncloc="47" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="NewTargetTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="NewTargetTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken)" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newKeyword() : SyntaxToken" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dotToken() : SyntaxToken" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="targetKeyword() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="60" count="5" type="method"/>
            <line num="62" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="65" count="3" type="method"/>
            <line num="67" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ObjectAssignmentPatternPairElementTreeImpl.java" name="ObjectAssignmentPatternPairElementTreeImpl.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="7" loc="72" coveredmethods="5" methods="7" elements="16" classes="1" ncloc="43" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="ObjectAssignmentPatternPairElementTreeImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ObjectAssignmentPatternPairElementTreeImpl(IdentifierTree,SyntaxToken,Tree)" num="37" count="15" type="method"/>
            <line num="38" count="15" type="stmt"/>
            <line num="39" count="15" type="stmt"/>
            <line num="40" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="62" type="method"/>
            <line num="45" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="48" count="50" type="method"/>
            <line num="50" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="key() : IdentifierTree" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="element() : Tree" num="63" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="68" count="17" type="method"/>
            <line num="70" count="17" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ObjectAssignmentPatternTreeImpl.java" name="ObjectAssignmentPatternTreeImpl.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="8" loc="83" coveredmethods="5" methods="8" elements="18" classes="1" ncloc="52" statements="10" conditionals="0" coveredstatements="7"/>
            <class name="ObjectAssignmentPatternTreeImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="5" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ObjectAssignmentPatternTreeImpl(SyntaxToken,SeparatedList&lt;Tree&gt;,SyntaxToken)" num="40" count="26" type="method"/>
            <line num="41" count="26" type="stmt"/>
            <line num="42" count="26" type="stmt"/>
            <line num="43" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="46" count="1381" type="method"/>
            <line num="48" count="1381" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="51" count="89" type="method"/>
            <line num="53" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBraceToken() : SyntaxToken" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : SeparatedList&lt;Tree&gt;" num="64" count="5" type="method"/>
            <line num="66" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBraceToken() : SyntaxToken" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="79" count="29" type="method"/>
            <line num="81" count="29" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ObjectLiteralTreeImpl.java" name="ObjectLiteralTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="9" loc="92" coveredmethods="9" methods="9" elements="20" classes="1" ncloc="61" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ObjectLiteralTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="ObjectLiteralTreeImpl(InternalSyntaxToken,SeparatedList&lt;Tree&gt;,InternalSyntaxToken)" num="43" count="162" type="method"/>
            <line num="44" count="162" type="stmt"/>
            <line num="45" count="162" type="stmt"/>
            <line num="46" count="162" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="49" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="properties() : SeparatedList&lt;Tree&gt;" num="54" count="100" type="method"/>
            <line num="56" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="59" count="11" type="method"/>
            <line num="61" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="64" count="2931" type="method"/>
            <line num="66" count="2931" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="69" count="79" type="method"/>
            <line num="71" count="79" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="74" count="113" type="method"/>
            <line num="76" count="113" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="79" count="827" type="method"/>
            <line num="81" count="827" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="88" count="515" type="method"/>
            <line num="90" count="515" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/PairPropertyTreeImpl.java" name="PairPropertyTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="76" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="PairPropertyTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="PairPropertyTreeImpl(Tree,InternalSyntaxToken,ExpressionTree)" num="39" count="152" type="method"/>
            <line num="40" count="152" type="stmt"/>
            <line num="41" count="152" type="stmt"/>
            <line num="42" count="152" type="stmt"/>
            <line complexity="1" visibility="public" signature="key() : Tree" num="46" count="77" type="method"/>
            <line num="48" count="77" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="51" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : ExpressionTree" num="57" count="31" type="method"/>
            <line num="59" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="2656" type="method"/>
            <line num="64" count="2656" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="67" count="881" type="method"/>
            <line num="69" count="881" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="72" count="599" type="method"/>
            <line num="74" count="599" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/ParenthesisedExpressionTreeImpl.java" name="ParenthesisedExpressionTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="9" loc="92" coveredmethods="9" methods="9" elements="20" classes="1" ncloc="60" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ParenthesisedExpressionTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="ParenthesisedExpressionTreeImpl(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken)" num="42" count="102" type="method"/>
            <line num="43" count="102" type="stmt"/>
            <line num="44" count="102" type="stmt"/>
            <line num="45" count="102" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="54" count="141" type="method"/>
            <line num="56" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="64" count="2499" type="method"/>
            <line num="66" count="2499" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="69" count="621" type="method"/>
            <line num="71" count="621" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="78" count="394" type="method"/>
            <line num="80" count="394" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="83" count="50" type="method"/>
            <line num="85" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="88" count="54" type="method"/>
            <line num="90" count="54" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/PostfixExpressionTreeImpl.java" name="PostfixExpressionTreeImpl.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="8" loc="84" coveredmethods="8" methods="8" elements="18" classes="1" ncloc="53" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="PostfixExpressionTreeImpl">
               <metrics coveredelements="18" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="PostfixExpressionTreeImpl(Kind,ExpressionTree,InternalSyntaxToken)" num="43" count="182" type="method"/>
            <line num="44" count="182" type="stmt"/>
            <line num="45" count="182" type="stmt"/>
            <line num="46" count="182" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="50" count="9244" type="method"/>
            <line num="52" count="9244" type="stmt"/>
            <line complexity="1" visibility="public" signature="operatorToken() : SyntaxToken" num="55" count="7" type="method"/>
            <line num="57" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="60" count="513" type="method"/>
            <line num="62" count="513" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="65" count="1044" type="method"/>
            <line num="67" count="1044" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="701" type="method"/>
            <line num="72" count="701" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="75" count="22" type="method"/>
            <line num="77" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="80" count="164" type="method"/>
            <line num="82" count="164" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/PrefixExpressionTreeImpl.java" name="PrefixExpressionTreeImpl.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="8" loc="84" coveredmethods="8" methods="8" elements="18" classes="1" ncloc="53" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="PrefixExpressionTreeImpl">
               <metrics coveredelements="18" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="PrefixExpressionTreeImpl(Kind,InternalSyntaxToken,ExpressionTree)" num="43" count="241" type="method"/>
            <line num="44" count="241" type="stmt"/>
            <line num="45" count="241" type="stmt"/>
            <line num="46" count="241" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="49" count="17345" type="method"/>
            <line num="51" count="17345" type="stmt"/>
            <line complexity="1" visibility="public" signature="operatorToken() : SyntaxToken" num="54" count="29" type="method"/>
            <line num="56" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="59" count="229" type="method"/>
            <line num="61" count="229" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="64" count="1660" type="method"/>
            <line num="66" count="1660" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="69" count="928" type="method"/>
            <line num="71" count="928" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="74" count="96" type="method"/>
            <line num="76" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="79" count="209" type="method"/>
            <line num="81" count="209" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/RestElementTreeImpl.java" name="RestElementTreeImpl.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="7" loc="74" coveredmethods="7" methods="7" elements="15" classes="1" ncloc="44" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="RestElementTreeImpl">
               <metrics coveredelements="15" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="RestElementTreeImpl(InternalSyntaxToken,BindingElementTree)" num="39" count="30" type="method"/>
            <line num="40" count="30" type="stmt"/>
            <line num="41" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsisToken() : SyntaxToken" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="element() : BindingElementTree" num="50" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="55" count="543" type="method"/>
            <line num="57" count="543" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="60" count="93" type="method"/>
            <line num="62" count="93" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="65" count="33" type="method"/>
            <line num="67" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : List&lt;IdentifierTree&gt;" num="70" count="12" type="method"/>
            <line num="72" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/SpreadElementTreeImpl.java" name="SpreadElementTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="8" loc="80" coveredmethods="6" methods="8" elements="17" classes="1" ncloc="49" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SpreadElementTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SpreadElementTreeImpl(InternalSyntaxToken,ExpressionTree)" num="40" count="20" type="method"/>
            <line num="41" count="20" type="stmt"/>
            <line num="42" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsisToken() : SyntaxToken" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="element() : ExpressionTree" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="56" count="264" type="method"/>
            <line num="58" count="264" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="61" count="53" type="method"/>
            <line num="63" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="66" count="20" type="method"/>
            <line num="68" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/SuperTreeImpl.java" name="SuperTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="7" loc="72" coveredmethods="5" methods="7" elements="14" classes="1" ncloc="43" statements="7" conditionals="0" coveredstatements="5"/>
            <class name="SuperTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="SuperTreeImpl(InternalSyntaxToken)" num="38" count="65" type="method"/>
            <line num="39" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="42" count="964" type="method"/>
            <line num="44" count="964" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="52" count="594" type="method"/>
            <line num="54" count="594" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="58" count="429" type="method"/>
            <line num="60" count="429" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="63" count="87" type="method"/>
            <line num="65" count="87" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/TaggedTemplateTreeImpl.java" name="TaggedTemplateTreeImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="8" loc="80" coveredmethods="5" methods="8" elements="17" classes="1" ncloc="50" statements="9" conditionals="0" coveredstatements="6"/>
            <class name="TaggedTemplateTreeImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="8" coveredmethods="5" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="TaggedTemplateTreeImpl(ExpressionTree,TemplateLiteralTree)" num="39" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee() : ExpressionTree" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="template() : TemplateLiteralTree" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="80" type="method"/>
            <line num="56" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="59" count="7" type="method"/>
            <line num="61" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/TemplateCharactersTreeImpl.java" name="TemplateCharactersTreeImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="74" coveredmethods="5" methods="6" elements="16" classes="1" ncloc="43" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="TemplateCharactersTreeImpl">
               <metrics coveredelements="14" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="TemplateCharactersTreeImpl(List&lt;InternalSyntaxToken&gt;)" num="38" count="56" type="method"/>
            <line num="40" count="56" type="stmt"/>
            <line num="42" count="56" type="stmt"/>
            <line num="43" count="56" type="stmt"/>
            <line num="44" count="291" type="stmt"/>
            <line num="47" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="50" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="characters() : List&lt;SyntaxToken&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="60" count="19" type="method"/>
            <line num="62" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="65" count="150" type="method"/>
            <line num="67" count="150" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="76" type="method"/>
            <line num="72" count="76" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/TemplateExpressionTreeImpl.java" name="TemplateExpressionTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="80" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="50" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TemplateExpressionTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="TemplateExpressionTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken)" num="39" count="38" type="method"/>
            <line num="40" count="38" type="stmt"/>
            <line num="41" count="38" type="stmt"/>
            <line num="42" count="38" type="stmt"/>
            <line num="43" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="dollarToken() : SyntaxToken" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="56" count="5" type="method"/>
            <line num="58" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="66" count="460" type="method"/>
            <line num="68" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="71" count="134" type="method"/>
            <line num="73" count="134" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="76" count="80" type="method"/>
            <line num="78" count="80" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/TemplateLiteralTreeImpl.java" name="TemplateLiteralTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="10" loc="104" coveredmethods="9" methods="10" elements="22" classes="1" ncloc="71" statements="12" conditionals="0" coveredstatements="11"/>
            <class name="TemplateLiteralTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="10" coveredmethods="9" methods="10" elements="22" statements="12" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="TemplateLiteralTreeImpl(InternalSyntaxToken,List&lt;Tree&gt;,InternalSyntaxToken)" num="46" count="49" type="method"/>
            <line num="51" count="49" type="stmt"/>
            <line num="52" count="49" type="stmt"/>
            <line num="53" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBacktickToken() : SyntaxToken" num="56" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="strings() : List&lt;TemplateCharactersTree&gt;" num="61" count="8" type="method"/>
            <line num="63" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;TemplateExpressionTree&gt;" num="66" count="14" type="method"/>
            <line num="68" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBacktickToken() : SyntaxToken" num="71" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="76" count="610" type="method"/>
            <line num="78" count="610" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="81" count="148" type="method"/>
            <line num="83" count="148" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="90" count="80" type="method"/>
            <line num="92" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="95" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/YieldExpressionTreeImpl.java" name="YieldExpressionTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="9" loc="89" coveredmethods="7" methods="9" elements="20" classes="1" ncloc="57" statements="11" conditionals="0" coveredstatements="9"/>
            <class name="YieldExpressionTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="9" coveredmethods="7" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="YieldExpressionTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree)" num="42" count="21" type="method"/>
            <line num="43" count="21" type="stmt"/>
            <line num="44" count="21" type="stmt"/>
            <line num="45" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="yieldKeyword() : SyntaxToken" num="49" count="7" type="method"/>
            <line num="51" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : SyntaxToken" num="54" count="3" type="method"/>
            <line num="57" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="argument() : ExpressionTree" num="60" count="14" type="method"/>
            <line num="62" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="65" count="597" type="method"/>
            <line num="67" count="597" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="70" count="86" type="method"/>
            <line num="72" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="75" count="42" type="method"/>
            <line num="77" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Type) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.points">
         <metrics coveredelements="258" complexity="74" loc="742" methods="37" classes="11" statements="151" coveredconditionals="72" coveredmethods="36" elements="260" ncloc="435" files="10" conditionals="72" coveredstatements="150"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/BinaryProgramPoint.java" name="BinaryProgramPoint.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="75" coveredmethods="4" methods="5" elements="18" classes="1" ncloc="37" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="BinaryProgramPoint">
               <metrics coveredelements="16" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="18" statements="13" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="execute(ProgramState) : Optional&lt;ProgramState&gt;" num="32" count="142" type="method"/>
            <line num="34" count="142" type="stmt"/>
            <line complexity="1" visibility="private" signature="transformState(ProgramState) : ProgramState" num="37" count="195" type="method"/>
            <line num="38" count="195" type="stmt"/>
            <line num="40" count="195" type="stmt"/>
            <line num="41" count="195" type="stmt"/>
            <line num="42" count="195" type="stmt"/>
            <line num="43" count="195" type="stmt"/>
            <line num="44" count="195" type="stmt"/>
            <line num="45" count="195" type="stmt"/>
            <line num="47" count="195" type="stmt"/>
            <line complexity="1" visibility="public" signature="resultingConstraint(ProgramState) : Constraint" num="50" count="53" type="method"/>
            <line num="51" count="53" type="stmt"/>
            <line num="52" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOperandConstraint() : Constraint" num="64" count="24" type="method"/>
            <line num="65" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondOperandConstraint() : Constraint" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/BitwiseBinaryProgramPoint.java" name="BitwiseBinaryProgramPoint.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BitwiseBinaryProgramPoint">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="resolveValue(Constraint,Constraint,SymbolicValue,SymbolicValue) : SymbolicValue" num="28" count="5" type="method"/>
            <line num="30" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="33" count="58598" type="method"/>
            <line num="34" count="58598" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/IdentifierProgramPoint.java" name="IdentifierProgramPoint.java">
            <metrics coveredelements="12" coveredconditionals="2" complexity="4" loc="54" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="28" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="IdentifierProgramPoint">
               <metrics coveredelements="12" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="IdentifierProgramPoint(Tree,SymbolicExecution)" num="36" count="47446" type="method"/>
            <line num="37" count="47446" type="stmt"/>
            <line num="38" count="47446" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(ProgramState) : Optional&lt;ProgramState&gt;" num="41" count="47446" type="method"/>
            <line num="43" count="47446" type="stmt"/>
            <line num="45" count="47446" type="stmt"/>
            <line falsecount="44441" truecount="3005" num="45" type="cond"/>
            <line num="46" count="3005" type="stmt"/>
            <line num="48" count="47446" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="51" count="58440" type="method"/>
            <line num="52" count="58440" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/LiteralProgramPoint.java" name="LiteralProgramPoint.java">
            <metrics coveredelements="54" coveredconditionals="18" complexity="15" loc="109" coveredmethods="6" methods="6" elements="54" classes="1" ncloc="72" statements="30" conditionals="18" coveredstatements="30"/>
            <class name="LiteralProgramPoint">
               <metrics coveredelements="54" coveredconditionals="18" complexity="15" coveredmethods="6" methods="6" elements="54" statements="30" conditionals="18" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="LiteralProgramPoint(Tree)" num="45" count="1234" type="method"/>
            <line num="46" count="1234" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="49" count="10993" type="method"/>
            <line num="50" count="10993" type="stmt"/>
            <line complexity="6" visibility="public" signature="execute(ProgramState) : Optional&lt;ProgramState&gt;" num="53" count="1233" type="method"/>
            <line num="55" count="1233" type="stmt"/>
            <line num="57" count="1233" type="stmt"/>
            <line num="58" count="1233" type="stmt"/>
            <line num="60" count="1233" type="stmt"/>
            <line falsecount="1079" truecount="154" num="60" type="cond"/>
            <line num="61" count="154" type="stmt"/>
            <line num="63" count="1079" type="stmt"/>
            <line falsecount="126" truecount="953" num="63" type="cond"/>
            <line num="64" count="953" type="stmt"/>
            <line num="66" count="126" type="stmt"/>
            <line falsecount="66" truecount="60" num="66" type="cond"/>
            <line num="67" count="60" type="stmt"/>
            <line num="68" count="60" type="stmt"/>
            <line num="70" count="66" type="stmt"/>
            <line falsecount="38" truecount="28" num="70" type="cond"/>
            <line num="71" count="28" type="stmt"/>
            <line num="72" count="28" type="stmt"/>
            <line num="74" count="38" type="stmt"/>
            <line falsecount="33" truecount="5" num="74" type="cond"/>
            <line num="75" count="5" type="stmt"/>
            <line num="76" count="5" type="stmt"/>
            <line num="80" count="1233" type="stmt"/>
            <line num="83" count="1233" type="stmt"/>
            <line complexity="1" visibility="package" signature="isUndefined(Tree) : boolean" num="86" count="58472" type="method"/>
            <line num="87" count="58472" type="stmt"/>
            <line complexity="2" visibility="private" signature="pop(Deque&lt;SymbolicValue&gt;,int) : void" num="90" count="65" type="method"/>
            <line num="91" count="65" type="stmt"/>
            <line falsecount="65" truecount="109" num="91" type="cond"/>
            <line num="92" count="109" type="stmt"/>
            <line complexity="4" visibility="private" signature="popObjectLiteralProperties(Deque&lt;SymbolicValue&gt;,ObjectLiteralTree) : void" num="96" count="28" type="method"/>
            <line num="97" count="28" type="stmt"/>
            <line num="98" count="25" type="stmt"/>
            <line falsecount="8" truecount="17" num="98" type="cond"/>
            <line num="99" count="17" type="stmt"/>
            <line num="100" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="100" type="cond"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="25" type="stmt"/>
            <line falsecount="2" truecount="23" num="104" type="cond"/>
            <line num="105" count="23" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/MemberProgramPoint.java" name="MemberProgramPoint.java">
            <metrics coveredelements="71" coveredconditionals="18" complexity="18" loc="162" coveredmethods="9" methods="9" elements="71" classes="2" ncloc="115" statements="44" conditionals="18" coveredstatements="44"/>
            <class name="MemberProgramPoint">
               <metrics coveredelements="53" coveredconditionals="12" complexity="11" coveredmethods="5" methods="5" elements="53" statements="36" conditionals="12" coveredstatements="36"/>
            </class>
            <class name="MemberProgramPoint.PropertyResolutionMode">
               <metrics coveredelements="18" coveredconditionals="6" complexity="7" coveredmethods="4" methods="4" elements="18" statements="8" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="MemberProgramPoint(Tree)" num="48" count="367" type="method"/>
            <line num="49" count="367" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="52" count="59096" type="method"/>
            <line num="53" count="59096" type="stmt"/>
            <line complexity="4" visibility="public" signature="execute(ProgramState) : Optional&lt;ProgramState&gt;" num="56" count="492" type="method"/>
            <line num="58" count="492" type="stmt"/>
            <line num="59" count="492" type="stmt"/>
            <line num="60" count="492" type="stmt"/>
            <line num="61" count="492" type="stmt"/>
            <line num="63" count="492" type="stmt"/>
            <line falsecount="463" truecount="29" num="63" type="cond"/>
            <line num="64" count="29" type="stmt"/>
            <line num="65" count="29" type="stmt"/>
            <line num="66" count="29" type="stmt"/>
            <line falsecount="23" truecount="6" num="66" type="cond"/>
            <line num="67" count="6" type="stmt"/>
            <line num="69" count="23" type="stmt"/>
            <line num="71" count="23" type="stmt"/>
            <line num="72" count="23" type="stmt"/>
            <line num="73" count="23" type="stmt"/>
            <line num="77" count="463" type="stmt"/>
            <line num="78" count="463" type="stmt"/>
            <line num="79" count="463" type="stmt"/>
            <line falsecount="432" truecount="31" num="79" type="cond"/>
            <line num="80" count="31" type="stmt"/>
            <line num="82" count="432" type="stmt"/>
            <line num="83" count="432" type="stmt"/>
            <line num="84" count="432" type="stmt"/>
            <line num="88" count="455" type="stmt"/>
            <line complexity="1" visibility="public" signature="executeStrictMode(ProgramState) : Optional&lt;ProgramState&gt;" num="91" count="50" type="method"/>
            <line num="92" count="50" type="stmt"/>
            <line num="93" count="50" type="stmt"/>
            <line num="94" count="50" type="stmt"/>
            <line num="96" count="50" type="stmt"/>
            <line complexity="4" visibility="private" signature="resolvePropertyValue(ProgramState,SymbolicValue) : SymbolicValue" num="99" count="432" type="method"/>
            <line num="100" count="432" type="stmt"/>
            <line num="102" count="432" type="stmt"/>
            <line falsecount="366" truecount="66" num="102" type="cond"/>
            <line num="103" count="66" type="stmt"/>
            <line num="104" count="66" type="stmt"/>
            <line falsecount="4" truecount="62" num="104" type="cond"/>
            <line num="105" count="62" type="stmt"/>
            <line num="109" count="370" type="stmt"/>
            <line num="111" count="370" type="stmt"/>
            <line falsecount="146" truecount="224" num="111" type="cond"/>
            <line num="112" count="224" type="stmt"/>
            <line num="115" count="146" type="stmt"/>
            <line complexity="2" visibility="package" signature="resolveObjectPropertyValue(ObjectSymbolicValue,String) : SymbolicValue" num="121" count="65" type="method"/>
            <line num="123" count="65" type="stmt"/>
            <line num="124" count="65" type="stmt"/>
            <line falsecount="62" truecount="3" num="124" type="cond"/>
            <line complexity="2" visibility="package" signature="resolvePrototypePropertyValue(Type,String) : SymbolicValue" num="127" count="191" type="method"/>
            <line num="129" count="191" type="stmt"/>
            <line num="130" count="191" type="stmt"/>
            <line falsecount="133" truecount="58" num="130" type="cond"/>
            <line complexity="1" visibility="package" signature="resolveObjectPropertyValue(ObjectSymbolicValue,String) : SymbolicValue" num="143" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="resolvePrototypePropertyValue(Type,String) : SymbolicValue" num="148" count="34" type="method"/>
            <line num="150" count="34" type="stmt"/>
            <line falsecount="1" truecount="33" num="150" type="cond"/>
            <line num="151" count="33" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/NoActionProgramPoint.java" name="NoActionProgramPoint.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="31" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoActionProgramPoint">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="execute(ProgramState) : Optional&lt;ProgramState&gt;" num="27" count="9784" type="method"/>
            <line num="29" count="9784" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/PlusProgramPoint.java" name="PlusProgramPoint.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="38" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="PlusProgramPoint">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="resolveValue(Constraint,Constraint,SymbolicValue,SymbolicValue) : SymbolicValue" num="29" count="104" type="method"/>
            <line num="31" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="34" count="58740" type="method"/>
            <line num="35" count="58740" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/ProgramPoint.java" name="ProgramPoint.java">
            <metrics coveredelements="30" coveredconditionals="14" complexity="8" loc="57" coveredmethods="1" methods="1" elements="30" classes="1" ncloc="32" statements="15" conditionals="14" coveredstatements="15"/>
            <class name="ProgramPoint">
               <metrics coveredelements="30" coveredconditionals="14" complexity="8" coveredmethods="1" methods="1" elements="30" statements="15" conditionals="14" coveredstatements="15"/>
            </class>
            <line complexity="8" visibility="package" signature="create(Tree,SymbolicExecution) : ProgramPoint" num="31" count="59092" type="method"/>
            <line num="32" count="59092" type="stmt"/>
            <line falsecount="58735" truecount="357" num="32" type="cond"/>
            <line num="33" count="357" type="stmt"/>
            <line num="35" count="58735" type="stmt"/>
            <line falsecount="58653" truecount="82" num="35" type="cond"/>
            <line num="36" count="82" type="stmt"/>
            <line num="38" count="58653" type="stmt"/>
            <line falsecount="58593" truecount="60" num="38" type="cond"/>
            <line num="39" count="60" type="stmt"/>
            <line num="41" count="58593" type="stmt"/>
            <line falsecount="58589" truecount="4" num="41" type="cond"/>
            <line num="42" count="4" type="stmt"/>
            <line num="44" count="58589" type="stmt"/>
            <line falsecount="58437" truecount="152" num="44" type="cond"/>
            <line num="45" count="152" type="stmt"/>
            <line num="47" count="58437" type="stmt"/>
            <line falsecount="10993" truecount="47444" num="47" type="cond"/>
            <line num="48" count="47444" type="stmt"/>
            <line num="50" count="10993" type="stmt"/>
            <line falsecount="9785" truecount="1208" num="50" type="cond"/>
            <line num="51" count="1208" type="stmt"/>
            <line num="54" count="9785" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/StrictlyArithmeticBinaryProgramPoint.java" name="StrictlyArithmeticBinaryProgramPoint.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="4" loc="54" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="29" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="StrictlyArithmeticBinaryProgramPoint">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="protected" signature="resolveValue(Constraint,Constraint,SymbolicValue,SymbolicValue) : SymbolicValue" num="32" count="86" type="method"/>
            <line num="34" count="86" type="stmt"/>
            <line falsecount="52" truecount="34" num="34" type="cond"/>
            <line num="36" count="34" type="stmt"/>
            <line num="38" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="42" count="58659" type="method"/>
            <line num="43" count="58659" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/se/points/UnaryNumericProgramPoint.java" name="UnaryNumericProgramPoint.java">
            <metrics coveredelements="57" coveredconditionals="18" complexity="15" loc="120" coveredmethods="6" methods="6" elements="57" classes="1" ncloc="79" statements="33" conditionals="18" coveredstatements="33"/>
            <class name="UnaryNumericProgramPoint">
               <metrics coveredelements="57" coveredconditionals="18" complexity="15" coveredmethods="6" methods="6" elements="57" statements="33" conditionals="18" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="UnaryNumericProgramPoint(Tree,SymbolicExecution)" num="45" count="168" type="method"/>
            <line num="46" count="168" type="stmt"/>
            <line num="47" count="168" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(ProgramState) : Optional&lt;ProgramState&gt;" num="50" count="167" type="method"/>
            <line num="52" count="167" type="stmt"/>
            <line num="54" count="167" type="stmt"/>
            <line num="55" count="167" type="stmt"/>
            <line num="56" count="167" type="stmt"/>
            <line num="58" count="167" type="stmt"/>
            <line num="59" count="167" type="stmt"/>
            <line num="63" count="167" type="stmt"/>
            <line num="64" count="167" type="stmt"/>
            <line num="66" count="167" type="stmt"/>
            <line complexity="7" visibility="private" signature="execute(SymbolicValue,Constraint) : void" num="69" count="167" type="method"/>
            <line num="70" count="167" type="stmt"/>
            <line falsecount="160" truecount="7" num="70" type="cond"/>
            <line num="71" count="7" type="stmt"/>
            <line falsecount="4" truecount="3" num="71" type="cond"/>
            <line num="72" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line num="76" count="167" type="stmt"/>
            <line falsecount="63" truecount="104" num="76" type="cond"/>
            <line num="77" count="104" type="stmt"/>
            <line falsecount="11" truecount="93" num="77" type="cond"/>
            <line num="79" count="104" type="stmt"/>
            <line num="80" count="104" type="stmt"/>
            <line num="83" count="167" type="stmt"/>
            <line falsecount="111" truecount="56" num="83" type="cond"/>
            <line num="84" count="56" type="stmt"/>
            <line num="86" count="56" type="stmt"/>
            <line falsecount="33" truecount="23" num="86" type="cond"/>
            <line num="87" count="23" type="stmt"/>
            <line num="90" count="33" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertToNumber(SymbolicValue,Constraint) : SymbolicValue" num="96" count="127" type="method"/>
            <line num="97" count="127" type="stmt"/>
            <line num="98" count="127" type="stmt"/>
            <line falsecount="95" truecount="32" num="98" type="cond"/>
            <line complexity="3" visibility="private" signature="executeAssignment(ProgramState) : ProgramState" num="101" count="167" type="method"/>
            <line num="102" count="167" type="stmt"/>
            <line num="104" count="167" type="stmt"/>
            <line falsecount="56" truecount="111" num="104" type="cond"/>
            <line num="105" count="111" type="stmt"/>
            <line num="106" count="111" type="stmt"/>
            <line falsecount="7" truecount="104" num="106" type="cond"/>
            <line num="107" count="104" type="stmt"/>
            <line num="111" count="167" type="stmt"/>
            <line complexity="1" visibility="public" signature="originatesFrom(Tree) : boolean" num="114" count="58589" type="method"/>
            <line num="115" count="58589" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.statement">
         <metrics coveredelements="489" complexity="199" loc="2101" methods="197" classes="24" statements="290" coveredconditionals="4" coveredmethods="196" elements="491" ncloc="1346" files="24" conditionals="4" coveredstatements="289"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/BlockTreeImpl.java" name="BlockTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="85" coveredmethods="8" methods="8" elements="20" classes="1" ncloc="54" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="BlockTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="BlockTreeImpl(InternalSyntaxToken,List&lt;StatementTree&gt;,InternalSyntaxToken)" num="40" count="1459" type="method"/>
            <line num="41" count="1459" type="stmt"/>
            <line num="42" count="1459" type="stmt"/>
            <line num="43" count="1459" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlockTreeImpl(InternalSyntaxToken,InternalSyntaxToken)" num="46" count="892" type="method"/>
            <line num="47" count="892" type="stmt"/>
            <line num="48" count="892" type="stmt"/>
            <line num="49" count="892" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="21195" type="method"/>
            <line num="55" count="21195" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements() : List&lt;StatementTree&gt;" num="63" count="1083" type="method"/>
            <line num="65" count="1083" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="68" count="15" type="method"/>
            <line num="70" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="73" count="13903" type="method"/>
            <line num="75" count="13903" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="9016" type="method"/>
            <line num="83" count="9016" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/BreakStatementTreeImpl.java" name="BreakStatementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="74" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="BreakStatementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BreakStatementTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken)" num="37" count="65" type="method"/>
            <line num="38" count="65" type="stmt"/>
            <line num="39" count="65" type="stmt"/>
            <line num="40" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="1385" type="method"/>
            <line num="45" count="1385" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakKeyword() : SyntaxToken" num="48" count="55" type="method"/>
            <line num="50" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="labelToken() : SyntaxToken" num="53" count="63" type="method"/>
            <line num="56" count="63" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="59" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="65" count="430" type="method"/>
            <line num="67" count="430" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="192" type="method"/>
            <line num="72" count="192" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/CaseClauseTreeImpl.java" name="CaseClauseTreeImpl.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="9" loc="93" coveredmethods="9" methods="9" elements="24" classes="1" ncloc="62" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="CaseClauseTreeImpl">
               <metrics coveredelements="24" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="24" statements="15" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="CaseClauseTreeImpl(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken)" num="42" count="8" type="method"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="CaseClauseTreeImpl(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,List&lt;StatementTree&gt;)" num="49" count="59" type="method"/>
            <line num="50" count="59" type="stmt"/>
            <line num="51" count="59" type="stmt"/>
            <line num="52" count="59" type="stmt"/>
            <line num="53" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyword() : SyntaxToken" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="61" count="29" type="method"/>
            <line num="63" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="66" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements() : List&lt;StatementTree&gt;" num="71" count="60" type="method"/>
            <line num="73" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="76" count="731" type="method"/>
            <line num="78" count="731" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="81" count="283" type="method"/>
            <line num="83" count="283" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="89" count="174" type="method"/>
            <line num="91" count="174" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/CatchBlockTreeImpl.java" name="CatchBlockTreeImpl.java">
            <metrics coveredelements="30" coveredconditionals="2" complexity="11" loc="109" coveredmethods="10" methods="10" elements="30" classes="1" ncloc="72" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="CatchBlockTreeImpl">
               <metrics coveredelements="30" coveredconditionals="2" complexity="11" coveredmethods="10" methods="10" elements="30" statements="18" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="CatchBlockTreeImpl(InternalSyntaxToken,InternalSyntaxToken,BindingElementTree,InternalSyntaxToken,BlockTree)" num="44" count="72" type="method"/>
            <line num="49" count="72" type="stmt"/>
            <line num="50" count="72" type="stmt"/>
            <line num="51" count="72" type="stmt"/>
            <line num="52" count="72" type="stmt"/>
            <line num="53" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="56" count="46" type="method"/>
            <line num="58" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="catchKeyword() : SyntaxToken" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter() : Tree" num="71" count="12" type="method"/>
            <line num="73" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="block() : BlockTree" num="81" count="71" type="method"/>
            <line num="83" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="86" count="342" type="method"/>
            <line num="88" count="342" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="91" count="240" type="method"/>
            <line num="93" count="240" type="stmt"/>
            <line complexity="2" visibility="public" signature="parameterIdentifiers() : List&lt;IdentifierTree&gt;" num="96" count="62" type="method"/>
            <line num="97" count="62" type="stmt"/>
            <line num="99" count="62" type="stmt"/>
            <line falsecount="1" truecount="61" num="99" type="cond"/>
            <line num="100" count="61" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ContinueStatementTreeImpl.java" name="ContinueStatementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="74" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ContinueStatementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="ContinueStatementTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken)" num="37" count="18" type="method"/>
            <line num="38" count="18" type="stmt"/>
            <line num="39" count="18" type="stmt"/>
            <line num="40" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="208" type="method"/>
            <line num="45" count="208" type="stmt"/>
            <line complexity="1" visibility="public" signature="continueKeyword() : SyntaxToken" num="48" count="14" type="method"/>
            <line num="50" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="labelToken() : SyntaxToken" num="53" count="18" type="method"/>
            <line num="56" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="59" count="127" type="method"/>
            <line num="61" count="127" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="64" count="37" type="method"/>
            <line num="66" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="69" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/DebuggerStatementTreeImpl.java" name="DebuggerStatementTreeImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="68" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="DebuggerStatementTreeImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="DebuggerStatementTreeImpl(InternalSyntaxToken,SyntaxToken)" num="37" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="43" count="40" type="method"/>
            <line num="45" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="debuggerKeyword() : SyntaxToken" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="53" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="59" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/DefaultClauseTreeImpl.java" name="DefaultClauseTreeImpl.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="85" coveredmethods="8" methods="8" elements="20" classes="1" ncloc="53" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="DefaultClauseTreeImpl">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultClauseTreeImpl(InternalSyntaxToken,InternalSyntaxToken)" num="40" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DefaultClauseTreeImpl(InternalSyntaxToken,InternalSyntaxToken,List&lt;StatementTree&gt;)" num="47" count="17" type="method"/>
            <line num="48" count="17" type="stmt"/>
            <line num="49" count="17" type="stmt"/>
            <line num="50" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyword() : SyntaxToken" num="54" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="59" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements() : List&lt;StatementTree&gt;" num="64" count="20" type="method"/>
            <line num="66" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="69" count="47" type="method"/>
            <line num="71" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="74" count="65" type="method"/>
            <line num="76" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="32" type="method"/>
            <line num="83" count="32" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/DoWhileStatementTreeImpl.java" name="DoWhileStatementTreeImpl.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="11" loc="117" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="82" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="DoWhileStatementTreeImpl">
               <metrics coveredelements="28" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DoWhileStatementTreeImpl(InternalSyntaxToken,StatementTree,InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,SyntaxToken)" num="44" count="31" type="method"/>
            <line num="48" count="31" type="stmt"/>
            <line num="49" count="31" type="stmt"/>
            <line num="50" count="31" type="stmt"/>
            <line num="51" count="31" type="stmt"/>
            <line num="52" count="31" type="stmt"/>
            <line num="53" count="31" type="stmt"/>
            <line num="54" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="doKeyword() : SyntaxToken" num="58" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="64" count="14" type="method"/>
            <line num="66" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="whileKeyword() : SyntaxToken" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : ExpressionTree" num="79" count="17" type="method"/>
            <line num="81" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="89" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="95" count="270" type="method"/>
            <line num="97" count="270" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="100" count="156" type="method"/>
            <line num="102" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="113" count="106" type="method"/>
            <line num="115" count="106" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ElseClauseTreeImpl.java" name="ElseClauseTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="69" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="40" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ElseClauseTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ElseClauseTreeImpl(InternalSyntaxToken,StatementTree)" num="38" count="91" type="method"/>
            <line num="39" count="91" type="stmt"/>
            <line num="40" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseKeyword() : SyntaxToken" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="49" count="65" type="method"/>
            <line num="52" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="55" count="127" type="method"/>
            <line num="57" count="127" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="60" count="550" type="method"/>
            <line num="62" count="550" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="65" count="328" type="method"/>
            <line num="67" count="328" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/EmptyStatementTreeImpl.java" name="EmptyStatementTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="59" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="EmptyStatementTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="EmptyStatementTreeImpl(InternalSyntaxToken)" num="35" count="26" type="method"/>
            <line num="36" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="71" type="method"/>
            <line num="42" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="83" type="method"/>
            <line num="52" count="83" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="55" count="38" type="method"/>
            <line num="57" count="38" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ExpressionStatementTreeImpl.java" name="ExpressionStatementTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="68" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ExpressionStatementTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpressionStatementTreeImpl(ExpressionTree,SyntaxToken)" num="37" count="2759" type="method"/>
            <line num="39" count="2759" type="stmt"/>
            <line num="40" count="2759" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="43" count="1382" type="method"/>
            <line num="45" count="1382" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="48" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="20316" type="method"/>
            <line num="56" count="20316" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="59" count="16127" type="method"/>
            <line num="61" count="16127" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="64" count="10152" type="method"/>
            <line num="66" count="10152" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/FinallyBlockTreeImpl.java" name="FinallyBlockTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="67" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FinallyBlockTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FinallyBlockTreeImpl(InternalSyntaxToken,BlockTree)" num="37" count="29" type="method"/>
            <line num="38" count="29" type="stmt"/>
            <line num="39" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="42" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyKeyword() : SyntaxToken" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="block() : BlockTree" num="52" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="57" count="131" type="method"/>
            <line num="59" count="131" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="62" count="96" type="method"/>
            <line num="64" count="96" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ForObjectStatementTreeImpl.java" name="ForObjectStatementTreeImpl.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="13" loc="121" coveredmethods="12" methods="12" elements="36" classes="1" ncloc="86" statements="22" conditionals="2" coveredstatements="22"/>
            <class name="ForObjectStatementTreeImpl">
               <metrics coveredelements="36" coveredconditionals="2" complexity="13" coveredmethods="12" methods="12" elements="36" statements="22" conditionals="2" coveredstatements="22"/>
            </class>
            <line complexity="2" visibility="public" signature="ForObjectStatementTreeImpl(InternalSyntaxToken,SyntaxToken,InternalSyntaxToken,Tree,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree)" num="46" count="180" type="method"/>
            <line num="50" count="180" type="stmt"/>
            <line num="51" count="180" type="stmt"/>
            <line num="52" count="180" type="stmt"/>
            <line num="53" count="180" type="stmt"/>
            <line num="54" count="180" type="stmt"/>
            <line num="55" count="180" type="stmt"/>
            <line num="56" count="180" type="stmt"/>
            <line num="57" count="180" type="stmt"/>
            <line num="59" count="180" type="stmt"/>
            <line falsecount="78" truecount="102" num="59" type="cond"/>
            <line num="60" count="102" type="stmt"/>
            <line num="62" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="forKeyword() : SyntaxToken" num="66" count="7" type="method"/>
            <line num="68" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitToken() : SyntaxToken" num="71" count="3" type="method"/>
            <line num="74" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="77" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="variableOrExpression() : Tree" num="82" count="648" type="method"/>
            <line num="84" count="648" type="stmt"/>
            <line complexity="1" visibility="public" signature="ofOrInKeyword() : SyntaxToken" num="87" count="3" type="method"/>
            <line num="89" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="92" count="560" type="method"/>
            <line num="94" count="560" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="97" count="3" type="method"/>
            <line num="99" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="102" count="591" type="method"/>
            <line num="104" count="591" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="107" count="1790" type="method"/>
            <line num="109" count="1790" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="112" count="557" type="method"/>
            <line num="114" count="557" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="117" count="682" type="method"/>
            <line num="119" count="682" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ForStatementTreeImpl.java" name="ForStatementTreeImpl.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="13" loc="129" coveredmethods="13" methods="13" elements="34" classes="1" ncloc="93" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="ForStatementTreeImpl">
               <metrics coveredelements="34" coveredconditionals="0" complexity="13" coveredmethods="13" methods="13" elements="34" statements="21" conditionals="0" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="ForStatementTreeImpl(InternalSyntaxToken,InternalSyntaxToken,Tree,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree)" num="46" count="150" type="method"/>
            <line num="56" count="150" type="stmt"/>
            <line num="57" count="150" type="stmt"/>
            <line num="58" count="150" type="stmt"/>
            <line num="59" count="150" type="stmt"/>
            <line num="60" count="150" type="stmt"/>
            <line num="61" count="150" type="stmt"/>
            <line num="62" count="150" type="stmt"/>
            <line num="63" count="150" type="stmt"/>
            <line num="64" count="150" type="stmt"/>
            <line complexity="1" visibility="public" signature="forKeyword() : SyntaxToken" num="67" count="27" type="method"/>
            <line num="69" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : Tree" num="77" count="266" type="method"/>
            <line num="80" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstSemicolonToken() : SyntaxToken" num="83" count="3" type="method"/>
            <line num="85" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : ExpressionTree" num="88" count="209" type="method"/>
            <line num="91" count="209" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondSemicolonToken() : SyntaxToken" num="94" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="update() : ExpressionTree" num="99" count="292" type="method"/>
            <line num="102" count="292" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="105" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="110" count="205" type="method"/>
            <line num="112" count="205" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="115" count="4102" type="method"/>
            <line num="117" count="4102" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="120" count="1027" type="method"/>
            <line num="122" count="1027" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="125" count="592" type="method"/>
            <line num="127" count="592" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/IfStatementTreeImpl.java" name="IfStatementTreeImpl.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="12" loc="119" coveredmethods="12" methods="12" elements="34" classes="1" ncloc="83" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="IfStatementTreeImpl">
               <metrics coveredelements="34" coveredconditionals="0" complexity="12" coveredmethods="12" methods="12" elements="34" statements="22" conditionals="0" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="IfStatementTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree)" num="44" count="441" type="method"/>
            <line num="48" count="441" type="stmt"/>
            <line num="49" count="441" type="stmt"/>
            <line num="50" count="441" type="stmt"/>
            <line num="51" count="441" type="stmt"/>
            <line num="52" count="441" type="stmt"/>
            <line num="53" count="441" type="stmt"/>
            <line complexity="1" visibility="public" signature="IfStatementTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree,ElseClauseTree)" num="57" count="91" type="method"/>
            <line num="61" count="91" type="stmt"/>
            <line num="62" count="91" type="stmt"/>
            <line num="63" count="91" type="stmt"/>
            <line num="64" count="91" type="stmt"/>
            <line num="65" count="91" type="stmt"/>
            <line num="66" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifKeyword() : SyntaxToken" num="70" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="75" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : ExpressionTree" num="80" count="344" type="method"/>
            <line num="82" count="344" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="85" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="90" count="345" type="method"/>
            <line num="92" count="345" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseClause() : ElseClauseTree" num="95" count="413" type="method"/>
            <line num="98" count="413" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasElse() : boolean" num="101" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="105" count="371909" type="method"/>
            <line num="107" count="371909" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="110" count="38637" type="method"/>
            <line num="112" count="38637" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="115" count="2027" type="method"/>
            <line num="117" count="2027" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/LabelledStatementTreeImpl.java" name="LabelledStatementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="73" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="LabelledStatementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="LabelledStatementTreeImpl(SyntaxToken,InternalSyntaxToken,StatementTree)" num="38" count="22" type="method"/>
            <line num="39" count="22" type="stmt"/>
            <line num="40" count="22" type="stmt"/>
            <line num="41" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="434" type="method"/>
            <line num="46" count="434" type="stmt"/>
            <line complexity="1" visibility="public" signature="labelToken() : SyntaxToken" num="49" count="22" type="method"/>
            <line num="51" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="59" count="33" type="method"/>
            <line num="61" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="64" count="79" type="method"/>
            <line num="66" count="79" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="69" count="43" type="method"/>
            <line num="71" count="43" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ReturnStatementTreeImpl.java" name="ReturnStatementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="75" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ReturnStatementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="ReturnStatementTreeImpl(SyntaxToken,ExpressionTree,SyntaxToken)" num="38" count="231" type="method"/>
            <line num="39" count="231" type="stmt"/>
            <line num="40" count="231" type="stmt"/>
            <line num="41" count="231" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="8478" type="method"/>
            <line num="46" count="8478" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnKeyword() : SyntaxToken" num="49" count="134" type="method"/>
            <line num="51" count="134" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="54" count="324" type="method"/>
            <line num="57" count="324" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="60" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="66" count="1451" type="method"/>
            <line num="68" count="1451" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="71" count="915" type="method"/>
            <line num="73" count="915" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/SwitchStatementTreeImpl.java" name="SwitchStatementTreeImpl.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="11" loc="111" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="75" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="SwitchStatementTreeImpl">
               <metrics coveredelements="28" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SwitchStatementTreeImpl(SyntaxToken,SyntaxToken,ExpressionTree,SyntaxToken,SyntaxToken,List&lt;SwitchClauseTree&gt;,SyntaxToken)" num="45" count="54" type="method"/>
            <line num="50" count="54" type="stmt"/>
            <line num="51" count="54" type="stmt"/>
            <line num="52" count="54" type="stmt"/>
            <line num="53" count="54" type="stmt"/>
            <line num="54" count="54" type="stmt"/>
            <line num="55" count="54" type="stmt"/>
            <line num="56" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchKeyword() : SyntaxToken" num="59" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="69" count="115" type="method"/>
            <line num="71" count="115" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="74" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="cases() : List&lt;SwitchClauseTree&gt;" num="84" count="122" type="method"/>
            <line num="86" count="122" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="89" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="94" count="575" type="method"/>
            <line num="96" count="575" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="99" count="136" type="method"/>
            <line num="101" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="107" count="137" type="method"/>
            <line num="109" count="137" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/ThrowStatementTreeImpl.java" name="ThrowStatementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="78" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="47" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ThrowStatementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="ThrowStatementTreeImpl(InternalSyntaxToken,ExpressionTree,SyntaxToken)" num="39" count="28" type="method"/>
            <line num="41" count="28" type="stmt"/>
            <line num="42" count="28" type="stmt"/>
            <line num="43" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="47" count="463" type="method"/>
            <line num="49" count="463" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwKeyword() : SyntaxToken" num="52" count="16" type="method"/>
            <line num="54" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="57" count="16" type="method"/>
            <line num="60" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="63" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="69" count="139" type="method"/>
            <line num="71" count="139" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="74" count="92" type="method"/>
            <line num="76" count="92" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/TryStatementTreeImpl.java" name="TryStatementTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="88" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="58" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TryStatementTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="TryStatementTreeImpl(SyntaxToken,BlockTree,CatchBlockTree,FinallyBlockTree)" num="41" count="73" type="method"/>
            <line num="42" count="73" type="stmt"/>
            <line num="43" count="73" type="stmt"/>
            <line num="44" count="73" type="stmt"/>
            <line num="45" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="48" count="400" type="method"/>
            <line num="50" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="tryKeyword() : SyntaxToken" num="53" count="16" type="method"/>
            <line num="55" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="block() : BlockTree" num="58" count="16" type="method"/>
            <line num="60" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="catchBlock() : CatchBlockTree" num="63" count="49" type="method"/>
            <line num="66" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyBlock() : FinallyBlockTree" num="69" count="36" type="method"/>
            <line num="72" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="75" count="341" type="method"/>
            <line num="77" count="341" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="84" count="244" type="method"/>
            <line num="86" count="244" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/VariableDeclarationTreeImpl.java" name="VariableDeclarationTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="7" loc="88" coveredmethods="7" methods="7" elements="19" classes="1" ncloc="55" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="VariableDeclarationTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="19" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="VariableDeclarationTreeImpl(Kind,InternalSyntaxToken,SeparatedList&lt;BindingElementTree&gt;)" num="43" count="2338" type="method"/>
            <line num="45" count="2338" type="stmt"/>
            <line num="46" count="2338" type="stmt"/>
            <line num="47" count="2338" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="51" count="184327" type="method"/>
            <line num="53" count="184327" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="variables() : SeparatedList&lt;BindingElementTree&gt;" num="61" count="4913" type="method"/>
            <line num="63" count="4913" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="66" count="10633" type="method"/>
            <line num="68" count="10633" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="74" count="8920" type="method"/>
            <line num="76" count="8920" type="stmt"/>
            <line complexity="1" visibility="public" signature="variableIdentifiers() : List&lt;IdentifierTree&gt;" num="79" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/VariableStatementTreeImpl.java" name="VariableStatementTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="67" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="VariableStatementTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="VariableStatementTreeImpl(VariableDeclarationTree,SyntaxToken)" num="37" count="2140" type="method"/>
            <line num="38" count="2140" type="stmt"/>
            <line num="39" count="2140" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="42" count="3229" type="method"/>
            <line num="44" count="3229" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaration() : VariableDeclarationTree" num="47" count="471" type="method"/>
            <line num="49" count="471" type="stmt"/>
            <line complexity="1" visibility="public" signature="semicolonToken() : SyntaxToken" num="52" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="58" count="11532" type="method"/>
            <line num="60" count="11532" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="63" count="8171" type="method"/>
            <line num="65" count="8171" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/WhileStatementTreeImpl.java" name="WhileStatementTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="92" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="60" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="WhileStatementTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="WhileStatementTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree)" num="41" count="80" type="method"/>
            <line num="45" count="80" type="stmt"/>
            <line num="46" count="80" type="stmt"/>
            <line num="47" count="80" type="stmt"/>
            <line num="48" count="80" type="stmt"/>
            <line num="49" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="whileKeyword() : SyntaxToken" num="53" count="9" type="method"/>
            <line num="55" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="openParenthesisToken() : SyntaxToken" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : ExpressionTree" num="63" count="162" type="method"/>
            <line num="65" count="162" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeParenthesisToken() : SyntaxToken" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="73" count="151" type="method"/>
            <line num="75" count="151" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="78" count="2819" type="method"/>
            <line num="80" count="2819" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="83" count="571" type="method"/>
            <line num="85" count="571" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="88" count="268" type="method"/>
            <line num="90" count="268" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/statement/WithStatementTreeImpl.java" name="WithStatementTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="92" coveredmethods="9" methods="9" elements="22" classes="1" ncloc="60" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="WithStatementTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="WithStatementTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken,StatementTree)" num="41" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="75" type="method"/>
            <line num="55" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="withKeyword() : SyntaxToken" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="openingParenthesisToken() : SyntaxToken" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Tree" num="68" count="3" type="method"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="closingParenthesisToken() : SyntaxToken" num="73" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement() : StatementTree" num="78" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="83" count="23" type="method"/>
            <line num="85" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="88" count="14" type="method"/>
            <line num="90" count="14" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.symbols">
         <metrics coveredelements="540" complexity="148" loc="1276" methods="99" classes="7" statements="364" coveredconditionals="82" coveredmethods="99" elements="553" ncloc="881" files="7" conditionals="90" coveredstatements="359"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/GlobalVariableNames.java" name="GlobalVariableNames.java">
            <metrics coveredelements="31" coveredconditionals="6" complexity="8" loc="105" coveredmethods="4" methods="4" elements="32" classes="1" ncloc="69" statements="22" conditionals="6" coveredstatements="21"/>
            <class name="GlobalVariableNames">
               <metrics coveredelements="31" coveredconditionals="6" complexity="8" coveredmethods="4" methods="4" elements="32" statements="22" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="3" visibility="public" signature="GlobalVariableNames(Configuration)" num="58" count="272" type="method"/>
            <line num="59" count="272" type="stmt"/>
            <line num="61" count="272" type="stmt"/>
            <line num="62" count="272" type="stmt"/>
            <line num="64" count="272" type="stmt"/>
            <line falsecount="97" truecount="175" num="64" type="cond"/>
            <line num="65" count="175" type="stmt"/>
            <line num="66" count="175" type="stmt"/>
            <line num="67" count="4004" type="stmt"/>
            <line num="69" count="4004" type="stmt"/>
            <line falsecount="1" truecount="4003" num="69" type="cond"/>
            <line num="70" count="4003" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="272" type="stmt"/>
            <line complexity="2" visibility="package" signature="environments() : Map&lt;String, Set&lt;String&gt;&gt;" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="names() : Set&lt;String&gt;" num="94" count="271" type="method"/>
            <line num="95" count="272" type="stmt"/>
            <line complexity="2" visibility="private" signature="globalsFromEnvironment(String) : Optional&lt;Set&lt;String&gt;&gt;" num="98" count="4276" type="method"/>
            <line num="99" count="4276" type="stmt"/>
            <line falsecount="1" truecount="4275" num="99" type="cond"/>
            <line num="100" count="4275" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/HoistedSymbolVisitor.java" name="HoistedSymbolVisitor.java">
            <metrics coveredelements="174" coveredconditionals="24" complexity="45" loc="363" coveredmethods="31" methods="31" elements="179" classes="1" ncloc="273" statements="120" conditionals="28" coveredstatements="119"/>
            <class name="HoistedSymbolVisitor">
               <metrics coveredelements="174" coveredconditionals="24" complexity="45" coveredmethods="31" methods="31" elements="179" statements="120" conditionals="28" coveredstatements="119"/>
            </class>
            <line complexity="1" visibility="public" signature="HoistedSymbolVisitor(Map&lt;Tree, Scope&gt;,Configuration)" num="73" count="272" type="method"/>
            <line num="74" count="272" type="stmt"/>
            <line num="75" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="78" count="272" type="method"/>
            <line num="80" count="272" type="stmt"/>
            <line num="82" count="272" type="stmt"/>
            <line num="83" count="272" type="stmt"/>
            <line num="84" count="271" type="stmt"/>
            <line num="85" count="272" type="stmt"/>
            <line num="87" count="272" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitBlock(BlockTree) : void" num="90" count="2137" type="method"/>
            <line num="92" count="2137" type="stmt"/>
            <line falsecount="722" truecount="1415" num="92" type="cond"/>
            <line num="93" count="1415" type="stmt"/>
            <line num="96" count="722" type="stmt"/>
            <line num="97" count="722" type="stmt"/>
            <line num="98" count="722" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="102" count="135" type="method"/>
            <line num="104" count="135" type="stmt"/>
            <line num="105" count="135" type="stmt"/>
            <line num="106" count="135" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="109" count="168" type="method"/>
            <line num="111" count="168" type="stmt"/>
            <line num="112" count="168" type="stmt"/>
            <line num="113" count="168" type="stmt"/>
            <line num="114" count="168" type="stmt"/>
            <line num="115" count="168" type="stmt"/>
            <line num="116" count="168" type="stmt"/>
            <line num="117" count="168" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="120" count="33" type="method"/>
            <line num="122" count="33" type="stmt"/>
            <line num="124" count="33" type="stmt"/>
            <line num="125" count="33" type="stmt"/>
            <line num="126" count="33" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitSpecifier(SpecifierTree) : void" num="129" count="96" type="method"/>
            <line num="131" count="96" type="stmt"/>
            <line falsecount="0" truecount="96" num="131" type="cond"/>
            <line num="132" count="96" type="stmt"/>
            <line falsecount="19" truecount="77" num="132" type="cond"/>
            <line num="134" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNameSpaceImport(NameSpaceImportTree) : void" num="137" count="37" type="method"/>
            <line num="139" count="37" type="stmt"/>
            <line num="140" count="37" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitImportClause(ImportClauseTree) : void" num="143" count="129" type="method"/>
            <line num="145" count="129" type="stmt"/>
            <line falsecount="91" truecount="38" num="145" type="cond"/>
            <line num="146" count="38" type="stmt"/>
            <line num="148" count="129" type="stmt"/>
            <line complexity="1" visibility="private" signature="declareImportedSymbol(IdentifierTree) : void" num="151" count="171" type="method"/>
            <line num="152" count="171" type="stmt"/>
            <line complexity="1" visibility="private" signature="addExternalSymbols() : void" num="156" count="272" type="method"/>
            <line num="157" count="272" type="stmt"/>
            <line num="158" count="147490" type="stmt"/>
            <line num="161" count="272" type="stmt"/>
            <line num="162" count="272" type="stmt"/>
            <line num="164" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMethodDeclaration(MethodDeclarationTree) : void" num="167" count="141" type="method"/>
            <line num="169" count="141" type="stmt"/>
            <line num="170" count="141" type="stmt"/>
            <line num="171" count="141" type="stmt"/>
            <line num="173" count="141" type="stmt"/>
            <line num="175" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAccessorMethodDeclaration(AccessorMethodDeclarationTree) : void" num="178" count="64" type="method"/>
            <line num="180" count="64" type="stmt"/>
            <line num="182" count="64" type="stmt"/>
            <line num="183" count="64" type="stmt"/>
            <line num="185" count="64" type="stmt"/>
            <line num="187" count="64" type="stmt"/>
            <line complexity="2" visibility="private" signature="addFunctionBuiltInSymbols() : void" num="190" count="1021" type="method"/>
            <line num="191" count="1021" type="stmt"/>
            <line num="192" count="1021" type="stmt"/>
            <line falsecount="0" truecount="1021" num="192" type="cond"/>
            <line num="193" count="1021" type="stmt"/>
            <line complexity="1" visibility="private" signature="addThisSymbol() : void" num="197" count="1088" type="method"/>
            <line num="198" count="1088" type="stmt"/>
            <line num="199" count="1088" type="stmt"/>
            <line complexity="1" visibility="private" signature="addThisSymbol(ClassTree) : void" num="202" count="132" type="method"/>
            <line num="203" count="132" type="stmt"/>
            <line num="204" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCatchBlock(CatchBlockTree) : void" num="207" count="60" type="method"/>
            <line num="209" count="60" type="stmt"/>
            <line num="211" count="60" type="stmt"/>
            <line num="212" count="60" type="stmt"/>
            <line num="216" count="60" type="stmt"/>
            <line num="218" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="221" count="593" type="method"/>
            <line num="223" count="593" type="stmt"/>
            <line num="226" count="593" type="stmt"/>
            <line num="227" count="593" type="stmt"/>
            <line num="228" count="593" type="stmt"/>
            <line num="229" count="593" type="stmt"/>
            <line num="231" count="593" type="stmt"/>
            <line num="233" count="593" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowGenericParameter(FlowGenericParameterTree) : void" num="236" count="56" type="method"/>
            <line num="238" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrowFunction(ArrowFunctionTree) : void" num="242" count="83" type="method"/>
            <line num="244" count="83" type="stmt"/>
            <line num="245" count="83" type="stmt"/>
            <line num="246" count="83" type="stmt"/>
            <line num="247" count="83" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="250" count="223" type="method"/>
            <line num="252" count="223" type="stmt"/>
            <line num="254" count="223" type="stmt"/>
            <line num="255" count="223" type="stmt"/>
            <line falsecount="170" truecount="53" num="255" type="cond"/>
            <line num="257" count="53" type="stmt"/>
            <line num="260" count="223" type="stmt"/>
            <line num="261" count="223" type="stmt"/>
            <line num="262" count="223" type="stmt"/>
            <line num="264" count="223" type="stmt"/>
            <line num="266" count="223" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClass(ClassTree) : void" num="269" count="132" type="method"/>
            <line num="271" count="132" type="stmt"/>
            <line num="273" count="132" type="stmt"/>
            <line num="274" count="132" type="stmt"/>
            <line num="276" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowInterfaceDeclaration(FlowInterfaceDeclarationTree) : void" num="279" count="16" type="method"/>
            <line num="281" count="16" type="stmt"/>
            <line num="283" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitVariableDeclaration(VariableDeclarationTree) : void" num="286" count="2181" type="method"/>
            <line num="288" count="2181" type="stmt"/>
            <line num="289" count="2181" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFlowTypeAliasStatement(FlowTypeAliasStatementTree) : void" num="292" count="6" type="method"/>
            <line num="294" count="6" type="stmt"/>
            <line num="296" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="addUsages(VariableDeclarationTree) : void" num="299" count="2181" type="method"/>
            <line num="300" count="2181" type="stmt"/>
            <line num="302" count="2181" type="stmt"/>
            <line falsecount="566" truecount="1615" num="302" type="cond"/>
            <line num="303" count="1615" type="stmt"/>
            <line num="306" count="2181" type="stmt"/>
            <line num="307" count="2251" type="stmt"/>
            <line num="309" count="2251" type="stmt"/>
            <line falsecount="540" truecount="1711" num="309" type="cond"/>
            <line num="310" count="1711" type="stmt"/>
            <line num="311" count="1722" type="stmt"/>
            <line num="315" count="540" type="stmt"/>
            <line num="316" count="554" type="stmt"/>
            <line falsecount="426" truecount="128" num="317" type="cond"/>
            <line complexity="1" visibility="private" signature="declareParameters(List&lt;IdentifierTree&gt;) : void" num="323" count="1104" type="method"/>
            <line num="324" count="1104" type="stmt"/>
            <line num="325" count="482" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFunctionScope() : Scope" num="330" count="2208" type="method"/>
            <line num="331" count="2208" type="stmt"/>
            <line num="332" count="2208" type="stmt"/>
            <line falsecount="2208" truecount="162" num="332" type="cond"/>
            <line num="333" count="162" type="stmt"/>
            <line num="335" count="2208" type="stmt"/>
            <line complexity="3" visibility="private" signature="getVariableKind(VariableDeclarationTree) : Symbol.Kind" num="338" count="2251" type="method"/>
            <line num="339" count="2251" type="stmt"/>
            <line falsecount="1799" truecount="452" num="339" type="cond"/>
            <line num="340" count="452" type="stmt"/>
            <line num="342" count="1799" type="stmt"/>
            <line falsecount="1661" truecount="138" num="342" type="cond"/>
            <line num="343" count="138" type="stmt"/>
            <line num="346" count="1661" type="stmt"/>
            <line complexity="2" visibility="private" signature="enterScope(Tree) : void" num="350" count="2626" type="method"/>
            <line num="351" count="2626" type="stmt"/>
            <line num="352" count="2626" type="stmt"/>
            <line falsecount="2626" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="leaveScope() : void" num="357" count="2626" type="method"/>
            <line num="358" count="2626" type="stmt"/>
            <line falsecount="0" truecount="2626" num="358" type="cond"/>
            <line num="359" count="2626" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/Scope.java" name="Scope.java">
            <metrics coveredelements="33" coveredconditionals="6" complexity="13" loc="102" coveredmethods="9" methods="9" elements="33" classes="1" ncloc="54" statements="18" conditionals="6" coveredstatements="18"/>
            <class name="Scope">
               <metrics coveredelements="33" coveredconditionals="6" complexity="13" coveredmethods="9" methods="9" elements="33" statements="18" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="Scope(Scope,Tree,boolean)" num="43" count="2626" type="method"/>
            <line num="44" count="2626" type="stmt"/>
            <line num="45" count="2626" type="stmt"/>
            <line num="46" count="2626" type="stmt"/>
            <line complexity="1" visibility="public" signature="tree() : Tree" num="49" count="12209" type="method"/>
            <line num="50" count="12209" type="stmt"/>
            <line complexity="1" visibility="public" signature="outer() : Scope" num="53" count="8142" type="method"/>
            <line num="54" count="8142" type="stmt"/>
            <line complexity="4" visibility="public" signature="lookupSymbol(String) : Symbol" num="61" count="5759" type="method"/>
            <line num="62" count="5759" type="stmt"/>
            <line num="63" count="5759" type="stmt"/>
            <line falsecount="5759" truecount="4253" num="63" type="cond"/>
            <line num="64" count="4253" type="stmt"/>
            <line num="66" count="5759" type="stmt"/>
            <line falsecount="4125" truecount="1634" num="66" type="cond"/>
            <line complexity="2" visibility="public" signature="getSymbols(Symbol.Kind) : List&lt;Symbol&gt;" num="73" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="76" type="cond"/>
            <line num="77" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isGlobal() : boolean" num="83" count="4072" type="method"/>
            <line num="84" count="4072" type="stmt"/>
            <line complexity="1" visibility="public" signature="addSymbol(Symbol) : void" num="87" count="153667" type="method"/>
            <line num="88" count="153672" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbol(String) : Symbol" num="91" count="154422" type="method"/>
            <line num="93" count="154422" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBlock() : boolean" num="99" count="2514" type="method"/>
            <line num="100" count="2514" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/ScopeVisitor.java" name="ScopeVisitor.java">
            <metrics coveredelements="93" coveredconditionals="5" complexity="23" loc="228" coveredmethods="20" methods="20" elements="94" classes="1" ncloc="157" statements="68" conditionals="6" coveredstatements="68"/>
            <class name="ScopeVisitor">
               <metrics coveredelements="93" coveredconditionals="5" complexity="23" coveredmethods="20" methods="20" elements="94" statements="68" conditionals="6" coveredstatements="68"/>
            </class>
            <line complexity="1" visibility="public" signature="getTreeScopeMap() : Map&lt;Tree, Scope&gt;" num="60" count="272" type="method"/>
            <line num="61" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="64" count="272" type="method"/>
            <line num="66" count="272" type="stmt"/>
            <line num="67" count="272" type="stmt"/>
            <line num="68" count="272" type="stmt"/>
            <line num="69" count="272" type="stmt"/>
            <line num="71" count="272" type="stmt"/>
            <line num="72" count="272" type="stmt"/>
            <line num="73" count="272" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitBlock(BlockTree) : void" num="76" count="2137" type="method"/>
            <line num="78" count="2137" type="stmt"/>
            <line falsecount="722" truecount="1415" num="78" type="cond"/>
            <line num="79" count="1415" type="stmt"/>
            <line num="82" count="722" type="stmt"/>
            <line num="83" count="722" type="stmt"/>
            <line num="84" count="722" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="88" count="135" type="method"/>
            <line num="90" count="135" type="stmt"/>
            <line num="92" count="135" type="stmt"/>
            <line num="93" count="135" type="stmt"/>
            <line num="95" count="135" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="98" count="168" type="method"/>
            <line num="100" count="168" type="stmt"/>
            <line num="102" count="168" type="stmt"/>
            <line num="103" count="168" type="stmt"/>
            <line num="105" count="168" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="108" count="33" type="method"/>
            <line num="110" count="33" type="stmt"/>
            <line num="112" count="33" type="stmt"/>
            <line num="113" count="33" type="stmt"/>
            <line num="114" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMethodDeclaration(MethodDeclarationTree) : void" num="117" count="141" type="method"/>
            <line num="119" count="141" type="stmt"/>
            <line num="121" count="141" type="stmt"/>
            <line num="123" count="141" type="stmt"/>
            <line num="124" count="141" type="stmt"/>
            <line num="126" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAccessorMethodDeclaration(AccessorMethodDeclarationTree) : void" num="129" count="64" type="method"/>
            <line num="131" count="64" type="stmt"/>
            <line num="133" count="64" type="stmt"/>
            <line num="135" count="64" type="stmt"/>
            <line num="136" count="64" type="stmt"/>
            <line num="138" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCatchBlock(CatchBlockTree) : void" num="141" count="60" type="method"/>
            <line num="143" count="60" type="stmt"/>
            <line num="145" count="60" type="stmt"/>
            <line num="146" count="60" type="stmt"/>
            <line num="148" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="151" count="593" type="method"/>
            <line num="153" count="593" type="stmt"/>
            <line num="154" count="593" type="stmt"/>
            <line num="156" count="593" type="stmt"/>
            <line num="157" count="593" type="stmt"/>
            <line num="159" count="593" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrowFunction(ArrowFunctionTree) : void" num="162" count="83" type="method"/>
            <line num="164" count="83" type="stmt"/>
            <line num="165" count="83" type="stmt"/>
            <line num="167" count="83" type="stmt"/>
            <line num="168" count="83" type="stmt"/>
            <line num="170" count="83" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="173" count="223" type="method"/>
            <line num="175" count="223" type="stmt"/>
            <line num="176" count="223" type="stmt"/>
            <line num="178" count="223" type="stmt"/>
            <line num="179" count="223" type="stmt"/>
            <line num="181" count="223" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClass(ClassTree) : void" num="184" count="132" type="method"/>
            <line num="186" count="132" type="stmt"/>
            <line num="188" count="132" type="stmt"/>
            <line num="190" count="132" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="193" count="10839" type="method"/>
            <line num="195" count="10839" type="stmt"/>
            <line complexity="2" visibility="private" signature="leaveScope() : void" num="198" count="2626" type="method"/>
            <line num="199" count="2626" type="stmt"/>
            <line falsecount="0" truecount="2626" num="199" type="cond"/>
            <line num="200" count="2626" type="stmt"/>
            <line complexity="1" visibility="private" signature="newFunctionScope(Tree) : void" num="204" count="1376" type="method"/>
            <line num="205" count="1376" type="stmt"/>
            <line complexity="1" visibility="private" signature="newBlockScope(Tree) : void" num="208" count="1250" type="method"/>
            <line num="209" count="1250" type="stmt"/>
            <line complexity="1" visibility="private" signature="newScope(Tree,boolean) : void" num="212" count="2626" type="method"/>
            <line num="213" count="2626" type="stmt"/>
            <line num="214" count="2626" type="stmt"/>
            <line num="215" count="2626" type="stmt"/>
            <line complexity="2" visibility="private" signature="skipBlock(Tree) : void" num="218" count="1467" type="method"/>
            <line num="219" count="1467" type="stmt"/>
            <line falsecount="52" truecount="1415" num="219" type="cond"/>
            <line num="220" count="1415" type="stmt"/>
            <line complexity="1" visibility="private" signature="isScopeAlreadyCreated(BlockTree) : boolean" num="224" count="2137" type="method"/>
            <line num="225" count="2137" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/SymbolModelBuilder.java" name="SymbolModelBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SymbolModelBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/SymbolModelImpl.java" name="SymbolModelImpl.java">
            <metrics coveredelements="66" coveredconditionals="14" complexity="18" loc="149" coveredmethods="11" methods="11" elements="67" classes="1" ncloc="101" statements="42" conditionals="14" coveredstatements="41"/>
            <class name="SymbolModelImpl">
               <metrics coveredelements="66" coveredconditionals="14" complexity="18" coveredmethods="11" methods="11" elements="67" statements="42" conditionals="14" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="public" signature="build(TreeVisitorContext,Configuration) : void" num="41" count="271" type="method"/>
            <line num="42" count="272" type="stmt"/>
            <line num="44" count="272" type="stmt"/>
            <line num="45" count="272" type="stmt"/>
            <line num="46" count="272" type="stmt"/>
            <line complexity="1" visibility="private" signature="getScopes(TreeVisitorContext) : Map&lt;Tree, Scope&gt;" num="49" count="272" type="method"/>
            <line num="50" count="272" type="stmt"/>
            <line num="51" count="272" type="stmt"/>
            <line num="52" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalScope() : Scope" num="55" count="418" type="method"/>
            <line num="57" count="418" type="stmt"/>
            <line complexity="2" visibility="public" signature="addScope(Scope) : void" num="60" count="2626" type="method"/>
            <line num="62" count="2626" type="stmt"/>
            <line falsecount="2354" truecount="272" num="62" type="cond"/>
            <line num="63" count="272" type="stmt"/>
            <line num="65" count="2626" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScopes() : Set&lt;Scope&gt;" num="68" count="468" type="method"/>
            <line num="70" count="468" type="stmt"/>
            <line complexity="3" visibility="public" signature="declareSymbol(String,Symbol.Kind,Scope) : Symbol" num="73" count="4082" type="method"/>
            <line num="75" count="4082" type="stmt"/>
            <line num="76" count="4082" type="stmt"/>
            <line falsecount="270" truecount="3812" num="76" type="cond"/>
            <line num="77" count="3812" type="stmt"/>
            <line num="78" count="3812" type="stmt"/>
            <line num="79" count="3812" type="stmt"/>
            <line num="81" count="270" type="stmt"/>
            <line falsecount="179" truecount="91" num="81" type="cond"/>
            <line num="82" count="91" type="stmt"/>
            <line num="85" count="4082" type="stmt"/>
            <line complexity="2" visibility="public" signature="declareExternalSymbol(String,Symbol.Kind,Scope) : Symbol" num="88" count="150001" type="method"/>
            <line num="90" count="150001" type="stmt"/>
            <line num="91" count="150002" type="stmt"/>
            <line falsecount="139" truecount="149864" num="91" type="cond"/>
            <line num="92" count="149861" type="stmt"/>
            <line num="93" count="149870" type="stmt"/>
            <line num="94" count="149870" type="stmt"/>
            <line num="95" count="149856" type="stmt"/>
            <line num="97" count="150007" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbols() : Set&lt;Symbol&gt;" num="103" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSymbols(Symbol.Kind) : Set&lt;Symbol&gt;" num="112" count="4" type="method"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="1264" type="stmt"/>
            <line falsecount="1253" truecount="11" num="116" type="cond"/>
            <line num="117" count="11" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSymbols(String) : Set&lt;Symbol&gt;" num="127" count="522" type="method"/>
            <line num="129" count="522" type="stmt"/>
            <line num="130" count="522" type="stmt"/>
            <line num="131" count="82419" type="stmt"/>
            <line falsecount="81884" truecount="535" num="131" type="cond"/>
            <line num="132" count="535" type="stmt"/>
            <line num="135" count="522" type="stmt"/>
            <line complexity="2" visibility="public" signature="getScope(Tree) : Scope" num="138" count="438" type="method"/>
            <line num="141" count="438" type="stmt"/>
            <line num="142" count="11660" type="stmt"/>
            <line falsecount="11222" truecount="438" num="142" type="cond"/>
            <line num="143" count="438" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/symbols/SymbolVisitor.java" name="SymbolVisitor.java">
            <metrics coveredelements="143" coveredconditionals="27" complexity="41" loc="293" coveredmethods="24" methods="24" elements="148" classes="1" ncloc="217" statements="94" conditionals="30" coveredstatements="92"/>
            <class name="SymbolVisitor">
               <metrics coveredelements="143" coveredconditionals="27" complexity="41" coveredmethods="24" methods="24" elements="148" statements="94" conditionals="30" coveredstatements="92"/>
            </class>
            <line complexity="1" visibility="public" signature="SymbolVisitor(Map&lt;Tree, Scope&gt;)" num="61" count="272" type="method"/>
            <line num="62" count="272" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="65" count="272" type="method"/>
            <line num="67" count="272" type="stmt"/>
            <line num="68" count="272" type="stmt"/>
            <line num="70" count="272" type="stmt"/>
            <line num="71" count="272" type="stmt"/>
            <line num="72" count="272" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitBlock(BlockTree) : void" num="76" count="2137" type="method"/>
            <line num="78" count="2137" type="stmt"/>
            <line falsecount="722" truecount="1415" num="78" type="cond"/>
            <line num="79" count="1415" type="stmt"/>
            <line num="82" count="722" type="stmt"/>
            <line num="83" count="722" type="stmt"/>
            <line num="84" count="722" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatementTree) : void" num="88" count="135" type="method"/>
            <line num="90" count="135" type="stmt"/>
            <line num="91" count="135" type="stmt"/>
            <line num="92" count="135" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSwitchStatement(SwitchStatementTree) : void" num="96" count="33" type="method"/>
            <line num="98" count="33" type="stmt"/>
            <line num="100" count="33" type="stmt"/>
            <line num="101" count="33" type="stmt"/>
            <line num="102" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitMethodDeclaration(MethodDeclarationTree) : void" num="105" count="141" type="method"/>
            <line num="107" count="141" type="stmt"/>
            <line num="108" count="141" type="stmt"/>
            <line num="109" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAccessorMethodDeclaration(AccessorMethodDeclarationTree) : void" num="112" count="64" type="method"/>
            <line num="114" count="64" type="stmt"/>
            <line num="115" count="64" type="stmt"/>
            <line num="116" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCatchBlock(CatchBlockTree) : void" num="119" count="60" type="method"/>
            <line num="121" count="60" type="stmt"/>
            <line num="122" count="60" type="stmt"/>
            <line num="123" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDeclaration(FunctionDeclarationTree) : void" num="126" count="593" type="method"/>
            <line num="128" count="593" type="stmt"/>
            <line num="129" count="593" type="stmt"/>
            <line num="130" count="593" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionExpression(FunctionExpressionTree) : void" num="133" count="223" type="method"/>
            <line num="135" count="223" type="stmt"/>
            <line num="136" count="223" type="stmt"/>
            <line num="137" count="223" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArrowFunction(ArrowFunctionTree) : void" num="140" count="83" type="method"/>
            <line num="142" count="83" type="stmt"/>
            <line num="143" count="83" type="stmt"/>
            <line num="144" count="83" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitClass(ClassTree) : void" num="147" count="132" type="method"/>
            <line num="150" count="132" type="stmt"/>
            <line num="152" count="132" type="stmt"/>
            <line falsecount="7" truecount="125" num="152" type="cond"/>
            <line num="153" count="125" type="stmt"/>
            <line falsecount="4" truecount="121" num="153" type="cond"/>
            <line num="154" count="121" type="stmt"/>
            <line num="155" count="121" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="163" count="7" type="stmt"/>
            <line num="166" count="132" type="stmt"/>
            <line num="167" count="132" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitVariableDeclaration(VariableDeclarationTree) : void" num="170" count="2181" type="method"/>
            <line num="172" count="2181" type="stmt"/>
            <line num="173" count="2251" type="stmt"/>
            <line num="174" count="2251" type="stmt"/>
            <line falsecount="1661" truecount="590" num="174" type="cond"/>
            <line num="175" count="590" type="stmt"/>
            <line num="176" count="609" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitAssignmentExpression(AssignmentExpressionTree) : void" num="186" count="868" type="method"/>
            <line num="188" count="868" type="stmt"/>
            <line falsecount="84" truecount="784" num="188" type="cond"/>
            <line num="189" count="784" type="stmt"/>
            <line num="190" count="784" type="stmt"/>
            <line num="191" count="784" type="stmt"/>
            <line falsecount="756" truecount="28" num="191" type="cond"/>
            <line num="192" count="28" type="stmt"/>
            <line num="195" count="784" type="stmt"/>
            <line falsecount="558" truecount="226" num="195" type="cond"/>
            <line num="196" count="226" type="stmt"/>
            <line num="197" count="226" type="stmt"/>
            <line num="200" count="784" type="stmt"/>
            <line num="203" count="84" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitIdentifier(IdentifierTree) : void" num="207" count="9815" type="method"/>
            <line num="209" count="9815" type="stmt"/>
            <line falsecount="5095" truecount="4720" num="209" type="cond"/>
            <line num="210" count="4720" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitUnaryExpression(UnaryExpressionTree) : void" num="214" count="386" type="method"/>
            <line num="216" count="386" type="stmt"/>
            <line falsecount="200" truecount="186" num="216" type="cond"/>
            <line num="217" count="186" type="stmt"/>
            <line num="219" count="200" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitForObjectStatement(ForObjectStatementTree) : void" num="223" count="168" type="method"/>
            <line num="225" count="168" type="stmt"/>
            <line num="227" count="168" type="stmt"/>
            <line falsecount="114" truecount="54" num="227" type="cond"/>
            <line num="228" count="54" type="stmt"/>
            <line num="230" count="54" type="stmt"/>
            <line falsecount="36" truecount="18" num="230" type="cond"/>
            <line num="231" count="18" type="stmt"/>
            <line num="234" count="54" type="stmt"/>
            <line num="235" count="54" type="stmt"/>
            <line num="238" count="114" type="stmt"/>
            <line num="241" count="168" type="stmt"/>
            <line complexity="2" visibility="private" signature="leaveScope() : void" num="244" count="2626" type="method"/>
            <line num="245" count="2626" type="stmt"/>
            <line falsecount="0" truecount="2626" num="245" type="cond"/>
            <line num="246" count="2626" type="stmt"/>
            <line complexity="2" visibility="private" signature="enterScope(Tree) : void" num="250" count="2626" type="method"/>
            <line num="251" count="2626" type="stmt"/>
            <line num="252" count="2626" type="stmt"/>
            <line falsecount="2626" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addUsageFor(IdentifierTree,Usage.Kind) : boolean" num="260" count="5744" type="method"/>
            <line num="261" count="5744" type="stmt"/>
            <line num="262" count="5744" type="stmt"/>
            <line falsecount="1709" truecount="4035" num="262" type="cond"/>
            <line num="263" count="4035" type="stmt"/>
            <line num="264" count="4035" type="stmt"/>
            <line num="266" count="1709" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUndeclaredBlockScopedSymbol(Symbol) : boolean" num="269" count="4110" type="method"/>
            <line num="270" count="4110" type="stmt"/>
            <line complexity="1" visibility="private" signature="isScopeAlreadyEntered(BlockTree) : boolean" num="275" count="2137" type="method"/>
            <line num="276" count="2137" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFunctionScope() : Scope" num="279" count="121" type="method"/>
            <line num="280" count="121" type="stmt"/>
            <line num="281" count="121" type="stmt"/>
            <line falsecount="121" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="121" type="stmt"/>
            <line complexity="1" visibility="private" signature="declareClassSymbol(IdentifierTree,Scope) : void" num="287" count="125" type="method"/>
            <line num="288" count="125" type="stmt"/>
            <line num="289" count="125" type="stmt"/>
            <line num="290" count="125" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.tree.expression.jsx">
         <metrics coveredelements="0" complexity="0" loc="511" methods="0" classes="17" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="114" files="17" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxAttributeTree.java" name="JsxAttributeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxAttributeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxAttributeValueTree.java" name="JsxAttributeValueTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxAttributeValueTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxChildTree.java" name="JsxChildTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxChildTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxClosingElementTree.java" name="JsxClosingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxClosingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxElementNameTree.java" name="JsxElementNameTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxElementNameTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxElementTree.java" name="JsxElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxEmptyClosingElementTree.java" name="JsxEmptyClosingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxEmptyClosingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxEmptyOpeningElementTree.java" name="JsxEmptyOpeningElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxEmptyOpeningElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxIdentifierTree.java" name="JsxIdentifierTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxIdentifierTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxJavaScriptExpressionTree.java" name="JsxJavaScriptExpressionTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxJavaScriptExpressionTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxOpeningElementTree.java" name="JsxOpeningElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxOpeningElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxSelfClosingElementTree.java" name="JsxSelfClosingElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxSelfClosingElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxShortFragmentElementTree.java" name="JsxShortFragmentElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxShortFragmentElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxSpreadAttributeTree.java" name="JsxSpreadAttributeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxSpreadAttributeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxStandardAttributeTree.java" name="JsxStandardAttributeTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxStandardAttributeTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxStandardElementTree.java" name="JsxStandardElementTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxStandardElementTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/plugins/javascript/api/tree/expression/jsx/JsxTextTree.java" name="JsxTextTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsxTextTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.expression.jsx">
         <metrics coveredelements="178" complexity="87" loc="907" methods="87" classes="12" statements="111" coveredconditionals="0" coveredmethods="77" elements="198" ncloc="553" files="12" conditionals="0" coveredstatements="101"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxClosingElementTreeImpl.java" name="JsxClosingElementTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="79" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="49" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="JsxClosingElementTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxClosingElementTreeImpl(SyntaxToken,SyntaxToken,JsxElementNameTree,SyntaxToken)" num="38" count="16" type="method"/>
            <line num="39" count="16" type="stmt"/>
            <line num="40" count="16" type="stmt"/>
            <line num="41" count="16" type="stmt"/>
            <line num="42" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="3" type="method"/>
            <line num="47" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="21" type="method"/>
            <line num="52" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="openAngleBracketToken() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="slashToken() : SyntaxToken" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementName() : JsxElementNameTree" num="65" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeAngleBracketToken() : SyntaxToken" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="75" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxEmptyClosingElementTreeImpl.java" name="JsxEmptyClosingElementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="71" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="42" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="JsxEmptyClosingElementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxEmptyClosingElementTreeImpl(SyntaxToken,SyntaxToken,SyntaxToken)" num="36" count="7" type="method"/>
            <line num="37" count="7" type="stmt"/>
            <line num="38" count="7" type="stmt"/>
            <line num="39" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="42" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="47" count="10" type="method"/>
            <line num="49" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="openAngleBracketToken() : SyntaxToken" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="slashToken() : SyntaxToken" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeAngleBracketToken() : SyntaxToken" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxEmptyOpeningElementTreeImpl.java" name="JsxEmptyOpeningElementTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="64" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="JsxEmptyOpeningElementTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxEmptyOpeningElementTreeImpl(SyntaxToken,SyntaxToken)" num="35" count="7" type="method"/>
            <line num="36" count="7" type="stmt"/>
            <line num="37" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="45" count="10" type="method"/>
            <line num="47" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="openAngleBracketToken() : SyntaxToken" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeAngleBracketToken() : SyntaxToken" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxIdentifierTreeImpl.java" name="JsxIdentifierTreeImpl.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="57" coveredmethods="4" methods="5" elements="10" classes="1" ncloc="30" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="JsxIdentifierTreeImpl">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxIdentifierTreeImpl(SyntaxToken)" num="34" count="75" type="method"/>
            <line num="35" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="38" count="28" type="method"/>
            <line num="40" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="43" count="99" type="method"/>
            <line num="45" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="53" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxJavaScriptExpressionTreeImpl.java" name="JsxJavaScriptExpressionTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="7" loc="74" coveredmethods="4" methods="7" elements="16" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="6"/>
            <class name="JsxJavaScriptExpressionTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="7" coveredmethods="4" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxJavaScriptExpressionTreeImpl(InternalSyntaxToken,ExpressionTree,InternalSyntaxToken)" num="38" count="6" type="method"/>
            <line num="39" count="6" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="49" count="9" type="method"/>
            <line num="51" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="lCurlyBraceToken() : InternalSyntaxToken" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : ExpressionTree" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rCurlyBraceToken() : InternalSyntaxToken" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="70" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxOpeningElementTreeImpl.java" name="JsxOpeningElementTreeImpl.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="84" coveredmethods="8" methods="8" elements="19" classes="1" ncloc="54" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="JsxOpeningElementTreeImpl">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxOpeningElementTreeImpl(SyntaxToken,JsxElementNameTree,List&lt;JsxAttributeTree&gt;,SyntaxToken)" num="40" count="18" type="method"/>
            <line num="41" count="18" type="stmt"/>
            <line num="42" count="18" type="stmt"/>
            <line num="43" count="18" type="stmt"/>
            <line num="44" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="47" count="3" type="method"/>
            <line num="49" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="52" count="23" type="method"/>
            <line num="54" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="openAngleBracketToken() : SyntaxToken" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementName() : JsxElementNameTree" num="65" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="attributes() : List&lt;JsxAttributeTree&gt;" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeAngleBracketToken() : SyntaxToken" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="80" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxSelfClosingElementTreeImpl.java" name="JsxSelfClosingElementTreeImpl.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="10" loc="99" coveredmethods="9" methods="10" elements="24" classes="1" ncloc="66" statements="14" conditionals="0" coveredstatements="13"/>
            <class name="JsxSelfClosingElementTreeImpl">
               <metrics coveredelements="22" coveredconditionals="0" complexity="10" coveredmethods="9" methods="10" elements="24" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxSelfClosingElementTreeImpl(SyntaxToken,JsxElementNameTree,List&lt;JsxAttributeTree&gt;,SyntaxToken,SyntaxToken)" num="42" count="23" type="method"/>
            <line num="43" count="23" type="stmt"/>
            <line num="44" count="23" type="stmt"/>
            <line num="45" count="23" type="stmt"/>
            <line num="46" count="23" type="stmt"/>
            <line num="47" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="51" count="29" type="method"/>
            <line num="53" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="56" count="34" type="method"/>
            <line num="58" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="openAngleBracketToken() : SyntaxToken" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementName() : JsxElementNameTree" num="70" count="8" type="method"/>
            <line num="72" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="attributes() : List&lt;JsxAttributeTree&gt;" num="75" count="10" type="method"/>
            <line num="77" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="slashToken() : SyntaxToken" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeAngleBracketToken() : SyntaxToken" num="85" count="1" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="95" count="2" type="method"/>
            <line num="97" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxShortFragmentElementTreeImpl.java" name="JsxShortFragmentElementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="8" loc="85" coveredmethods="7" methods="8" elements="18" classes="1" ncloc="54" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="JsxShortFragmentElementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxShortFragmentElementTreeImpl(JsxEmptyOpeningElementTree,List&lt;JsxChildTree&gt;,JsxEmptyClosingElementTree)" num="40" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line num="42" count="7" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="openingElement() : JsxEmptyOpeningElementTree" num="47" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="children() : List&lt;JsxChildTree&gt;" num="52" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="closingElement() : JsxEmptyClosingElementTree" num="57" count="5" type="method"/>
            <line num="59" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="67" count="101" type="method"/>
            <line num="69" count="101" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="72" count="9" type="method"/>
            <line num="74" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxSpreadAttributeTreeImpl.java" name="JsxSpreadAttributeTreeImpl.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="8" loc="79" coveredmethods="5" methods="8" elements="19" classes="1" ncloc="49" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="JsxSpreadAttributeTreeImpl">
               <metrics coveredelements="13" coveredconditionals="0" complexity="8" coveredmethods="5" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxSpreadAttributeTreeImpl(InternalSyntaxToken,InternalSyntaxToken,ExpressionTree,InternalSyntaxToken)" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="3" type="method"/>
            <line num="47" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="50" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="lCurlyBraceToken() : InternalSyntaxToken" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsisToken() : InternalSyntaxToken" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressionTree() : ExpressionTree" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rCurlyBraceToken() : InternalSyntaxToken" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxStandardAttributeTreeImpl.java" name="JsxStandardAttributeTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="73" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="JsxStandardAttributeTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxStandardAttributeTreeImpl(JsxIdentifierTree,InternalSyntaxToken,JsxAttributeValueTree)" num="38" count="15" type="method"/>
            <line num="39" count="15" type="stmt"/>
            <line num="40" count="15" type="stmt"/>
            <line num="41" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="9" type="method"/>
            <line num="46" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="49" count="15" type="method"/>
            <line num="51" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : JsxIdentifierTree" num="54" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : InternalSyntaxToken" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : JsxAttributeValueTree" num="64" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxStandardElementTreeImpl.java" name="JsxStandardElementTreeImpl.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="8" loc="85" coveredmethods="7" methods="8" elements="18" classes="1" ncloc="54" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="JsxStandardElementTreeImpl">
               <metrics coveredelements="16" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxStandardElementTreeImpl(JsxOpeningElementTree,List&lt;JsxChildTree&gt;,JsxClosingElementTree)" num="40" count="15" type="method"/>
            <line num="41" count="15" type="stmt"/>
            <line num="42" count="15" type="stmt"/>
            <line num="43" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="openingElement() : JsxOpeningElementTree" num="47" count="5" type="method"/>
            <line num="49" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="children() : List&lt;JsxChildTree&gt;" num="52" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="closingElement() : JsxClosingElementTree" num="57" count="5" type="method"/>
            <line num="59" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="types() : TypeSet" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="67" count="13" type="method"/>
            <line num="69" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="72" count="20" type="method"/>
            <line num="74" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="81" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/expression/jsx/JsxTextTreeImpl.java" name="JsxTextTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="57" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="30" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="JsxTextTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="JsxTextTreeImpl(SyntaxToken)" num="34" count="15" type="method"/>
            <line num="35" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="38" count="12" type="method"/>
            <line num="40" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="43" count="23" type="method"/>
            <line num="45" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DoubleDispatchVisitor) : void" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl">
         <metrics coveredelements="111" complexity="55" loc="353" methods="41" classes="3" statements="80" coveredconditionals="25" coveredmethods="24" elements="149" ncloc="255" files="2" conditionals="28" coveredstatements="62"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/JavaScriptTree.java" name="JavaScriptTree.java">
            <metrics coveredelements="77" coveredconditionals="23" complexity="23" loc="146" coveredmethods="10" methods="10" elements="81" classes="1" ncloc="105" statements="45" conditionals="26" coveredstatements="44"/>
            <class name="JavaScriptTree">
               <metrics coveredelements="77" coveredconditionals="23" complexity="23" coveredmethods="10" methods="10" elements="81" statements="45" conditionals="26" coveredstatements="44"/>
            </class>
            <line complexity="3" visibility="public" signature="is(Kinds) : boolean" num="37" count="1545862" type="method"/>
            <line num="39" count="1545862" type="stmt"/>
            <line falsecount="0" truecount="1545862" num="39" type="cond"/>
            <line num="40" count="1545862" type="stmt"/>
            <line num="41" count="3090884" type="stmt"/>
            <line falsecount="2839259" truecount="251625" num="41" type="cond"/>
            <line num="42" count="251625" type="stmt"/>
            <line num="46" count="1294237" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLeaf() : boolean" num="59" count="80614" type="method"/>
            <line num="60" count="80614" type="stmt"/>
            <line complexity="4" visibility="public" signature="lastToken() : SyntaxToken" num="63" count="3766" type="method"/>
            <line num="65" count="3766" type="stmt"/>
            <line num="66" count="3766" type="stmt"/>
            <line num="67" count="3766" type="stmt"/>
            <line falsecount="3766" truecount="7883" num="67" type="cond"/>
            <line num="68" count="7883" type="stmt"/>
            <line num="69" count="7883" type="stmt"/>
            <line falsecount="770" truecount="7113" num="69" type="cond"/>
            <line num="70" count="7113" type="stmt"/>
            <line num="71" count="7113" type="stmt"/>
            <line falsecount="0" truecount="7113" num="71" type="cond"/>
            <line num="72" count="7113" type="stmt"/>
            <line num="76" count="3766" type="stmt"/>
            <line complexity="3" visibility="public" signature="firstToken() : SyntaxToken" num="79" count="93616" type="method"/>
            <line num="81" count="93616" type="stmt"/>
            <line num="82" count="93616" type="stmt"/>
            <line num="83" count="93616" type="stmt"/>
            <line num="84" count="94489" type="stmt"/>
            <line falsecount="0" truecount="94489" num="84" type="cond"/>
            <line num="85" count="94489" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="93616" truecount="873" num="89" type="cond"/>
            <line num="90" count="93616" type="stmt"/>
            <line complexity="3" visibility="public" signature="isAncestorOf(Tree) : boolean" num="93" count="823" type="method"/>
            <line num="95" count="823" type="stmt"/>
            <line num="96" count="823" type="stmt"/>
            <line falsecount="776" truecount="47" num="96" type="cond"/>
            <line num="97" count="47" type="stmt"/>
            <line num="99" count="776" type="stmt"/>
            <line falsecount="678" truecount="98" num="99" type="cond"/>
            <line num="100" count="98" type="stmt"/>
            <line num="102" count="678" type="stmt"/>
            <line complexity="4" visibility="public" signature="descendants() : Stream&lt;JavaScriptTree&gt;" num="105" count="1173" type="method"/>
            <line num="107" count="1173" type="stmt"/>
            <line falsecount="492" truecount="681" num="107" type="cond"/>
            <line num="108" count="681" type="stmt"/>
            <line num="110" count="492" type="stmt"/>
            <line num="113" count="492" type="stmt"/>
            <line falsecount="492" truecount="1109" num="113" type="cond"/>
            <line num="114" count="1109" type="stmt"/>
            <line num="115" count="1109" type="stmt"/>
            <line falsecount="31" truecount="1078" num="115" type="cond"/>
            <line num="116" count="1078" type="stmt"/>
            <line num="119" count="492" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenStream() : Stream&lt;Tree&gt;" num="122" count="492" type="method"/>
            <line num="124" count="492" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParent(Tree) : void" num="127" count="91416" type="method"/>
            <line num="128" count="91416" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent() : Tree" num="131" count="117528" type="method"/>
            <line num="133" count="117528" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="136" count="9" type="method"/>
            <line num="138" count="9" type="stmt"/>
            <line num="139" count="9" type="stmt"/>
            <line num="140" count="9" type="stmt"/>
            <line falsecount="9" truecount="26" num="140" type="cond"/>
            <line num="141" count="26" type="stmt"/>
            <line num="142" count="25" type="stmt"/>
            <line num="144" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/main/java/org/sonar/javascript/tree/impl/SeparatedListImpl.java" name="SeparatedListImpl.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="32" loc="207" coveredmethods="14" methods="31" elements="68" classes="2" ncloc="150" statements="35" conditionals="2" coveredstatements="18"/>
            <class name="SeparatedListImpl">
               <metrics coveredelements="24" coveredconditionals="0" complexity="28" coveredmethods="11" methods="28" elements="58" statements="30" conditionals="0" coveredstatements="13"/>
            </class>
            <class name="SeparatedListImpl.ElementAndSeparatorIterator">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="SeparatedListImpl(List&lt;T&gt;,List&lt;InternalSyntaxToken&gt;)" num="39" count="6644" type="method"/>
            <line num="40" count="6644" type="stmt"/>
            <line num="44" count="6644" type="stmt"/>
            <line num="45" count="6644" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyImmutableList() : SeparatedListImpl" num="48" count="857" type="method"/>
            <line num="49" count="857" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeparator(int) : InternalSyntaxToken" num="52" count="8" type="method"/>
            <line num="54" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeparators() : List&lt;InternalSyntaxToken&gt;" num="57" count="49" type="method"/>
            <line num="59" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="63" count="5721" type="method"/>
            <line num="65" count="5721" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="68" count="68" type="method"/>
            <line num="70" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(Object) : boolean" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;T&gt;" num="78" count="5830" type="method"/>
            <line num="80" count="5830" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : Object[]" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray(T[]) : T[]" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : boolean" num="93" count="15" type="method"/>
            <line num="95" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(Object) : boolean" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsAll(Collection&lt;?&gt;) : boolean" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;? extends T&gt;) : boolean" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(int,Collection&lt;? extends T&gt;) : boolean" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeAll(Collection&lt;?&gt;) : boolean" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="retainAll(Collection&lt;?&gt;) : boolean" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : T" num="133" count="570" type="method"/>
            <line num="135" count="570" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int,T) : T" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(int,T) : void" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(int) : T" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexOf(Object) : int" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastIndexOf(Object) : int" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="listIterator() : ListIterator&lt;T&gt;" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="listIterator(int) : ListIterator&lt;T&gt;" num="168" count="1560" type="method"/>
            <line num="170" count="1560" type="stmt"/>
            <line complexity="1" visibility="public" signature="subList(int,int) : List&lt;T&gt;" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementsAndSeparators(Function&lt;T, ? extends Tree&gt;) : Iterator&lt;Tree&gt;" num="178" count="33831" type="method"/>
            <line num="180" count="33831" type="stmt"/>
            <line complexity="1" visibility="private" signature="ElementAndSeparatorIterator(Function&lt;T, ? extends Tree&gt;)" num="190" count="33831" type="method"/>
            <line num="191" count="33831" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="194" count="93259" type="method"/>
            <line num="196" count="93259" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : Tree" num="199" count="30077" type="method"/>
            <line num="201" count="30077" type="stmt"/>
            <line falsecount="4153" truecount="25924" num="201" type="cond"/>
            <line num="202" count="30077" type="stmt"/>
            <line num="203" count="30077" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="SonarJS 6.3.0-SNAPSHOT (Aggregated)" timestamp="1594218166185">
      <metrics coveredelements="5970" complexity="1360" loc="24700" methods="1265" classes="415" statements="4856" packages="33" coveredconditionals="131" coveredmethods="1205" elements="6273" ncloc="13382" files="397" conditionals="152" coveredstatements="4634"/>
      <package name="org.sonar.javascript.checks.verifier">
         <metrics coveredelements="154" complexity="83" loc="867" methods="74" classes="9" statements="191" coveredconditionals="14" coveredmethods="37" elements="279" ncloc="634" files="6" conditionals="14" coveredstatements="103"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/test/java/org/sonar/javascript/checks/verifier/BulkVerifierTest.java" name="BulkVerifierTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="8" loc="87" coveredmethods="7" methods="7" elements="21" classes="3" ncloc="56" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="BulkVerifierTest">
               <metrics coveredelements="11" complexity="3" methods="3" testruns="2" statements="8" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.47400000000000003" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <class name="BulkVerifierTest.SampleCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BulkVerifierTest.DummyIssueCollector">
               <metrics coveredelements="6" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="appliesRuleToTargetFolderFiles() : void" num="49" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoresNonJavascriptFiles() : void" num="56" testsuccess="true" count="1" testduration="0.449" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SampleCheck()" num="63" count="4" type="method"/>
            <line complexity="1" visibility="public" signature="visitVariableDeclaration(VariableDeclarationTree) : void" num="66" count="8" type="method"/>
            <line num="68" count="8" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="writeIssues(Iterator&lt;Issue&gt;,File) : void" num="76" count="4" type="method"/>
            <line num="78" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="78" type="cond"/>
            <line num="79" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="writeSummary() : void" num="83" count="2" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/test/java/org/sonar/javascript/checks/verifier/CheckMessageTest.java" name="CheckMessageTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CheckMessageTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.057" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testFormatDefaultMessage() : void" num="29" testsuccess="true" count="1" testduration="0.056" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotFormatMessageWithoutParameters() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/test/java/org/sonar/javascript/checks/verifier/CheckMessagesVerifierTest.java" name="CheckMessagesVerifierTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="11" loc="150" coveredmethods="3" methods="11" elements="53" classes="1" ncloc="106" statements="42" conditionals="0" coveredstatements="9"/>
            <class name="CheckMessagesVerifierTest">
               <metrics coveredelements="12" complexity="11" methods="11" testruns="9" statements="42" coveredconditionals="0" coveredmethods="3" elements="53" testfailures="8" testduration="0.366" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="next() : void" num="39" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noMore() : void" num="48" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : void" num="58" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line_withoutHasNext() : void" num="68" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withMessage() : void" num="78" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withMessage_withoutHasNext() : void" num="89" testsuccess="false" count="0" testduration="0.355" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withMessageThat() : void" num="99" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withCost() : void" num="109" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="120" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="mockCheckMessage(Integer,String,Double) : CheckMessage" num="137" count="12" type="method"/>
            <line num="138" count="12" type="stmt"/>
            <line num="139" count="12" type="stmt"/>
            <line num="140" count="12" type="stmt"/>
            <line num="141" count="12" type="stmt"/>
            <line num="142" count="12" type="stmt"/>
            <line num="143" count="12" type="stmt"/>
            <line complexity="1" visibility="private" signature="mockCheckMessage(Integer,String) : CheckMessage" num="146" count="10" type="method"/>
            <line num="147" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/test/java/org/sonar/javascript/checks/verifier/DifferentialIssueCollectorTest.java" name="DifferentialIssueCollectorTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="4" loc="80" coveredmethods="4" methods="4" elements="26" classes="1" ncloc="53" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="DifferentialIssueCollectorTest">
               <metrics coveredelements="26" complexity="4" methods="4" testruns="3" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="43" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line num="51" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="logsUnexpectedIssue() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipsExpectedIssue() : void" num="61" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMissingExpectedIssue() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/test/java/org/sonar/javascript/checks/verifier/ExpectedIssuesTest.java" name="ExpectedIssuesTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="21" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ExpectedIssuesTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="should_read_expected_issues_from_file() : void" num="29" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_create_new_file_if_missing() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks-testkit/src/test/java/org/sonar/javascript/checks/verifier/JavaScriptCheckVerifierTest.java" name="JavaScriptCheckVerifierTest.java">
            <metrics coveredelements="78" coveredconditionals="12" complexity="56" loc="464" coveredmethods="19" methods="48" elements="162" classes="2" ncloc="383" statements="102" conditionals="12" coveredstatements="47"/>
            <class name="JavaScriptCheckVerifierTest">
               <metrics coveredelements="37" complexity="40" methods="40" testruns="38" statements="75" coveredconditionals="0" coveredmethods="14" elements="115" testfailures="25" testduration="0.21200000000000005" conditionals="0" coveredstatements="23" testpasses="13"/>
            </class>
            <class name="JavaScriptCheckVerifierTest.CheckStub">
               <metrics coveredelements="41" coveredconditionals="12" complexity="16" coveredmethods="5" methods="8" elements="47" statements="27" conditionals="12" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="parsing_error() : void" num="59" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issue() : void" num="65" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="same_issues() : void" num="70" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unexpected_issue() : void" num="78" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="missing_issue() : void" num="87" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="too_small_line_number() : void" num="96" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="too_large_line_number() : void" num="104" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="right_message() : void" num="112" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_message() : void" num="119" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="right_effortToFix() : void" num="127" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_effortToFix() : void" num="134" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invalid_param() : void" num="142" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invalid_param_syntax() : void" num="150" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="right_precise_issue_location() : void" num="158" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_start_column() : void" num="165" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_end_column() : void" num="173" testsuccess="false" count="0" testduration="0.011" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="right_end_line() : void" num="181" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_end_line() : void" num="188" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="right_secondary_locations() : void" num="196" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_secondary_locations_message() : void" num="203" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_secondary_locations() : void" num="212" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary_no_location() : void" num="222" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary_id_not_found() : void" num="232" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_secondary_locations_wrong_line() : void" num="242" testsuccess="false" count="0" testduration="0.051" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_secondary_locations_wrong_message() : void" num="252" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_precise_secondary_location_start_column() : void" num="262" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_precise_secondary_location_end_column() : void" num="272" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_secondary_locations() : void" num="282" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_secondary_locations() : void" num="290" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_secondary_location_fails() : void" num="297" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unordered_issues() : void" num="305" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="307" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="right_columns_for_primary_location() : void" num="313" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="315" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_start_column_for_primary_location() : void" num="321" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrong_end_column_for_primary_location() : void" num="330" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_location_without_any_issue_assertion() : void" num="339" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_location_with_no_assertion_on_previous_line() : void" num="347" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_location_with_comment_starting_after_column_1() : void" num="356" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="start_line() : void" num="364" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="366" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="expect(String) : void" num="383" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="check(String,TestIssue) : void" num="388" count="42" type="method"/>
            <line num="389" count="42" type="stmt"/>
            <line num="390" count="42" type="stmt"/>
            <line num="391" count="42" type="stmt"/>
            <line num="392" count="42" type="stmt"/>
            <line num="393" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="CheckStub(List&lt;TestIssue&gt;)" num="401" count="42" type="method"/>
            <line num="402" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLineIssue(Tree,String) : LineIssue" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PreciseIssue" num="410" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(T) : T" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(TreeVisitorContext) : List&lt;Issue&gt;" num="420" count="34" type="method"/>
            <line num="422" count="34" type="stmt"/>
            <line num="423" count="34" type="stmt"/>
            <line num="424" count="35" type="stmt"/>
            <line num="426" count="34" type="stmt"/>
            <line complexity="7" visibility="public" signature="log(TestIssue) : void" num="429" count="35" type="method"/>
            <line num="430" count="35" type="stmt"/>
            <line falsecount="17" truecount="18" num="430" type="cond"/>
            <line num="431" count="18" type="stmt"/>
            <line num="432" count="18" type="stmt"/>
            <line num="434" count="18" type="stmt"/>
            <line num="435" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="435" type="cond"/>
            <line num="436" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="436" type="cond"/>
            <line num="437" count="13" type="stmt"/>
            <line num="439" count="18" type="stmt"/>
            <line num="442" count="17" type="stmt"/>
            <line num="443" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="443" type="cond"/>
            <line num="444" count="2" type="stmt"/>
            <line num="446" count="17" type="stmt"/>
            <line complexity="2" visibility="private" signature="createTree(int,Integer,Integer,Integer) : Tree" num="450" count="31" type="method"/>
            <line num="451" count="31" type="stmt"/>
            <line num="452" count="31" type="stmt"/>
            <line num="453" count="31" type="stmt"/>
            <line falsecount="15" truecount="16" num="453" type="cond"/>
            <line num="454" count="31" type="stmt"/>
            <line complexity="2" visibility="private" signature="createToken(int,Integer,int) : InternalSyntaxToken" num="457" count="62" type="method"/>
            <line num="458" count="62" type="stmt"/>
            <line num="459" count="62" type="stmt"/>
            <line falsecount="38" truecount="24" num="459" type="cond"/>
            <line num="460" count="62" type="stmt"/>
         </file>
      </package>
      <package name="org.sonarsource.nodejs">
         <metrics coveredelements="114" complexity="28" loc="417" methods="27" classes="1" statements="137" coveredconditionals="1" coveredmethods="19" elements="166" ncloc="345" files="1" conditionals="2" coveredstatements="94"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/nodejs-utils/src/test/java/org/sonarsource/nodejs/NodeCommandTest.java" name="NodeCommandTest.java">
            <metrics coveredelements="114" coveredconditionals="1" complexity="28" loc="417" coveredmethods="19" methods="27" elements="166" classes="1" ncloc="345" statements="137" conditionals="2" coveredstatements="94"/>
            <class name="NodeCommandTest">
               <metrics coveredelements="114" complexity="28" methods="27" testruns="24" statements="137" coveredconditionals="1" coveredmethods="19" elements="166" testfailures="8" testduration="0.8420000000000001" conditionals="2" coveredstatements="94" testpasses="16"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="76" count="24" type="method"/>
            <line num="78" count="24" type="stmt"/>
            <line num="79" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="82" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_output_error_consumer() : void" num="93" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_min_version() : void" num="110" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_mac_default_executable_not_found() : void" num="121" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_min_version_positive() : void" num="132" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_version_check() : void" num="145" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_max_old_space_size_setting() : void" num="156" testsuccess="false" count="0" testduration="0.023" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_executable_from_configuration() : void" num="173" testsuccess="true" count="1" testduration="0.161" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_node_with_deprecated_key() : void" num="192" testsuccess="true" count="1" testduration="0.205" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_node_with_both_key() : void" num="213" testsuccess="true" count="1" testduration="0.205" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty_configuration() : void" num="236" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_non_existing_node_file() : void" num="248" testsuccess="true" count="1" testduration="0.102" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_non_existing_node_file_deprecated_key() : void" num="264" testsuccess="true" count="1" testduration="0.103" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_exception_start() : void" num="280" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_interrupted_waitFor() : void" num="293" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_no_args() : void" num="306" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_script_args() : void" num="314" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_failed_get_version() : void" num="322" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_toString() : void" num="333" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="test_command_on_mac() : void" num="345" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="347" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="347" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_missing_node() : void" num="364" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nodepath_setting() : void" num="374" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setting_null_path_should_throw() : void" num="388" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="390" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_append_explicit_node_path_to_environment() : void" num="394" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="resourceScript(String) : String" num="409" count="6" type="method"/>
            <line num="410" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getPathResolver() : BundlePathResolver" num="413" count="7" type="method"/>
            <line num="414" count="7" type="stmt"/>
            <line num="415" count="7" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.checks">
         <metrics coveredelements="469" complexity="148" loc="4407" methods="137" classes="121" statements="326" coveredconditionals="14" coveredmethods="135" elements="479" ncloc="1532" files="120" conditionals="16" coveredstatements="320"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/AbstractAnyPathSeCheckTest.java" name="AbstractAnyPathSeCheckTest.java">
            <metrics coveredelements="19" coveredconditionals="8" complexity="9" loc="83" coveredmethods="2" methods="4" elements="29" classes="2" ncloc="51" statements="15" conditionals="10" coveredstatements="9"/>
            <class name="AbstractAnyPathSeCheckTest">
               <metrics coveredelements="2" complexity="3" methods="3" testruns="3" statements="5" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="2" testduration="0.099" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AbstractAnyPathSeCheckTest.DummyCheck">
               <metrics coveredelements="17" coveredconditionals="8" complexity="6" coveredmethods="1" methods="1" elements="21" statements="10" conditionals="10" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="42" testsuccess="true" count="1" testduration="0.04" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_should_raise_exception() : void" num="48" testsuccess="false" count="0" testduration="0.04" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_should_also_raise_exception() : void" num="55" testsuccess="false" count="0" testduration="0.019" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="64" count="76" type="method"/>
            <line num="66" count="76" type="stmt"/>
            <line falsecount="74" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="74" type="stmt"/>
            <line falsecount="72" truecount="2" num="68" type="cond"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="72" type="stmt"/>
            <line falsecount="70" truecount="2" num="70" type="cond"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="70" type="stmt"/>
            <line falsecount="69" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="69" type="stmt"/>
            <line falsecount="68" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/AngleBracketTypeAssertionCheckTest.java" name="AngleBracketTypeAssertionCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="AngleBracketTypeAssertionCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ArgumentTypesCheckTest.java" name="ArgumentTypesCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArgumentTypesCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.029" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ArithmeticOperationReturningNanCheckTest.java" name="ArithmeticOperationReturningNanCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArithmeticOperationReturningNanCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.041" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.041" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ArrayCallbackWithoutReturnCheckTest.java" name="ArrayCallbackWithoutReturnCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayCallbackWithoutReturnCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.04" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.04" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ArrayConstructorsCheckTest.java" name="ArrayConstructorsCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayConstructorsCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ArrayMutatingOperationCheckTest.java" name="ArrayMutatingOperationCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayMutatingOperationCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.032" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.032" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ArrowFunctionConventionCheckTest.java" name="ArrowFunctionConventionCheckTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="18" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ArrowFunctionConventionCheckTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_configuration() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/AssociativeArraysCheckTest.java" name="AssociativeArraysCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AssociativeArraysCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/BackboneChangedIsUsedCheckTest.java" name="BackboneChangedIsUsedCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BackboneChangedIsUsedCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/BuiltInObjectOverriddenCheckTest.java" name="BuiltInObjectOverriddenCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BuiltInObjectOverriddenCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.015" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/CallabilityCheckTest.java" name="CallabilityCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CallabilityCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.014" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/CheckListTest.java" name="CheckListTest.java">
            <metrics coveredelements="65" coveredconditionals="6" complexity="13" loc="149" coveredmethods="7" methods="7" elements="65" classes="1" ncloc="100" statements="52" conditionals="6" coveredstatements="52"/>
            <class name="CheckListTest">
               <metrics coveredelements="65" complexity="13" methods="7" testruns="6" statements="52" coveredconditionals="6" coveredmethods="7" elements="65" testfailures="0" testduration="0.202" conditionals="6" coveredstatements="52" testpasses="6"/>
            </class>
            <line complexity="3" visibility="public" signature="count() : void" num="39" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="271" type="stmt"/>
            <line num="45" count="271" type="stmt"/>
            <line falsecount="11" truecount="260" num="45" type="cond"/>
            <line num="46" count="260" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="55" testsuccess="true" count="1" testduration="0.078" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="259" type="stmt"/>
            <line falsecount="176" truecount="83" num="60" type="cond"/>
            <line num="61" count="83" type="stmt"/>
            <line num="62" count="83" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="259" type="stmt"/>
            <line num="72" count="259" type="stmt"/>
            <line num="76" count="259" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="test_eslint_key() : void" num="96" testsuccess="true" count="1" testduration="0.066" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="259" type="stmt"/>
            <line falsecount="84" truecount="175" num="102" type="cond"/>
            <line num="103" count="175" type="stmt"/>
            <line num="104" count="175" type="stmt"/>
            <line num="105" count="175" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeScriptChecks() : void" num="115" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJavaScriptChecks() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEveryCheckBelongsToLanguage() : void" num="131" testsuccess="true" count="1" testduration="0.045" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="isEslintBasedCheck(Class) : boolean" num="140" count="517" type="method"/>
            <line num="141" count="517" type="stmt"/>
            <line num="142" count="517" type="stmt"/>
            <line num="143" count="350" type="stmt"/>
            <line num="145" count="167" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ClassNameCheckTest.java" name="ClassNameCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ClassNameCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ClassPrototypeCheckTest.java" name="ClassPrototypeCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ClassPrototypeCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/CognitiveComplexityFunctionCheckTest.java" name="CognitiveComplexityFunctionCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CognitiveComplexityFunctionCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testConfig() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/CommentRegularExpressionCheckTest.java" name="CommentRegularExpressionCheckTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="47" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="18" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="CommentRegularExpressionCheckTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_configuration() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ConditionalCommentCheckTest.java" name="ConditionalCommentCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConditionalCommentCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ConditionalOperatorCheckTest.java" name="ConditionalOperatorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConditionalOperatorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ConditionalUnreachableCodeCheckTest.java" name="ConditionalUnreachableCodeCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConditionalUnreachableCodeCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.867" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.867" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ConsoleLoggingCheckTest.java" name="ConsoleLoggingCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ConsoleLoggingCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="29" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ContinueStatementCheckTest.java" name="ContinueStatementCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ContinueStatementCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/CyclomaticComplexityJavaScriptCheckTest.java" name="CyclomaticComplexityJavaScriptCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CyclomaticComplexityJavaScriptCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/CyclomaticComplexityTypeScriptCheckTest.java" name="CyclomaticComplexityTypeScriptCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CyclomaticComplexityTypeScriptCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DeclarationInGlobalScopeCheckTest.java" name="DeclarationInGlobalScopeCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DeclarationInGlobalScopeCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DefaultParameterSideEffectCheckTest.java" name="DefaultParameterSideEffectCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DefaultParameterSideEffectCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DefaultParametersNotLastCheckTest.java" name="DefaultParametersNotLastCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DefaultParametersNotLastCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DeleteArrayElementCheckTest.java" name="DeleteArrayElementCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DeleteArrayElementCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.492" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.492" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DeleteNonPropertyCheckTest.java" name="DeleteNonPropertyCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DeleteNonPropertyCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DeprecatedJQueryAPICheckTest.java" name="DeprecatedJQueryAPICheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DeprecatedJQueryAPICheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DifferentTypesComparisonCheckTest.java" name="DifferentTypesComparisonCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DifferentTypesComparisonCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DuplicateFunctionArgumentCheckTest.java" name="DuplicateFunctionArgumentCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DuplicateFunctionArgumentCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/DuplicatePropertyNameCheckTest.java" name="DuplicatePropertyNameCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DuplicatePropertyNameCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.021" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ElementTypeSelectorCheckTest.java" name="ElementTypeSelectorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ElementTypeSelectorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ElementUsedWithClassSelectorCheckTest.java" name="ElementUsedWithClassSelectorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ElementUsedWithClassSelectorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/EmptyBlockCheckTest.java" name="EmptyBlockCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="EmptyBlockCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/EmptyFunctionCheckTest.java" name="EmptyFunctionCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EmptyFunctionCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.018" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/EqEqEqCheckTest.java" name="EqEqEqCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EqEqEqCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/EscapeUtilsTest.java" name="EscapeUtilsTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="1" loc="46" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="21" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="EscapeUtilsTest">
               <metrics coveredelements="14" complexity="1" methods="1" testruns="1" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="13" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ExpressionComplexityCheckTest.java" name="ExpressionComplexityCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ExpressionComplexityCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/FileHeaderCheckTest.java" name="FileHeaderCheckTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="16" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FileHeaderCheckTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="config() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ForInCheckTest.java" name="ForInCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ForInCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ForLoopIncrementSignCheckTest.java" name="ForLoopIncrementSignCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ForLoopIncrementSignCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/FunctionConstructorCheckTest.java" name="FunctionConstructorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FunctionConstructorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/FunctionNameCheckTest.java" name="FunctionNameCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FunctionNameCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/FunctionReturnTypeCheckTest.java" name="FunctionReturnTypeCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FunctionReturnTypeCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.028" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.028" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/GeneratorWithoutYieldCheckTest.java" name="GeneratorWithoutYieldCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GeneratorWithoutYieldCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/GetterSetterCheckTest.java" name="GetterSetterCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GetterSetterCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/GlobalThisCheckTest.java" name="GlobalThisCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GlobalThisCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/HardcodedCredentialsCheckTest.java" name="HardcodedCredentialsCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="HardcodedCredentialsCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/HtmlCommentsCheckTest.java" name="HtmlCommentsCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="HtmlCommentsCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/IdChildrenSelectorCheckTest.java" name="IdChildrenSelectorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IdChildrenSelectorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/IfConditionalAlwaysTrueOrFalseCheckTest.java" name="IfConditionalAlwaysTrueOrFalseCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IfConditionalAlwaysTrueOrFalseCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ImplicitDependenciesCheckTest.java" name="ImplicitDependenciesCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ImplicitDependenciesCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/InOperatorTypeErrorCheckTest.java" name="InOperatorTypeErrorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InOperatorTypeErrorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/InstanceofInMisuseCheckTest.java" name="InstanceofInMisuseCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InstanceofInMisuseCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/JQueryVarNameConventionCheckTest.java" name="JQueryVarNameConventionCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JQueryVarNameConventionCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/LineLengthCheckTest.java" name="LineLengthCheckTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="23" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="LineLengthCheckTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="default_configuration() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom_configuration() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/LocalStorageCheckTest.java" name="LocalStorageCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LocalStorageCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.009" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/LoopsShouldNotBeInfiniteCheckTest.java" name="LoopsShouldNotBeInfiniteCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LoopsShouldNotBeInfiniteCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.072" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.072" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/MaxParameterCheckTest.java" name="MaxParameterCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MaxParameterCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/MaxSwitchCasesCheckTest.java" name="MaxSwitchCasesCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MaxSwitchCasesCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/MaxUnionSizeCheckTest.java" name="MaxUnionSizeCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MaxUnionSizeCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/MissingNewlineAtEndOfFileCheckTest.java" name="MissingNewlineAtEndOfFileCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MissingNewlineAtEndOfFileCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/MissingTrailingCommaCheckTest.java" name="MissingTrailingCommaCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MissingTrailingCommaCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ModelDefaultsWithArrayOrObjectCheckTest.java" name="ModelDefaultsWithArrayOrObjectCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ModelDefaultsWithArrayOrObjectCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NamedFunctionExpressionCheckTest.java" name="NamedFunctionExpressionCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NamedFunctionExpressionCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NestedConditionalOperatorsCheckTest.java" name="NestedConditionalOperatorsCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NestedConditionalOperatorsCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NestedControlFlowDepthCheckTest.java" name="NestedControlFlowDepthCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NestedControlFlowDepthCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testConfig() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NewOperatorMisuseCheckTest.java" name="NewOperatorMisuseCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="NewOperatorMisuseCheckTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="2" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.077" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="default_without_jsdoc() : void" num="30" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom_with_jsdoc() : void" num="41" testsuccess="true" count="1" testduration="0.05" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NoDuplicateStringCheckTest.java" name="NoDuplicateStringCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NoDuplicateStringCheckTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NoMagicNumbersCheckTest.java" name="NoMagicNumbersCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NoMagicNumbersCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="config() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NoThisAliasCheckTest.java" name="NoThisAliasCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NoThisAliasCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NonExistentPropertyAccessCheckTest.java" name="NonExistentPropertyAccessCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NonExistentPropertyAccessCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.034" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.034" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NonNumberInArithmeticExpressionCheckTest.java" name="NonNumberInArithmeticExpressionCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NonNumberInArithmeticExpressionCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.04" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.04" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NonStandardImportCheckTest.java" name="NonStandardImportCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NonStandardImportCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NotStoredSelectionCheckTest.java" name="NotStoredSelectionCheckTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="NotStoredSelectionCheckTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NullDereferenceCheckTest.java" name="NullDereferenceCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NullDereferenceCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.054" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.054" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/NullDereferenceInConditionalCheckTest.java" name="NullDereferenceInConditionalCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NullDereferenceInConditionalCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/OctalNumberCheckTest.java" name="OctalNumberCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="OctalNumberCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/OpenCurlyBracesAtEOLCheckTest.java" name="OpenCurlyBracesAtEOLCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="OpenCurlyBracesAtEOLCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_configuration() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/PostMessageCheckTest.java" name="PostMessageCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="52" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PostMessageCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="47" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/RedeclaredSymbolCheckTest.java" name="RedeclaredSymbolCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RedeclaredSymbolCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/RedundantAssignmentCheckTest.java" name="RedundantAssignmentCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="RedundantAssignmentCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.022" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ReferenceErrorCheckTest.java" name="ReferenceErrorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReferenceErrorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.014" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ReturnInSetterCheckTest.java" name="ReturnInSetterCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReturnInSetterCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ReturnValueNotIgnoredCheckTest.java" name="ReturnValueNotIgnoredCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ReturnValueNotIgnoredCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.037" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/SameModuleImportsCheckTest.java" name="SameModuleImportsCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SameModuleImportsCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/SelectionTestedWithoutLengthCheckTest.java" name="SelectionTestedWithoutLengthCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SelectionTestedWithoutLengthCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/SpaceInModelPropertyNameCheckTest.java" name="SpaceInModelPropertyNameCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SpaceInModelPropertyNameCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/StrictModeCheckTest.java" name="StrictModeCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="StrictModeCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/StringConcatenatedWithNonStringCheckTest.java" name="StringConcatenatedWithNonStringCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StringConcatenatedWithNonStringCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/StringLiteralsQuotesCheckTest.java" name="StringLiteralsQuotesCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="StringLiteralsQuotesCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/StringsComparisonCheckTest.java" name="StringsComparisonCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StringsComparisonCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/SuperInvocationCheckTest.java" name="SuperInvocationCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SuperInvocationCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.078" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.078" type="method"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/SwitchWithoutDefaultCheckTest.java" name="SwitchWithoutDefaultCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="SwitchWithoutDefaultCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/SymbolUsedAsConstructorCheckTest.java" name="SymbolUsedAsConstructorCheckTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="46" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="21" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="SymbolUsedAsConstructorCheckTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="built_in_symbol_written() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="user_class() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/TooManyBreakOrContinueInLoopCheckTest.java" name="TooManyBreakOrContinueInLoopCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TooManyBreakOrContinueInLoopCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.016" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/TooManyLinesInFileCheckTest.java" name="TooManyLinesInFileCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TooManyLinesInFileCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_configuration() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/TooManyLinesInFunctionCheckTest.java" name="TooManyLinesInFunctionCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TooManyLinesInFunctionCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_configuration() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/TrailingCommaCheckTest.java" name="TrailingCommaCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TrailingCommaCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/TrailingCommentCheckTest.java" name="TrailingCommentCheckTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="TrailingCommentCheckTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="2" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="defaults() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="35" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/TrailingWhitespaceCheckTest.java" name="TrailingWhitespaceCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TrailingWhitespaceCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UnaryPlusMinusWithObjectCheckTest.java" name="UnaryPlusMinusWithObjectCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnaryPlusMinusWithObjectCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UnchangedLetVariableCheckTest.java" name="UnchangedLetVariableCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="UnchangedLetVariableCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UndefinedAssignmentCheckTest.java" name="UndefinedAssignmentCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UndefinedAssignmentCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UniversalSelectorCheckTest.java" name="UniversalSelectorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UniversalSelectorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UnreachableCodeCheckTest.java" name="UnreachableCodeCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UnreachableCodeCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UntrustedContentCheckTest.java" name="UntrustedContentCheckTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="59" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="UntrustedContentCheckTest">
               <metrics coveredelements="11" complexity="4" methods="4" testruns="4" statements="7" coveredconditionals="0" coveredmethods="4" elements="11" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="7" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithParam() : void" num="42" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithRegexParam() : void" num="48" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithRegexParamList() : void" num="54" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UpdatedConstVariableCheckTest.java" name="UpdatedConstVariableCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UpdatedConstVariableCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UselessExpressionStatementCheckTest.java" name="UselessExpressionStatementCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="UselessExpressionStatementCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/UselessStringOperationCheckTest.java" name="UselessStringOperationCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="UselessStringOperationCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/ValuesNotConvertibleToNumbersCheckTest.java" name="ValuesNotConvertibleToNumbersCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ValuesNotConvertibleToNumbersCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.024" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.024" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/VariableDeclarationWithoutVarCheckTest.java" name="VariableDeclarationWithoutVarCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="VariableDeclarationWithoutVarCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/VariableNameCheckTest.java" name="VariableNameCheckTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="VariableNameCheckTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="configurations() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/VariableShadowingCheckTest.java" name="VariableShadowingCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="VariableShadowingCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/VoidUseCheckTest.java" name="VoidUseCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="VoidUseCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/WebSQLDatabaseCheckTest.java" name="WebSQLDatabaseCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="WebSQLDatabaseCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/WithStatementCheckTest.java" name="WithStatementCheckTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="WithStatementCheckTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/YieldOutsideGeneratorCheckTest.java" name="YieldOutsideGeneratorCheckTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="YieldOutsideGeneratorCheckTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.checks.utils">
         <metrics coveredelements="17" complexity="12" loc="171" methods="7" classes="2" statements="38" coveredconditionals="0" coveredmethods="3" elements="53" ncloc="110" files="2" conditionals="8" coveredstatements="14"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/utils/BulkTestOnSingleRule.java" name="BulkTestOnSingleRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="75" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="46" statements="18" conditionals="8" coveredstatements="0"/>
            <class name="BulkTestOnSingleRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="29" statements="18" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="execute(String,String,String) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCheckClass(String) : Class&lt;JavaScriptCheck&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-checks/src/test/java/org/sonar/javascript/checks/utils/CheckUtilsTest.java" name="CheckUtilsTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="4" loc="96" coveredmethods="3" methods="4" elements="24" classes="1" ncloc="64" statements="20" conditionals="0" coveredstatements="14"/>
            <class name="CheckUtilsTest">
               <metrics coveredelements="17" complexity="4" methods="4" testruns="4" statements="20" coveredconditionals="0" coveredmethods="3" elements="24" testfailures="1" testduration="0.362" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testAsString() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsDescendant() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadLines() : void" num="76" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadLinesThrows() : void" num="86" testsuccess="false" count="0" testduration="0.358" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se">
         <metrics coveredelements="608" complexity="146" loc="1581" methods="122" classes="15" statements="455" coveredconditionals="36" coveredmethods="122" elements="617" ncloc="1107" files="12" conditionals="40" coveredstatements="450"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/BlockExecutionTest.java" name="BlockExecutionTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="28" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BlockExecutionTest">
               <metrics coveredelements="11" complexity="3" methods="3" testruns="3" statements="8" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="constructor() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equals() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_hashCode() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/ConstraintTest.java" name="ConstraintTest.java">
            <metrics coveredelements="60" coveredconditionals="0" complexity="9" loc="134" coveredmethods="9" methods="9" elements="60" classes="1" ncloc="96" statements="51" conditionals="0" coveredstatements="51"/>
            <class name="ConstraintTest">
               <metrics coveredelements="60" complexity="9" methods="9" testruns="9" statements="51" coveredconditionals="0" coveredmethods="9" elements="60" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="51" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="any_value() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_possible_value() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="or() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_string() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isStricterOrEqual() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_numericRange() : void" num="120" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/ExpressionStackTest.java" name="ExpressionStackTest.java">
            <metrics coveredelements="145" coveredconditionals="9" complexity="37" loc="307" coveredmethods="32" methods="32" elements="146" classes="1" ncloc="233" statements="104" conditionals="10" coveredstatements="104"/>
            <class name="ExpressionStackTest">
               <metrics coveredelements="145" complexity="37" methods="32" testruns="27" statements="104" coveredconditionals="9" coveredmethods="32" elements="146" testfailures="0" testduration="0.012000000000000004" conditionals="10" coveredstatements="104" testpasses="27"/>
            </class>
            <line complexity="1" visibility="public" signature="assignment_patterns() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logical_not() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equal() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_equal() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="strict_equal() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="strict_not_equal() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeof() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instanceof_test() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="yield() : void" num="111" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown() : void" num="120" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="delete() : void" num="129" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="this_object() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="new_expression() : void" num="141" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call_expression() : void" num="158" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="comma_operator() : void" num="164" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrow_function() : void" num="170" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_object_literal() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="await_expression() : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_expression() : void" num="191" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relational_expressions() : void" num="197" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="number_expressions() : void" num="212" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_type_casting() : void" num="218" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsx() : void" num="224" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : void" num="230" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals() : void" num="236" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash_code() : void" num="243" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_string() : void" num="248" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertSingleValueInStack(Class&lt;? extends SymbolicValue&gt;) : void" num="253" count="6" type="method"/>
            <line num="254" count="6" type="stmt"/>
            <line num="255" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertSingleValueInStack(SymbolicValue) : void" num="258" count="24" type="method"/>
            <line num="259" count="24" type="stmt"/>
            <line num="261" count="24" type="stmt"/>
            <line falsecount="16" truecount="8" num="261" type="cond"/>
            <line num="262" count="8" type="stmt"/>
            <line num="263" count="8" type="stmt"/>
            <line num="265" count="16" type="stmt"/>
            <line falsecount="8" truecount="8" num="265" type="cond"/>
            <line num="266" count="8" type="stmt"/>
            <line num="267" count="8" type="stmt"/>
            <line num="268" count="8" type="stmt"/>
            <line num="271" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertSingleValueInStackWithConstraint(Constraint) : void" num="275" count="4" type="method"/>
            <line num="276" count="4" type="stmt"/>
            <line num="277" count="4" type="stmt"/>
            <line num="278" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="pushValues(SymbolicValue) : void" num="281" count="29" type="method"/>
            <line num="282" count="29" type="stmt"/>
            <line num="283" count="29" type="stmt"/>
            <line complexity="4" visibility="private" signature="execute(String) : void" num="287" count="32" type="method"/>
            <line num="288" count="32" type="stmt"/>
            <line num="289" count="32" type="stmt"/>
            <line num="291" count="32" type="stmt"/>
            <line num="292" count="32" type="stmt"/>
            <line num="294" count="77" type="stmt"/>
            <line falsecount="48" truecount="29" num="294" type="cond"/>
            <line num="295" count="29" type="stmt"/>
            <line num="297" count="48" type="stmt"/>
            <line falsecount="37" truecount="11" num="297" type="cond"/>
            <line num="298" count="11" type="stmt"/>
            <line num="299" count="11" type="stmt"/>
            <line num="301" count="37" type="stmt"/>
            <line falsecount="0" truecount="37" num="301" type="cond"/>
            <line num="302" count="37" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/LiveVariableAnalysisTest.java" name="LiveVariableAnalysisTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="1" loc="54" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="29" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="LiveVariableAnalysisTest">
               <metrics coveredelements="12" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="1" elements="12" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testUsages() : void" num="38" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/LocalVariablesTest.java" name="LocalVariablesTest.java">
            <metrics coveredelements="49" coveredconditionals="2" complexity="14" loc="126" coveredmethods="13" methods="13" elements="50" classes="1" ncloc="89" statements="35" conditionals="2" coveredstatements="34"/>
            <class name="LocalVariablesTest">
               <metrics coveredelements="49" complexity="14" methods="13" testruns="8" statements="35" coveredconditionals="2" coveredmethods="13" elements="50" testfailures="0" testduration="0.006" conditionals="2" coveredstatements="34" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="empty() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="non_parameter() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_var() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_var_read_outside_cfg() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_var_written_outside_cfg() : void" num="76" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_var_written_inside_cfg() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="var_defined_in_outer_function() : void" num="88" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="localVariables(String) : LocalVariables" num="96" count="7" type="method"/>
            <line num="97" count="7" type="stmt"/>
            <line num="98" count="7" type="stmt"/>
            <line num="99" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="localVariables(ScriptTree,FunctionDeclarationTree) : LocalVariables" num="102" count="8" type="method"/>
            <line num="103" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="firstFunctionDeclaration(List&lt;? extends Tree&gt;) : FunctionDeclarationTree" num="108" count="9" type="method"/>
            <line num="109" count="9" type="stmt"/>
            <line num="110" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="110" type="cond"/>
            <line num="111" count="9" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String) : ScriptTree" num="117" count="8" type="method"/>
            <line num="118" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertSingleSymbol(Set&lt;Symbol&gt;,String) : void" num="121" count="5" type="method"/>
            <line num="122" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/ProgramStateTest.java" name="ProgramStateTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="6" loc="125" coveredmethods="6" methods="6" elements="50" classes="1" ncloc="86" statements="44" conditionals="0" coveredstatements="44"/>
            <class name="ProgramStateTest">
               <metrics coveredelements="50" complexity="6" methods="6" testruns="6" statements="44" coveredconditionals="0" coveredmethods="6" elements="50" testfailures="0" testduration="0.009999999999999998" conditionals="0" coveredstatements="44" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="addValue() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraint() : void" num="73" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equals() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equals_with_reused_symbolic_values() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_hashCode() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="121" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/RelationOnSymbolsTest.java" name="RelationOnSymbolsTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="48" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="RelationOnSymbolsTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="equals_and_hashCode() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/RelationTest.java" name="RelationTest.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="8" loc="129" coveredmethods="8" methods="8" elements="61" classes="1" ncloc="90" statements="53" conditionals="0" coveredstatements="53"/>
            <class name="RelationTest">
               <metrics coveredelements="61" complexity="8" methods="8" testruns="7" statements="53" coveredconditionals="0" coveredmethods="8" elements="61" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="53" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="should_be_compatible_with_relation_with_other_operands() : void" num="38" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCompatibleWith_and_same_operands() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCompatibleWith_and_reversed_operands() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals_and_hashCode() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_toString() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ranges_comparison() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="relation(Kind,SymbolicValue,SymbolicValue) : Relation" num="125" count="34" type="method"/>
            <line num="126" count="34" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/SeCheckTest.java" name="SeCheckTest.java">
            <metrics coveredelements="13" coveredconditionals="1" complexity="4" loc="58" coveredmethods="2" methods="2" elements="15" classes="2" ncloc="33" statements="11" conditionals="2" coveredstatements="10"/>
            <class name="SeCheckTest">
               <metrics coveredelements="7" complexity="2" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <class name="SeCheckTest.ExceptionThrowerSeCheck">
               <metrics coveredelements="6" coveredconditionals="1" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="should_not_keep_old_issues_after_exception() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="afterBlockElement(ProgramState,Tree) : void" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/SeChecksDispatcherTest.java" name="SeChecksDispatcherTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="74" coveredmethods="5" methods="5" elements="20" classes="2" ncloc="46" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="SeChecksDispatcherTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.294" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <class name="SeChecksDispatcherTest.TestSeCheck">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="37" testsuccess="true" count="1" testduration="0.294" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startOfExecution(Scope) : void" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfExecution(Scope) : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeBlockElement(ProgramState,Tree,ProgramPoint) : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterBlockElement(ProgramState,Tree) : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/SeVerifier.java" name="SeVerifier.java">
            <metrics coveredelements="114" coveredconditionals="24" complexity="29" loc="283" coveredmethods="13" methods="13" elements="119" classes="2" ncloc="223" statements="80" conditionals="26" coveredstatements="77"/>
            <class name="SeVerifier">
               <metrics coveredelements="78" coveredconditionals="17" complexity="22" coveredmethods="10" methods="10" elements="81" statements="53" conditionals="18" coveredstatements="51"/>
            </class>
            <class name="SeVerifier.CommentParser">
               <metrics coveredelements="36" coveredconditionals="7" complexity="7" coveredmethods="3" methods="3" elements="38" statements="27" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="2" visibility="package" signature="verify() : void" num="99" count="24" type="method"/>
            <line num="100" count="24" type="stmt"/>
            <line num="104" count="24" type="stmt"/>
            <line num="105" count="756" type="stmt"/>
            <line falsecount="522" truecount="234" num="105" type="cond"/>
            <line num="106" count="234" type="stmt"/>
            <line num="107" count="329" type="stmt"/>
            <line num="108" count="329" type="stmt"/>
            <line num="114" count="756" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="123" count="24" type="stmt"/>
            <line num="124" count="234" type="stmt"/>
            <line num="125" count="259" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAbsentSymbolMessage(ProgramState,Symbol,int) : String" num="132" count="6" type="method"/>
            <line num="133" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getNotFoundPsMessage(ProgramState,Integer) : String" num="141" count="329" type="method"/>
            <line num="142" count="329" type="stmt"/>
            <line complexity="1" visibility="private" signature="programState(ProgramState) : String" num="145" count="594" type="method"/>
            <line num="146" count="594" type="stmt"/>
            <line num="147" count="594" type="stmt"/>
            <line num="148" count="2339" type="stmt"/>
            <line num="149" count="2339" type="stmt"/>
            <line num="150" count="2339" type="stmt"/>
            <line num="151" count="2339" type="stmt"/>
            <line num="153" count="594" type="stmt"/>
            <line complexity="4" visibility="private" signature="findCorresponding(ProgramState,Map&lt;ProgramState, Boolean&gt;) : boolean" num="156" count="329" type="method"/>
            <line num="157" count="329" type="stmt"/>
            <line num="160" count="368" type="stmt"/>
            <line num="161" count="368" type="stmt"/>
            <line num="162" count="445" type="stmt"/>
            <line num="163" count="445" type="stmt"/>
            <line falsecount="406" truecount="39" num="163" type="cond"/>
            <line num="164" count="39" type="stmt"/>
            <line num="165" count="39" type="stmt"/>
            <line num="168" count="368" type="stmt"/>
            <line falsecount="39" truecount="329" num="168" type="cond"/>
            <line num="169" count="329" type="stmt"/>
            <line num="170" count="329" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="scanExpectedIssues(JavaScriptVisitorContext) : void" num="177" count="27" type="method"/>
            <line num="178" count="27" type="stmt"/>
            <line complexity="3" visibility="public" signature="startOfExecution(Scope) : void" num="181" count="43" type="method"/>
            <line num="183" count="43" type="stmt"/>
            <line falsecount="16" truecount="27" num="183" type="cond"/>
            <line num="184" count="27" type="stmt"/>
            <line num="185" count="27" type="stmt"/>
            <line num="186" count="27" type="stmt"/>
            <line num="188" count="16" type="stmt"/>
            <line complexity="3" visibility="private" signature="parseSymbolicValue(String) : Constraint" num="192" count="313" type="method"/>
            <line num="193" count="313" type="stmt"/>
            <line falsecount="248" truecount="65" num="193" type="cond"/>
            <line num="194" count="65" type="stmt"/>
            <line num="196" count="248" type="stmt"/>
            <line num="197" count="248" type="stmt"/>
            <line falsecount="248" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="248" type="stmt"/>
            <line complexity="3" visibility="public" signature="afterBlockElement(ProgramState,Tree) : void" num="203" count="40907" type="method"/>
            <line num="205" count="40907" type="stmt"/>
            <line num="207" count="40907" type="stmt"/>
            <line falsecount="39117" truecount="1790" num="207" type="cond"/>
            <line num="208" count="1790" type="stmt"/>
            <line num="211" count="40907" type="stmt"/>
            <line num="212" count="40907" type="stmt"/>
            <line complexity="3" visibility="public" signature="endOfExecution(Scope) : void" num="215" count="40" type="method"/>
            <line num="217" count="40" type="stmt"/>
            <line falsecount="1" truecount="39" num="217" type="cond"/>
            <line num="218" count="39" type="stmt"/>
            <line num="221" count="40" type="stmt"/>
            <line falsecount="15" truecount="25" num="221" type="cond"/>
            <line num="222" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFile(Tree) : void" num="228" count="27" type="method"/>
            <line num="230" count="27" type="stmt"/>
            <line num="231" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="234" count="27" type="method"/>
            <line num="236" count="27" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitNode(Tree) : void" num="239" count="5456" type="method"/>
            <line num="241" count="5456" type="stmt"/>
            <line num="243" count="5456" type="stmt"/>
            <line num="244" count="266" type="stmt"/>
            <line num="245" count="266" type="stmt"/>
            <line falsecount="234" truecount="32" num="245" type="cond"/>
            <line num="246" count="32" type="stmt"/>
            <line num="248" count="234" type="stmt"/>
            <line num="250" count="234" type="stmt"/>
            <line num="251" count="259" type="stmt"/>
            <line num="252" count="259" type="stmt"/>
            <line num="254" count="259" type="stmt"/>
            <line num="255" count="319" type="stmt"/>
            <line num="256" count="319" type="stmt"/>
            <line falsecount="6" truecount="313" num="256" type="cond"/>
            <line num="257" count="313" type="stmt"/>
            <line num="258" count="313" type="stmt"/>
            <line num="259" count="313" type="stmt"/>
            <line falsecount="313" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="313" type="stmt"/>
            <line num="263" count="313" type="stmt"/>
            <line num="266" count="6" type="stmt"/>
            <line num="267" count="6" type="stmt"/>
            <line num="272" count="259" type="stmt"/>
            <line falsecount="25" truecount="234" num="272" type="cond"/>
            <line num="273" count="234" type="stmt"/>
            <line num="275" count="259" type="stmt"/>
            <line num="276" count="259" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/SymbolicExecutionTest.java" name="SymbolicExecutionTest.java">
            <metrics coveredelements="66" coveredconditionals="0" complexity="29" loc="188" coveredmethods="29" methods="29" elements="66" classes="1" ncloc="132" statements="37" conditionals="0" coveredstatements="37"/>
            <class name="SymbolicExecutionTest">
               <metrics coveredelements="66" complexity="29" methods="29" testruns="27" statements="37" coveredconditionals="0" coveredmethods="29" elements="66" testfailures="0" testduration="1.6619999999999995" conditionals="0" coveredstatements="37" testpasses="27"/>
            </class>
            <line complexity="1" visibility="public" signature="empty_function() : void" num="34" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="block_execution_limit() : void" num="41" testsuccess="true" count="1" testduration="1.17" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_catch() : void" num="47" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initial_value() : void" num="53" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment() : void" num="58" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop_after_npe() : void" num="63" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="conditions() : void" num="68" testsuccess="true" count="1" testduration="0.032" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="single_value_constraints() : void" num="73" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ternary() : void" num="78" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="branching() : void" num="83" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="properties() : void" num="88" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="loops() : void" num="93" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullability() : void" num="98" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeof() : void" num="103" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instanceof_test() : void" num="108" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_live_variable_analysis() : void" num="113" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : void" num="118" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relations() : void" num="123" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_declaration() : void" num="128" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression_stack_size() : void" num="133" testsuccess="true" count="1" testduration="0.067" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_without_condition() : void" num="139" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="built_in() : void" num="145" testsuccess="true" count="1" testduration="0.071" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrays() : void" num="150" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cross_procedure_single_return() : void" num="155" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cross_procedure_argument_constraints() : void" num="160" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_drop_constraints_on_arguments_of_functions_used_in_conditions() : void" num="165" testsuccess="true" count="1" testduration="0.038" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_execute_flow_syntax() : void" num="170" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runSe(String) : void" num="175" count="27" type="method"/>
            <line num="176" count="27" type="stmt"/>
            <line num="177" count="27" type="stmt"/>
            <line num="178" count="27" type="stmt"/>
            <line num="179" count="27" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifySE(String) : void" num="182" count="24" type="method"/>
            <line num="183" count="24" type="stmt"/>
            <line num="184" count="24" type="stmt"/>
            <line num="185" count="24" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.declaration">
         <metrics coveredelements="579" complexity="78" loc="1440" methods="76" classes="16" statements="499" coveredconditionals="4" coveredmethods="76" elements="579" ncloc="889" files="16" conditionals="4" coveredstatements="499"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/AccessorMethodDeclarationTreeModelTest.java" name="AccessorMethodDeclarationTreeModelTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="80" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="50" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="AccessorMethodDeclarationTreeModelTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="4" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="get_method() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="set_method() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="static_set_method() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_typed() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/ArrayBindingPatternTreeModelTest.java" name="ArrayBindingPatternTreeModelTest.java">
            <metrics coveredelements="62" coveredconditionals="2" complexity="6" loc="120" coveredmethods="5" methods="5" elements="62" classes="1" ncloc="82" statements="55" conditionals="2" coveredstatements="55"/>
            <class name="ArrayBindingPatternTreeModelTest">
               <metrics coveredelements="62" complexity="6" methods="5" testruns="4" statements="55" coveredconditionals="2" coveredmethods="5" elements="62" testfailures="0" testduration="0.006" conditionals="2" coveredstatements="55" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elision() : void" num="44" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : void" num="86" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="size(Iterator&lt;Tree&gt;) : int" num="111" count="2" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line falsecount="2" truecount="15" num="113" type="cond"/>
            <line num="114" count="15" type="stmt"/>
            <line num="115" count="15" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/ClassDeclarationTreeModelTest.java" name="ClassDeclarationTreeModelTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="7" loc="120" coveredmethods="7" methods="7" elements="57" classes="1" ncloc="81" statements="50" conditionals="0" coveredstatements="50"/>
            <class name="ClassDeclarationTreeModelTest">
               <metrics coveredelements="57" complexity="7" methods="7" testruns="7" statements="50" coveredconditionals="0" coveredmethods="7" elements="57" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="50" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="without_members() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_members() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="extends_clause() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_implements_clause() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_global_class_should_be_declaration() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="property() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_property_with_type() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/DecoratorTreeModelTest.java" name="DecoratorTreeModelTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="27" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="DecoratorTreeModelTest">
               <metrics coveredelements="15" complexity="2" methods="2" testruns="2" statements="13" coveredconditionals="0" coveredmethods="2" elements="15" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_arguments() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/DefaultExportDeclarationTreeModelTest.java" name="DefaultExportDeclarationTreeModelTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="73" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="41" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="DefaultExportDeclarationTreeModelTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="4" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="expression() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression_no_semicolon() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function() : void" num="62" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/ExportClauseTreeModelTest.java" name="ExportClauseTreeModelTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="3" loc="64" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="34" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="ExportClauseTreeModelTest">
               <metrics coveredelements="20" complexity="3" methods="3" testruns="3" statements="17" coveredconditionals="0" coveredmethods="3" elements="20" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="17" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="with_from_clause() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_from_clause() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_syntax() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/FormalParameterListTreeModelTest.java" name="FormalParameterListTreeModelTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="4" loc="89" coveredmethods="4" methods="4" elements="35" classes="1" ncloc="53" statements="31" conditionals="0" coveredstatements="31"/>
            <class name="FormalParameterListTreeModelTest">
               <metrics coveredelements="35" complexity="4" methods="4" testruns="4" statements="31" coveredconditionals="0" coveredmethods="4" elements="35" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="31" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_parameter() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parametersIdentifiers() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_typed() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/FunctionDeclarationTreeModelTest.java" name="FunctionDeclarationTreeModelTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="73" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="42" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="FunctionDeclarationTreeModelTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="4" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="function() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async() : void" num="56" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_typed() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/ImportDeclarationTreeModelTest.java" name="ImportDeclarationTreeModelTest.java">
            <metrics coveredelements="54" coveredconditionals="2" complexity="9" loc="121" coveredmethods="8" methods="8" elements="54" classes="1" ncloc="82" statements="44" conditionals="2" coveredstatements="44"/>
            <class name="ImportDeclarationTreeModelTest">
               <metrics coveredelements="54" complexity="9" methods="8" testruns="6" statements="44" coveredconditionals="2" coveredmethods="8" elements="54" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="44" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="import_declaration() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_module_declaration() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_list() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="namespace() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_type_declaration() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_import_specifiers() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertSpecifierTree(SpecifierTree,String,String,String) : void" num="107" count="2" type="method"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertTreeValue(Tree,String) : void" num="113" count="6" type="method"/>
            <line num="114" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/InitializedBindingElementTreeModelTest.java" name="InitializedBindingElementTreeModelTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="3" loc="70" coveredmethods="3" methods="3" elements="21" classes="1" ncloc="37" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="InitializedBindingElementTreeModelTest">
               <metrics coveredelements="21" complexity="3" methods="3" testruns="3" statements="18" coveredconditionals="0" coveredmethods="3" elements="21" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="18" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test_identifier() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_binding_pattern() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/MethodDeclarationTreeModelTest.java" name="MethodDeclarationTreeModelTest.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="6" loc="100" coveredmethods="6" methods="6" elements="43" classes="1" ncloc="64" statements="37" conditionals="0" coveredstatements="37"/>
            <class name="MethodDeclarationTreeModelTest">
               <metrics coveredelements="43" complexity="6" methods="6" testruns="6" statements="37" coveredconditionals="0" coveredmethods="6" elements="43" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="37" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="method() : void" num="32" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="static_method() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator_method() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="static_generator_method() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_typed() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/NameSpaceExportDeclarationTreeModelTest.java" name="NameSpaceExportDeclarationTreeModelTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="2" loc="60" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="32" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="NameSpaceExportDeclarationTreeModelTest">
               <metrics coveredelements="20" complexity="2" methods="2" testruns="2" statements="18" coveredconditionals="0" coveredmethods="2" elements="20" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_synonym() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/NamedExportDeclarationTreeModelTest.java" name="NamedExportDeclarationTreeModelTest.java">
            <metrics coveredelements="60" coveredconditionals="0" complexity="9" loc="135" coveredmethods="9" methods="9" elements="60" classes="1" ncloc="92" statements="51" conditionals="0" coveredstatements="51"/>
            <class name="NamedExportDeclarationTreeModelTest">
               <metrics coveredelements="60" complexity="9" methods="9" testruns="9" statements="51" coveredconditionals="0" coveredmethods="9" elements="60" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="51" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="export_clause() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable_statement() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaration() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_default_binding() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_default_binding_and_star() : void" num="79" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_default_binding_and_export_list() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_default_as() : void" num="116" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_default() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/ObjectBindingPatternTreeModelTest.java" name="ObjectBindingPatternTreeModelTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="2" loc="68" coveredmethods="2" methods="2" elements="23" classes="1" ncloc="37" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="ObjectBindingPatternTreeModelTest">
               <metrics coveredelements="23" complexity="2" methods="2" testruns="2" statements="21" coveredconditionals="0" coveredmethods="2" elements="23" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="21" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/ScriptTreeModelTest.java" name="ScriptTreeModelTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="3" loc="62" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="32" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="ScriptTreeModelTest">
               <metrics coveredelements="18" complexity="3" methods="3" testruns="3" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="without_statement() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statement() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_shebang() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/declaration/VueScriptTreeModelTest.java" name="VueScriptTreeModelTest.java">
            <metrics coveredelements="68" coveredconditionals="0" complexity="10" loc="152" coveredmethods="10" methods="10" elements="68" classes="1" ncloc="103" statements="58" conditionals="0" coveredstatements="58"/>
            <class name="VueScriptTreeModelTest">
               <metrics coveredelements="68" complexity="10" methods="10" testruns="9" statements="58" coveredconditionals="0" coveredmethods="10" elements="68" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="58" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="without_script_tag() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_empty_script_tag() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statement() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_shebang() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_attribute() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_explicit_end_of_statement_token() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_lang_property() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_custom_sections() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_multiline_comment() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="parse(String,Kind) : T" num="145" count="11" type="method"/>
            <line num="147" count="11" type="stmt"/>
            <line num="150" count="11" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.lexer">
         <metrics coveredelements="25" complexity="7" loc="165" methods="7" classes="4" statements="18" coveredconditionals="0" coveredmethods="7" elements="25" ncloc="62" files="4" conditionals="0" coveredstatements="18"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/lexer/JavaScriptKeywordTest.java" name="JavaScriptKeywordTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="JavaScriptKeywordTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/lexer/JavaScriptPunctuatorTest.java" name="JavaScriptPunctuatorTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="JavaScriptPunctuatorTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/lexer/JavaScriptRegexpChannelTest.java" name="JavaScriptRegexpChannelTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="JavaScriptRegexpChannelTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/lexer/JavaScriptTokenTypeTest.java" name="JavaScriptTokenTypeTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="JavaScriptTokenTypeTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree">
         <metrics coveredelements="51" complexity="10" loc="188" methods="10" classes="3" statements="44" coveredconditionals="0" coveredmethods="9" elements="54" ncloc="99" files="3" conditionals="0" coveredstatements="42"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/JavaScriptCommentAnalyserTest.java" name="JavaScriptCommentAnalyserTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="55" coveredmethods="2" methods="3" elements="11" classes="1" ncloc="27" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="JavaScriptCommentAnalyserTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="3" statements="8" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="content() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blank() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_type_of_comment() : void" num="49" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/KindSetTest.java" name="KindSetTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="KindSetTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="enumsSize() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enumContents() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/SyntacticEquivalenceTest.java" name="SyntacticEquivalenceTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="5" loc="90" coveredmethods="5" methods="5" elements="35" classes="1" ncloc="54" statements="30" conditionals="0" coveredstatements="30"/>
            <class name="SyntacticEquivalenceTest">
               <metrics coveredelements="35" complexity="5" methods="5" testruns="5" statements="30" coveredconditionals="0" coveredmethods="5" elements="35" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="30" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equivalence_for_tree_list() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equivalence_for_empty_tree_list() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equivalence_for_tokens() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_are_leafs_with_other_than_leaf() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.sv">
         <metrics coveredelements="269" complexity="55" loc="909" methods="53" classes="13" statements="212" coveredconditionals="4" coveredmethods="53" elements="269" ncloc="552" files="12" conditionals="4" coveredstatements="212"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/EqualitySymbolicValueTest.java" name="EqualitySymbolicValueTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="8" loc="135" coveredmethods="8" methods="8" elements="50" classes="1" ncloc="94" statements="42" conditionals="0" coveredstatements="42"/>
            <class name="EqualitySymbolicValueTest">
               <metrics coveredelements="50" complexity="8" methods="8" testruns="7" statements="42" coveredconditionals="0" coveredmethods="8" elements="50" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="42" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="same_single_value_constraint_comparison() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="different_single_value_constraint_comparison() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_to_truthy_stops_for_different_single_value_constraints() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrained_strict_equal_propagates_single_value_constraints() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrained_strict_not_equal_propagates_single_value_constraints() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrained_loose_equal_not_propagates_single_value_constraints() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrained_loose_not_equal_not_propagates_single_value_constraints() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="create(Tree.Kind,SymbolicValue,SymbolicValue) : EqualitySymbolicValue" num="131" count="28" type="method"/>
            <line num="132" count="28" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/FunctionSymbolicValueTest.java" name="FunctionSymbolicValueTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FunctionSymbolicValueTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/FunctionWithTreeSymbolicValueTest.java" name="FunctionWithTreeSymbolicValueTest.java">
            <metrics coveredelements="32" coveredconditionals="4" complexity="9" loc="102" coveredmethods="7" methods="7" elements="32" classes="2" ncloc="66" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="FunctionWithTreeSymbolicValueTest">
               <metrics coveredelements="13" complexity="4" methods="4" testruns="2" statements="9" coveredconditionals="0" coveredmethods="4" elements="13" testfailures="0" testduration="0.015" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <class name="FunctionWithTreeSymbolicValueTest.FunctionSymbolicValueVerifier">
               <metrics coveredelements="19" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="19" statements="12" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="42" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two_paths() : void" num="48" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbolicValues(int,String,String) : Set&lt;SymbolicValue&gt;" num="54" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFunctionTreeLines(Set&lt;SymbolicValue&gt;,Integer) : void" num="58" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="FunctionSymbolicValueVerifier(int,String)" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="afterBlockElement(ProgramState,Tree) : void" num="80" count="23" type="method"/>
            <line num="82" count="23" type="stmt"/>
            <line falsecount="14" truecount="9" num="82" type="cond"/>
            <line num="83" count="9" type="stmt"/>
            <line num="84" count="12" type="stmt"/>
            <line falsecount="3" truecount="9" num="84" type="cond"/>
            <line num="85" count="9" type="stmt"/>
            <line num="86" count="9" type="stmt"/>
            <line complexity="1" visibility="package" signature="getSymbolicValuesAtLine(int,String,String) : Set&lt;SymbolicValue&gt;" num="92" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/IncDecSymbolicValueTest.java" name="IncDecSymbolicValueTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="3" loc="57" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="32" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="IncDecSymbolicValueTest">
               <metrics coveredelements="17" complexity="3" methods="3" testruns="2" statements="14" coveredconditionals="0" coveredmethods="3" elements="17" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="1" visibility="private" signature="resultingConstraint(Sign,Constraint) : Constraint" num="33" count="12" type="method"/>
            <line num="34" count="12" type="stmt"/>
            <line num="35" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="plus_one() : void" num="38" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="minus_one() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/LiteralSymbolicValueTest.java" name="LiteralSymbolicValueTest.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="8" loc="106" coveredmethods="8" methods="8" elements="42" classes="1" ncloc="73" statements="34" conditionals="0" coveredstatements="34"/>
            <class name="LiteralSymbolicValueTest">
               <metrics coveredelements="42" complexity="8" methods="8" testruns="6" statements="34" coveredconditionals="0" coveredmethods="8" elements="42" testfailures="0" testduration="0.065" conditionals="0" coveredstatements="34" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="boolean_literal() : void" num="41" testsuccess="true" count="1" testduration="0.045" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_literal() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="regexp_literal() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="numeric_literal() : void" num="60" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_literal_type() : void" num="81" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="constraint(String) : Constraint" num="96" count="23" type="method"/>
            <line num="97" count="23" type="stmt"/>
            <line complexity="1" visibility="private" signature="literal(String) : SymbolicValue" num="100" count="28" type="method"/>
            <line num="101" count="28" type="stmt"/>
            <line num="102" count="28" type="stmt"/>
            <line num="103" count="28" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/LogicalNotSymbolicValueTest.java" name="LogicalNotSymbolicValueTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="3" loc="58" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="LogicalNotSymbolicValueTest">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="3" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="10" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_throw_on_null_negated_value() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_string() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/PlusSymbolicValueTest.java" name="PlusSymbolicValueTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="2" loc="58" coveredmethods="2" methods="2" elements="19" classes="1" ncloc="33" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="PlusSymbolicValueTest">
               <metrics coveredelements="19" complexity="2" methods="2" testruns="1" statements="17" coveredconditionals="0" coveredmethods="2" elements="19" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="17" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="constraint() : void" num="32" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="plusConstraint(Constraint,Constraint) : Constraint" num="46" count="10" type="method"/>
            <line num="47" count="10" type="stmt"/>
            <line num="48" count="10" type="stmt"/>
            <line num="49" count="10" type="stmt"/>
            <line num="52" count="10" type="stmt"/>
            <line num="53" count="10" type="stmt"/>
            <line num="54" count="10" type="stmt"/>
            <line num="55" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/RelationalSymbolicValueTest.java" name="RelationalSymbolicValueTest.java">
            <metrics coveredelements="55" coveredconditionals="0" complexity="14" loc="167" coveredmethods="14" methods="14" elements="55" classes="1" ncloc="123" statements="41" conditionals="0" coveredstatements="41"/>
            <class name="RelationalSymbolicValueTest">
               <metrics coveredelements="55" complexity="14" methods="14" testruns="12" statements="41" coveredconditionals="0" coveredmethods="14" elements="55" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="41" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="constraint() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraint_on_equality() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relationWhenTrue() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_to_non_boolean_constraint() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_to_truthy() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_to_falsy() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_with_incompatible_relation() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraint_on_value_itself_with_unknown_operand() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="null_or_undefined_operand() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_false_numeric_comparison() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_true_numeric_comparison() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_unknown_numeric_comparison() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="singleConstrainedState(SymbolicValue,Constraint) : ProgramState" num="157" count="6" type="method"/>
            <line num="158" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="create(Kind,SymbolicValue,SymbolicValue) : RelationalSymbolicValue" num="163" count="21" type="method"/>
            <line num="164" count="21" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/SpecialSymbolicValueTest.java" name="SpecialSymbolicValueTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="SpecialSymbolicValueTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="constrain_to_incompatible() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_to_less_strict() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/SymbolicValueTest.java" name="SymbolicValueTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="27" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="SymbolicValueTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="2" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="constrain() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constrain_with_unreachable_constraint() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/UnaryMinusSymbolicValueTest.java" name="UnaryMinusSymbolicValueTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="22" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="UnaryMinusSymbolicValueTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="1" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="private" signature="resultingConstraint(Constraint) : Constraint" num="31" count="8" type="method"/>
            <line num="32" count="8" type="stmt"/>
            <line num="33" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/sv/UnknownSymbolicValueTest.java" name="UnknownSymbolicValueTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="14" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="UnknownSymbolicValueTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="constrain() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.limitations">
         <metrics coveredelements="6" complexity="2" loc="49" methods="2" classes="1" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" ncloc="24" files="1" conditionals="0" coveredstatements="4"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/limitations/FunctionArgumentsCollectorTest.java" name="FunctionArgumentsCollectorTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FunctionArgumentsCollectorTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="1" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_collect_all_arguments_from_function() : void" num="44" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.builtins">
         <metrics coveredelements="133" complexity="27" loc="279" methods="27" classes="2" statements="106" coveredconditionals="0" coveredmethods="27" elements="133" ncloc="203" files="2" conditionals="0" coveredstatements="106"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/builtins/BuiltInObjectSymbolicValueTest.java" name="BuiltInObjectSymbolicValueTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BuiltInObjectSymbolicValueTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="prototype_property() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/builtins/BuiltInPropertiesTest.java" name="BuiltInPropertiesTest.java">
            <metrics coveredelements="130" coveredconditionals="0" complexity="26" loc="244" coveredmethods="26" methods="26" elements="130" classes="1" ncloc="192" statements="104" conditionals="0" coveredstatements="104"/>
            <class name="BuiltInPropertiesTest">
               <metrics coveredelements="130" complexity="26" methods="26" testruns="21" statements="104" coveredconditionals="0" coveredmethods="26" elements="130" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="104" testpasses="21"/>
            </class>
            <line complexity="1" visibility="public" signature="test_string() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_ember_string_extension() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_number() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_boolean() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_array() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_function() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_object() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_date() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_null() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_undefined() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_inheritance() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="replace_method_signature() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat_method_signature() : void" num="138" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startsWith_method_signature() : void" num="148" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueOf_method_signature() : void" num="159" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toLocaleString_method_signature() : void" num="167" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce_method_signature() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFullYear_method_signature() : void" num="187" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_method_signature() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_method_signature() : void" num="203" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="regexp_method_signature() : void" num="213" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertProperty(SymbolicValue,Constraint) : void" num="222" count="6" type="method"/>
            <line num="223" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertMethod(SymbolicValue,BuiltInFunctionSymbolicValue) : void" num="226" count="16" type="method"/>
            <line num="227" count="16" type="stmt"/>
            <line num="228" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="value(String) : SymbolicValue" num="232" count="41" type="method"/>
            <line num="233" count="41" type="stmt"/>
            <line complexity="1" visibility="private" signature="method(Constraint) : BuiltInFunctionSymbolicValue" num="236" count="16" type="method"/>
            <line num="237" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="constraint(SymbolicValue) : Constraint" num="240" count="38" type="method"/>
            <line num="241" count="38" type="stmt"/>
            <line num="242" count="38" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.flow">
         <metrics coveredelements="373" complexity="60" loc="1502" methods="60" classes="28" statements="313" coveredconditionals="0" coveredmethods="60" elements="373" ncloc="736" files="28" conditionals="0" coveredstatements="313"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowArrayTypeShorthandTreeModelTest.java" name="FlowArrayTypeShorthandTreeModelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FlowArrayTypeShorthandTreeModelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowArrayTypeWithKeywordTreeModelTest.java" name="FlowArrayTypeWithKeywordTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="18" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowArrayTypeWithKeywordTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowCastingExpressionTreeModelTest.java" name="FlowCastingExpressionTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="18" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowCastingExpressionTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowDeclareTreeModelTest.java" name="FlowDeclareTreeModelTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="24" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FlowDeclareTreeModelTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_default_type() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowFunctionSignatureTreeModelTest.java" name="FlowFunctionSignatureTreeModelTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="2" loc="54" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="27" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="FlowFunctionSignatureTreeModelTest">
               <metrics coveredelements="15" complexity="2" methods="2" testruns="2" statements="13" coveredconditionals="0" coveredmethods="2" elements="15" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="explicit_and_implicit_parameter_names() : void" num="42" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowFunctionTypeParameterClauseTreeModelTest.java" name="FlowFunctionTypeParameterClauseTreeModelTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="4" loc="65" coveredmethods="4" methods="4" elements="18" classes="1" ncloc="34" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="FlowFunctionTypeParameterClauseTreeModelTest">
               <metrics coveredelements="18" complexity="4" methods="4" testruns="4" statements="14" coveredconditionals="0" coveredmethods="4" elements="18" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="14" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="one_parameter() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="many_parameters() : void" num="41" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zero_parameters() : void" num="49" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rest_parameter() : void" num="57" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowFunctionTypeParameterTreeModelTest.java" name="FlowFunctionTypeParameterTreeModelTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="4" loc="75" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="45" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="FlowFunctionTypeParameterTreeModelTest">
               <metrics coveredelements="28" complexity="4" methods="4" testruns="4" statements="24" coveredconditionals="0" coveredmethods="4" elements="28" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="24" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="simple_parameter() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="implicit_parameter_name() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rest_parameter() : void" num="52" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional_parameter() : void" num="64" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowFunctionTypeTreeModelTest.java" name="FlowFunctionTypeTreeModelTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="3" loc="66" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="35" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="FlowFunctionTypeTreeModelTest">
               <metrics coveredelements="19" complexity="3" methods="3" testruns="3" statements="16" coveredconditionals="0" coveredmethods="3" elements="19" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="16" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unparethensized_parameter() : void" num="44" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unparethensized_union_parameter() : void" num="54" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowGenericParameterClauseTreeModelTest.java" name="FlowGenericParameterClauseTreeModelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="FlowGenericParameterClauseTreeModelTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowGenericParameterTreeModelTest.java" name="FlowGenericParameterTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="24" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="FlowGenericParameterTreeModelTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_super() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_default() : void" num="42" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowInterfaceDeclarationTreeModelTest.java" name="FlowInterfaceDeclarationTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="1" loc="47" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="22" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowInterfaceDeclarationTreeModelTest">
               <metrics coveredelements="12" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="1" elements="12" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowIntersectionTypeTreeModelTest.java" name="FlowIntersectionTypeTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="18" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowIntersectionTypeTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowLiteralTypeTreeModelTest.java" name="FlowLiteralTypeTreeModelTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="21" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowLiteralTypeTreeModelTest">
               <metrics coveredelements="9" complexity="2" methods="2" testruns="2" statements="7" coveredconditionals="0" coveredmethods="2" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="7" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_minus() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowModuleExportsTreeModelTest.java" name="FlowModuleExportsTreeModelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FlowModuleExportsTreeModelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowModuleTreeModelTest.java" name="FlowModuleTreeModelTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="28" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="FlowModuleTreeModelTest">
               <metrics coveredelements="16" complexity="2" methods="2" testruns="2" statements="14" coveredconditionals="0" coveredmethods="2" elements="16" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_with_identifier_name() : void" num="45" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowNamespacedTypeTreeModelTest.java" name="FlowNamespacedTypeTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="18" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowNamespacedTypeTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.02" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowObjectTypeTreeModelTest.java" name="FlowObjectTypeTreeModelTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="3" loc="66" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="37" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="FlowObjectTypeTreeModelTest">
               <metrics coveredelements="22" complexity="3" methods="3" testruns="3" statements="19" coveredconditionals="0" coveredmethods="3" elements="22" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="19" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_semicolons() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="strict_object_type() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowOptionalBindingElementTreeModelTest.java" name="FlowOptionalBindingElementTreeModelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FlowOptionalBindingElementTreeModelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowOptionalTypeTreeModelTest.java" name="FlowOptionalTypeTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="27" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="FlowOptionalTypeTreeModelTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_confuse_with_conditional() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowParameterizedGenericsTypeTreeModelTest.java" name="FlowParameterizedGenericsTypeTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="18" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FlowParameterizedGenericsTypeTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowParenthesisedTypeTreeModelTest.java" name="FlowParenthesisedTypeTreeModelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FlowParenthesisedTypeTreeModelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowPropertyDefinitionTreeModelTest.java" name="FlowPropertyDefinitionTreeModelTest.java">
            <metrics coveredelements="59" coveredconditionals="0" complexity="10" loc="133" coveredmethods="10" methods="10" elements="59" classes="1" ncloc="92" statements="49" conditionals="0" coveredstatements="49"/>
            <class name="FlowPropertyDefinitionTreeModelTest">
               <metrics coveredelements="59" complexity="10" methods="10" testruns="10" statements="49" coveredconditionals="0" coveredmethods="10" elements="59" testfailures="0" testduration="0.024" conditionals="0" coveredstatements="49" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="simple_property() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_minus() : void" num="49" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional_property() : void" num="57" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexer_property() : void" num="67" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexer_property_with_name() : void" num="79" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="method() : void" num="90" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="callable() : void" num="99" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="method_with_generic() : void" num="109" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="static_callable() : void" num="118" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="static_named_property() : void" num="125" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowTupleTypeTreeModelTest.java" name="FlowTupleTypeTreeModelTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="25" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="FlowTupleTypeTreeModelTest">
               <metrics coveredelements="13" complexity="2" methods="2" testruns="2" statements="11" coveredconditionals="0" coveredmethods="2" elements="13" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowTypeAliasStatementTreeModelTest.java" name="FlowTypeAliasStatementTreeModelTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="3" loc="59" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="31" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="FlowTypeAliasStatementTreeModelTest">
               <metrics coveredelements="17" complexity="3" methods="3" testruns="3" statements="14" coveredconditionals="0" coveredmethods="3" elements="17" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_semicolon() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opaque() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowTypeAnnotationTreeModelTest.java" name="FlowTypeAnnotationTreeModelTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FlowTypeAnnotationTreeModelTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowTypedBindingElementTreeModelTest.java" name="FlowTypedBindingElementTreeModelTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="1" loc="50" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="22" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="FlowTypedBindingElementTreeModelTest">
               <metrics coveredelements="9" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowTypeofTypeTreeModelTest.java" name="FlowTypeofTypeTreeModelTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FlowTypeofTypeTreeModelTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/flow/FlowUnionTypeTreeModelTest.java" name="FlowUnionTypeTreeModelTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="69" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="37" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="FlowUnionTypeTreeModelTest">
               <metrics coveredelements="17" complexity="5" methods="5" testruns="4" statements="12" coveredconditionals="0" coveredmethods="5" elements="17" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="12" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="priorities1() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="priorities2() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="priorities3() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getType(String) : FlowTypeTree" num="65" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api">
         <metrics coveredelements="168" complexity="32" loc="429" methods="31" classes="5" statements="137" coveredconditionals="0" coveredmethods="31" elements="168" ncloc="294" files="3" conditionals="0" coveredstatements="137"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/plugins/javascript/api/CustomJavaScriptRulesDefinitionTest.java" name="CustomJavaScriptRulesDefinitionTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="4" loc="93" coveredmethods="4" methods="4" elements="21" classes="3" ncloc="59" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="CustomJavaScriptRulesDefinitionTest">
               <metrics coveredelements="14" complexity="1" methods="1" testruns="1" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.038" conditionals="0" coveredstatements="13" testpasses="1"/>
            </class>
            <class name="CustomJavaScriptRulesDefinitionTest.MyCustomRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomJavaScriptRulesDefinitionTest.MyCustomJavaScriptRulesDefinition">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="39" testsuccess="true" count="1" testduration="0.038" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="repositoryName() : String" num="76" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="repositoryKey() : String" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkClasses() : Class[]" num="87" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/plugins/javascript/api/IssueTest.java" name="IssueTest.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="4" loc="110" coveredmethods="4" methods="4" elements="43" classes="1" ncloc="69" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="IssueTest">
               <metrics coveredelements="43" complexity="4" methods="4" testruns="4" statements="39" coveredconditionals="0" coveredmethods="4" elements="43" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="39" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test_file_issue() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_line_issue() : void" num="53" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_precise_issue() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_long_issue_location() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/plugins/javascript/api/TypeSetTest.java" name="TypeSetTest.java">
            <metrics coveredelements="104" coveredconditionals="0" complexity="24" loc="226" coveredmethods="23" methods="23" elements="104" classes="1" ncloc="166" statements="81" conditionals="0" coveredstatements="81"/>
            <class name="TypeSetTest">
               <metrics coveredelements="104" complexity="24" methods="23" testruns="22" statements="81" coveredconditionals="0" coveredmethods="23" elements="104" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="81" testpasses="22"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="22" type="method"/>
            <line num="40" count="22" type="stmt"/>
            <line num="41" count="22" type="stmt"/>
            <line num="43" count="22" type="stmt"/>
            <line num="44" count="22" type="stmt"/>
            <line num="45" count="22" type="stmt"/>
            <line num="47" count="22" type="stmt"/>
            <line num="48" count="22" type="stmt"/>
            <line num="49" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="is_empty() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains_object() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_array() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_array_t() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="add_type() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove_object() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains_all() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="add_all() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="retain_all() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove_all() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="146" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains_only_and_unique_type_kind() : void" num="156" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains_type_kind() : void" num="162" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains_only_type_kind() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_type_set() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals() : void" num="180" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hash_code() : void" num="189" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_sting() : void" num="198" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="immutable_copy() : void" num="206" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get_unique_type() : void" num="220" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.symbols.type">
         <metrics coveredelements="263" complexity="45" loc="691" methods="45" classes="8" statements="218" coveredconditionals="0" coveredmethods="45" elements="263" ncloc="425" files="8" conditionals="0" coveredstatements="218"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/ClassTypeTest.java" name="ClassTypeTest.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="5" loc="101" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="64" statements="38" conditionals="0" coveredstatements="38"/>
            <class name="ClassTypeTest">
               <metrics coveredelements="43" complexity="5" methods="5" testruns="4" statements="38" coveredconditionals="0" coveredmethods="5" elements="43" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="38" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_symbols() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_class_type() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_object_type() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_this_access() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/ExpressionTypeTest.java" name="ExpressionTypeTest.java">
            <metrics coveredelements="69" coveredconditionals="0" complexity="9" loc="139" coveredmethods="9" methods="9" elements="69" classes="1" ncloc="96" statements="60" conditionals="0" coveredstatements="60"/>
            <class name="ExpressionTypeTest">
               <metrics coveredelements="69" complexity="9" methods="9" testruns="8" statements="60" coveredconditionals="0" coveredmethods="9" elements="69" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="60" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="8" type="method"/>
            <line num="34" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="parenthesised() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="new_expression() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_arithmetic_binary_operations() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_comparative_binary_operations() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_for_in_loop_counter() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_string_methods() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_unary_expressions() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_parameter_with_default() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/FrameworkTest.java" name="FrameworkTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="6" loc="81" coveredmethods="6" methods="6" elements="27" classes="1" ncloc="48" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="FrameworkTest">
               <metrics coveredelements="27" complexity="6" methods="6" testruns="5" statements="21" coveredconditionals="0" coveredmethods="6" elements="27" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="21" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_jquery_object() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_jquery_object() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="backbone_model() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="backbone_model_inheritance() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="angular_model() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/FunctionTypeTest.java" name="FunctionTypeTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="6" loc="90" coveredmethods="6" methods="6" elements="33" classes="1" ncloc="54" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="FunctionTypeTest">
               <metrics coveredelements="33" complexity="6" methods="6" testruns="5" statements="27" coveredconditionals="0" coveredmethods="6" elements="33" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="27" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_declaration() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_expression() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_assignment() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter_types_inferred_from_call() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrow_function() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/LiteralTest.java" name="LiteralTest.java">
            <metrics coveredelements="38" coveredconditionals="0" complexity="11" loc="101" coveredmethods="11" methods="11" elements="38" classes="1" ncloc="68" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="LiteralTest">
               <metrics coveredelements="38" complexity="11" methods="11" testruns="10" statements="27" coveredconditionals="0" coveredmethods="11" elements="38" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="27" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="31" count="10" type="method"/>
            <line num="33" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="number_declaration() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="number_assignment() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_declaration() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_assignment() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boolean_declaration() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boolean_assignment() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_declaration() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_declaration() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/MultiTypesTest.java" name="MultiTypesTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="3" loc="64" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="33" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="MultiTypesTest">
               <metrics coveredelements="19" complexity="3" methods="3" testruns="2" statements="16" coveredconditionals="0" coveredmethods="3" elements="19" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="16" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="two_literal_assignments() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifier_assignment() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/TypeTest.java" name="TypeTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="TypeTest">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="getSymbol(String) : Symbol" num="34" count="108" type="method"/>
            <line num="35" count="108" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp(String) : void" num="38" count="36" type="method"/>
            <line num="39" count="36" type="stmt"/>
            <line num="40" count="36" type="stmt"/>
            <line num="41" count="36" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/type/WebApiTest.java" name="WebApiTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="3" loc="72" coveredmethods="3" methods="3" elements="28" classes="1" ncloc="42" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="WebApiTest">
               <metrics coveredelements="28" complexity="3" methods="3" testruns="2" statements="25" coveredconditionals="0" coveredmethods="3" elements="28" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="25" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="window() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dom_elements() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.javascript.api.visitors">
         <metrics coveredelements="72" complexity="16" loc="193" methods="16" classes="3" statements="56" coveredconditionals="0" coveredmethods="16" elements="72" ncloc="126" files="2" conditionals="0" coveredstatements="56"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/plugins/javascript/api/visitors/DoubleDispatchVisitorTest.java" name="DoubleDispatchVisitorTest.java">
            <metrics coveredelements="60" coveredconditionals="0" complexity="13" loc="137" coveredmethods="13" methods="13" elements="60" classes="2" ncloc="98" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="DoubleDispatchVisitorTest">
               <metrics coveredelements="50" complexity="10" methods="10" testruns="7" statements="40" coveredconditionals="0" coveredmethods="10" elements="50" testfailures="0" testduration="0.111" conditionals="0" coveredstatements="40" testpasses="7"/>
            </class>
            <class name="DoubleDispatchVisitorTest.TestVisitor">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="test_visit_token() : void" num="34" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_visit_comment() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_field_property() : void" num="44" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="jsx() : void" num="49" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="57" testsuccess="true" count="1" testduration="0.069" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment_pattern() : void" num="81" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_declaration() : void" num="87" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitScript(ScriptTree) : void" num="102" count="34" type="method"/>
            <line num="104" count="34" type="stmt"/>
            <line num="105" count="34" type="stmt"/>
            <line num="106" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitToken(SyntaxToken) : void" num="109" count="302" type="method"/>
            <line num="111" count="302" type="stmt"/>
            <line num="112" count="302" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComment(SyntaxTrivia) : void" num="115" count="3" type="method"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNumberOfVisitedTokens(String,int) : void" num="122" count="33" type="method"/>
            <line num="123" count="33" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNumberOfVisitedComments(String,int) : void" num="126" count="1" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getTestVisitor(String) : TestVisitor" num="130" count="34" type="method"/>
            <line num="131" count="34" type="stmt"/>
            <line num="132" count="34" type="stmt"/>
            <line num="133" count="34" type="stmt"/>
            <line num="134" count="34" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/plugins/javascript/api/visitors/IssueLocationTest.java" name="IssueLocationTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="56" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="28" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="IssueLocationTest">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="2" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="several_lines_token() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="several_lines_comment() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createToken(int,int,String) : Tree" num="52" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.cfg">
         <metrics coveredelements="539" complexity="116" loc="1083" methods="110" classes="8" statements="460" coveredconditionals="8" coveredmethods="105" elements="582" ncloc="866" files="3" conditionals="12" coveredstatements="426"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/cfg/CfgBlockTest.java" name="CfgBlockTest.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="10" loc="107" coveredmethods="10" methods="10" elements="36" classes="1" ncloc="72" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="CfgBlockTest">
               <metrics coveredelements="36" complexity="10" methods="10" testruns="10" statements="26" coveredconditionals="0" coveredmethods="10" elements="36" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="26" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="branch_successors() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_successor() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannot_add_null_as_successor() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="non_empty_successor() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop_skipping_if_in_a_loop_of_empty_blocks() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="end_has_no_successor() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannot_add_element_to_end() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannot_add_null_element() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forwarding_with_no_successor() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannot_add_element_to_forwarding() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/cfg/CfgPrinter.java" name="CfgPrinter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="74" coveredmethods="0" methods="2" elements="31" classes="1" ncloc="47" statements="25" conditionals="4" coveredstatements="0"/>
            <class name="CfgPrinter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="31" statements="25" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="toDot(ControlFlowGraph) : String" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="blockLabel(ControlFlowGraph,CfgBlock) : String" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/cfg/ControlFlowGraphTest.java" name="ControlFlowGraphTest.java">
            <metrics coveredelements="503" coveredconditionals="8" complexity="102" loc="902" coveredmethods="95" methods="98" elements="515" classes="6" ncloc="747" statements="409" conditionals="8" coveredstatements="400"/>
            <class name="ControlFlowGraphTest">
               <metrics coveredelements="446" complexity="87" methods="86" testruns="80" statements="370" coveredconditionals="2" coveredmethods="83" elements="458" testfailures="3" testduration="0.11600000000000006" conditionals="2" coveredstatements="361" testpasses="77"/>
            </class>
            <class name="ControlFlowGraphTest.BlockAssert">
               <metrics coveredelements="45" coveredconditionals="6" complexity="10" coveredmethods="7" methods="7" elements="45" statements="32" conditionals="6" coveredstatements="32"/>
            </class>
            <class name="ControlFlowGraphTest.TestedCfg">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ControlFlowGraphTest.BlockFirstTree">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ControlFlowGraphTest.TreeTokenIndex">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ControlFlowGraphTest.TreeSourceLength">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="no_block() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="single_basic_block() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_statement() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_statements() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_then() : void" num="92" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_then_else() : void" num="99" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nested_if() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_statement() : void" num="117" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_statement_with_expression() : void" num="131" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="while_loop() : void" num="136" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="do_while_loop() : void" num="144" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_while() : void" num="153" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_in_while() : void" num="163" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_do_while() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_with_label() : void" num="182" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_with_invalid_label() : void" num="191" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_outside_loop() : void" num="198" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_in_do_while() : void" num="205" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_with_label() : void" num="214" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_block() : void" num="223" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_without_block() : void" num="232" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_with_invalid_label() : void" num="239" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_loop() : void" num="246" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_with_no_init() : void" num="255" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_with_no_update() : void" num="263" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_with_no_condition() : void" num="271" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="infinite_for() : void" num="279" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_infinite_for() : void" num="287" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_for() : void" num="295" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_in_for() : void" num="306" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_in() : void" num="317" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_for_in() : void" num="329" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_of() : void" num="338" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_catch() : void" num="345" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="347" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_finally() : void" num="354" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throw_without_try() : void" num="362" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throw_in_try() : void" num="370" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throw_in_catch() : void" num="381" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_in_catch() : void" num="393" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_switch() : void" num="403" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="switch_with_no_break() : void" num="409" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="switch_with_break() : void" num="420" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="switch_with_adjacent_cases() : void" num="431" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="switch_with_case_after_default() : void" num="442" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="switch_with_case_using_same_block_as_default() : void" num="457" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="459" count="1" type="stmt"/>
            <line num="460" count="1" type="stmt"/>
            <line num="461" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_switch_in_loop() : void" num="467" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="469" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with() : void" num="477" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_declaration() : void" num="483" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator_declaration() : void" num="489" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_declaration() : void" num="495" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="497" count="1" type="stmt"/>
            <line num="498" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="debugger() : void" num="501" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_statement() : void" num="507" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="export_statement() : void" num="513" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="1" type="stmt"/>
            <line num="517" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="and_condition() : void" num="520" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line num="526" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="or_condition() : void" num="529" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment_with_one_and() : void" num="538" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="1" type="stmt"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment_with_two_ands() : void" num="546" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="548" count="1" type="stmt"/>
            <line num="549" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment_with_or() : void" num="555" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="1" type="stmt"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern_with_zero_element() : void" num="564" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern_with_two_elements() : void" num="570" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern_with_object_property() : void" num="576" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern_with_default_value() : void" num="582" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="584" count="1" type="stmt"/>
            <line num="585" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern_with_rest() : void" num="588" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="590" count="1" type="stmt"/>
            <line num="591" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern_with_nesting() : void" num="594" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="596" count="1" type="stmt"/>
            <line num="597" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern_with_zero_element() : void" num="600" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="602" count="1" type="stmt"/>
            <line num="603" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern() : void" num="606" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern_with_one_element_and_default_value() : void" num="612" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="614" count="1" type="stmt"/>
            <line num="615" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern_with_two_elements() : void" num="618" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="620" count="1" type="stmt"/>
            <line num="621" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern_with_one_element_and_short_notation() : void" num="624" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="626" count="1" type="stmt"/>
            <line num="627" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_binding_pattern() : void" num="630" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="632" count="1" type="stmt"/>
            <line num="633" count="1" type="stmt"/>
            <line num="635" count="1" type="stmt"/>
            <line num="636" count="1" type="stmt"/>
            <line num="638" count="1" type="stmt"/>
            <line num="639" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line num="644" count="1" type="stmt"/>
            <line num="645" count="1" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="648" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_binding_pattern() : void" num="651" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="653" count="1" type="stmt"/>
            <line num="654" count="1" type="stmt"/>
            <line num="656" count="1" type="stmt"/>
            <line num="657" count="1" type="stmt"/>
            <line num="659" count="1" type="stmt"/>
            <line num="660" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ternary() : void" num="663" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="665" count="1" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="667" count="1" type="stmt"/>
            <line num="668" count="1" type="stmt"/>
            <line num="669" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parenthesized_expression() : void" num="672" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="674" count="1" type="stmt"/>
            <line num="675" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="await_expression() : void" num="678" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="680" count="1" type="stmt"/>
            <line num="681" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable_declaration() : void" num="684" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="686" count="1" type="stmt"/>
            <line num="687" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_syntax() : void" num="690" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="692" count="1" type="stmt"/>
            <line num="693" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : void" num="697" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="699" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="701" count="1" type="stmt"/>
            <line num="702" count="1" type="stmt"/>
            <line num="703" count="1" type="stmt"/>
            <line num="704" count="1" type="stmt"/>
            <line num="705" count="1" type="stmt"/>
            <line num="706" count="1" type="stmt"/>
            <line num="707" count="1" type="stmt"/>
            <line num="708" count="1" type="stmt"/>
            <line num="709" count="1" type="stmt"/>
            <line num="710" count="1" type="stmt"/>
            <line num="711" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line num="714" count="1" type="stmt"/>
            <line num="715" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertExpressionElements(String,String) : void" num="718" count="22" type="method"/>
            <line num="719" count="22" type="stmt"/>
            <line num="720" count="22" type="stmt"/>
            <line num="721" count="22" type="stmt"/>
            <line num="722" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="unreachable_blocks() : void" num="725" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="727" count="1" type="stmt"/>
            <line num="728" count="1" type="stmt"/>
            <line num="729" count="1" type="stmt"/>
            <line num="730" count="1" type="stmt"/>
            <line num="731" count="1" type="stmt"/>
            <line num="732" count="1" type="stmt"/>
            <line num="733" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_disconnecting_jumps() : void" num="736" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="738" count="1" type="stmt"/>
            <line num="739" count="1" type="stmt"/>
            <line num="740" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_cfg() : void" num="743" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="745" count="1" type="stmt"/>
            <line num="746" count="1" type="stmt"/>
            <line num="747" count="1" type="stmt"/>
            <line num="748" count="1" type="stmt"/>
            <line num="749" count="1" type="stmt"/>
            <line num="750" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="build(String,int) : ControlFlowGraph" num="753" count="108" type="method"/>
            <line num="754" count="108" type="stmt"/>
            <line complexity="2" visibility="private" signature="build(String,int,int) : ControlFlowGraph" num="757" count="111" type="method"/>
            <line num="758" count="111" type="stmt"/>
            <line num="759" count="111" type="stmt"/>
            <line num="760" count="108" type="stmt"/>
            <line num="761" count="108" type="stmt"/>
            <line num="762" count="108" type="stmt"/>
            <line num="763" count="108" type="stmt"/>
            <line falsecount="2" truecount="106" num="763" type="cond"/>
            <line num="764" count="106" type="stmt"/>
            <line num="766" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertBlock(ControlFlowGraph,int) : BlockAssert" num="769" count="249" type="method"/>
            <line num="770" count="249" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlockAssert(ControlFlowGraph,int)" num="779" count="249" type="method"/>
            <line num="780" count="249" type="stmt"/>
            <line num="781" count="249" type="stmt"/>
            <line num="782" count="249" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasBranchingTree(Kind) : BlockAssert" num="785" count="14" type="method"/>
            <line num="786" count="14" type="stmt"/>
            <line num="787" count="14" type="stmt"/>
            <line num="788" count="14" type="stmt"/>
            <line num="789" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasSuccessors(int) : BlockAssert" num="792" count="202" type="method"/>
            <line num="793" count="202" type="stmt"/>
            <line num="794" count="202" type="stmt"/>
            <line num="795" count="272" type="stmt"/>
            <line num="798" count="202" type="stmt"/>
            <line num="799" count="202" type="stmt"/>
            <line num="800" count="272" type="stmt"/>
            <line num="803" count="202" type="stmt"/>
            <line num="805" count="202" type="stmt"/>
            <line falsecount="132" truecount="70" num="805" type="cond"/>
            <line num="806" count="70" type="stmt"/>
            <line num="808" count="70" type="stmt"/>
            <line num="812" count="202" type="stmt"/>
            <line complexity="2" visibility="private" signature="expectedBlockId(int) : String" num="815" count="412" type="method"/>
            <line num="816" count="412" type="stmt"/>
            <line falsecount="316" truecount="96" num="816" type="cond"/>
            <line complexity="2" visibility="private" signature="actualBlockId(CfgBlock) : String" num="819" count="412" type="method"/>
            <line num="820" count="412" type="stmt"/>
            <line falsecount="316" truecount="96" num="820" type="cond"/>
            <line complexity="1" visibility="public" signature="hasElements(String) : BlockAssert" num="823" count="105" type="method"/>
            <line num="824" count="105" type="stmt"/>
            <line num="825" count="105" type="stmt"/>
            <line num="826" count="105" type="stmt"/>
            <line num="827" count="105" type="stmt"/>
            <line num="828" count="238" type="stmt"/>
            <line num="830" count="105" type="stmt"/>
            <line num="832" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDisconnectingJumps(String) : BlockAssert" num="835" count="2" type="method"/>
            <line num="836" count="2" type="stmt"/>
            <line num="837" count="2" type="stmt"/>
            <line num="838" count="4" type="stmt"/>
            <line num="840" count="2" type="stmt"/>
            <line num="842" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestedCfg(ControlFlowGraph)" num="851" count="251" type="method"/>
            <line num="852" count="251" type="stmt"/>
            <line complexity="1" visibility="public" signature="block(int) : CfgBlock" num="855" count="465" type="method"/>
            <line num="856" count="465" type="stmt"/>
            <line complexity="1" visibility="private" signature="sortBlocks(ControlFlowGraph) : List&lt;CfgBlock&gt;" num="861" count="357" type="method"/>
            <line num="862" count="357" type="stmt"/>
            <line num="863" count="357" type="stmt"/>
            <line num="864" count="357" type="stmt"/>
            <line complexity="1" visibility="private" signature="blockOrdering() : Ordering&lt;CfgBlock&gt;" num="867" count="1" type="method"/>
            <line num="868" count="1" type="stmt"/>
            <line num="869" count="1" type="stmt"/>
            <line num="870" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(CfgBlock) : Tree" num="875" count="2890" type="method"/>
            <line num="877" count="2890" type="stmt"/>
            <line num="878" count="2890" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Tree) : Integer" num="885" count="2890" type="method"/>
            <line num="887" count="2890" type="stmt"/>
            <line num="888" count="2890" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Tree) : Integer" num="895" count="20" type="method"/>
            <line num="897" count="20" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.expression">
         <metrics coveredelements="494" complexity="99" loc="1691" methods="99" classes="25" statements="395" coveredconditionals="0" coveredmethods="99" elements="494" ncloc="908" files="25" conditionals="0" coveredstatements="395"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ArgumentsTreeModelTest.java" name="ArgumentsTreeModelTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="2" loc="63" coveredmethods="2" methods="2" elements="17" classes="1" ncloc="29" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="ArgumentsTreeModelTest">
               <metrics coveredelements="17" complexity="2" methods="2" testruns="2" statements="15" coveredconditionals="0" coveredmethods="2" elements="17" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="arguments() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_arguments() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ArrayLiteralTreeModelTest.java" name="ArrayLiteralTreeModelTest.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="4" loc="111" coveredmethods="4" methods="4" elements="43" classes="1" ncloc="59" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="ArrayLiteralTreeModelTest">
               <metrics coveredelements="43" complexity="4" methods="4" testruns="4" statements="39" coveredconditionals="0" coveredmethods="4" elements="43" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="39" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="empty() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_trailing_comma_at_the_end() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_elided_elements_at_the_end() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_elided_elements_in_the_middle() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ArrowFunctionTreeModelTest.java" name="ArrowFunctionTreeModelTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="7" loc="110" coveredmethods="7" methods="7" elements="47" classes="1" ncloc="72" statements="40" conditionals="0" coveredstatements="40"/>
            <class name="ArrowFunctionTreeModelTest">
               <metrics coveredelements="47" complexity="7" methods="7" testruns="7" statements="40" coveredconditionals="0" coveredmethods="7" elements="47" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="40" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="single_no_parenthesis_parameter_and_expression_body() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="single_no_parenthesis_parameter_and_block_body() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_parameters_and_expression_body() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multple_parameters_and_block_body() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterIdentifiers() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async() : void" num="93" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_typed() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/AssignmentExpressionTreeModelTest.java" name="AssignmentExpressionTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="AssignmentExpressionTreeModelTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="array_assignment_pattern() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/BinaryExpressionTreeModelTest.java" name="BinaryExpressionTreeModelTest.java">
            <metrics coveredelements="76" coveredconditionals="0" complexity="27" loc="193" coveredmethods="27" methods="27" elements="76" classes="1" ncloc="137" statements="49" conditionals="0" coveredstatements="49"/>
            <class name="BinaryExpressionTreeModelTest">
               <metrics coveredelements="76" complexity="27" methods="27" testruns="26" statements="49" coveredconditionals="0" coveredmethods="27" elements="76" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="49" testpasses="26"/>
            </class>
            <line complexity="1" visibility="public" signature="parent() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="conditional_or() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="conditional_and() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bitwise_or() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bitwise_and() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bitwise_xor() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equality_equal_to() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equality_not_equal_to() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equality_strict_equal_to() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equality_strict_not_equal_to() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relation_less_than() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relation_greater_than() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relation_less_or_equal_to() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relation_greater_or_equal_to() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relation_instance_of() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relation_in() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shift_left() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shift_right() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shift_unsigned_right() : void" num="122" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="additive_plus() : void" num="127" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="additive_minus() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiplicative_multiply() : void" num="137" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exponentiation_expression() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiplicative_divide() : void" num="163" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiplicative_remainder() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="comma() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="test_binary_expression(String,Kind,String) : void" num="178" count="24" type="method"/>
            <line num="179" count="24" type="stmt"/>
            <line num="181" count="24" type="stmt"/>
            <line num="182" count="24" type="stmt"/>
            <line num="183" count="24" type="stmt"/>
            <line num="184" count="24" type="stmt"/>
            <line num="186" count="24" type="stmt"/>
            <line num="188" count="24" type="stmt"/>
            <line num="189" count="24" type="stmt"/>
            <line num="190" count="24" type="stmt"/>
            <line num="191" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/CallExpressionTreeModelTest.java" name="CallExpressionTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="24" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="CallExpressionTreeModelTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_es_next() : void" num="46" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ClassExpressionTreeModelTest.java" name="ClassExpressionTreeModelTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="4" loc="73" coveredmethods="4" methods="4" elements="23" classes="1" ncloc="40" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="ClassExpressionTreeModelTest">
               <metrics coveredelements="23" complexity="4" methods="4" testruns="4" statements="19" coveredconditionals="0" coveredmethods="4" elements="23" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="19" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="with_name() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_name() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="extends_clause() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ComputedPropertyNameTreeModelTest.java" name="ComputedPropertyNameTreeModelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ComputedPropertyNameTreeModelTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ConditionalExpressionTreeModelTest.java" name="ConditionalExpressionTreeModelTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="50" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="23" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ConditionalExpressionTreeModelTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrow_function_operand() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/FunctionExpressionTreeModelTest.java" name="FunctionExpressionTreeModelTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="71" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="42" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="FunctionExpressionTreeModelTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="4" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="named() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_named() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async() : void" num="55" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_typed() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/GeneratorExpressionTreeModelTest.java" name="GeneratorExpressionTreeModelTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="2" loc="58" coveredmethods="2" methods="2" elements="17" classes="1" ncloc="31" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="GeneratorExpressionTreeModelTest">
               <metrics coveredelements="17" complexity="2" methods="2" testruns="2" statements="15" coveredconditionals="0" coveredmethods="2" elements="17" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="named() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_named() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/LiteralTreeModelTest.java" name="LiteralTreeModelTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="6" loc="80" coveredmethods="6" methods="6" elements="24" classes="1" ncloc="45" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="LiteralTreeModelTest">
               <metrics coveredelements="24" complexity="6" methods="6" testruns="6" statements="18" coveredconditionals="0" coveredmethods="6" elements="24" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="18" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="null_literal() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boolean_true_literal() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boolean_false_literal() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="numeric_literal() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_literal() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="regexp_literal() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/MemberExpressionTreeModelTest.java" name="MemberExpressionTreeModelTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="2" loc="60" coveredmethods="2" methods="2" elements="17" classes="1" ncloc="30" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="MemberExpressionTreeModelTest">
               <metrics coveredelements="17" complexity="2" methods="2" testruns="2" statements="15" coveredconditionals="0" coveredmethods="2" elements="17" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="dot_member_expression() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bracket_member_expression() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/NewExpressionTreeModelTest.java" name="NewExpressionTreeModelTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="5" loc="89" coveredmethods="5" methods="5" elements="35" classes="1" ncloc="54" statements="30" conditionals="0" coveredstatements="30"/>
            <class name="NewExpressionTreeModelTest">
               <metrics coveredelements="35" complexity="5" methods="5" testruns="5" statements="30" coveredconditionals="0" coveredmethods="5" elements="35" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="30" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="new_super_with_arguments() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="new_super_without_arguments() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="new_expression_with_arguments() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="new_expression_without_arguments() : void" num="62" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nested_new_expression_without_arguments() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/NewTargetModelTest.java" name="NewTargetModelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="NewTargetModelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_parse_new_target() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ObjectLiteralTreeModelTest.java" name="ObjectLiteralTreeModelTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="2" loc="65" coveredmethods="2" methods="2" elements="19" classes="1" ncloc="31" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="ObjectLiteralTreeModelTest">
               <metrics coveredelements="19" complexity="2" methods="2" testruns="2" statements="17" coveredconditionals="0" coveredmethods="2" elements="19" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="17" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_properties() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_property() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/PairPropertyTreeModelTest.java" name="PairPropertyTreeModelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="PairPropertyTreeModelTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/ParenthesisedExpressionTreeModelTest.java" name="ParenthesisedExpressionTreeModelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ParenthesisedExpressionTreeModelTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/PostfixExpressionTreeModelTest.java" name="PostfixExpressionTreeModelTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="50" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PostfixExpressionTreeModelTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="2" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="unary_increment() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_decrement() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="test_unary_expression(String,Kind,TokenType) : void" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/PrefixExpressionTreeModelTest.java" name="PrefixExpressionTreeModelTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="10" loc="86" coveredmethods="10" methods="10" elements="23" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="PrefixExpressionTreeModelTest">
               <metrics coveredelements="23" complexity="10" methods="10" testruns="9" statements="13" coveredconditionals="0" coveredmethods="10" elements="23" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="13" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="unary_delete() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_void() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_typeof() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_increment() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_decrement() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_plus() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_minus() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_bitwise_complement() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_logical_complement() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="test_unary_expression(String,Kind,TokenType) : void" num="79" count="9" type="method"/>
            <line num="80" count="9" type="stmt"/>
            <line num="82" count="9" type="stmt"/>
            <line num="83" count="9" type="stmt"/>
            <line num="84" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/RestElementTreeModelTest.java" name="RestElementTreeModelTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="RestElementTreeModelTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="binding_rest_element() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/SpreadElementTreeModelTest.java" name="SpreadElementTreeModelTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="SpreadElementTreeModelTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="spread_element() : void" num="32" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/TemplateExpressionTreeModelTest.java" name="TemplateExpressionTreeModelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TemplateExpressionTreeModelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/TemplateLiteralTreeModelTest.java" name="TemplateLiteralTreeModelTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="5" loc="82" coveredmethods="5" methods="5" elements="29" classes="1" ncloc="47" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="TemplateLiteralTreeModelTest">
               <metrics coveredelements="29" complexity="5" methods="5" testruns="5" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="24" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="with_substitution() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_substitution() : void" num="43" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_escape_and_expression() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_escaped_dollar() : void" num="67" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_escaped_backtick() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/YieldExpressionTreeModelTest.java" name="YieldExpressionTreeModelTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="3" loc="61" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="32" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="YieldExpressionTreeModelTest">
               <metrics coveredelements="18" complexity="3" methods="3" testruns="3" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="15" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="without_argument_star() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_star() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_star() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.se.points">
         <metrics coveredelements="327" complexity="63" loc="867" methods="62" classes="8" statements="263" coveredconditionals="2" coveredmethods="62" elements="327" ncloc="565" files="8" conditionals="2" coveredstatements="263"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/BitwiseBinaryProgramPointTest.java" name="BitwiseBinaryProgramPointTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="8" loc="86" coveredmethods="8" methods="8" elements="24" classes="1" ncloc="51" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="BitwiseBinaryProgramPointTest">
               <metrics coveredelements="24" complexity="8" methods="8" testruns="4" statements="16" coveredconditionals="0" coveredmethods="8" elements="24" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="4" type="method"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNumberPrimitiveFromTwoNumbers() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNumberPrimitiveFromUndefined() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNumberPrimitiveFromNaN() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchingTrees() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="undefined() : SymbolicValue" num="75" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="anyNumber() : SymbolicValue" num="79" count="4" type="method"/>
            <line num="80" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="nan() : SymbolicValue" num="83" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/IdentifierProgramPointTest.java" name="IdentifierProgramPointTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="4" loc="82" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="51" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="IdentifierProgramPointTest">
               <metrics coveredelements="28" complexity="4" methods="4" testruns="3" statements="24" coveredconditionals="0" coveredmethods="4" elements="28" testfailures="0" testduration="0.038" conditionals="0" coveredstatements="24" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="not_originated_from_undefined() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_not_tracked_variable() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_tracked_variable() : void" num="57" testsuccess="true" count="1" testduration="0.038" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifier(String) : IdentifierTree" num="74" count="3" type="method"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/LiteralProgramPointTest.java" name="LiteralProgramPointTest.java">
            <metrics coveredelements="76" coveredconditionals="2" complexity="14" loc="158" coveredmethods="13" methods="13" elements="76" classes="1" ncloc="110" statements="61" conditionals="2" coveredstatements="61"/>
            <class name="LiteralProgramPointTest">
               <metrics coveredelements="76" complexity="14" methods="13" testruns="8" statements="61" coveredconditionals="2" coveredmethods="13" elements="76" testfailures="0" testduration="0.007" conditionals="2" coveredstatements="61" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="numeric_literal() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="template_literal() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_literal() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boolean_literal() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="null_literal() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="undefined() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_literal() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_literal() : void" num="90" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="stackSize(Optional&lt;ProgramState&gt;) : int" num="135" count="2" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="resultingConstraint(Optional&lt;ProgramState&gt;) : Constraint" num="139" count="13" type="method"/>
            <line num="140" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="resultingValue(Optional&lt;ProgramState&gt;) : SymbolicValue" num="143" count="15" type="method"/>
            <line num="144" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="createProgramState(int) : ProgramState" num="147" count="10" type="method"/>
            <line num="148" count="10" type="stmt"/>
            <line num="149" count="10" type="stmt"/>
            <line falsecount="10" truecount="22" num="149" type="cond"/>
            <line num="150" count="22" type="stmt"/>
            <line num="152" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="tree(String,Kind) : Tree" num="155" count="15" type="method"/>
            <line num="156" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/MemberProgramPointTest.java" name="MemberProgramPointTest.java">
            <metrics coveredelements="37" coveredconditionals="0" complexity="6" loc="107" coveredmethods="6" methods="6" elements="37" classes="1" ncloc="74" statements="31" conditionals="0" coveredstatements="31"/>
            <class name="MemberProgramPointTest">
               <metrics coveredelements="37" complexity="6" methods="6" testruns="5" statements="31" coveredconditionals="0" coveredmethods="6" elements="37" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="31" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="49" count="5" type="method"/>
            <line num="51" count="5" type="stmt"/>
            <line num="52" count="5" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="54" count="5" type="stmt"/>
            <line num="55" count="5" type="stmt"/>
            <line num="57" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line num="59" count="5" type="stmt"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnProgramStateWhenObjectIsDefined() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnNoProgramStateWhenObjectIsUndefinedOrNull() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoresArrayIndexValue() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchingTrees() : void" num="91" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fillStackWithResolvedDotMemberValue() : void" num="100" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/PlusProgramPointTest.java" name="PlusProgramPointTest.java">
            <metrics coveredelements="38" coveredconditionals="0" complexity="13" loc="121" coveredmethods="13" methods="13" elements="38" classes="1" ncloc="77" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="PlusProgramPointTest">
               <metrics coveredelements="38" complexity="13" methods="13" testruns="8" statements="25" coveredconditionals="0" coveredmethods="13" elements="38" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="25" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="8" type="method"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknownPlusUnknown() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknownPlusString() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknownPlusNumber() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringPlusNumber() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringPlusBoolean() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknownPlusBoolean() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="undefinedPlusNumber() : void" num="89" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchingTrees() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="anyBoolean() : SymbolicValue" num="106" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="anyString() : SymbolicValue" num="110" count="3" type="method"/>
            <line num="111" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="anyNumber() : SymbolicValue" num="114" count="3" type="method"/>
            <line num="115" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="undefined() : SymbolicValue" num="118" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/ProgramPointTest.java" name="ProgramPointTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="4" loc="64" coveredmethods="4" methods="4" elements="18" classes="1" ncloc="35" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ProgramPointTest">
               <metrics coveredelements="18" complexity="4" methods="4" testruns="1" statements="14" coveredconditionals="0" coveredmethods="4" elements="18" testfailures="0" testduration="2.576" conditionals="0" coveredstatements="14" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_factory() : void" num="35" testsuccess="true" count="1" testduration="2.576" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tree(Kind) : Tree" num="46" count="26" type="method"/>
            <line num="47" count="26" type="stmt"/>
            <line num="48" count="26" type="stmt"/>
            <line num="50" count="26" type="stmt"/>
            <line complexity="1" visibility="private" signature="postfixIncrementTree() : PostfixExpressionTreeImpl" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execution() : SymbolicExecution" num="60" count="25" type="method"/>
            <line num="61" count="25" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/StrictlyArithmeticBinaryProgramPointTest.java" name="StrictlyArithmeticBinaryProgramPointTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="6" loc="76" coveredmethods="6" methods="6" elements="20" classes="1" ncloc="44" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="StrictlyArithmeticBinaryProgramPointTest">
               <metrics coveredelements="20" complexity="6" methods="6" testruns="3" statements="14" coveredconditionals="0" coveredmethods="6" elements="20" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNumberPrimitiveFromTwoNumbers() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNaNFromOneUndefined() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchingTrees() : void" num="58" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="undefined() : SymbolicValue" num="69" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="anyNumber() : SymbolicValue" num="73" count="3" type="method"/>
            <line num="74" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/se/points/UnaryNumericProgramPointTest.java" name="UnaryNumericProgramPointTest.java">
            <metrics coveredelements="86" coveredconditionals="0" complexity="8" loc="173" coveredmethods="8" methods="8" elements="86" classes="1" ncloc="123" statements="78" conditionals="0" coveredstatements="78"/>
            <class name="UnaryNumericProgramPointTest">
               <metrics coveredelements="86" complexity="8" methods="8" testruns="6" statements="78" coveredconditionals="0" coveredmethods="8" elements="86" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="78" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="unary_plus() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_minus() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefix_increment() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefix_decrement() : void" num="106" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="postfix_increment() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="postfix_decrement() : void" num="137" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="tree(String,Kind) : UnaryExpressionTree" num="153" count="6" type="method"/>
            <line num="154" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="execute(UnaryExpressionTree,Constraint) : void" num="157" count="16" type="method"/>
            <line num="158" count="16" type="stmt"/>
            <line num="159" count="16" type="stmt"/>
            <line num="160" count="16" type="stmt"/>
            <line num="162" count="16" type="stmt"/>
            <line num="163" count="16" type="stmt"/>
            <line num="164" count="16" type="stmt"/>
            <line num="166" count="16" type="stmt"/>
            <line num="167" count="16" type="stmt"/>
            <line num="168" count="16" type="stmt"/>
            <line num="170" count="16" type="stmt"/>
            <line num="171" count="16" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.statement">
         <metrics coveredelements="319" complexity="48" loc="1289" methods="48" classes="24" statements="271" coveredconditionals="0" coveredmethods="48" elements="319" ncloc="631" files="24" conditionals="0" coveredstatements="271"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/BlockTreeModelTest.java" name="BlockTreeModelTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="3" loc="63" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="33" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="BlockTreeModelTest">
               <metrics coveredelements="17" complexity="3" methods="3" testruns="3" statements="14" coveredconditionals="0" coveredmethods="3" elements="17" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="without_statements() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_statements_within_statement() : void" num="43" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statements() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/BreakStatementTreeModelTest.java" name="BreakStatementTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="25" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="BreakStatementTreeModelTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_label() : void" num="32" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_label() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/CaseClauseTreeModelTest.java" name="CaseClauseTreeModelTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="2" loc="58" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="28" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="CaseClauseTreeModelTest">
               <metrics coveredelements="16" complexity="2" methods="2" testruns="2" statements="14" coveredconditionals="0" coveredmethods="2" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="without_statements() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statements() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/CatchBlockTreeModelTest.java" name="CatchBlockTreeModelTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="2" loc="61" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="30" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="CatchBlockTreeModelTest">
               <metrics coveredelements="16" complexity="2" methods="2" testruns="2" statements="14" coveredconditionals="0" coveredmethods="2" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/ContinueStatementTreeModelTest.java" name="ContinueStatementTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="25" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="ContinueStatementTreeModelTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_label() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_label() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/DebuggerStatementTreeModelTest.java" name="DebuggerStatementTreeModelTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="DebuggerStatementTreeModelTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/DefaultClauseTreeModelTest.java" name="DefaultClauseTreeModelTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="26" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="DefaultClauseTreeModelTest">
               <metrics coveredelements="14" complexity="2" methods="2" testruns="2" statements="12" coveredconditionals="0" coveredmethods="2" elements="14" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="without_statements() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statements() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/DoWhileStatementTreeModelTest.java" name="DoWhileStatementTreeModelTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="47" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="22" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="DoWhileStatementTreeModelTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/ElseClauseTreeModelTest.java" name="ElseClauseTreeModelTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ElseClauseTreeModelTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/EmptyStatementTreeModelTest.java" name="EmptyStatementTreeModelTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="EmptyStatementTreeModelTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="empty_statement() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/ForObjectStatementTreeModelTest.java" name="ForObjectStatementTreeModelTest.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="3" loc="74" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="46" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="ForObjectStatementTreeModelTest">
               <metrics coveredelements="30" complexity="3" methods="3" testruns="3" statements="27" coveredconditionals="0" coveredmethods="3" elements="30" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="27" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="for_in() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_of() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_await() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/ForStatementTreeModelTest.java" name="ForStatementTreeModelTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="66" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="38" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="ForStatementTreeModelTest">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="4" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : void" num="54" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="update() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/IfStatementTreeModelTest.java" name="IfStatementTreeModelTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="3" loc="67" coveredmethods="3" methods="3" elements="21" classes="1" ncloc="37" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="IfStatementTreeModelTest">
               <metrics coveredelements="21" complexity="3" methods="3" testruns="3" statements="18" coveredconditionals="0" coveredmethods="3" elements="21" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="18" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="without_else() : void" num="33" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_else() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasElse() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/LabelledStatementTreeModelTest.java" name="LabelledStatementTreeModelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="LabelledStatementTreeModelTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/ReturnStatementTreeModelTest.java" name="ReturnStatementTreeModelTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="25" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="ReturnStatementTreeModelTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_expression() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_expression() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/SemicolonTest.java" name="SemicolonTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="SemicolonTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_semicolon() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="without_semicolon() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/SwitchClauseTreeModelTest.java" name="SwitchClauseTreeModelTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="22" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="SwitchClauseTreeModelTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="case_clause() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="default_clause() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/SwitchStatementTreeModelTest.java" name="SwitchStatementTreeModelTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="2" loc="64" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="33" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="SwitchStatementTreeModelTest">
               <metrics coveredelements="22" complexity="2" methods="2" testruns="2" statements="20" coveredconditionals="0" coveredmethods="2" elements="22" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="20" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="without_case() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_cases() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/ThrowStatementTreeModelTest.java" name="ThrowStatementTreeModelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ThrowStatementTreeModelTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/TryStatementTreeModelTest.java" name="TryStatementTreeModelTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="69" coveredmethods="3" methods="3" elements="23" classes="1" ncloc="38" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="TryStatementTreeModelTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="3" statements="20" coveredconditionals="0" coveredmethods="3" elements="23" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="20" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="try_catch() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_finally() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_catch_finally() : void" num="57" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/VariableDeclarationTreeModelTest.java" name="VariableDeclarationTreeModelTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="3" loc="65" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="36" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="VariableDeclarationTreeModelTest">
               <metrics coveredelements="20" complexity="3" methods="3" testruns="3" statements="17" coveredconditionals="0" coveredmethods="3" elements="20" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="17" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="single_declaration() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_declarations() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bindingIdentifiers() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/VariableStatementTreeModelTest.java" name="VariableStatementTreeModelTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="59" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="31" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="VariableStatementTreeModelTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="3" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="12" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="single_declaration() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_declarations() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="trailing_comma() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/WhileStatementTreeModelTest.java" name="WhileStatementTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="WhileStatementTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/statement/WithStatementTreeModelTest.java" name="WithStatementTreeModelTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="WithStatementTreeModelTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.symbols">
         <metrics coveredelements="416" complexity="75" loc="865" methods="61" classes="5" statements="330" coveredconditionals="26" coveredmethods="61" elements="417" ncloc="624" files="5" conditionals="26" coveredstatements="329"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/GlobalVariableNamesTest.java" name="GlobalVariableNamesTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="57" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="GlobalVariableNamesTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test_default_do_not_intersect() : void" num="35" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/LinkToSymbolFromTreeTest.java" name="LinkToSymbolFromTreeTest.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="4" loc="95" coveredmethods="4" methods="4" elements="31" classes="1" ncloc="63" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="LinkToSymbolFromTreeTest">
               <metrics coveredelements="31" complexity="4" methods="4" testruns="3" statements="27" coveredconditionals="0" coveredmethods="4" elements="31" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="27" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="48" count="3" type="method"/>
            <line num="50" count="3" type="stmt"/>
            <line num="51" count="3" type="stmt"/>
            <line num="52" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="built_ins() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/ScopeTest.java" name="ScopeTest.java">
            <metrics coveredelements="173" coveredconditionals="4" complexity="26" loc="325" coveredmethods="24" methods="24" elements="174" classes="1" ncloc="241" statements="146" conditionals="4" coveredstatements="145"/>
            <class name="ScopeTest">
               <metrics coveredelements="173" complexity="26" methods="24" testruns="22" statements="146" coveredconditionals="4" coveredmethods="24" elements="174" testfailures="0" testduration="0.001" conditionals="4" coveredstatements="145" testpasses="22"/>
            </class>
            <line complexity="2" visibility="private" signature="scopeAtLine(int) : Scope" num="40" count="29" type="method"/>
            <line num="41" count="29" type="stmt"/>
            <line num="42" count="384" type="stmt"/>
            <line falsecount="355" truecount="29" num="42" type="cond"/>
            <line num="43" count="29" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="symbols(Scope) : Set&lt;String&gt;" num="49" count="21" type="method"/>
            <line num="50" count="21" type="stmt"/>
            <line num="51" count="21" type="stmt"/>
            <line num="52" count="104" type="stmt"/>
            <line falsecount="69" truecount="35" num="52" type="cond"/>
            <line num="53" count="35" type="stmt"/>
            <line num="56" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="scopes_number() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_global_scope() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_function_scope() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_inner_function() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_try() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_catch() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_finally() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_while() : void" num="129" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_do_while() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_for_of() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_for_in() : void" num="162" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_for() : void" num="172" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_if() : void" num="182" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_else() : void" num="192" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_switch() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_generator() : void" num="212" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_class() : void" num="222" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_methods() : void" num="232" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_arrow_function() : void" num="258" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_this_symbol() : void" num="279" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_identifier_scope() : void" num="303" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="305" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="3" type="stmt"/>
            <line num="315" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_global_function_declaration_in_block() : void" num="319" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/SymbolModelImplTest.java" name="SymbolModelImplTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="10" loc="110" coveredmethods="10" methods="10" elements="40" classes="1" ncloc="76" statements="30" conditionals="0" coveredstatements="30"/>
            <class name="SymbolModelImplTest">
               <metrics coveredelements="40" complexity="10" methods="10" testruns="9" statements="30" coveredconditionals="0" coveredmethods="10" elements="40" testfailures="0" testduration="0.07" conditionals="0" coveredstatements="30" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="symbols_filtering() : void" num="41" testsuccess="true" count="1" testduration="0.052" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbols_scope() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_object_loops() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="override_symbol_kind() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="environment() : void" num="74" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_variable() : void" num="81" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flowed_let() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="destructuring_let() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_interface() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="config(String,String) : Configuration" num="104" count="5" type="method"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line num="107" count="5" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/symbols/UsageTest.java" name="UsageTest.java">
            <metrics coveredelements="164" coveredconditionals="22" complexity="34" loc="278" coveredmethods="22" methods="22" elements="164" classes="1" ncloc="214" statements="120" conditionals="22" coveredstatements="120"/>
            <class name="UsageTest">
               <metrics coveredelements="164" complexity="34" methods="22" testruns="18" statements="120" coveredconditionals="22" coveredmethods="22" elements="164" testfailures="0" testduration="0.008" conditionals="22" coveredstatements="120" testpasses="18"/>
            </class>
            <line complexity="2" visibility="public" signature="global_symbols() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="47" type="cond"/>
            <line num="48" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_build_in_symbols() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="arguments_build_in_symbol() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="63" type="cond"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="function_symbols() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="78" type="cond"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_expression_symbols() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="catch_block_symbols() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="usage_type() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="103" type="cond"/>
            <line num="104" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="105" type="cond"/>
            <line num="106" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="106" type="cond"/>
            <line num="107" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="107" type="cond"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="block_scope_variables() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="123" type="cond"/>
            <line num="124" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="let_variable_for_loop() : void" num="140" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="149" type="cond"/>
            <line num="150" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="let_variable_in_for() : void" num="171" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertDeclarationIsWrite(Symbol) : void" num="182" count="2" type="method"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="184" type="cond"/>
            <line num="185" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="let_variable_in_for_without_block() : void" num="190" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="let_variable_cannot_be_used_before_it_is_declared() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="let_variable_is_hoisted() : void" num="214" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="imported_symbols() : void" num="223" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usage_in_string_template() : void" num="236" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usage_flow_namespace_type() : void" num="242" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_generic_type_in_func_declaration() : void" num="249" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_generic_type_in_type_declaration() : void" num="256" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertImported(String,boolean) : void" num="263" count="7" type="method"/>
            <line num="264" count="7" type="stmt"/>
            <line num="265" count="7" type="stmt"/>
            <line num="266" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="266" type="cond"/>
            <line num="267" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="usagesFor(String) : Collection&lt;Usage&gt;" num="270" count="8" type="method"/>
            <line num="271" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbol(String) : Symbol" num="274" count="24" type="method"/>
            <line num="275" count="24" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl.expression.jsx">
         <metrics coveredelements="77" complexity="5" loc="152" methods="5" classes="1" statements="72" coveredconditionals="0" coveredmethods="5" elements="77" ncloc="101" files="1" conditionals="0" coveredstatements="72"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/expression/jsx/JsxElementTreeModelTest.java" name="JsxElementTreeModelTest.java">
            <metrics coveredelements="77" coveredconditionals="0" complexity="5" loc="152" coveredmethods="5" methods="5" elements="77" classes="1" ncloc="101" statements="72" conditionals="0" coveredstatements="72"/>
            <class name="JsxElementTreeModelTest">
               <metrics coveredelements="77" complexity="5" methods="5" testruns="5" statements="72" coveredconditionals="0" coveredmethods="5" elements="77" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="72" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="self_closing() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="standard() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="complex_tag_name() : void" num="101" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="short_fragment_syntax() : void" num="109" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="element_name() : void" num="131" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.tree.impl">
         <metrics coveredelements="60" complexity="15" loc="201" methods="15" classes="3" statements="47" coveredconditionals="0" coveredmethods="14" elements="62" ncloc="127" files="2" conditionals="0" coveredstatements="46"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/FunctionTreeImplTest.java" name="FunctionTreeImplTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="FunctionTreeImplTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.009" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_return_outer_scope_symbol_usages() : void" num="36" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/tree/impl/JavaScriptTreeTest.java" name="JavaScriptTreeTest.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="14" loc="156" coveredmethods="13" methods="14" elements="56" classes="2" ncloc="106" statements="42" conditionals="0" coveredstatements="41"/>
            <class name="JavaScriptTreeTest">
               <metrics coveredelements="43" complexity="10" methods="10" testruns="8" statements="33" coveredconditionals="0" coveredmethods="10" elements="43" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="33" testpasses="8"/>
            </class>
            <class name="JavaScriptTreeTest.TestChildTree">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="45" count="8" type="method"/>
            <line num="47" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="is_leaf() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get_kind() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get_first_token() : void" num="61" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get_last_token() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="to_string() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_descendants_in_token() : void" num="82" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants_include_all_immediate_children() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants_include_children_of_children() : void" num="97" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTree() : JavaScriptTree" num="107" count="8" type="method"/>
            <line num="110" count="8" type="stmt"/>
            <line num="111" count="8" type="stmt"/>
            <line num="113" count="8" type="stmt"/>
            <line num="114" count="8" type="stmt"/>
            <line num="115" count="8" type="stmt"/>
            <line num="116" count="8" type="stmt"/>
            <line num="117" count="8" type="stmt"/>
            <line num="118" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="childrenIterator() : Iterator&lt;Tree&gt;" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstToken() : SyntaxToken" num="134" count="1" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastToken() : SyntaxToken" num="142" count="2" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="149" count="2" type="method"/>
            <line num="151" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.expressions.jsx">
         <metrics coveredelements="20" complexity="10" loc="321" methods="10" classes="7" statements="10" coveredconditionals="0" coveredmethods="10" elements="20" ncloc="143" files="7" conditionals="0" coveredstatements="10"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxClosingElementTest.java" name="JsxClosingElementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JsxClosingElementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxElementTest.java" name="JsxElementTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="75" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="47" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="JsxElementTest">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="4" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="4" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="standard() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="self_closing() : void" num="43" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="element_name() : void" num="53" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="short_fragment_syntax() : void" num="64" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxIdentifierTest.java" name="JsxIdentifierTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="49" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="24" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JsxIdentifierTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxOpeningElementTest.java" name="JsxOpeningElementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JsxOpeningElementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxSpreadAttributeTest.java" name="JsxSpreadAttributeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JsxSpreadAttributeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxStandardAttributeTest.java" name="JsxStandardAttributeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JsxStandardAttributeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.013" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/jsx/JsxTextTest.java" name="JsxTextTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JsxTextTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.expressions">
         <metrics coveredelements="79" complexity="39" loc="1033" methods="39" classes="21" statements="40" coveredconditionals="0" coveredmethods="39" elements="79" ncloc="482" files="21" conditionals="0" coveredstatements="40"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ArgumentsTest.java" name="ArgumentsTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="18" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArgumentsTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ArrayAssignmentPatternTest.java" name="ArrayAssignmentPatternTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="46" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="22" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayAssignmentPatternTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ArrayInitializerElementTest.java" name="ArrayInitializerElementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayInitializerElementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ArrayLiteralTest.java" name="ArrayLiteralTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="53" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="27" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayLiteralTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ArrowFunctionTest.java" name="ArrowFunctionTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="62" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="34" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ArrowFunctionTest">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="4" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.9710000000000001" conditionals="0" coveredstatements="4" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="31" testsuccess="true" count="1" testduration="0.924" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_function() : void" num="40" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_function_from_script() : void" num="49" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="56" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/AssignmentExpressionTest.java" name="AssignmentExpressionTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="67" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="39" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="AssignmentExpressionTest">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="4" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="4" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="40" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array_assignment_pattern() : void" num="46" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object_assignment_pattern() : void" num="57" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/CallExpressionTest.java" name="CallExpressionTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="54" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="27" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CallExpressionTest">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="3" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="4" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="real_life() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_ES_next() : void" num="49" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ClassElementTest.java" name="ClassElementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="67" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="34" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ClassElementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.013000000000000001" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="properties() : void" num="40" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ClassExpressionTest.java" name="ClassExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ClassExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_decorator() : void" num="37" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ConditionalExpressionTest.java" name="ConditionalExpressionTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="18" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConditionalExpressionTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ExpressionTest.java" name="ExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/FunctionExpressionTest.java" name="FunctionExpressionTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="52" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="27" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="FunctionExpressionTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_function() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_function_from_script() : void" num="46" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/GeneratorExpressionTest.java" name="GeneratorExpressionTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GeneratorExpressionTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/IdentifierNameTest.java" name="IdentifierNameTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IdentifierNameTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/MemberExpressionTest.java" name="MemberExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="57" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="29" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MemberExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="new_target() : void" num="50" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ObjectAssignmentPatternTest.java" name="ObjectAssignmentPatternTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="19" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ObjectAssignmentPatternTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/ObjectLiteralTest.java" name="ObjectLiteralTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="66" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="37" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ObjectLiteralTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_keywords_as_identifiers() : void" num="46" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="property_with_decorator() : void" num="56" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/PostfixExpressionTest.java" name="PostfixExpressionTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PostfixExpressionTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/PrimaryExpressionTest.java" name="PrimaryExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="55" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="29" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="PrimaryExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_special_words_as_identifiers() : void" num="45" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/UnaryExpressionTest.java" name="UnaryExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="UnaryExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="await() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/YieldExpressionTest.java" name="YieldExpressionTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="YieldExpressionTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.declarations.module">
         <metrics coveredelements="45" complexity="17" loc="572" methods="17" classes="11" statements="28" coveredconditionals="0" coveredmethods="17" elements="45" ncloc="268" files="11" conditionals="0" coveredstatements="28"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ExportDeclarationTest.java" name="ExportDeclarationTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="80" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="39" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ExportDeclarationTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="61" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="63" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ExportListTest.java" name="ExportListTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ExportListTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ExportSpecifierTest.java" name="ExportSpecifierTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ExportSpecifierTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/FromClauseTest.java" name="FromClauseTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FromClauseTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ImportClauseTest.java" name="ImportClauseTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ImportClauseTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ImportDeclarationTest.java" name="ImportDeclarationTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="56" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="30" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ImportDeclarationTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_flow() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ImportListTest.java" name="ImportListTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ImportListTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ImportSpecifierTest.java" name="ImportSpecifierTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ImportSpecifierTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ModuleItemTest.java" name="ModuleItemTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ModuleItemTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/NamedExportDeclarationTest.java" name="NamedExportDeclarationTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NamedExportDeclarationTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/module/ScriptTest.java" name="ScriptTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="4" loc="130" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="93" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="ScriptTest">
               <metrics coveredelements="19" complexity="4" methods="4" testruns="4" statements="15" coveredconditionals="0" coveredmethods="4" elements="19" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="15" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="simple_script() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="vue_file() : void" num="39" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="vue_file_with_script_section_language() : void" num="91" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="vue_file_with_custom_sections() : void" num="106" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.declarations">
         <metrics coveredelements="20" complexity="10" loc="251" methods="10" classes="5" statements="10" coveredconditionals="0" coveredmethods="10" elements="20" ncloc="122" files="5" conditionals="0" coveredstatements="10"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/ClassDeclarationTest.java" name="ClassDeclarationTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="67" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="40" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ClassDeclarationTest">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="4" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="4" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_properties() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_decorators() : void" num="48" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow() : void" num="60" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/DecoratorTest.java" name="DecoratorTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="18" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DecoratorTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/FunctionDeclarationTest.java" name="FunctionDeclarationTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FunctionDeclarationTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_function() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/MethodDefinitionTest.java" name="MethodDefinitionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="60" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="31" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MethodDefinitionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_method() : void" num="52" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/declarations/PropertyNameTest.java" name="PropertyNameTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="PropertyNameTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.expressions.TemplateLiteral">
         <metrics coveredelements="4" complexity="2" loc="57" methods="2" classes="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" ncloc="26" files="1" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/TemplateLiteral/TemplateLiteralTest.java" name="TemplateLiteralTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="57" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TemplateLiteralTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="real_life() : void" num="51" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="53" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.expressions.destructuring">
         <metrics coveredelements="8" complexity="4" loc="177" methods="4" classes="4" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" ncloc="76" files="4" conditionals="0" coveredstatements="4"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/destructuring/ArrayBindingPatternTest.java" name="ArrayBindingPatternTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="50" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="25" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ArrayBindingPatternTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/destructuring/BindingElementTest.java" name="BindingElementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BindingElementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/destructuring/BindingPatternTest.java" name="BindingPatternTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BindingPatternTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/expressions/destructuring/ObjectBindingPatternTest.java" name="ObjectBindingPatternTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="51" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="25" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ObjectBindingPatternTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.flow">
         <metrics coveredelements="52" complexity="26" loc="1028" methods="26" classes="24" statements="26" coveredconditionals="0" coveredmethods="26" elements="52" ncloc="448" files="24" conditionals="0" coveredstatements="26"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowArrayTypeTest.java" name="FlowArrayTypeTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FlowArrayTypeTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="with_keyword() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shorthand() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowDeclareTest.java" name="FlowDeclareTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="52" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="28" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowDeclareTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowFunctionTypeTest.java" name="FlowFunctionTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowFunctionTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowGenericParameterClauseTest.java" name="FlowGenericParameterClauseTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowGenericParameterClauseTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowGenericParameterTest.java" name="FlowGenericParameterTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowGenericParameterTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowImplementsClauseTest.java" name="FlowImplementsClauseTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowImplementsClauseTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowInterfaceDeclarationTest.java" name="FlowInterfaceDeclarationTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowInterfaceDeclarationTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowIntersectionTypeTest.java" name="FlowIntersectionTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowIntersectionTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowLiteralTypeTest.java" name="FlowLiteralTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="47" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="22" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowLiteralTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowModuleExportsTest.java" name="FlowModuleExportsTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowModuleExportsTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowModuleTest.java" name="FlowModuleTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowModuleTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowNamespacedTypeTest.java" name="FlowNamespacedTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowNamespacedTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowObjectTypeTest.java" name="FlowObjectTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowObjectTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowOptionalTypeTest.java" name="FlowOptionalTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowOptionalTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowParameterizedGenericsTest.java" name="FlowParameterizedGenericsTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowParameterizedGenericsTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowParenthesisedTypeTest.java" name="FlowParenthesisedTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowParenthesisedTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowPropertyDefinitionTest.java" name="FlowPropertyDefinitionTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="58" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="30" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowPropertyDefinitionTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowSimpleTypeTest.java" name="FlowSimpleTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="46" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="22" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowSimpleTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowTupleTypeTest.java" name="FlowTupleTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="18" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowTupleTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowTypeAliasStatementTest.java" name="FlowTypeAliasStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="19" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowTypeAliasStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowTypeTest.java" name="FlowTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="utility_types() : void" num="30" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowTypedBindingElementTest.java" name="FlowTypedBindingElementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="50" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FlowTypedBindingElementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="from_typed_binding_element() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_binding_element() : void" num="40" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowTypeofTypeTest.java" name="FlowTypeofTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowTypeofTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/flow/FlowUnionTypeTest.java" name="FlowUnionTypeTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FlowUnionTypeTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.lexical">
         <metrics coveredelements="23" complexity="9" loc="407" methods="9" classes="8" statements="14" coveredconditionals="0" coveredmethods="9" elements="23" ncloc="188" files="8" conditionals="0" coveredstatements="14"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/AutomaticSemicolonInsertionTest.java" name="AutomaticSemicolonInsertionTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="58" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="25" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="AutomaticSemicolonInsertionTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.013" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/BindingRestElementTest.java" name="BindingRestElementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BindingRestElementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/EndOfStatementNoLineBreakTest.java" name="EndOfStatementNoLineBreakTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="61" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="34" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EndOfStatementNoLineBreakTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/EndOfStatementTest.java" name="EndOfStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="60" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="33" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EndOfStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/IdentifierTest.java" name="IdentifierTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="18" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IdentifierTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/RegularExpressionLiteralTest.java" name="RegularExpressionLiteralTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="22" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RegularExpressionLiteralTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannot_contain_line_terminator() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/SpacingNoLineBreakTest.java" name="SpacingNoLineBreakTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="49" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="22" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SpacingNoLineBreakTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/lexical/SpacingTest.java" name="SpacingTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="52" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="23" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SpacingTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.utils">
         <metrics coveredelements="128" complexity="46" loc="446" methods="27" classes="6" statements="99" coveredconditionals="22" coveredmethods="25" elements="150" ncloc="284" files="5" conditionals="24" coveredstatements="81"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/utils/Assertions.java" name="Assertions.java">
            <metrics coveredelements="43" coveredconditionals="5" complexity="16" loc="136" coveredmethods="10" methods="10" elements="49" classes="2" ncloc="93" statements="33" conditionals="6" coveredstatements="28"/>
            <class name="Assertions">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="Assertions.ParserAssert">
               <metrics coveredelements="37" coveredconditionals="5" complexity="13" coveredmethods="7" methods="7" elements="43" statements="30" conditionals="6" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="assertThat(Rule) : RuleAssert" num="43" count="7" type="method"/>
            <line num="44" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThat(GrammarRuleKey) : ParserAssert" num="47" count="117" type="method"/>
            <line num="48" count="117" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThat(LexerlessGrammarBuilder,GrammarRuleKey) : ParserAssert" num="51" count="117" type="method"/>
            <line num="52" count="117" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParserAssert(ActionParser&lt;Tree&gt;)" num="63" count="117" type="method"/>
            <line num="64" count="117" type="stmt"/>
            <line complexity="3" visibility="private" signature="parseTillEof(String) : void" num="67" count="524" type="method"/>
            <line num="68" count="524" type="stmt"/>
            <line num="69" count="487" type="stmt"/>
            <line num="70" count="487" type="stmt"/>
            <line num="71" count="487" type="stmt"/>
            <line falsecount="486" truecount="1" num="71" type="cond"/>
            <line num="72" count="487" type="stmt"/>
            <line falsecount="480" truecount="7" num="72" type="cond"/>
            <line num="73" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="matches(String) : ParserAssert" num="78" count="480" type="method"/>
            <line num="79" count="480" type="stmt"/>
            <line num="80" count="480" type="stmt"/>
            <line num="81" count="480" type="stmt"/>
            <line num="82" count="480" type="stmt"/>
            <line num="83" count="480" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="480" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasTrailingWhitespaces(String) : boolean" num="91" count="480" type="method"/>
            <line num="92" count="480" type="stmt"/>
            <line complexity="2" visibility="public" signature="notMatches(String) : ParserAssert" num="95" count="44" type="method"/>
            <line num="96" count="44" type="stmt"/>
            <line num="97" count="44" type="stmt"/>
            <line num="98" count="44" type="stmt"/>
            <line num="101" count="44" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="matchesPrefix(String,String) : ParserAssert" num="113" count="3" type="method"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRuleName() : String" num="130" count="480" type="method"/>
            <line num="131" count="480" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/utils/JavaScriptTreeModelTest.java" name="JavaScriptTreeModelTest.java">
            <metrics coveredelements="44" coveredconditionals="10" complexity="16" loc="123" coveredmethods="8" methods="9" elements="50" classes="1" ncloc="81" statements="31" conditionals="10" coveredstatements="26"/>
            <class name="JavaScriptTreeModelTest">
               <metrics coveredelements="44" coveredconditionals="10" complexity="16" coveredmethods="8" methods="9" elements="50" statements="31" conditionals="10" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="protected" signature="parse(String,Kind) : T" num="52" count="300" type="method"/>
            <line num="54" count="300" type="stmt"/>
            <line num="55" count="300" type="stmt"/>
            <line num="56" count="300" type="stmt"/>
            <line complexity="1" visibility="protected" signature="parse(String,Kind,GrammarRuleKey) : T" num="59" count="32" type="method"/>
            <line num="61" count="32" type="stmt"/>
            <line num="62" count="32" type="stmt"/>
            <line num="63" count="32" type="stmt"/>
            <line complexity="2" visibility="protected" signature="symbolModel(InputFile) : SymbolModelImpl" num="66" count="49" type="method"/>
            <line num="67" count="49" type="stmt"/>
            <line num="68" count="49" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="parse(File) : ScriptTree" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="symbolModel(InputFile,Configuration) : SymbolModelImpl" num="83" count="54" type="method"/>
            <line num="84" count="54" type="stmt"/>
            <line num="85" count="54" type="stmt"/>
            <line complexity="1" visibility="protected" signature="context(InputFile) : JavaScriptVisitorContext" num="88" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getFirstDescendant(JavaScriptTree,Kind) : Tree" num="93" count="1698" type="method"/>
            <line num="94" count="1698" type="stmt"/>
            <line falsecount="1351" truecount="347" num="94" type="cond"/>
            <line num="95" count="347" type="stmt"/>
            <line num="97" count="1351" type="stmt"/>
            <line falsecount="1085" truecount="266" num="97" type="cond"/>
            <line num="98" count="266" type="stmt"/>
            <line num="100" count="1085" type="stmt"/>
            <line num="101" count="1085" type="stmt"/>
            <line falsecount="85" truecount="1683" num="101" type="cond"/>
            <line num="102" count="1683" type="stmt"/>
            <line num="103" count="1683" type="stmt"/>
            <line falsecount="332" truecount="1351" num="103" type="cond"/>
            <line num="104" count="1351" type="stmt"/>
            <line num="105" count="1351" type="stmt"/>
            <line falsecount="351" truecount="1000" num="105" type="cond"/>
            <line num="106" count="1000" type="stmt"/>
            <line num="110" count="85" type="stmt"/>
            <line complexity="1" visibility="protected" signature="expressionToString(Tree) : String" num="116" count="88" type="method"/>
            <line num="117" count="88" type="stmt"/>
            <line complexity="1" visibility="protected" signature="checkFullFidelity(Tree,String) : void" num="120" count="332" type="method"/>
            <line num="121" count="332" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/utils/LegacyParserTest.java" name="LegacyParserTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="20" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="LegacyParserTest">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="36" type="method"/>
            <line num="39" count="36" type="stmt"/>
            <line num="41" count="36" type="stmt"/>
            <line num="42" count="36" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/utils/SourceBuilder.java" name="SourceBuilder.java">
            <metrics coveredelements="29" coveredconditionals="7" complexity="7" loc="69" coveredmethods="3" methods="3" elements="31" classes="1" ncloc="43" statements="20" conditionals="8" coveredstatements="19"/>
            <class name="SourceBuilder">
               <metrics coveredelements="29" coveredconditionals="7" complexity="7" coveredmethods="3" methods="3" elements="31" statements="20" conditionals="8" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="build(Tree) : String" num="35" count="682" type="method"/>
            <line num="36" count="682" type="stmt"/>
            <line num="37" count="682" type="stmt"/>
            <line num="38" count="682" type="stmt"/>
            <line complexity="1" visibility="public" signature="nodesToVisit() : Set&lt;Kind&gt;" num="41" count="682" type="method"/>
            <line num="43" count="682" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitNode(Tree) : void" num="46" count="3659" type="method"/>
            <line num="48" count="3659" type="stmt"/>
            <line num="49" count="3659" type="stmt"/>
            <line num="50" count="3659" type="stmt"/>
            <line falsecount="3659" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="3659" type="stmt"/>
            <line falsecount="3658" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="53" type="cond"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="3659" type="stmt"/>
            <line num="60" count="3659" type="stmt"/>
            <line falsecount="3659" truecount="5089" num="60" type="cond"/>
            <line num="61" count="5089" type="stmt"/>
            <line num="62" count="5089" type="stmt"/>
            <line num="64" count="3659" type="stmt"/>
            <line num="65" count="3659" type="stmt"/>
            <line num="66" count="3659" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/utils/TestUtils.java" name="TestUtils.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="6" loc="73" coveredmethods="3" methods="4" elements="16" classes="1" ncloc="47" statements="12" conditionals="0" coveredstatements="5"/>
            <class name="TestUtils">
               <metrics coveredelements="8" coveredconditionals="0" complexity="6" coveredmethods="3" methods="4" elements="16" statements="12" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="2" visibility="public" signature="createContext(InputFile) : JavaScriptVisitorContext" num="42" count="32" type="method"/>
            <line num="43" count="32" type="stmt"/>
            <line num="44" count="32" type="stmt"/>
            <line num="45" count="32" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createTestInputFile(File,String,Charset) : DefaultInputFile" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestInputFile(String,String) : DefaultInputFile" num="62" count="113" type="method"/>
            <line num="63" count="113" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestInputFile(String) : DefaultInputFile" num="70" count="46" type="method"/>
            <line num="71" count="46" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.statements">
         <metrics coveredelements="46" complexity="23" loc="827" methods="23" classes="20" statements="23" coveredconditionals="0" coveredmethods="23" elements="46" ncloc="320" files="20" conditionals="0" coveredstatements="23"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/BreakStatementTest.java" name="BreakStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="51" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="24" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BreakStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/CaseClauseTest.java" name="CaseClauseTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CaseClauseTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/CatchTest.java" name="CatchTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CatchTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/ContinueStatementTest.java" name="ContinueStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="51" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="24" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ContinueStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/DebuggerStatementTest.java" name="DebuggerStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DebuggerStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/DefaultClauseTest.java" name="DefaultClauseTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DefaultClauseTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/DoWhileStatementTest.java" name="DoWhileStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="DoWhileStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/EmptyStatementTest.java" name="EmptyStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="EmptyStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/ExpressionStatementTest.java" name="ExpressionStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ExpressionStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/ForOfStatementTest.java" name="ForOfStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ForOfStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="async() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/ForStatementTest.java" name="ForStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ForStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/IterationStatementTest.java" name="IterationStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="IterationStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/LabelledStatementTest.java" name="LabelledStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="LabelledStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/ReturnStatementTest.java" name="ReturnStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="62" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="34" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ReturnStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="54" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="56" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/StatementTest.java" name="StatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/SwitchStatementTest.java" name="SwitchStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SwitchStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/ThrowStatementTest.java" name="ThrowStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="53" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="26" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ThrowStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/TryStatementTest.java" name="TryStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TryStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/VariableDeclarationStatementTest.java" name="VariableDeclarationStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="VariableDeclarationStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_keywords_as_identifiers() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/statements/WithStatementTest.java" name="WithStatementTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="WithStatementTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.javascript.parser.functions">
         <metrics coveredelements="12" complexity="4" loc="145" methods="4" classes="3" statements="8" coveredconditionals="0" coveredmethods="4" elements="12" ncloc="65" files="3" conditionals="0" coveredstatements="8"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/functions/FormalParameterListTest.java" name="FormalParameterListTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="46" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FormalParameterListTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/functions/ProgramTest.java" name="ProgramTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="63" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ProgramTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.013" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="realLife() : void" num="31" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="code(String) : String" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/javascript-frontend/src/test/java/org/sonar/javascript/parser/functions/ShebangTest.java" name="ShebangTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ShebangTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ok() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>