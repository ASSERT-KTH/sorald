<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594121244243" clover="4.4.1">
   <project name="SonarSource :: Language Recognizer 1.24-SNAPSHOT (Aggregated)" timestamp="1594121238629">
      <metrics coveredelements="4300" complexity="1700" loc="17922" methods="1184" classes="236" statements="3400" packages="29" coveredconditionals="650" coveredmethods="960" elements="5444" ncloc="9468" files="192" conditionals="860" coveredstatements="2690"/>
      <package name="org.sonar.sslr.test.channel">
         <metrics coveredelements="28" complexity="13" loc="147" methods="11" classes="3" statements="20" coveredconditionals="3" coveredmethods="8" elements="35" ncloc="69" files="3" conditionals="4" coveredstatements="17"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/test/channel/ChannelMatcher.java" name="ChannelMatcher.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="5" loc="59" coveredmethods="3" methods="4" elements="17" classes="1" ncloc="32" statements="11" conditionals="2" coveredstatements="10"/>
            <class name="ChannelMatcher">
               <metrics coveredelements="15" coveredconditionals="2" complexity="5" coveredmethods="3" methods="4" elements="17" statements="11" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="ChannelMatcher(String,O)" num="33" count="23" type="method"/>
            <line num="34" count="23" type="stmt"/>
            <line num="35" count="23" type="stmt"/>
            <line num="36" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="ChannelMatcher(CodeReader,O)" num="39" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line num="42" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="matches(Object) : boolean" num="45" count="28" type="method"/>
            <line num="47" count="28" type="stmt"/>
            <line falsecount="27" truecount="1" num="47" type="cond"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="27" type="stmt"/>
            <line num="51" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/test/channel/ChannelMatchers.java" name="ChannelMatchers.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="40" coveredmethods="3" methods="4" elements="7" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ChannelMatchers">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="ChannelMatchers()" num="26" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="consume(String,O) : ChannelMatcher&lt;O&gt;" num="29" count="23" type="method"/>
            <line num="30" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="consume(CodeReader,O) : ChannelMatcher&lt;O&gt;" num="33" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNextChar(char) : ReaderHasNextCharMatcher" num="37" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/test/channel/ReaderHasNextCharMatcher.java" name="ReaderHasNextCharMatcher.java">
            <metrics coveredelements="7" coveredconditionals="1" complexity="4" loc="48" coveredmethods="2" methods="3" elements="11" classes="1" ncloc="22" statements="6" conditionals="2" coveredstatements="4"/>
            <class name="ReaderHasNextCharMatcher">
               <metrics coveredelements="7" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ReaderHasNextCharMatcher(char)" num="30" count="3" type="method"/>
            <line num="31" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="matches(Object) : boolean" num="34" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.test.lexer">
         <metrics coveredelements="83" complexity="75" loc="613" methods="42" classes="9" statements="128" coveredconditionals="15" coveredmethods="21" elements="230" ncloc="355" files="9" conditionals="60" coveredstatements="47"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/HasCommentMatcher.java" name="HasCommentMatcher.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="13" loc="83" coveredmethods="5" methods="6" elements="39" classes="1" ncloc="54" statements="21" conditionals="12" coveredstatements="15"/>
            <class name="HasCommentMatcher">
               <metrics coveredelements="26" coveredconditionals="6" complexity="13" coveredmethods="5" methods="6" elements="39" statements="21" conditionals="12" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="package" signature="HasCommentMatcher(String)" num="35" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="HasCommentMatcher(String,boolean)" num="39" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasCommentMatcher(String,int)" num="43" count="5" type="method"/>
            <line num="44" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasCommentMatcher(String,int,boolean)" num="47" count="6" type="method"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line complexity="7" visibility="public" signature="matches(Object) : boolean" num="53" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line num="59" count="6" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="61" type="cond"/>
            <line num="62" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="62" type="cond"/>
            <line num="63" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="63" type="cond"/>
            <line num="64" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="describeTo(Description) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/HasLastTokenMatcher.java" name="HasLastTokenMatcher.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="57" coveredmethods="0" methods="3" elements="17" classes="1" ncloc="30" statements="10" conditionals="4" coveredstatements="0"/>
            <class name="HasLastTokenMatcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="HasLastTokenMatcher(String,TokenType)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="matches(Object) : boolean" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/HasTokenMatcher.java" name="HasTokenMatcher.java">
            <metrics coveredelements="12" coveredconditionals="3" complexity="6" loc="57" coveredmethods="2" methods="3" elements="17" classes="1" ncloc="31" statements="10" conditionals="4" coveredstatements="7"/>
            <class name="HasTokenMatcher">
               <metrics coveredelements="12" coveredconditionals="3" complexity="6" coveredmethods="2" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="package" signature="HasTokenMatcher(String,TokenType)" num="34" count="19" type="method"/>
            <line num="35" count="19" type="stmt"/>
            <line num="36" count="19" type="stmt"/>
            <line complexity="4" visibility="public" signature="matches(Object) : boolean" num="39" count="19" type="method"/>
            <line num="41" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="19" type="stmt"/>
            <line num="45" count="19" type="stmt"/>
            <line num="46" count="33" type="stmt"/>
            <line falsecount="14" truecount="19" num="46" type="cond"/>
            <line num="47" count="19" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/HasTokenTypeMatcher.java" name="HasTokenTypeMatcher.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="5" loc="55" coveredmethods="2" methods="3" elements="16" classes="1" ncloc="29" statements="9" conditionals="4" coveredstatements="6"/>
            <class name="HasTokenTypeMatcher">
               <metrics coveredelements="10" coveredconditionals="2" complexity="5" coveredmethods="2" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="package" signature="HasTokenTypeMatcher(TokenType)" num="33" count="28" type="method"/>
            <line num="34" count="28" type="stmt"/>
            <line complexity="3" visibility="public" signature="matches(Object) : boolean" num="37" count="28" type="method"/>
            <line num="39" count="28" type="stmt"/>
            <line falsecount="28" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="28" type="stmt"/>
            <line num="43" count="28" type="stmt"/>
            <line num="44" count="28" type="stmt"/>
            <line falsecount="0" truecount="28" num="44" type="cond"/>
            <line num="45" count="28" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/HasTokenValueMatcher.java" name="HasTokenValueMatcher.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="8" loc="65" coveredmethods="3" methods="4" elements="26" classes="1" ncloc="38" statements="14" conditionals="8" coveredstatements="9"/>
            <class name="HasTokenValueMatcher">
               <metrics coveredelements="16" coveredconditionals="4" complexity="8" coveredmethods="3" methods="4" elements="26" statements="14" conditionals="8" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="HasTokenValueMatcher(String)" num="33" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="HasTokenValueMatcher(String,boolean)" num="37" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="matches(Object) : boolean" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="describeTo(Description) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/HasTokensMatcher.java" name="HasTokensMatcher.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="65" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="39" statements="17" conditionals="12" coveredstatements="0"/>
            <class name="HasTokensMatcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="32" statements="17" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="HasTokensMatcher(String)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="matches(Object) : boolean" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="describeTo(Description) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/LexerMatchers.java" name="LexerMatchers.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="11" loc="74" coveredmethods="6" methods="11" elements="21" classes="1" ncloc="39" statements="10" conditionals="0" coveredstatements="6"/>
            <class name="LexerMatchers">
               <metrics coveredelements="12" coveredconditionals="0" complexity="11" coveredmethods="6" methods="11" elements="21" statements="10" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="private" signature="LexerMatchers()" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="hasToken(String,TokenType) : Matcher&lt;List&lt;Token&gt;&gt;" num="34" count="19" type="method"/>
            <line num="35" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToken(String) : Matcher&lt;List&lt;Token&gt;&gt;" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasOriginalToken(String) : Matcher&lt;List&lt;Token&gt;&gt;" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToken(TokenType) : Matcher&lt;List&lt;Token&gt;&gt;" num="46" count="28" type="method"/>
            <line num="47" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasTokens(String) : Matcher&lt;List&lt;Token&gt;&gt;" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasLastToken(String,TokenType) : Matcher&lt;List&lt;Token&gt;&gt;" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasComment(String) : Matcher&lt;List&lt;Token&gt;&gt;" num="58" count="5" type="method"/>
            <line num="59" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasComment(String,int) : Matcher&lt;List&lt;Token&gt;&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasOriginalComment(String) : Matcher&lt;List&lt;Token&gt;&gt;" num="66" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasOriginalComment(String,int) : Matcher&lt;List&lt;Token&gt;&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/MockHelper.java" name="MockHelper.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="6" loc="67" coveredmethods="3" methods="5" elements="11" classes="1" ncloc="35" statements="6" conditionals="0" coveredstatements="4"/>
            <class name="MockHelper">
               <metrics coveredelements="7" coveredconditionals="0" complexity="6" coveredmethods="3" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="MockHelper()" num="39" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="mockLexer() : Lexer" num="42" count="14" type="method"/>
            <line num="43" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="mockToken(TokenType,String) : Token" num="46" count="17" type="method"/>
            <line num="47" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="mockTokenBuilder(TokenType,String) : Token.Builder" num="50" count="18" type="method"/>
            <line num="51" count="18" type="stmt"/>
            <line num="52" count="18" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mockAstNode(String) : AstNode" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/lexer/TokenUtils.java" name="TokenUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="90" coveredmethods="0" methods="4" elements="51" classes="1" ncloc="60" statements="31" conditionals="16" coveredstatements="0"/>
            <class name="TokenUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="4" elements="51" statements="31" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TokenUtils()" num="36" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="merge(List&lt;Token&gt;) : String" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="removeLastTokenIfEof(List&lt;Token&gt;) : List&lt;Token&gt;" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="lex(String) : List&lt;Token&gt;" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.test.minic">
         <metrics coveredelements="75" complexity="34" loc="562" methods="29" classes="9" statements="80" coveredconditionals="1" coveredmethods="15" elements="113" ncloc="346" files="5" conditionals="4" coveredstatements="59"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/minic/MiniCColorizer.java" name="MiniCColorizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="42" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MiniCColorizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MiniCColorizer()" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getTokenizers() : List&lt;Tokenizer&gt;" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/minic/MiniCGrammar.java" name="MiniCGrammar.java">
            <metrics coveredelements="44" coveredconditionals="0" complexity="1" loc="235" coveredmethods="1" methods="1" elements="44" classes="1" ncloc="157" statements="43" conditionals="0" coveredstatements="43"/>
            <class name="MiniCGrammar">
               <metrics coveredelements="44" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="44" statements="43" conditionals="0" coveredstatements="43"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : Grammar" num="104" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line num="109" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="119" count="6" type="stmt"/>
            <line num="121" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="127" count="6" type="stmt"/>
            <line num="132" count="6" type="stmt"/>
            <line num="134" count="6" type="stmt"/>
            <line num="136" count="6" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="142" count="6" type="stmt"/>
            <line num="144" count="6" type="stmt"/>
            <line num="146" count="6" type="stmt"/>
            <line num="148" count="6" type="stmt"/>
            <line num="152" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="168" count="6" type="stmt"/>
            <line num="170" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line num="178" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="184" count="6" type="stmt"/>
            <line num="186" count="6" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line num="196" count="6" type="stmt"/>
            <line num="198" count="6" type="stmt"/>
            <line num="202" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line num="208" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="216" count="6" type="stmt"/>
            <line num="221" count="6" type="stmt"/>
            <line num="225" count="6" type="stmt"/>
            <line num="230" count="6" type="stmt"/>
            <line num="232" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/minic/MiniCLexer.java" name="MiniCLexer.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="15" loc="141" coveredmethods="11" methods="14" elements="33" classes="4" ncloc="93" statements="17" conditionals="2" coveredstatements="11"/>
            <class name="MiniCLexer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MiniCLexer.Literals">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="MiniCLexer.Punctuators">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="MiniCLexer.Keywords">
               <metrics coveredelements="8" coveredconditionals="0" complexity="6" coveredmethods="4" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="MiniCLexer()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="41" count="102" type="method"/>
            <line num="43" count="102" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="51" count="102" type="method"/>
            <line num="53" count="102" type="stmt"/>
            <line complexity="1" visibility="private" signature="Punctuators(String)" num="70" count="20" type="method"/>
            <line num="71" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="74" count="408" type="method"/>
            <line num="76" count="408" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="79" count="2127" type="method"/>
            <line num="81" count="2127" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="84" count="408" type="method"/>
            <line num="86" count="408" type="stmt"/>
            <line complexity="1" visibility="private" signature="Keywords(String)" num="100" count="9" type="method"/>
            <line num="101" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="104" count="144" type="method"/>
            <line num="106" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="109" count="99" type="method"/>
            <line num="111" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="114" count="144" type="method"/>
            <line num="116" count="144" type="stmt"/>
            <line complexity="2" visibility="public" signature="keywordValues() : String[]" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : Lexer" num="130" count="11" type="method"/>
            <line num="131" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/minic/MiniCParser.java" name="MiniCParser.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="6" loc="53" coveredmethods="3" methods="4" elements="12" classes="1" ncloc="24" statements="6" conditionals="2" coveredstatements="5"/>
            <class name="MiniCParser">
               <metrics coveredelements="9" coveredconditionals="1" complexity="6" coveredmethods="3" methods="4" elements="12" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="MiniCParser()" num="33" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="create() : Parser&lt;Grammar&gt;" num="36" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="parseFile(String) : AstNode" num="40" count="17" type="method"/>
            <line num="41" count="17" type="stmt"/>
            <line num="42" count="17" type="stmt"/>
            <line falsecount="17" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseString(String) : AstNode" num="49" count="6" type="method"/>
            <line num="50" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/com/sonar/sslr/test/minic/MiniCToolkit.java" name="MiniCToolkit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="91" coveredmethods="0" methods="8" elements="21" classes="2" ncloc="55" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="MiniCToolkit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MiniCToolkit.MiniCConfigurationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MiniCToolkit()" num="37" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="validate(String) : String" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProperties() : List&lt;ConfigurationProperty&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharset() : Charset" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGetParser() : Parser" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGetTokenizers() : List&lt;Tokenizer&gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="updateConfiguration() : void" num="85" count="0" type="method"/>
         </file>
      </package>
      <package name="org.sonar.sslr.tests">
         <metrics coveredelements="78" complexity="28" loc="337" methods="22" classes="6" statements="67" coveredconditionals="4" coveredmethods="21" elements="97" ncloc="166" files="4" conditionals="8" coveredstatements="53"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/tests/Assertions.java" name="Assertions.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="51" coveredmethods="3" methods="3" elements="5" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Assertions">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="Assertions()" num="30" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="assertThat(Rule) : RuleAssert" num="38" count="60" type="method"/>
            <line num="39" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThat(Parser) : ParserAssert" num="47" count="3" type="method"/>
            <line num="48" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/tests/ParserAssert.java" name="ParserAssert.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="8" loc="104" coveredmethods="6" methods="6" elements="31" classes="1" ncloc="58" statements="25" conditionals="0" coveredstatements="22"/>
            <class name="ParserAssert">
               <metrics coveredelements="28" coveredconditionals="0" complexity="8" coveredmethods="6" methods="6" elements="31" statements="25" conditionals="0" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParserAssert(Parser)" num="42" count="11" type="method"/>
            <line num="43" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="createParserWithEofMatcher() : Parser" num="46" count="25" type="method"/>
            <line num="47" count="25" type="stmt"/>
            <line num="48" count="25" type="stmt"/>
            <line num="50" count="25" type="stmt"/>
            <line num="53" count="25" type="stmt"/>
            <line num="54" count="25" type="stmt"/>
            <line num="56" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="matches(String) : ParserAssert" num="63" count="21" type="method"/>
            <line num="64" count="21" type="stmt"/>
            <line num="65" count="20" type="stmt"/>
            <line num="66" count="19" type="stmt"/>
            <line num="67" count="19" type="stmt"/>
            <line num="68" count="19" type="stmt"/>
            <line num="69" count="19" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="notMatches(String) : ParserAssert" num="81" count="6" type="method"/>
            <line num="82" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasRootRule() : void" num="94" count="26" type="method"/>
            <line num="95" count="26" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRuleName() : String" num="100" count="21" type="method"/>
            <line num="101" count="21" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/tests/ParsingResultComparisonFailure.java" name="ParsingResultComparisonFailure.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="47" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ParsingResultComparisonFailure">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ParsingResultComparisonFailure(String,String)" num="33" count="6" type="method"/>
            <line num="34" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParsingResultComparisonFailure(String,String,String)" num="37" count="8" type="method"/>
            <line num="38" count="8" type="stmt"/>
            <line num="39" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="42" count="20" type="method"/>
            <line num="44" count="20" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/main/java/org/sonar/sslr/tests/RuleAssert.java" name="RuleAssert.java">
            <metrics coveredelements="38" coveredconditionals="4" complexity="14" loc="135" coveredmethods="9" methods="10" elements="54" classes="3" ncloc="79" statements="36" conditionals="8" coveredstatements="25"/>
            <class name="RuleAssert">
               <metrics coveredelements="32" coveredconditionals="4" complexity="11" coveredmethods="6" methods="7" elements="48" statements="33" conditionals="8" coveredstatements="22"/>
            </class>
            <class name="RuleAssert.WithEndOfInput">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RuleAssert.EndOfInput">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="RuleAssert(Rule)" num="40" count="68" type="method"/>
            <line num="41" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="WithEndOfInput(GrammarRuleKey)" num="47" count="183" type="method"/>
            <line num="48" count="183" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="208" type="method"/>
            <line num="53" count="208" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="58" count="208" type="method"/>
            <line num="60" count="208" type="stmt"/>
            <line complexity="1" visibility="private" signature="createParseRunnerWithEofMatcher() : ParseRunner" num="64" count="159" type="method"/>
            <line num="65" count="159" type="stmt"/>
            <line num="67" count="158" type="stmt"/>
            <line num="68" count="158" type="stmt"/>
            <line num="70" count="158" type="stmt"/>
            <line num="72" count="158" type="stmt"/>
            <line complexity="2" visibility="public" signature="matches(String) : RuleAssert" num="79" count="131" type="method"/>
            <line num="80" count="131" type="stmt"/>
            <line num="81" count="130" type="stmt"/>
            <line num="82" count="130" type="stmt"/>
            <line falsecount="129" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="129" type="stmt"/>
            <line complexity="2" visibility="public" signature="notMatches(String) : RuleAssert" num="94" count="28" type="method"/>
            <line num="95" count="28" type="stmt"/>
            <line num="96" count="28" type="stmt"/>
            <line num="97" count="28" type="stmt"/>
            <line falsecount="27" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="27" type="stmt"/>
            <line complexity="1" visibility="private" signature="createParseRunnerWithoutEofMatcher() : ParseRunner" num="103" count="3" type="method"/>
            <line num="104" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="matchesPrefix(String,String) : RuleAssert" num="114" count="3" type="method"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line falsecount="2" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line falsecount="1" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRuleName() : String" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.examples.grammars.typed">
         <metrics coveredelements="72" complexity="27" loc="354" methods="26" classes="5" statements="46" coveredconditionals="1" coveredmethods="26" elements="74" ncloc="206" files="5" conditionals="2" coveredstatements="45"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/JsonGrammar.java" name="JsonGrammar.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="11" loc="114" coveredmethods="11" methods="11" elements="23" classes="1" ncloc="81" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="JsonGrammar">
               <metrics coveredelements="23" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="23" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonGrammar(GrammarBuilder&lt;InternalSyntaxToken&gt;,TreeFactory)" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="JSON() : JsonTree" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="OBJECT() : ObjectTree" num="52" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PAIR_LIST() : SyntaxList&lt;PairTree&gt;" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PAIR() : PairTree" num="67" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARRAY() : ArrayTree" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="VALUE_LIST() : SyntaxList&lt;ValueTree&gt;" num="80" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="VALUE() : ValueTree" num="87" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="STRING() : LiteralTree" num="97" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="NUMBER() : LiteralTree" num="102" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BUILT_IN_VALUE() : BuiltInValueTree" num="107" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/JsonLexer.java" name="JsonLexer.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="2" loc="77" coveredmethods="2" methods="2" elements="19" classes="1" ncloc="45" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="JsonLexer">
               <metrics coveredelements="19" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="19" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="createGrammarBuilder() : LexerlessGrammarBuilder" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="punctuator(LexerlessGrammarBuilder,GrammarRuleKey,String) : void" num="74" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/JsonNodeBuilder.java" name="JsonNodeBuilder.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="3" loc="55" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="25" statements="6" conditionals="2" coveredstatements="5"/>
            <class name="JsonNodeBuilder">
               <metrics coveredelements="8" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="2" visibility="public" signature="createNonTerminal(GrammarRuleKey,Rule,List&lt;Object&gt;,int,int) : Object" num="38" count="247" type="method"/>
            <line num="40" count="247" type="stmt"/>
            <line num="41" count="247" type="stmt"/>
            <line falsecount="0" truecount="247" num="41" type="cond"/>
            <line num="42" count="247" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTerminal(Input,int,int,List&lt;Trivia&gt;,TokenType) : Object" num="49" count="247" type="method"/>
            <line num="51" count="247" type="stmt"/>
            <line num="52" count="247" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/Tree.java" name="Tree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="23" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Tree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/TreeFactory.java" name="TreeFactory.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="11" loc="85" coveredmethods="11" methods="11" elements="22" classes="1" ncloc="52" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TreeFactory">
               <metrics coveredelements="22" coveredconditionals="0" complexity="11" coveredmethods="11" methods="11" elements="22" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="json(Tree,InternalSyntaxToken) : JsonTree" num="41" count="33" type="method"/>
            <line num="42" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildInValue(InternalSyntaxToken) : BuiltInValueTree" num="45" count="8" type="method"/>
            <line num="46" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="number(InternalSyntaxToken) : LiteralTree" num="49" count="9" type="method"/>
            <line num="50" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="string(InternalSyntaxToken) : LiteralTree" num="53" count="15" type="method"/>
            <line num="54" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueList(ValueTree) : SyntaxList&lt;ValueTree&gt;" num="57" count="27" type="method"/>
            <line num="58" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueList(ValueTree,InternalSyntaxToken,SyntaxList&lt;ValueTree&gt;) : SyntaxList&lt;ValueTree&gt;" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array(InternalSyntaxToken,Optional&lt;SyntaxList&lt;ValueTree&gt;&gt;,InternalSyntaxToken) : ArrayTree" num="65" count="30" type="method"/>
            <line num="66" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="pair(LiteralTree,InternalSyntaxToken,ValueTree) : PairTree" num="69" count="3" type="method"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="pairList(PairTree) : SyntaxList&lt;PairTree&gt;" num="73" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="pairList(PairTree,InternalSyntaxToken,SyntaxList&lt;PairTree&gt;) : SyntaxList&lt;PairTree&gt;" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object(InternalSyntaxToken,Optional&lt;SyntaxList&lt;PairTree&gt;&gt;,InternalSyntaxToken) : ObjectTree" num="82" count="5" type="method"/>
            <line num="83" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.examples.grammars.typed.api">
         <metrics coveredelements="0" complexity="0" loc="231" methods="0" classes="8" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="47" files="8" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/ArrayTree.java" name="ArrayTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/BuiltInValueTree.java" name="BuiltInValueTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BuiltInValueTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/JsonTree.java" name="JsonTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JsonTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/LiteralTree.java" name="LiteralTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LiteralTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/ObjectTree.java" name="ObjectTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/PairTree.java" name="PairTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PairTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/SyntaxToken.java" name="SyntaxToken.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SyntaxToken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/api/ValueTree.java" name="ValueTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ValueTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.sslr.examples.grammars">
         <metrics coveredelements="115" complexity="20" loc="657" methods="20" classes="9" statements="131" coveredconditionals="0" coveredmethods="12" elements="151" ncloc="349" files="9" conditionals="0" coveredstatements="103"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/AbcGrammar.java" name="AbcGrammar.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="14" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="AbcGrammar">
               <metrics coveredelements="6" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="createGrammar() : Grammar" num="33" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/ExpressionGrammar.java" name="ExpressionGrammar.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="1" loc="72" coveredmethods="1" methods="1" elements="18" classes="1" ncloc="38" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="ExpressionGrammar">
               <metrics coveredelements="18" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="18" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="createGrammarBuilder() : LexerlessGrammarBuilder" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/IncorrectGrammar.java" name="IncorrectGrammar.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="70" coveredmethods="0" methods="6" elements="25" classes="1" ncloc="38" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="IncorrectGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="25" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="undefinedRule() : Grammar" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="referenceToUndefinedRule() : Grammar" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleDefinedTwice() : Grammar" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incorrectRegularExpression() : Grammar" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="infiniteZeroOrMore() : Grammar" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="infiniteOneOrMore() : Grammar" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/JsonGrammar.java" name="JsonGrammar.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="1" loc="61" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="32" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="JsonGrammar">
               <metrics coveredelements="14" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : Grammar" num="43" count="7" type="method"/>
            <line num="44" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line num="47" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
            <line num="49" count="7" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line num="51" count="7" type="stmt"/>
            <line num="52" count="7" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line num="54" count="7" type="stmt"/>
            <line num="55" count="7" type="stmt"/>
            <line num="56" count="7" type="stmt"/>
            <line num="58" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/LeftRecursiveGrammar.java" name="LeftRecursiveGrammar.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="5" loc="94" coveredmethods="3" methods="5" elements="26" classes="1" ncloc="46" statements="21" conditionals="0" coveredstatements="12"/>
            <class name="LeftRecursiveGrammar">
               <metrics coveredelements="15" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="26" statements="21" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="immediateLeftRecursion() : Grammar" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eliminatedImmediateLeftRecursion() : Grammar" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="indirectLeftRecursion() : Grammar" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eliminatedIndirectLeftRecursion() : Grammar" num="80" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="otherRules(LexerlessGrammarBuilder) : void" num="87" count="4" type="method"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/MemoizationGrammar.java" name="MemoizationGrammar.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="72" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="38" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="MemoizationGrammar">
               <metrics coveredelements="15" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="15" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="requiresNegativeMemoization() : Grammar" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="requiresPositiveMemoization() : Grammar" num="44" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="requiresPositiveMemoizationOnMoreThanJustLastRule() : Grammar" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/PegGrammar.java" name="PegGrammar.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="1" loc="98" coveredmethods="1" methods="1" elements="26" classes="1" ncloc="65" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="PegGrammar">
               <metrics coveredelements="26" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="26" statements="25" conditionals="0" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : Grammar" num="57" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/RecursiveGrammar.java" name="RecursiveGrammar.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="RecursiveGrammar">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : Grammar" num="36" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/RegularExpressionGrammar.java" name="RegularExpressionGrammar.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="1" loc="103" coveredmethods="1" methods="1" elements="17" classes="1" ncloc="66" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="RegularExpressionGrammar">
               <metrics coveredelements="17" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : Grammar" num="50" count="5" type="method"/>
            <line num="51" count="5" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="55" count="5" type="stmt"/>
            <line num="56" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line num="68" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line num="85" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line num="93" count="5" type="stmt"/>
            <line num="94" count="5" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.examples.grammars.typed.impl">
         <metrics coveredelements="56" complexity="24" loc="358" methods="24" classes="8" statements="32" coveredconditionals="0" coveredmethods="24" elements="56" ncloc="158" files="8" conditionals="0" coveredstatements="32"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/ArrayTreeImpl.java" name="ArrayTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="54" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ArrayTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayTreeImpl(SyntaxToken,SyntaxList&lt;ValueTree&gt;,SyntaxToken)" num="33" count="30" type="method"/>
            <line num="34" count="30" type="stmt"/>
            <line num="35" count="30" type="stmt"/>
            <line num="36" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="openBracketToken() : SyntaxToken" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : SyntaxList&lt;ValueTree&gt;" num="44" count="31" type="method"/>
            <line num="47" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeBracketToken() : SyntaxToken" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/BuiltInValueTreeImpl.java" name="BuiltInValueTreeImpl.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BuiltInValueTreeImpl">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="BuiltInValueTreeImpl(SyntaxToken)" num="29" count="8" type="method"/>
            <line num="30" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/InternalSyntaxToken.java" name="InternalSyntaxToken.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="36" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="InternalSyntaxToken">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="InternalSyntaxToken(String)" num="28" count="247" type="method"/>
            <line num="29" count="247" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="32" count="27" type="method"/>
            <line num="34" count="27" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/JsonTreeImpl.java" name="JsonTreeImpl.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="JsonTreeImpl">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="JsonTreeImpl(Tree)" num="29" count="33" type="method"/>
            <line num="30" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrayOrObject() : Tree" num="33" count="32" type="method"/>
            <line num="35" count="32" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/LiteralTreeImpl.java" name="LiteralTreeImpl.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="LiteralTreeImpl">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="LiteralTreeImpl(SyntaxToken)" num="29" count="24" type="method"/>
            <line num="30" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : SyntaxToken" num="33" count="20" type="method"/>
            <line num="35" count="20" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/ObjectTreeImpl.java" name="ObjectTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="54" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ObjectTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="ObjectTreeImpl(SyntaxToken,SyntaxList&lt;PairTree&gt;,SyntaxToken)" num="33" count="5" type="method"/>
            <line num="34" count="5" type="stmt"/>
            <line num="35" count="5" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="openCurlyBraceToken() : SyntaxToken" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pairs() : SyntaxList&lt;PairTree&gt;" num="44" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="closeCurlyBraceToken() : SyntaxToken" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/PairTreeImpl.java" name="PairTreeImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="53" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PairTreeImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="PairTreeImpl(LiteralTree,SyntaxToken,ValueTree)" num="33" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : LiteralTree" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : SyntaxToken" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : ValueTree" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/main/java/org/sonar/sslr/examples/grammars/typed/impl/SyntaxList.java" name="SyntaxList.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="50" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="SyntaxList">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="SyntaxList(T,SyntaxToken,SyntaxList&lt;T&gt;)" num="31" count="31" type="method"/>
            <line num="32" count="31" type="stmt"/>
            <line num="33" count="31" type="stmt"/>
            <line num="34" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="element() : T" num="37" count="29" type="method"/>
            <line num="38" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="commaToken() : SyntaxToken" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : SyntaxList" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.xpath.api">
         <metrics coveredelements="13" complexity="7" loc="105" methods="4" classes="1" statements="12" coveredconditionals="0" coveredmethods="4" elements="16" ncloc="36" files="1" conditionals="0" coveredstatements="9"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-xpath/src/main/java/com/sonar/sslr/xpath/api/AstNodeXPathQuery.java" name="AstNodeXPathQuery.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="105" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="36" statements="12" conditionals="0" coveredstatements="9"/>
            <class name="AstNodeXPathQuery">
               <metrics coveredelements="13" coveredconditionals="0" complexity="7" coveredmethods="4" methods="4" elements="16" statements="12" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="private" signature="AstNodeXPathQuery(String)" num="34" count="34" type="method"/>
            <line num="35" count="34" type="stmt"/>
            <line num="36" count="34" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="selectSingleNode(AstNode) : T" num="59" count="24" type="method"/>
            <line num="60" count="24" type="stmt"/>
            <line num="61" count="24" type="stmt"/>
            <line num="62" count="24" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="selectNodes(AstNode) : List&lt;T&gt;" num="85" count="13" type="method"/>
            <line num="86" count="13" type="stmt"/>
            <line num="87" count="13" type="stmt"/>
            <line num="88" count="13" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : AstNodeXPathQuery&lt;E&gt;" num="101" count="34" type="method"/>
            <line num="102" count="34" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.xpath">
         <metrics coveredelements="111" complexity="48" loc="275" methods="30" classes="2" statements="77" coveredconditionals="25" coveredmethods="25" elements="143" ncloc="199" files="1" conditionals="36" coveredstatements="61"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-xpath/src/main/java/com/sonar/sslr/impl/xpath/AstNodeNavigator.java" name="AstNodeNavigator.java">
            <metrics coveredelements="111" coveredconditionals="25" complexity="48" loc="275" coveredmethods="25" methods="30" elements="143" classes="2" ncloc="199" statements="77" conditionals="36" coveredstatements="61"/>
            <class name="AstNodeNavigator">
               <metrics coveredelements="104" coveredconditionals="25" complexity="45" coveredmethods="22" methods="27" elements="136" statements="73" conditionals="36" coveredstatements="57"/>
            </class>
            <class name="AstNodeNavigator.Attribute">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="reset() : void" num="37" count="37" type="method"/>
            <line num="38" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTextStringValue(Object) : String" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCommentStringValue(Object) : String" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAttributeStringValue(Object) : String" num="53" count="21" type="method"/>
            <line num="55" count="21" type="stmt"/>
            <line num="57" count="21" type="stmt"/>
            <line falsecount="15" truecount="6" num="57" type="cond"/>
            <line num="58" count="6" type="stmt"/>
            <line num="59" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="13" type="stmt"/>
            <line falsecount="0" truecount="12" num="61" type="cond"/>
            <line num="62" count="12" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementStringValue(Object) : String" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNamespacePrefix(Object) : String" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNamespaceStringValue(Object) : String" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeName(Object) : String" num="87" count="56" type="method"/>
            <line num="89" count="56" type="stmt"/>
            <line num="91" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeQName(Object) : String" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeNamespaceUri(Object) : String" num="99" count="55" type="method"/>
            <line num="101" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementName(Object) : String" num="106" count="1316" type="method"/>
            <line num="108" count="1316" type="stmt"/>
            <line num="109" count="1316" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementQName(Object) : String" num="112" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementNamespaceUri(Object) : String" num="117" count="1314" type="method"/>
            <line num="119" count="1314" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAttribute(Object) : boolean" num="124" count="121" type="method"/>
            <line num="126" count="121" type="stmt"/>
            <line complexity="1" visibility="public" signature="isComment(Object) : boolean" num="129" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="isDocument(Object) : boolean" num="134" count="6" type="method"/>
            <line num="136" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="137" type="cond"/>
            <line complexity="1" visibility="public" signature="isElement(Object) : boolean" num="140" count="4176" type="method"/>
            <line num="142" count="4176" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNamespace(Object) : boolean" num="145" count="34" type="method"/>
            <line num="147" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="isProcessingInstruction(Object) : boolean" num="150" count="3" type="method"/>
            <line num="152" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isText(Object) : boolean" num="155" count="76" type="method"/>
            <line num="157" count="76" type="stmt"/>
            <line complexity="5" visibility="private" signature="computeDocumentNode(Object) : void" num="162" count="42" type="method"/>
            <line num="163" count="42" type="stmt"/>
            <line falsecount="7" truecount="35" num="163" type="cond"/>
            <line num="164" count="35" type="stmt"/>
            <line falsecount="5" truecount="30" num="164" type="cond"/>
            <line num="165" count="30" type="stmt"/>
            <line num="167" count="30" type="stmt"/>
            <line falsecount="30" truecount="4" num="167" type="cond"/>
            <line num="168" count="4" type="stmt"/>
            <line num="171" count="30" type="stmt"/>
            <line num="172" count="30" type="stmt"/>
            <line num="173" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="173" type="cond"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDocumentNode(Object) : Object" num="180" count="34" type="method"/>
            <line num="182" count="34" type="stmt"/>
            <line num="183" count="34" type="stmt"/>
            <line num="184" count="34" type="stmt"/>
            <line complexity="3" visibility="public" signature="getChildAxisIterator(Object) : Iterator" num="187" count="2517" type="method"/>
            <line num="189" count="2517" type="stmt"/>
            <line falsecount="2" truecount="2515" num="189" type="cond"/>
            <line num="190" count="2515" type="stmt"/>
            <line num="191" count="2515" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="192" type="cond"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParentNode(Object) : Object" num="199" count="203" type="method"/>
            <line num="201" count="203" type="stmt"/>
            <line falsecount="2" truecount="201" num="201" type="cond"/>
            <line num="202" count="201" type="stmt"/>
            <line num="203" count="201" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="204" type="cond"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getParentAxisIterator(Object) : Iterator" num="212" count="9" type="method"/>
            <line num="215" count="9" type="stmt"/>
            <line falsecount="0" truecount="8" num="215" type="cond"/>
            <line num="216" count="8" type="stmt"/>
            <line num="217" count="8" type="stmt"/>
            <line num="218" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAttributeAxisIterator(Object) : Iterator" num="227" count="19" type="method"/>
            <line num="229" count="19" type="stmt"/>
            <line falsecount="0" truecount="18" num="229" type="cond"/>
            <line num="230" count="18" type="stmt"/>
            <line num="231" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="18" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseXPath(String) : XPath" num="249" count="1" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Attribute(String,AstNode)" num="260" count="57" type="method"/>
            <line num="261" count="57" type="stmt"/>
            <line num="262" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="265" count="100" type="method"/>
            <line num="266" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAstNode() : AstNode" num="269" count="20" type="method"/>
            <line num="270" count="20" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.ast">
         <metrics coveredelements="0" complexity="0" loc="194" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="27" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/ast/AstSelect.java" name="AstSelect.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="194" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="27" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AstSelect">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.channel">
         <metrics coveredelements="167" complexity="51" loc="644" methods="30" classes="10" statements="113" coveredconditionals="37" coveredmethods="25" elements="181" ncloc="353" files="8" conditionals="38" coveredstatements="105"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/BlackHoleChannel.java" name="BlackHoleChannel.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="5" loc="75" coveredmethods="3" methods="5" elements="10" classes="2" ncloc="32" statements="5" conditionals="0" coveredstatements="3"/>
            <class name="BlackHoleChannel">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="BlackHoleChannel.EmptyAppendable">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackHoleChannel(String)" num="46" count="21" type="method"/>
            <line num="47" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="50" count="612" type="method"/>
            <line num="52" count="612" type="stmt"/>
            <line complexity="1" visibility="public" signature="append(CharSequence) : Appendable" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="append(char) : Appendable" num="64" count="1110" type="method"/>
            <line num="66" count="1110" type="stmt"/>
            <line complexity="1" visibility="public" signature="append(CharSequence,int,int) : Appendable" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/BomCharacterChannel.java" name="BomCharacterChannel.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="2" loc="45" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="15" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="BomCharacterChannel">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="38" type="cond"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/CommentRegexpChannel.java" name="CommentRegexpChannel.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="4" loc="81" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="46" statements="11" conditionals="2" coveredstatements="10"/>
            <class name="CommentRegexpChannel">
               <metrics coveredelements="14" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="15" statements="11" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CommentRegexpChannel(String)" num="47" count="12" type="method"/>
            <line num="48" count="12" type="stmt"/>
            <line num="49" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="52" count="1069" type="method"/>
            <line num="54" count="1069" type="stmt"/>
            <line num="55" count="1069" type="stmt"/>
            <line falsecount="1037" truecount="32" num="55" type="cond"/>
            <line num="56" count="32" type="stmt"/>
            <line num="58" count="32" type="stmt"/>
            <line num="66" count="32" type="stmt"/>
            <line num="68" count="32" type="stmt"/>
            <line num="69" count="32" type="stmt"/>
            <line num="71" count="1037" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/IdentifierAndKeywordChannel.java" name="IdentifierAndKeywordChannel.java">
            <metrics coveredelements="27" coveredconditionals="8" complexity="6" loc="84" coveredmethods="2" methods="2" elements="27" classes="1" ncloc="50" statements="17" conditionals="8" coveredstatements="17"/>
            <class name="IdentifierAndKeywordChannel">
               <metrics coveredelements="27" coveredconditionals="8" complexity="6" coveredmethods="2" methods="2" elements="27" statements="17" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="2" visibility="public" signature="IdentifierAndKeywordChannel(String,boolean,TokenType[])" num="47" count="15" type="method"/>
            <line num="48" count="15" type="stmt"/>
            <line num="49" count="15" type="stmt"/>
            <line num="50" count="107" type="stmt"/>
            <line falsecount="4" truecount="103" num="50" type="cond"/>
            <line num="51" count="107" type="stmt"/>
            <line num="54" count="15" type="stmt"/>
            <line num="55" count="15" type="stmt"/>
            <line complexity="4" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="58" count="1483" type="method"/>
            <line num="60" count="1483" type="stmt"/>
            <line falsecount="1173" truecount="310" num="60" type="cond"/>
            <line num="61" count="310" type="stmt"/>
            <line num="62" count="310" type="stmt"/>
            <line num="63" count="310" type="stmt"/>
            <line falsecount="307" truecount="3" num="63" type="cond"/>
            <line num="64" count="3" type="stmt"/>
            <line num="67" count="310" type="stmt"/>
            <line num="68" count="310" type="stmt"/>
            <line falsecount="158" truecount="152" num="69" type="cond"/>
            <line num="76" count="310" type="stmt"/>
            <line num="78" count="310" type="stmt"/>
            <line num="79" count="310" type="stmt"/>
            <line num="81" count="1173" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/PunctuatorChannel.java" name="PunctuatorChannel.java">
            <metrics coveredelements="44" coveredconditionals="15" complexity="12" loc="104" coveredmethods="4" methods="4" elements="45" classes="2" ncloc="64" statements="25" conditionals="16" coveredstatements="25"/>
            <class name="PunctuatorChannel">
               <metrics coveredelements="37" coveredconditionals="12" complexity="9" coveredmethods="3" methods="3" elements="37" statements="22" conditionals="12" coveredstatements="22"/>
            </class>
            <class name="PunctuatorChannel.PunctuatorComparator">
               <metrics coveredelements="7" coveredconditionals="3" complexity="3" coveredmethods="1" methods="1" elements="8" statements="3" conditionals="4" coveredstatements="3"/>
            </class>
            <line complexity="3" visibility="public" signature="compare(TokenType,TokenType) : int" num="40" count="537" type="method"/>
            <line num="42" count="537" type="stmt"/>
            <line falsecount="232" truecount="305" num="42" type="cond"/>
            <line num="43" count="305" type="stmt"/>
            <line num="45" count="232" type="stmt"/>
            <line falsecount="0" truecount="232" num="45" type="cond"/>
            <line complexity="2" visibility="public" signature="PunctuatorChannel(TokenType)" num="50" count="13" type="method"/>
            <line num="51" count="13" type="stmt"/>
            <line num="52" count="13" type="stmt"/>
            <line num="54" count="13" type="stmt"/>
            <line num="56" count="13" type="stmt"/>
            <line num="57" count="13" type="stmt"/>
            <line falsecount="13" truecount="232" num="57" type="cond"/>
            <line num="58" count="232" type="stmt"/>
            <line num="59" count="232" type="stmt"/>
            <line num="61" count="13" type="stmt"/>
            <line complexity="4" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="64" count="1043" type="method"/>
            <line num="66" count="1043" type="stmt"/>
            <line num="67" count="1043" type="stmt"/>
            <line falsecount="605" truecount="16533" num="67" type="cond"/>
            <line num="68" count="16533" type="stmt"/>
            <line falsecount="16095" truecount="438" num="68" type="cond"/>
            <line num="69" count="438" type="stmt"/>
            <line num="77" count="438" type="stmt"/>
            <line num="80" count="438" type="stmt"/>
            <line falsecount="438" truecount="460" num="80" type="cond"/>
            <line num="81" count="460" type="stmt"/>
            <line num="84" count="438" type="stmt"/>
            <line num="88" count="605" type="stmt"/>
            <line complexity="3" visibility="private" signature="arraysEquals(char[],char[]) : boolean" num="94" count="16533" type="method"/>
            <line num="95" count="16533" type="stmt"/>
            <line num="96" count="16533" type="stmt"/>
            <line falsecount="438" truecount="16645" num="96" type="cond"/>
            <line num="97" count="16645" type="stmt"/>
            <line falsecount="550" truecount="16095" num="97" type="cond"/>
            <line num="98" count="16095" type="stmt"/>
            <line num="101" count="438" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/RegexpChannel.java" name="RegexpChannel.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="4" loc="84" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="47" statements="12" conditionals="2" coveredstatements="11"/>
            <class name="RegexpChannel">
               <metrics coveredelements="15" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="16" statements="12" conditionals="2" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="RegexpChannel(TokenType,String)" num="49" count="21" type="method"/>
            <line num="50" count="21" type="stmt"/>
            <line num="51" count="21" type="stmt"/>
            <line num="52" count="21" type="stmt"/>
            <line complexity="3" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="55" count="1188" type="method"/>
            <line num="57" count="1188" type="stmt"/>
            <line num="58" count="1188" type="stmt"/>
            <line falsecount="1071" truecount="117" num="58" type="cond"/>
            <line num="59" count="117" type="stmt"/>
            <line num="61" count="117" type="stmt"/>
            <line num="69" count="117" type="stmt"/>
            <line num="71" count="117" type="stmt"/>
            <line num="72" count="117" type="stmt"/>
            <line num="74" count="1071" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/RegexpChannelBuilder.java" name="RegexpChannelBuilder.java">
            <metrics coveredelements="44" coveredconditionals="6" complexity="14" loc="102" coveredmethods="9" methods="11" elements="50" classes="1" ncloc="69" statements="33" conditionals="6" coveredstatements="29"/>
            <class name="RegexpChannelBuilder">
               <metrics coveredelements="44" coveredconditionals="6" complexity="14" coveredmethods="9" methods="11" elements="50" statements="33" conditionals="6" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="private" signature="RegexpChannelBuilder()" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="regexp(TokenType,String) : RegexpChannel" num="34" count="11" type="method"/>
            <line num="35" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="commentRegexp(String) : CommentRegexpChannel" num="38" count="11" type="method"/>
            <line num="39" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="opt(String) : String" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(String) : String" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="one2n(String) : String" num="54" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="o2n(String) : String" num="58" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="anyButNot(String) : String" num="62" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="65" type="cond"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="g(String) : String" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="or(String) : String" num="82" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="85" type="cond"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="87" type="cond"/>
            <line num="88" count="3" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="merge(String) : String" num="95" count="22" type="method"/>
            <line num="96" count="22" type="stmt"/>
            <line num="97" count="22" type="stmt"/>
            <line num="98" count="22" type="stmt"/>
            <line num="100" count="22" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/channel/UnknownCharacterChannel.java" name="UnknownCharacterChannel.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="4" loc="69" coveredmethods="2" methods="3" elements="11" classes="1" ncloc="30" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="UnknownCharacterChannel">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="UnknownCharacterChannel()" num="39" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="UnknownCharacterChannel(boolean)" num="45" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="51" type="cond"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl">
         <metrics coveredelements="127" complexity="56" loc="453" methods="37" classes="5" statements="115" coveredconditionals="9" coveredmethods="33" elements="170" ncloc="294" files="3" conditionals="18" coveredstatements="85"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/Lexer.java" name="Lexer.java">
            <metrics coveredelements="80" coveredconditionals="7" complexity="37" loc="279" coveredmethods="18" methods="21" elements="121" classes="2" ncloc="197" statements="84" conditionals="16" coveredstatements="55"/>
            <class name="Lexer">
               <metrics coveredelements="64" coveredconditionals="5" complexity="29" coveredmethods="13" methods="14" elements="99" statements="71" conditionals="14" coveredstatements="46"/>
            </class>
            <class name="Lexer.Builder">
               <metrics coveredelements="16" coveredconditionals="2" complexity="8" coveredmethods="5" methods="7" elements="22" statements="13" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="private" signature="Lexer(Builder)" num="60" count="37" type="method"/>
            <line num="61" count="37" type="stmt"/>
            <line num="62" count="37" type="stmt"/>
            <line num="63" count="37" type="stmt"/>
            <line num="64" count="37" type="stmt"/>
            <line num="66" count="37" type="stmt"/>
            <line num="67" count="37" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="lex(File) : List&lt;Token&gt;" num="74" count="23" type="method"/>
            <line num="75" count="23" type="stmt"/>
            <line num="76" count="23" type="stmt"/>
            <line falsecount="23" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="23" type="stmt"/>
            <line num="81" count="23" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="lex(URL) : List&lt;Token&gt;" num="87" count="23" type="method"/>
            <line num="88" count="23" type="stmt"/>
            <line num="90" count="23" type="stmt"/>
            <line num="90" count="23" type="stmt"/>
            <line num="91" count="23" type="stmt"/>
            <line num="92" count="23" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="lex(String) : List&lt;Token&gt;" num="106" count="70" type="method"/>
            <line num="107" count="70" type="stmt"/>
            <line num="109" count="70" type="stmt"/>
            <line num="110" count="70" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="lex(Reader) : List&lt;Token&gt;" num="116" count="93" type="method"/>
            <line num="117" count="93" type="stmt"/>
            <line num="119" count="93" type="stmt"/>
            <line num="120" count="93" type="stmt"/>
            <line num="121" count="93" type="stmt"/>
            <line num="122" count="93" type="stmt"/>
            <line num="124" count="90" type="stmt"/>
            <line num="132" count="90" type="stmt"/>
            <line num="134" count="90" type="stmt"/>
            <line num="136" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="preprocess() : void" num="141" count="90" type="method"/>
            <line num="142" count="90" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="preprocess(Preprocessor) : void" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="initPreprocessors() : void" num="177" count="93" type="method"/>
            <line num="178" count="93" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addTrivia(Trivia) : void" num="183" count="32" type="method"/>
            <line num="184" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="addTrivia(List&lt;Trivia&gt;) : void" num="187" count="32" type="method"/>
            <line num="188" count="32" type="stmt"/>
            <line num="190" count="32" type="stmt"/>
            <line complexity="5" visibility="public" signature="addToken(Token) : void" num="193" count="958" type="method"/>
            <line num="194" count="958" type="stmt"/>
            <line falsecount="958" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="958" type="stmt"/>
            <line num="199" count="958" type="stmt"/>
            <line num="202" count="958" type="stmt"/>
            <line falsecount="32" truecount="926" num="202" type="cond"/>
            <line num="203" count="926" type="stmt"/>
            <line num="205" count="32" type="stmt"/>
            <line num="206" count="32" type="stmt"/>
            <line num="209" count="958" type="stmt"/>
            <line num="210" count="958" type="stmt"/>
            <line falsecount="958" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokens() : List&lt;Token&gt;" num="215" count="167" type="method"/>
            <line num="216" count="167" type="stmt"/>
            <line complexity="1" visibility="public" signature="getURI() : URI" num="219" count="900" type="method"/>
            <line num="220" count="900" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder() : Builder" num="223" count="37" type="method"/>
            <line num="224" count="37" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder()" num="235" count="37" type="method"/>
            <line complexity="1" visibility="public" signature="build() : Lexer" num="238" count="37" type="method"/>
            <line num="239" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="withCharset(Charset) : Builder" num="242" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withPreprocessor(Preprocessor) : Builder" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withChannel(Channel&lt;Lexer&gt;) : Builder" num="256" count="71" type="method"/>
            <line num="257" count="71" type="stmt"/>
            <line num="258" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="withFailIfNoChannelToConsumeOneCharacter(boolean) : Builder" num="261" count="19" type="method"/>
            <line num="262" count="19" type="stmt"/>
            <line num="263" count="19" type="stmt"/>
            <line complexity="2" visibility="private" signature="getChannelDispatcher() : ChannelDispatcher&lt;Lexer&gt;" num="266" count="37" type="method"/>
            <line num="267" count="37" type="stmt"/>
            <line num="270" count="37" type="stmt"/>
            <line falsecount="18" truecount="19" num="270" type="cond"/>
            <line num="271" count="19" type="stmt"/>
            <line num="274" count="37" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/LexerException.java" name="LexerException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="37" coveredmethods="1" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="LexerException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="LexerException(String,Throwable)" num="29" count="6" type="method"/>
            <line num="30" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LexerException(String)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/Parser.java" name="Parser.java">
            <metrics coveredelements="45" coveredconditionals="2" complexity="17" loc="137" coveredmethods="14" methods="14" elements="45" classes="2" ncloc="87" statements="29" conditionals="2" coveredstatements="29"/>
            <class name="Parser">
               <metrics coveredelements="30" coveredconditionals="0" complexity="12" coveredmethods="10" methods="10" elements="30" statements="20" conditionals="0" coveredstatements="20"/>
            </class>
            <class name="Parser.Builder">
               <metrics coveredelements="15" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="protected" signature="Parser(G)" num="52" count="9" type="method"/>
            <line num="53" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="Parser(Builder&lt;G&gt;)" num="57" count="39" type="method"/>
            <line num="58" count="39" type="stmt"/>
            <line num="59" count="39" type="stmt"/>
            <line num="60" count="39" type="stmt"/>
            <line complexity="2" visibility="public" signature="parse(File) : AstNode" num="63" count="23" type="method"/>
            <line num="64" count="23" type="stmt"/>
            <line num="65" count="23" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="parse(String) : AstNode" num="72" count="31" type="method"/>
            <line num="73" count="31" type="stmt"/>
            <line num="74" count="31" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(List&lt;Token&gt;) : AstNode" num="81" count="51" type="method"/>
            <line num="83" count="51" type="stmt"/>
            <line num="84" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGrammar() : G" num="87" count="5" type="method"/>
            <line num="88" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : RuleDefinition" num="91" count="97" type="method"/>
            <line num="92" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRootRule(Rule) : void" num="95" count="28" type="method"/>
            <line num="96" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder(G) : Builder&lt;G&gt;" num="99" count="14" type="method"/>
            <line num="100" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder(Parser&lt;G&gt;) : Builder&lt;G&gt;" num="103" count="26" type="method"/>
            <line num="104" count="26" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(G)" num="113" count="14" type="method"/>
            <line num="114" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(Parser&lt;G&gt;)" num="117" count="26" type="method"/>
            <line num="118" count="26" type="stmt"/>
            <line num="119" count="26" type="stmt"/>
            <line num="120" count="26" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : Parser&lt;G&gt;" num="123" count="40" type="method"/>
            <line num="124" count="40" type="stmt"/>
            <line falsecount="39" truecount="1" num="124" type="cond"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="withLexer(Lexer) : Builder&lt;G&gt;" num="130" count="14" type="method"/>
            <line num="131" count="14" type="stmt"/>
            <line num="132" count="14" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.matcher">
         <metrics coveredelements="133" complexity="61" loc="478" methods="46" classes="6" statements="87" coveredconditionals="21" coveredmethods="42" elements="159" ncloc="289" files="3" conditionals="26" coveredstatements="70"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/matcher/GrammarFunctions.java" name="GrammarFunctions.java">
            <metrics coveredelements="90" coveredconditionals="18" complexity="39" loc="297" coveredmethods="25" methods="27" elements="104" classes="4" ncloc="180" statements="57" conditionals="20" coveredstatements="47"/>
            <class name="GrammarFunctions">
               <metrics coveredelements="42" coveredconditionals="14" complexity="16" coveredmethods="5" methods="6" elements="54" statements="32" conditionals="16" coveredstatements="23"/>
            </class>
            <class name="GrammarFunctions.Standard">
               <metrics coveredelements="18" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="18" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <class name="GrammarFunctions.Predicate">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="GrammarFunctions.Advanced">
               <metrics coveredelements="25" coveredconditionals="2" complexity="12" coveredmethods="10" methods="11" elements="27" statements="14" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="private" signature="GrammarFunctions()" num="50" count="1" type="method"/>
            <line complexity="1" visibility="private" signature="Standard()" num="55" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="o2n(Object) : Matcher" num="61" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="one2n(Object) : Matcher" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opt(Object) : Matcher" num="77" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(Object) : Matcher" num="85" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="firstOf(Object) : Matcher" num="93" count="7" type="method"/>
            <line num="95" count="7" type="stmt"/>
            <line num="96" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="96" type="cond"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(Object) : Matcher" num="106" count="8" type="method"/>
            <line num="108" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="Predicate()" num="115" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="not(Object) : Matcher" num="121" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="next(Object) : Matcher" num="129" count="1" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="Advanced()" num="138" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="adjacent(Object) : Matcher" num="144" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyTokenButNot(Object) : Matcher" num="152" count="1" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOneOfThem(TokenType) : Matcher" num="160" count="2" type="method"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bridge(TokenType,TokenType) : Matcher" num="169" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTrue() : Matcher" num="177" count="1" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFalse() : Matcher" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyToken() : Matcher" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tillNewLine() : Matcher" num="201" count="1" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="till(Object) : Matcher" num="209" count="1" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="exclusiveTill(Object) : Matcher" num="223" count="2" type="method"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="226" type="cond"/>
            <line num="227" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="enableMemoizationOfMatchesForAllRules(Grammar) : void" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="convertToSingleExpression(Object[]) : ParsingExpression" num="254" count="78" type="method"/>
            <line num="255" count="78" type="stmt"/>
            <line num="256" count="77" type="stmt"/>
            <line falsecount="33" truecount="44" num="256" type="cond"/>
            <line num="257" count="44" type="stmt"/>
            <line num="259" count="33" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertToExpressions(Object[]) : ParsingExpression[]" num="263" count="39" type="method"/>
            <line num="264" count="39" type="stmt"/>
            <line num="265" count="39" type="stmt"/>
            <line num="266" count="39" type="stmt"/>
            <line falsecount="39" truecount="81" num="266" type="cond"/>
            <line num="267" count="81" type="stmt"/>
            <line num="269" count="39" type="stmt"/>
            <line complexity="6" visibility="private" signature="convertToExpression(Object) : ParsingExpression" num="272" count="131" type="method"/>
            <line num="273" count="131" type="stmt"/>
            <line num="274" count="131" type="stmt"/>
            <line falsecount="110" truecount="21" num="274" type="cond"/>
            <line num="275" count="21" type="stmt"/>
            <line num="276" count="110" type="stmt"/>
            <line falsecount="104" truecount="6" num="276" type="cond"/>
            <line num="277" count="6" type="stmt"/>
            <line num="278" count="6" type="stmt"/>
            <line num="279" count="104" type="stmt"/>
            <line falsecount="53" truecount="51" num="279" type="cond"/>
            <line num="280" count="51" type="stmt"/>
            <line num="281" count="53" type="stmt"/>
            <line falsecount="52" truecount="1" num="281" type="cond"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="52" type="stmt"/>
            <line falsecount="0" truecount="51" num="283" type="cond"/>
            <line num="284" count="51" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="130" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkSize(Object[]) : void" num="291" count="126" type="method"/>
            <line num="292" count="126" type="stmt"/>
            <line falsecount="123" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/matcher/Matcher.java" name="Matcher.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Matcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/matcher/RuleDefinition.java" name="RuleDefinition.java">
            <metrics coveredelements="43" coveredconditionals="3" complexity="22" loc="154" coveredmethods="17" methods="19" elements="55" classes="1" ncloc="106" statements="30" conditionals="6" coveredstatements="23"/>
            <class name="RuleDefinition">
               <metrics coveredelements="43" coveredconditionals="3" complexity="22" coveredmethods="17" methods="19" elements="55" statements="30" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="RuleDefinition(String)" num="49" count="27" type="method"/>
            <line num="50" count="27" type="stmt"/>
            <line num="51" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="RuleDefinition(GrammarRuleKey)" num="54" count="298" type="method"/>
            <line num="55" count="298" type="stmt"/>
            <line num="56" count="298" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="59" count="2031" type="method"/>
            <line num="60" count="2031" type="stmt"/>
            <line complexity="1" visibility="public" signature="is(Object) : RuleDefinition" num="63" count="63" type="method"/>
            <line num="65" count="63" type="stmt"/>
            <line num="66" count="62" type="stmt"/>
            <line num="67" count="61" type="stmt"/>
            <line num="68" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="override(Object) : RuleDefinition" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mock() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="skip() : void" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipIfOneChild() : void" num="88" count="37" type="method"/>
            <line num="90" count="37" type="stmt"/>
            <line complexity="2" visibility="private" signature="throwExceptionIfRuleAlreadyDefined(String) : void" num="93" count="63" type="method"/>
            <line num="94" count="63" type="stmt"/>
            <line falsecount="62" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="throwExceptionIfEmptyListOfMatchers(Object[]) : void" num="99" count="63" type="method"/>
            <line num="100" count="63" type="stmt"/>
            <line falsecount="62" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="105" count="1986" type="method"/>
            <line num="107" count="1986" type="stmt"/>
            <line falsecount="0" truecount="1986" num="107" type="cond"/>
            <line num="108" count="1986" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealAstNodeType() : AstNodeType" num="116" count="1981" type="method"/>
            <line num="117" count="1981" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRuleKey() : GrammarRuleKey" num="120" count="7067" type="method"/>
            <line num="122" count="7067" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpression() : ParsingExpression" num="125" count="1937" type="method"/>
            <line num="127" count="1937" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExpression(ParsingExpression) : void" num="130" count="307" type="method"/>
            <line num="132" count="307" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="135" count="2086" type="method"/>
            <line num="137" count="2086" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="140" count="30" type="method"/>
            <line num="142" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldMemoize() : boolean" num="145" count="2363" type="method"/>
            <line num="147" count="2363" type="stmt"/>
            <line complexity="1" visibility="public" signature="enableMemoization() : void" num="150" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.api">
         <metrics coveredelements="443" complexity="183" loc="1876" methods="127" classes="18" statements="332" coveredconditionals="90" coveredmethods="90" elements="569" ncloc="833" files="15" conditionals="110" coveredstatements="263"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/AstAndTokenVisitor.java" name="AstAndTokenVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AstAndTokenVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/AstNode.java" name="AstNode.java">
            <metrics coveredelements="293" coveredconditionals="79" complexity="102" loc="680" coveredmethods="54" methods="59" elements="313" classes="1" ncloc="375" statements="168" conditionals="86" coveredstatements="160"/>
            <class name="AstNode">
               <metrics coveredelements="293" coveredconditionals="79" complexity="102" coveredmethods="54" methods="59" elements="313" statements="168" conditionals="86" coveredstatements="160"/>
            </class>
            <line complexity="1" visibility="public" signature="AstNode(Token)" num="50" count="895" type="method"/>
            <line num="51" count="895" type="stmt"/>
            <line complexity="1" visibility="public" signature="AstNode(AstNodeType,String,Token)" num="54" count="3150" type="method"/>
            <line num="55" count="3150" type="stmt"/>
            <line num="56" count="3150" type="stmt"/>
            <line num="57" count="3150" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParent() : AstNode" num="63" count="242" type="method"/>
            <line num="64" count="242" type="stmt"/>
            <line complexity="5" visibility="public" signature="addChild(AstNode) : void" num="67" count="3005" type="method"/>
            <line num="68" count="3005" type="stmt"/>
            <line falsecount="5" truecount="3000" num="68" type="cond"/>
            <line num="69" count="3000" type="stmt"/>
            <line falsecount="860" truecount="2140" num="69" type="cond"/>
            <line num="70" count="2140" type="stmt"/>
            <line num="72" count="3000" type="stmt"/>
            <line falsecount="2994" truecount="6" num="72" type="cond"/>
            <line num="73" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="73" type="cond"/>
            <line num="74" count="5" type="stmt"/>
            <line num="75" count="5" type="stmt"/>
            <line num="79" count="2994" type="stmt"/>
            <line complexity="1" visibility="private" signature="addChildToList(AstNode) : void" num="84" count="2999" type="method"/>
            <line num="85" count="2999" type="stmt"/>
            <line num="86" count="2999" type="stmt"/>
            <line num="87" count="2999" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasChildren() : boolean" num="93" count="949" type="method"/>
            <line num="94" count="949" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildren() : List&lt;AstNode&gt;" num="102" count="3523" type="method"/>
            <line num="103" count="3523" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfChildren() : int" num="106" count="1075" type="method"/>
            <line num="107" count="1075" type="stmt"/>
            <line complexity="2" visibility="public" signature="getChild(int) : AstNode" num="113" count="3" type="method"/>
            <line num="115" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="115" type="cond"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextAstNode() : AstNode" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNextAstNode() : AstNode" num="135" count="3" type="method"/>
            <line num="136" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="137" type="cond"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="140" type="cond"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousAstNode() : AstNode" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPreviousAstNode() : AstNode" num="159" count="2" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="161" type="cond"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextSibling() : AstNode" num="173" count="2" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNextSibling() : AstNode" num="184" count="8" type="method"/>
            <line num="185" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="185" type="cond"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="188" type="cond"/>
            <line num="189" count="3" type="stmt"/>
            <line num="191" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousSibling() : AstNode" num="197" count="2" type="method"/>
            <line num="199" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPreviousSibling() : AstNode" num="208" count="7" type="method"/>
            <line num="209" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="209" type="cond"/>
            <line num="210" count="2" type="stmt"/>
            <line num="212" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="212" type="cond"/>
            <line num="213" count="3" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTokenValue() : String" num="223" count="98" type="method"/>
            <line num="224" count="98" type="stmt"/>
            <line falsecount="95" truecount="3" num="224" type="cond"/>
            <line num="225" count="3" type="stmt"/>
            <line num="227" count="95" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTokenOriginalValue() : String" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getToken() : Token" num="245" count="187" type="method"/>
            <line num="246" count="187" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenLine() : int" num="254" count="44" type="method"/>
            <line num="255" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToken() : boolean" num="258" count="82" type="method"/>
            <line num="259" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="262" count="1374" type="method"/>
            <line num="263" count="1374" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFromIndex() : int" num="266" count="3" type="method"/>
            <line num="267" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFromIndex(int) : void" num="270" count="2948" type="method"/>
            <line num="271" count="2948" type="stmt"/>
            <line complexity="1" visibility="public" signature="getToIndex() : int" num="274" count="3" type="method"/>
            <line num="275" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="hasToBeSkippedFromAst() : boolean" num="281" count="5910" type="method"/>
            <line num="282" count="5910" type="stmt"/>
            <line falsecount="5907" truecount="3" num="282" type="cond"/>
            <line num="283" count="3" type="stmt"/>
            <line num="285" count="5907" type="stmt"/>
            <line num="286" count="5907" type="stmt"/>
            <line falsecount="3777" truecount="2130" num="286" type="cond"/>
            <line num="287" count="2130" type="stmt"/>
            <line num="289" count="3777" type="stmt"/>
            <line num="293" count="5907" type="stmt"/>
            <line falsecount="5789" truecount="118" num="293" type="cond"/>
            <line num="294" count="118" type="stmt"/>
            <line num="295" count="5789" type="stmt"/>
            <line falsecount="3808" truecount="1981" num="295" type="cond"/>
            <line num="296" count="1981" type="stmt"/>
            <line num="298" count="5907" type="stmt"/>
            <line complexity="1" visibility="public" signature="setToIndex(int) : void" num="301" count="2948" type="method"/>
            <line num="302" count="2948" type="stmt"/>
            <line complexity="2" visibility="public" signature="is(AstNodeType) : boolean" num="305" count="1011" type="method"/>
            <line num="306" count="1011" type="stmt"/>
            <line num="307" count="1017" type="stmt"/>
            <line falsecount="922" truecount="95" num="307" type="cond"/>
            <line num="308" count="95" type="stmt"/>
            <line num="311" count="916" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNot(AstNodeType) : boolean" num="314" count="4" type="method"/>
            <line num="315" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="findFirstDirectChild(AstNodeType) : AstNode" num="321" count="2" type="method"/>
            <line num="323" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFirstChild(AstNodeType) : AstNode" num="341" count="39" type="method"/>
            <line num="342" count="39" type="stmt"/>
            <line num="343" count="109" type="stmt"/>
            <line num="344" count="110" type="stmt"/>
            <line falsecount="86" truecount="24" num="344" type="cond"/>
            <line num="345" count="24" type="stmt"/>
            <line num="349" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="findFirstChild(AstNodeType) : AstNode" num="355" count="4" type="method"/>
            <line num="357" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFirstDescendant(AstNodeType) : AstNode" num="375" count="86" type="method"/>
            <line num="376" count="86" type="stmt"/>
            <line num="377" count="82" type="stmt"/>
            <line falsecount="72" truecount="10" num="377" type="cond"/>
            <line num="378" count="10" type="stmt"/>
            <line num="380" count="72" type="stmt"/>
            <line num="381" count="72" type="stmt"/>
            <line falsecount="69" truecount="3" num="381" type="cond"/>
            <line num="382" count="3" type="stmt"/>
            <line num="385" count="73" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFirstChild() : AstNode" num="393" count="18" type="method"/>
            <line num="394" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="394" type="cond"/>
            <line complexity="1" visibility="public" signature="findDirectChildren(AstNodeType) : List&lt;AstNode&gt;" num="400" count="2" type="method"/>
            <line num="402" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getChildren(AstNodeType) : List&lt;AstNode&gt;" num="420" count="6" type="method"/>
            <line num="421" count="6" type="stmt"/>
            <line num="422" count="6" type="stmt"/>
            <line num="423" count="22" type="stmt"/>
            <line num="424" count="29" type="stmt"/>
            <line falsecount="21" truecount="8" num="424" type="cond"/>
            <line num="425" count="8" type="stmt"/>
            <line num="429" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="findChildren(AstNodeType) : List&lt;AstNode&gt;" num="435" count="7" type="method"/>
            <line num="437" count="7" type="stmt"/>
            <line num="438" count="7" type="stmt"/>
            <line num="439" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescendants(AstNodeType) : List&lt;AstNode&gt;" num="459" count="10" type="method"/>
            <line num="460" count="10" type="stmt"/>
            <line num="461" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="461" type="cond"/>
            <line num="462" count="10" type="stmt"/>
            <line num="463" count="36" type="stmt"/>
            <line num="466" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDescendants(List&lt;AstNode&gt;,AstNodeType) : void" num="469" count="807" type="method"/>
            <line num="470" count="807" type="stmt"/>
            <line num="471" count="875" type="stmt"/>
            <line falsecount="819" truecount="56" num="471" type="cond"/>
            <line num="472" count="56" type="stmt"/>
            <line num="475" count="807" type="stmt"/>
            <line falsecount="376" truecount="431" num="475" type="cond"/>
            <line num="476" count="431" type="stmt"/>
            <line num="477" count="764" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastChild() : AstNode" num="487" count="2" type="method"/>
            <line num="488" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="488" type="cond"/>
            <line complexity="3" visibility="public" signature="getLastChild(AstNodeType) : AstNode" num="507" count="4" type="method"/>
            <line num="509" count="4" type="stmt"/>
            <line falsecount="1" truecount="12" num="509" type="cond"/>
            <line num="510" count="12" type="stmt"/>
            <line num="511" count="12" type="stmt"/>
            <line num="512" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="512" type="cond"/>
            <line num="513" count="3" type="stmt"/>
            <line num="517" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDirectChildren(AstNodeType) : boolean" num="523" count="20" type="method"/>
            <line num="524" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasChildren(AstNodeType) : boolean" num="532" count="2" type="method"/>
            <line num="534" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDescendant(AstNodeType) : boolean" num="541" count="5" type="method"/>
            <line num="542" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasParents(AstNodeType) : boolean" num="548" count="2" type="method"/>
            <line num="550" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasParent(AstNodeType) : boolean" num="556" count="4" type="method"/>
            <line num="557" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAncestor(AstNodeType) : boolean" num="564" count="5" type="method"/>
            <line num="565" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAncestor(AstNodeType) : boolean" num="572" count="1" type="method"/>
            <line num="573" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="findFirstParent(AstNodeType) : AstNode" num="579" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFirstAncestor(AstNodeType) : AstNode" num="588" count="16" type="method"/>
            <line num="589" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="589" type="cond"/>
            <line num="590" count="4" type="stmt"/>
            <line num="591" count="12" type="stmt"/>
            <line falsecount="9" truecount="3" num="591" type="cond"/>
            <line num="592" count="3" type="stmt"/>
            <line num="594" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFirstAncestor(AstNodeType) : AstNode" num="602" count="3" type="method"/>
            <line num="603" count="3" type="stmt"/>
            <line num="604" count="3" type="stmt"/>
            <line falsecount="1" truecount="6" num="604" type="cond"/>
            <line num="605" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="605" type="cond"/>
            <line num="606" count="2" type="stmt"/>
            <line num="608" count="4" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCopyBookOrGeneratedNode() : boolean" num="613" count="0" type="method"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : AstNodeType" num="617" count="164" type="method"/>
            <line num="618" count="164" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokens() : List&lt;Token&gt;" num="624" count="14" type="method"/>
            <line num="625" count="14" type="stmt"/>
            <line num="626" count="14" type="stmt"/>
            <line num="627" count="14" type="stmt"/>
            <line complexity="4" visibility="private" signature="getTokens(List&lt;Token&gt;) : void" num="630" count="77" type="method"/>
            <line num="631" count="77" type="stmt"/>
            <line falsecount="41" truecount="36" num="631" type="cond"/>
            <line num="632" count="36" type="stmt"/>
            <line falsecount="6" truecount="30" num="632" type="cond"/>
            <line num="633" count="30" type="stmt"/>
            <line num="636" count="41" type="stmt"/>
            <line falsecount="41" truecount="63" num="636" type="cond"/>
            <line num="637" count="63" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="642" count="35" type="method"/>
            <line num="644" count="35" type="stmt"/>
            <line num="645" count="35" type="stmt"/>
            <line num="646" count="35" type="stmt"/>
            <line falsecount="9" truecount="26" num="646" type="cond"/>
            <line num="647" count="26" type="stmt"/>
            <line num="648" count="26" type="stmt"/>
            <line num="649" count="26" type="stmt"/>
            <line num="651" count="35" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLastToken() : Token" num="654" count="6" type="method"/>
            <line num="655" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="655" type="cond"/>
            <line num="656" count="3" type="stmt"/>
            <line num="658" count="3" type="stmt"/>
            <line num="659" count="3" type="stmt"/>
            <line falsecount="3" truecount="2" num="659" type="cond"/>
            <line num="660" count="2" type="stmt"/>
            <line falsecount="0" truecount="3" num="660" type="cond"/>
            <line num="661" count="3" type="stmt"/>
            <line num="662" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="662" type="cond"/>
            <line num="663" count="2" type="stmt"/>
            <line num="664" count="2" type="stmt"/>
            <line num="668" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="select() : AstSelect" num="675" count="13" type="method"/>
            <line num="677" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/AstNodeSkippingPolicy.java" name="AstNodeSkippingPolicy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AstNodeSkippingPolicy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/AstNodeType.java" name="AstNodeType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AstNodeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/AstVisitor.java" name="AstVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AstVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/GenericTokenType.java" name="GenericTokenType.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="39" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="GenericTokenType">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : String" num="25" count="197" type="method"/>
            <line num="27" count="197" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="35" count="188" type="method"/>
            <line num="37" count="188" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/Grammar.java" name="Grammar.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="9" loc="122" coveredmethods="4" methods="5" elements="35" classes="1" ncloc="54" statements="24" conditionals="6" coveredstatements="22"/>
            <class name="Grammar">
               <metrics coveredelements="32" coveredconditionals="6" complexity="9" coveredmethods="4" methods="5" elements="35" statements="24" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Grammar()" num="39" count="90" type="method"/>
            <line num="40" count="90" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRuleFields(Class) : List&lt;Field&gt;" num="52" count="364" type="method"/>
            <line num="53" count="364" type="stmt"/>
            <line num="55" count="364" type="stmt"/>
            <line num="56" count="364" type="stmt"/>
            <line num="57" count="818" type="stmt"/>
            <line falsecount="582" truecount="236" num="57" type="cond"/>
            <line num="58" count="236" type="stmt"/>
            <line num="62" count="364" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAllRuleFields(Class) : List&lt;Field&gt;" num="74" count="93" type="method"/>
            <line num="75" count="93" type="stmt"/>
            <line num="77" count="93" type="stmt"/>
            <line num="78" count="93" type="stmt"/>
            <line falsecount="93" truecount="270" num="78" type="cond"/>
            <line num="79" count="270" type="stmt"/>
            <line num="80" count="270" type="stmt"/>
            <line num="83" count="93" type="stmt"/>
            <line complexity="3" visibility="private" signature="instanciateRuleFields() : void" num="86" count="90" type="method"/>
            <line num="87" count="90" type="stmt"/>
            <line num="88" count="224" type="stmt"/>
            <line num="89" count="224" type="stmt"/>
            <line num="90" count="224" type="stmt"/>
            <line num="91" count="224" type="stmt"/>
            <line falsecount="11" truecount="213" num="91" type="cond"/>
            <line num="92" count="213" type="stmt"/>
            <line num="94" count="11" type="stmt"/>
            <line num="97" count="224" type="stmt"/>
            <line num="98" count="224" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule(GrammarRuleKey) : Rule" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/PreprocessingDirective.java" name="PreprocessingDirective.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="58" coveredmethods="0" methods="4" elements="9" classes="2" ncloc="25" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="PreprocessingDirective">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PreprocessingDirective.DefaultPreprocessingDirective">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(AstNode,Grammar) : PreprocessingDirective" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DefaultPreprocessingDirective(AstNode,Grammar)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAst() : AstNode" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGrammar() : Grammar" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/Preprocessor.java" name="Preprocessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="113" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Preprocessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="75" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/PreprocessorAction.java" name="PreprocessorAction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="115" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="31" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="PreprocessorAction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="PreprocessorAction(int,List&lt;Trivia&gt;,List&lt;Token&gt;)" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfConsumedTokens() : int" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTriviaToInject() : List&lt;Trivia&gt;" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokensToInject() : List&lt;Token&gt;" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/RecognitionException.java" name="RecognitionException.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="61" coveredmethods="2" methods="4" elements="11" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="4"/>
            <class name="RecognitionException">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="RecognitionException(LexerException)" num="31" count="3" type="method"/>
            <line num="32" count="3" type="stmt"/>
            <line num="33" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="RecognitionException(int,String)" num="39" count="11" type="method"/>
            <line num="40" count="11" type="stmt"/>
            <line num="41" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="RecognitionException(int,String,Throwable)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLine() : int" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/Rule.java" name="Rule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="79" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Rule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/Token.java" name="Token.java">
            <metrics coveredelements="94" coveredconditionals="4" complexity="36" loc="279" coveredmethods="23" methods="31" elements="126" classes="2" ncloc="183" statements="85" conditionals="10" coveredstatements="67"/>
            <class name="Token">
               <metrics coveredelements="34" coveredconditionals="2" complexity="19" coveredmethods="11" methods="17" elements="48" statements="27" conditionals="4" coveredstatements="21"/>
            </class>
            <class name="Token.Builder">
               <metrics coveredelements="60" coveredconditionals="2" complexity="17" coveredmethods="12" methods="14" elements="78" statements="58" conditionals="6" coveredstatements="46"/>
            </class>
            <line complexity="2" visibility="private" signature="Token(Builder)" num="47" count="1110" type="method"/>
            <line num="48" count="1110" type="stmt"/>
            <line num="49" count="1110" type="stmt"/>
            <line num="50" count="1110" type="stmt"/>
            <line num="51" count="1110" type="stmt"/>
            <line num="52" count="1110" type="stmt"/>
            <line num="53" count="1110" type="stmt"/>
            <line num="54" count="1110" type="stmt"/>
            <line num="55" count="1110" type="stmt"/>
            <line falsecount="50" truecount="1060" num="55" type="cond"/>
            <line num="56" count="1110" type="stmt"/>
            <line num="57" count="1110" type="stmt"/>
            <line num="58" count="1110" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : TokenType" num="61" count="8655" type="method"/>
            <line num="62" count="8655" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="65" count="255" type="method"/>
            <line num="66" count="255" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOriginalValue() : String" num="73" count="37" type="method"/>
            <line num="74" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLine() : int" num="80" count="130" type="method"/>
            <line num="81" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumn() : int" num="87" count="114" type="method"/>
            <line num="88" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="getURI() : URI" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCopyBook() : boolean" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isGeneratedCode() : boolean" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasTrivia() : boolean" num="109" count="926" type="method"/>
            <line num="110" count="926" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrivia() : List&lt;Trivia&gt;" num="116" count="10" type="method"/>
            <line num="117" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCopyBookOriginalLine() : int" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCopyBookOriginalFileName() : String" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="isOnSameLineThan(Token) : boolean" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="132" count="7" type="method"/>
            <line num="134" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder() : Builder" num="137" count="230" type="method"/>
            <line num="138" count="230" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder(Token) : Builder" num="141" count="32" type="method"/>
            <line num="142" count="32" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder()" num="163" count="230" type="method"/>
            <line complexity="1" visibility="private" signature="Builder(Token)" num="166" count="32" type="method"/>
            <line num="167" count="32" type="stmt"/>
            <line num="168" count="32" type="stmt"/>
            <line num="169" count="32" type="stmt"/>
            <line num="170" count="32" type="stmt"/>
            <line num="171" count="32" type="stmt"/>
            <line num="172" count="32" type="stmt"/>
            <line num="173" count="32" type="stmt"/>
            <line num="174" count="32" type="stmt"/>
            <line num="175" count="32" type="stmt"/>
            <line num="176" count="32" type="stmt"/>
            <line num="177" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="setType(TokenType) : Builder" num="180" count="1078" type="method"/>
            <line num="181" count="1078" type="stmt"/>
            <line num="183" count="1078" type="stmt"/>
            <line num="184" count="1078" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValueAndOriginalValue(String) : Builder" num="187" count="767" type="method"/>
            <line num="188" count="767" type="stmt"/>
            <line num="190" count="767" type="stmt"/>
            <line num="191" count="767" type="stmt"/>
            <line num="192" count="767" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValueAndOriginalValue(String,String) : Builder" num="195" count="311" type="method"/>
            <line num="196" count="311" type="stmt"/>
            <line num="197" count="311" type="stmt"/>
            <line num="199" count="311" type="stmt"/>
            <line num="200" count="311" type="stmt"/>
            <line num="201" count="311" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLine(int) : Builder" num="204" count="1079" type="method"/>
            <line num="205" count="1079" type="stmt"/>
            <line num="206" count="1079" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumn(int) : Builder" num="209" count="1079" type="method"/>
            <line num="210" count="1079" type="stmt"/>
            <line num="211" count="1079" type="stmt"/>
            <line complexity="1" visibility="public" signature="setURI(URI) : Builder" num="214" count="1078" type="method"/>
            <line num="215" count="1078" type="stmt"/>
            <line num="217" count="1078" type="stmt"/>
            <line num="218" count="1078" type="stmt"/>
            <line complexity="1" visibility="public" signature="setGeneratedCode(boolean) : Builder" num="221" count="59" type="method"/>
            <line num="222" count="59" type="stmt"/>
            <line num="223" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="setTrivia(List&lt;Trivia&gt;) : Builder" num="226" count="91" type="method"/>
            <line num="227" count="91" type="stmt"/>
            <line num="229" count="91" type="stmt"/>
            <line num="230" count="91" type="stmt"/>
            <line complexity="2" visibility="public" signature="addTrivia(Trivia) : Builder" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="notCopyBook() : Builder" num="247" count="40" type="method"/>
            <line num="248" count="40" type="stmt"/>
            <line num="249" count="40" type="stmt"/>
            <line num="250" count="40" type="stmt"/>
            <line num="251" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCopyBook(String,int) : Builder" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="build() : Token" num="263" count="1110" type="method"/>
            <line num="264" count="1110" type="stmt"/>
            <line num="265" count="1110" type="stmt"/>
            <line num="266" count="1110" type="stmt"/>
            <line num="267" count="1110" type="stmt"/>
            <line num="268" count="1110" type="stmt"/>
            <line falsecount="1110" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="1110" type="stmt"/>
            <line falsecount="1110" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="1110" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/TokenType.java" name="TokenType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TokenType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/Trivia.java" name="Trivia.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="19" loc="123" coveredmethods="5" methods="16" elements="52" classes="2" ncloc="81" statements="30" conditionals="6" coveredstatements="8"/>
            <class name="Trivia">
               <metrics coveredelements="14" coveredconditionals="1" complexity="19" coveredmethods="5" methods="16" elements="52" statements="30" conditionals="6" coveredstatements="8"/>
            </class>
            <class name="Trivia.TriviaKind">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Trivia(TriviaKind,Token)" num="38" count="54" type="method"/>
            <line num="39" count="54" type="stmt"/>
            <line complexity="2" visibility="private" signature="Trivia(TriviaKind,PreprocessingDirective,Token)" num="42" count="54" type="method"/>
            <line num="43" count="54" type="stmt"/>
            <line num="44" count="54" type="stmt"/>
            <line num="45" count="54" type="stmt"/>
            <line num="46" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getToken() : Token" num="51" count="8" type="method"/>
            <line num="52" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokens() : List&lt;Token&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isComment() : boolean" num="59" count="7" type="method"/>
            <line num="60" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPreprocessor() : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSkippedText() : boolean" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasPreprocessingDirective() : boolean" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreprocessingDirective() : PreprocessingDirective" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createComment(Token) : Trivia" num="97" count="54" type="method"/>
            <line num="98" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSkippedText(List&lt;Token&gt;) : Trivia" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSkippedText(Token) : Trivia" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createPreprocessingToken(Token) : Trivia" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createPreprocessingDirective(PreprocessingDirective) : Trivia" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createPreprocessingDirective(AstNode,Grammar) : Trivia" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.ast">
         <metrics coveredelements="123" complexity="41" loc="347" methods="28" classes="5" statements="77" coveredconditionals="22" coveredmethods="27" elements="127" ncloc="201" files="5" conditionals="22" coveredstatements="74"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/ast/AlwaysSkipFromAst.java" name="AlwaysSkipFromAst.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="3" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AlwaysSkipFromAst">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="AlwaysSkipFromAst()" num="29" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="32" count="23" type="method"/>
            <line num="34" count="23" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/ast/AstWalker.java" name="AstWalker.java">
            <metrics coveredelements="62" coveredconditionals="12" complexity="20" loc="134" coveredmethods="12" methods="13" elements="65" classes="1" ncloc="95" statements="40" conditionals="12" coveredstatements="38"/>
            <class name="AstWalker">
               <metrics coveredelements="62" coveredconditionals="12" complexity="20" coveredmethods="12" methods="13" elements="65" statements="40" conditionals="12" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="public" signature="AstWalker(AstVisitor)" num="41" count="5" type="method"/>
            <line num="42" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="AstWalker(List&lt;? extends AstVisitor&gt;)" num="45" count="5" type="method"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addVisitor(AstVisitor) : void" num="51" count="5" type="method"/>
            <line num="52" count="5" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="58" type="cond"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="walkAndVisit(AstNode) : void" num="65" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="70" type="cond"/>
            <line num="71" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="walkVisitAndListen(AstNode,Object) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="visit(AstNode) : void" num="83" count="13" type="method"/>
            <line num="84" count="13" type="stmt"/>
            <line num="85" count="13" type="stmt"/>
            <line num="86" count="13" type="stmt"/>
            <line num="87" count="13" type="stmt"/>
            <line num="88" count="13" type="stmt"/>
            <line complexity="2" visibility="private" signature="leaveNode(AstNode,AstVisitor[]) : void" num="91" count="13" type="method"/>
            <line num="92" count="13" type="stmt"/>
            <line falsecount="13" truecount="1" num="92" type="cond"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitChildren(AstNode) : void" num="97" count="13" type="method"/>
            <line num="98" count="13" type="stmt"/>
            <line num="99" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitToken(AstNode) : void" num="103" count="13" type="method"/>
            <line num="104" count="13" type="stmt"/>
            <line falsecount="12" truecount="1" num="104" type="cond"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitNode(AstNode,AstVisitor[]) : void" num="112" count="13" type="method"/>
            <line num="113" count="13" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNodeVisitors(AstNode) : AstVisitor[]" num="118" count="13" type="method"/>
            <line num="119" count="13" type="stmt"/>
            <line num="120" count="13" type="stmt"/>
            <line falsecount="1" truecount="12" num="120" type="cond"/>
            <line num="121" count="12" type="stmt"/>
            <line num="123" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="putAstVisitors(AstNodeType,List&lt;AstVisitor&gt;) : void" num="126" count="3" type="method"/>
            <line num="127" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="getAstVisitors(AstNodeType) : List&lt;AstVisitor&gt;" num="130" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="132" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/ast/AstXmlPrinter.java" name="AstXmlPrinter.java">
            <metrics coveredelements="52" coveredconditionals="10" complexity="15" loc="102" coveredmethods="9" methods="9" elements="53" classes="1" ncloc="70" statements="34" conditionals="10" coveredstatements="33"/>
            <class name="AstXmlPrinter">
               <metrics coveredelements="52" coveredconditionals="10" complexity="15" coveredmethods="9" methods="9" elements="53" statements="34" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="private" signature="AstXmlPrinter(AstNode,Writer)" num="33" count="7" type="method"/>
            <line num="34" count="7" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="print(AstNode) : String" num="38" count="7" type="method"/>
            <line num="39" count="7" type="stmt"/>
            <line num="40" count="7" type="stmt"/>
            <line num="41" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="print(AstNode,Writer) : void" num="44" count="7" type="method"/>
            <line num="45" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="print() : void" num="49" count="7" type="method"/>
            <line num="50" count="7" type="stmt"/>
            <line num="51" count="7" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="printNode(int,AstNode) : void" num="57" count="37" type="method"/>
            <line num="58" count="37" type="stmt"/>
            <line falsecount="7" truecount="30" num="58" type="cond"/>
            <line num="59" count="30" type="stmt"/>
            <line num="61" count="37" type="stmt"/>
            <line num="62" count="37" type="stmt"/>
            <line falsecount="18" truecount="19" num="62" type="cond"/>
            <line num="63" count="19" type="stmt"/>
            <line num="64" count="19" type="stmt"/>
            <line num="65" count="19" type="stmt"/>
            <line num="66" count="19" type="stmt"/>
            <line num="67" count="19" type="stmt"/>
            <line num="68" count="19" type="stmt"/>
            <line num="70" count="18" type="stmt"/>
            <line num="71" count="18" type="stmt"/>
            <line num="72" count="18" type="stmt"/>
            <line complexity="3" visibility="private" signature="appendNodecontent(AstNode) : void" num="76" count="37" type="method"/>
            <line num="77" count="37" type="stmt"/>
            <line num="78" count="37" type="stmt"/>
            <line falsecount="3" truecount="34" num="78" type="cond"/>
            <line num="79" count="34" type="stmt"/>
            <line num="81" count="37" type="stmt"/>
            <line falsecount="3" truecount="34" num="81" type="cond"/>
            <line num="82" count="34" type="stmt"/>
            <line complexity="1" visibility="private" signature="toXmlChildren(int,AstNode) : void" num="86" count="19" type="method"/>
            <line num="87" count="19" type="stmt"/>
            <line num="88" count="30" type="stmt"/>
            <line complexity="1" visibility="private" signature="appendCarriageReturnAndSpaces(int) : void" num="92" count="19" type="method"/>
            <line num="93" count="19" type="stmt"/>
            <line num="94" count="19" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendSpaces(int) : void" num="97" count="56" type="method"/>
            <line num="98" count="56" type="stmt"/>
            <line falsecount="56" truecount="122" num="98" type="cond"/>
            <line num="99" count="122" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/ast/NeverSkipFromAst.java" name="NeverSkipFromAst.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="3" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NeverSkipFromAst">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="NeverSkipFromAst()" num="29" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="32" count="1142" type="method"/>
            <line num="34" count="1142" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/ast/SkipFromAstIfOnlyOneChild.java" name="SkipFromAstIfOnlyOneChild.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="2" loc="37" coveredmethods="2" methods="2" elements="3" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SkipFromAstIfOnlyOneChild">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="SkipFromAstIfOnlyOneChild()" num="29" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="32" count="942" type="method"/>
            <line num="34" count="942" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.benchmarks">
         <metrics coveredelements="80" complexity="21" loc="314" methods="18" classes="5" statements="56" coveredconditionals="6" coveredmethods="18" elements="80" ncloc="199" files="4" conditionals="6" coveredstatements="56"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/main/java/org/sonar/sslr/benchmarks/MemoizationOfMismatchesBenchmark.java" name="MemoizationOfMismatchesBenchmark.java">
            <metrics coveredelements="33" coveredconditionals="6" complexity="7" loc="88" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="57" statements="23" conditionals="6" coveredstatements="23"/>
            <class name="MemoizationOfMismatchesBenchmark">
               <metrics coveredelements="33" coveredconditionals="6" complexity="7" coveredmethods="4" methods="4" elements="33" statements="23" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="4" visibility="public" signature="setup() : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="52" type="cond"/>
            <line num="53" count="5" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="59" type="cond"/>
            <line num="60" count="5" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="67" type="cond"/>
            <line num="68" count="5" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="required() : boolean" num="73" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notRequired() : boolean" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="newRuleKey() : GrammarRuleKey" num="83" count="7" type="method"/>
            <line num="84" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/main/java/org/sonar/sslr/benchmarks/OneOrMoreExpressionBenchmark.java" name="OneOrMoreExpressionBenchmark.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="70" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="43" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="OneOrMoreExpressionBenchmark">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setup() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore() : boolean" num="56" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usingZeroOrMore() : boolean" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="compile(ParsingExpression) : Instruction[]" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/main/java/org/sonar/sslr/benchmarks/RecursiveRuleBenchmark.java" name="RecursiveRuleBenchmark.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="85" coveredmethods="6" methods="6" elements="23" classes="2" ncloc="55" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="RecursiveRuleBenchmark">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="RecursiveRuleBenchmark.MyGrammar">
               <metrics coveredelements="14" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="14" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="recursive() : Grammar" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="greedy() : Grammar" num="48" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="common() : LexerlessGrammarBuilder" num="54" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setup() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="recursive() : ParsingResult" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="greedy() : ParsingResult" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/main/java/org/sonar/sslr/benchmarks/ZeroOrMoreExpressionBenchmark.java" name="ZeroOrMoreExpressionBenchmark.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="71" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="44" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="ZeroOrMoreExpressionBenchmark">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setup() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore() : boolean" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optionalOneOrMore() : boolean" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="compile(ParsingExpression) : Instruction[]" num="67" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.toolkit">
         <metrics coveredelements="108" complexity="50" loc="573" methods="30" classes="9" statements="86" coveredconditionals="23" coveredmethods="21" elements="144" ncloc="254" files="6" conditionals="28" coveredstatements="64"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/toolkit/AbstractConfigurationModel.java" name="AbstractConfigurationModel.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="7" loc="99" coveredmethods="5" methods="6" elements="19" classes="1" ncloc="40" statements="11" conditionals="2" coveredstatements="10"/>
            <class name="AbstractConfigurationModel">
               <metrics coveredelements="17" coveredconditionals="2" complexity="7" coveredmethods="5" methods="6" elements="19" statements="11" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConfigurationModel()" num="43" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUpdatedFlag() : void" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="ensureUpToDate() : void" num="52" count="10" type="method"/>
            <line num="53" count="10" type="stmt"/>
            <line falsecount="2" truecount="8" num="53" type="cond"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharset() : Charset" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParser() : Parser" num="71" count="5" type="method"/>
            <line num="73" count="5" type="stmt"/>
            <line num="74" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenizers() : List&lt;Tokenizer&gt;" num="77" count="5" type="method"/>
            <line num="79" count="5" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/toolkit/ConfigurationModel.java" name="ConfigurationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="75" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConfigurationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/toolkit/ConfigurationProperty.java" name="ConfigurationProperty.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="10" loc="97" coveredmethods="8" methods="8" elements="33" classes="1" ncloc="50" statements="21" conditionals="4" coveredstatements="19"/>
            <class name="ConfigurationProperty">
               <metrics coveredelements="29" coveredconditionals="2" complexity="10" coveredmethods="8" methods="8" elements="33" statements="21" conditionals="4" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="validate(String) : String" num="33" count="16" type="method"/>
            <line num="35" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConfigurationProperty(String,String,String)" num="44" count="11" type="method"/>
            <line num="45" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="ConfigurationProperty(String,String,String,ValidationCallback)" num="55" count="13" type="method"/>
            <line num="56" count="13" type="stmt"/>
            <line num="57" count="13" type="stmt"/>
            <line num="58" count="13" type="stmt"/>
            <line num="59" count="13" type="stmt"/>
            <line num="61" count="13" type="stmt"/>
            <line num="62" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="13" type="stmt"/>
            <line num="67" count="13" type="stmt"/>
            <line num="68" count="13" type="stmt"/>
            <line num="69" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : String" num="76" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="validate(String) : String" num="80" count="9" type="method"/>
            <line num="81" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValue(String) : void" num="84" count="4" type="method"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line falsecount="3" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="93" count="4" type="method"/>
            <line num="94" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/toolkit/Toolkit.java" name="Toolkit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="110" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="59" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="Toolkit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Toolkit(Parser,List&lt;Tokenizer&gt;,String)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProperties() : List&lt;ConfigurationProperty&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGetTokenizers() : List&lt;Tokenizer&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGetParser() : Parser" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Toolkit(String,ConfigurationModel)" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/toolkit/ValidationCallback.java" name="ValidationCallback.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ValidationCallback">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/toolkit/Validators.java" name="Validators.java">
            <metrics coveredelements="62" coveredconditionals="19" complexity="24" loc="153" coveredmethods="8" methods="9" elements="65" classes="4" ncloc="89" statements="36" conditionals="20" coveredstatements="35"/>
            <class name="Validators">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="Validators.CharsetValidator">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="1" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="Validators.IntegerRangeValidator">
               <metrics coveredelements="46" coveredconditionals="17" complexity="14" coveredmethods="3" methods="3" elements="48" statements="27" conditionals="18" coveredstatements="26"/>
            </class>
            <class name="Validators.BooleanValidator">
               <metrics coveredelements="4" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="Validators()" num="36" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="charsetValidator() : ValidationCallback" num="44" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="validate(String) : String" num="50" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRangeValidator(int,int) : ValidationCallback" num="71" count="9" type="method"/>
            <line num="72" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="IntegerRangeValidator(int,int)" num="80" count="9" type="method"/>
            <line num="81" count="9" type="stmt"/>
            <line falsecount="8" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="validate(String) : String" num="89" count="11" type="method"/>
            <line num="91" count="11" type="stmt"/>
            <line num="92" count="11" type="stmt"/>
            <line num="94" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="94" type="cond"/>
            <line num="95" count="9" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="8" visibility="private" signature="getErrorMessage(int) : String" num="104" count="9" type="method"/>
            <line num="105" count="9" type="stmt"/>
            <line num="107" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="107" type="cond"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="109" type="cond"/>
            <line num="110" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="110" type="cond"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="112" type="cond"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="117" type="cond"/>
            <line num="118" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="118" type="cond"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="120" type="cond"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="129" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanValidator() : ValidationCallback" num="138" count="3" type="method"/>
            <line num="139" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="validate(String) : String" num="144" count="3" type="method"/>
            <line num="146" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="146" type="cond"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.toolkit">
         <metrics coveredelements="149" complexity="121" loc="1326" methods="78" classes="7" statements="345" coveredconditionals="21" coveredmethods="20" elements="491" ncloc="813" files="7" conditionals="68" coveredstatements="108"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/ConfigurationPropertyPanel.java" name="ConfigurationPropertyPanel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="81" coveredmethods="0" methods="4" elements="26" classes="1" ncloc="47" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="ConfigurationPropertyPanel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="26" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConfigurationPropertyPanel(String,String)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPanel() : JPanel" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getErrorMessageLabel() : JLabel" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueTextField() : JTextField" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/CssLoader.java" name="CssLoader.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="43" coveredmethods="1" methods="2" elements="6" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="CssLoader">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="1" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="CssLoader()" num="31" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getCss() : String" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/LineOffsets.java" name="LineOffsets.java">
            <metrics coveredelements="28" coveredconditionals="8" complexity="9" loc="74" coveredmethods="4" methods="4" elements="32" classes="1" ncloc="40" statements="18" conditionals="10" coveredstatements="16"/>
            <class name="LineOffsets">
               <metrics coveredelements="28" coveredconditionals="8" complexity="9" coveredmethods="4" methods="4" elements="32" statements="18" conditionals="10" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="public" signature="LineOffsets(String)" num="34" count="10" type="method"/>
            <line num="35" count="10" type="stmt"/>
            <line num="37" count="10" type="stmt"/>
            <line num="38" count="10" type="stmt"/>
            <line falsecount="10" truecount="21" num="38" type="cond"/>
            <line num="39" count="21" type="stmt"/>
            <line num="40" count="21" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartOffset(Token) : int" num="46" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getEndOffset(Token) : int" num="50" count="8" type="method"/>
            <line num="51" count="8" type="stmt"/>
            <line num="53" count="8" type="stmt"/>
            <line num="54" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="54" type="cond"/>
            <line num="56" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOffset(int,int) : int" num="59" count="19" type="method"/>
            <line num="60" count="19" type="stmt"/>
            <line falsecount="18" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="18" type="stmt"/>
            <line falsecount="17" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="17" type="stmt"/>
            <line falsecount="1" truecount="16" num="67" type="cond"/>
            <line num="68" count="16" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/SourceCodeModel.java" name="SourceCodeModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="78" coveredmethods="0" methods="6" elements="17" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="SourceCodeModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SourceCodeModel(ConfigurationModel)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setSourceCode(File,Charset) : void" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSourceCode(String) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHighlightedSourceCode() : String" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXml() : String" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAstNode() : AstNode" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/ToolkitPresenter.java" name="ToolkitPresenter.java">
            <metrics coveredelements="117" coveredconditionals="13" complexity="24" loc="220" coveredmethods="15" methods="15" elements="124" classes="1" ncloc="160" statements="93" conditionals="16" coveredstatements="89"/>
            <class name="ToolkitPresenter">
               <metrics coveredelements="117" coveredconditionals="13" complexity="24" coveredmethods="15" methods="15" elements="124" statements="93" conditionals="16" coveredstatements="89"/>
            </class>
            <line complexity="1" visibility="public" signature="ToolkitPresenter(ConfigurationModel,SourceCodeModel)" num="44" count="22" type="method"/>
            <line num="45" count="22" type="stmt"/>
            <line num="46" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="setView(ToolkitView) : void" num="49" count="20" type="method"/>
            <line num="50" count="20" type="stmt"/>
            <line num="51" count="20" type="stmt"/>
            <line complexity="2" visibility="package" signature="checkInitialized() : void" num="55" count="6" type="method"/>
            <line num="56" count="6" type="stmt"/>
            <line falsecount="4" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="initUncaughtExceptionsHandler() : void" num="62" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="uncaughtException(Thread,Throwable) : void" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="initConfigurationTab() : void" num="77" count="5" type="method"/>
            <line num="78" count="5" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(String) : void" num="84" count="4" type="method"/>
            <line num="85" count="4" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="89" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="onSourceCodeOpenButtonClick() : void" num="100" count="3" type="method"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="102" type="cond"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeParseButtonClick() : void" num="119" count="1" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="onXPathEvaluateButtonClick() : void" num="132" count="3" type="method"/>
            <line num="133" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="136" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="141" count="3" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="142" type="cond"/>
            <line num="143" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="145" type="cond"/>
            <line num="146" count="2" type="stmt"/>
            <line num="149" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="154" count="3" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeKeyTyped() : void" num="160" count="1" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeTextCursorMoved() : void" num="167" count="1" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="onAstSelectionChanged() : void" num="174" count="1" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="180" type="cond"/>
            <line num="181" count="1" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="onConfigurationPropertyFocusLost(String) : void" num="190" count="3" type="method"/>
            <line num="191" count="3" type="stmt"/>
            <line num="192" count="3" type="stmt"/>
            <line falsecount="2" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="201" type="cond"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="getConfigurationPropertyByName(String) : ConfigurationProperty" num="210" count="3" type="method"/>
            <line num="211" count="3" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="212" type="cond"/>
            <line num="213" count="2" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/ToolkitView.java" name="ToolkitView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="237" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="40" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ToolkitView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/main/java/org/sonar/sslr/internal/toolkit/ToolkitViewImpl.java" name="ToolkitViewImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="74" loc="593" coveredmethods="0" methods="47" elements="286" classes="1" ncloc="465" statements="197" conditionals="42" coveredstatements="0"/>
            <class name="ToolkitViewImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="74" coveredmethods="0" methods="47" elements="286" statements="197" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ToolkitViewImpl(ToolkitPresenter)" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="initComponents() : void" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="valueChanged(TreeSelectionEvent) : void" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUpdate(DocumentEvent) : void" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="insertUpdate(DocumentEvent) : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="changedUpdate(DocumentEvent) : void" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="caretUpdate(CaretEvent) : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actionPerformed(ActionEvent) : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actionPerformed(ActionEvent) : void" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actionPerformed(ActionEvent) : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pickFileToParse() : File" num="243" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="displayHighlightedSourceCode(String) : void" num="252" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="displayAst(AstNode) : void" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getTreeNode(AstNode) : DefaultMutableTreeNode" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="displayXml(String) : void" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSourceCodeScrollbarPosition() : Point" num="312" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scrollSourceCodeTo(Point) : void" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="326" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSourceCode() : String" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getCodeElementStartOffset() : int" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getCodeElementEndOffset() : int" num="352" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXPath() : String" num="358" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="selectAstNode(AstNode) : void" num="363" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getAstTreeNodeWithGivenUserObject(DefaultMutableTreeNode,Object) : DefaultMutableTreeNode" num="376" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="380" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="highlightSourceCode(AstNode) : void" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValidDocumentOffsetFromSourceCodeOffset(int) : int" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearAstSelections() : void" num="420" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="scrollAstTo(AstNode) : void" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearSourceCodeHighlights() : void" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="scrollSourceCodeTo(AstNode) : void" num="443" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="disableXPathEvaluateButton() : void" num="458" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="enableXPathEvaluateButton() : void" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAstNodeFollowingCurrentSourceCodeTextCursorPosition() : AstNode" num="468" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getFollowingAstNode(DefaultMutableTreeNode,int) : AstNode" num="476" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="485" type="cond"/>
            <line num="486" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="492" type="cond"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSelectedAstNodes() : List&lt;AstNode&gt;" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="509" type="cond"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="514" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="appendToConsole(String) : void" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFocusOnConsoleView() : void" num="529" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFocusOnAbstractSyntaxTreeView() : void" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearConsole() : void" num="539" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addConfigurationProperty(String,String) : void" num="544" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="focusLost(FocusEvent) : void" num="550" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConfigurationPropertyValue(String) : String" num="568" count="0" type="method"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setConfigurationPropertyValue(String,String) : void" num="573" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setConfigurationPropertyErrorMessage(String,String) : void" num="578" count="0" type="method"/>
            <line num="580" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFocusOnConfigurationPropertyField(String) : void" num="583" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFocusOnConfigurationView() : void" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.typed">
         <metrics coveredelements="244" complexity="74" loc="607" methods="44" classes="6" statements="180" coveredconditionals="45" coveredmethods="37" elements="276" ncloc="414" files="5" conditionals="52" coveredstatements="162"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/typed/AstNodeReflector.java" name="AstNodeReflector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="54" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="AstNodeReflector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="AstNodeReflector()" num="35" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setToken(AstNode,Token) : void" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setChildIndex(AstNode,int) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParent(AstNode,AstNode) : void" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAstNodeField(String) : Field" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/typed/DelayedRuleInvocationExpression.java" name="DelayedRuleInvocationExpression.java">
            <metrics coveredelements="26" coveredconditionals="5" complexity="8" loc="83" coveredmethods="4" methods="4" elements="29" classes="1" ncloc="52" statements="19" conditionals="6" coveredstatements="17"/>
            <class name="DelayedRuleInvocationExpression">
               <metrics coveredelements="26" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="29" statements="19" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DelayedRuleInvocationExpression(LexerlessGrammarBuilder,GrammarRuleKey)" num="42" count="364" type="method"/>
            <line num="43" count="364" type="stmt"/>
            <line num="44" count="364" type="stmt"/>
            <line num="45" count="364" type="stmt"/>
            <line num="46" count="364" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelayedRuleInvocationExpression(LexerlessGrammarBuilder,GrammarBuilderInterceptor,Method)" num="49" count="104" type="method"/>
            <line num="50" count="104" type="stmt"/>
            <line num="51" count="104" type="stmt"/>
            <line num="52" count="104" type="stmt"/>
            <line num="53" count="104" type="stmt"/>
            <line complexity="4" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="56" count="119" type="method"/>
            <line num="58" count="119" type="stmt"/>
            <line falsecount="92" truecount="27" num="58" type="cond"/>
            <line num="59" count="27" type="stmt"/>
            <line num="60" count="27" type="stmt"/>
            <line falsecount="26" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="118" type="stmt"/>
            <line num="67" count="118" type="stmt"/>
            <line num="68" count="118" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="74" count="68" type="method"/>
            <line num="76" count="68" type="stmt"/>
            <line falsecount="46" truecount="22" num="76" type="cond"/>
            <line num="77" count="22" type="stmt"/>
            <line num="79" count="46" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/typed/GrammarBuilderInterceptor.java" name="GrammarBuilderInterceptor.java">
            <metrics coveredelements="121" coveredconditionals="14" complexity="33" loc="258" coveredmethods="25" methods="25" elements="125" classes="2" ncloc="192" statements="84" conditionals="16" coveredstatements="82"/>
            <class name="GrammarBuilderInterceptor">
               <metrics coveredelements="92" coveredconditionals="8" complexity="27" coveredmethods="22" methods="22" elements="96" statements="64" conditionals="10" coveredstatements="62"/>
            </class>
            <class name="GrammarBuilderInterceptor.DummyGrammarRuleKey">
               <metrics coveredelements="29" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="29" statements="20" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="GrammarBuilderInterceptor(LexerlessGrammarBuilder)" num="61" count="22" type="method"/>
            <line num="62" count="22" type="stmt"/>
            <line complexity="3" visibility="public" signature="intercept(Object,Method,Object[],MethodProxy) : Object" num="65" count="258" type="method"/>
            <line num="67" count="258" type="stmt"/>
            <line falsecount="258" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="258" type="stmt"/>
            <line falsecount="157" truecount="101" num="71" type="cond"/>
            <line num="72" count="101" type="stmt"/>
            <line num="73" count="101" type="stmt"/>
            <line num="76" count="157" type="stmt"/>
            <line num="78" count="157" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonterminal() : NonterminalBuilder&lt;U&gt;" num="81" count="6" type="method"/>
            <line num="83" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonterminal(GrammarRuleKey) : NonterminalBuilder&lt;U&gt;" num="86" count="157" type="method"/>
            <line num="88" count="157" type="stmt"/>
            <line num="89" count="157" type="stmt"/>
            <line num="90" count="157" type="stmt"/>
            <line num="91" count="157" type="stmt"/>
            <line complexity="2" visibility="public" signature="is(Object) : Object" num="94" count="157" type="method"/>
            <line num="96" count="157" type="stmt"/>
            <line falsecount="157" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="157" type="stmt"/>
            <line num="101" count="157" type="stmt"/>
            <line num="103" count="157" type="stmt"/>
            <line num="104" count="157" type="stmt"/>
            <line num="106" count="157" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOf(U) : U" num="109" count="26" type="method"/>
            <line num="111" count="26" type="stmt"/>
            <line num="112" count="26" type="stmt"/>
            <line num="113" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional(U) : Optional&lt;U&gt;" num="116" count="23" type="method"/>
            <line num="118" count="23" type="stmt"/>
            <line num="119" count="23" type="stmt"/>
            <line num="120" count="23" type="stmt"/>
            <line num="121" count="23" type="stmt"/>
            <line num="122" count="23" type="stmt"/>
            <line num="123" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore(U) : List&lt;U&gt;" num="126" count="21" type="method"/>
            <line num="128" count="21" type="stmt"/>
            <line num="129" count="21" type="stmt"/>
            <line num="130" count="21" type="stmt"/>
            <line num="131" count="21" type="stmt"/>
            <line num="132" count="21" type="stmt"/>
            <line num="133" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore(U) : Optional&lt;List&lt;U&gt;&gt;" num="136" count="21" type="method"/>
            <line num="138" count="21" type="stmt"/>
            <line num="139" count="21" type="stmt"/>
            <line num="140" count="21" type="stmt"/>
            <line num="141" count="21" type="stmt"/>
            <line num="142" count="21" type="stmt"/>
            <line num="143" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeRule(GrammarRuleKey) : AstNode" num="146" count="286" type="method"/>
            <line num="148" count="286" type="stmt"/>
            <line num="149" count="286" type="stmt"/>
            <line complexity="1" visibility="public" signature="token(GrammarRuleKey) : T" num="152" count="76" type="method"/>
            <line num="154" count="76" type="stmt"/>
            <line num="155" count="76" type="stmt"/>
            <line complexity="1" visibility="private" signature="pushDelayed(GrammarRuleKey) : void" num="158" count="362" type="method"/>
            <line num="159" count="362" type="stmt"/>
            <line complexity="2" visibility="public" signature="addAction(Method,int) : void" num="162" count="158" type="method"/>
            <line num="163" count="158" type="stmt"/>
            <line num="164" count="158" type="stmt"/>
            <line num="165" count="158" type="stmt"/>
            <line num="166" count="158" type="stmt"/>
            <line falsecount="48" truecount="110" num="166" type="cond"/>
            <line num="167" count="158" type="stmt"/>
            <line num="168" count="158" type="stmt"/>
            <line complexity="2" visibility="private" signature="pop(int) : ParsingExpression[]" num="171" count="74" type="method"/>
            <line num="172" count="74" type="stmt"/>
            <line num="173" count="74" type="stmt"/>
            <line falsecount="74" truecount="157" num="173" type="cond"/>
            <line num="174" count="157" type="stmt"/>
            <line num="176" count="74" type="stmt"/>
            <line complexity="1" visibility="private" signature="pop() : ParsingExpression" num="179" count="489" type="method"/>
            <line num="180" count="489" type="stmt"/>
            <line complexity="1" visibility="private" signature="push(ParsingExpression) : void" num="183" count="463" type="method"/>
            <line num="184" count="463" type="stmt"/>
            <line complexity="1" visibility="public" signature="actionForRuleKey(Object) : Method" num="187" count="654" type="method"/>
            <line num="189" count="654" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleKeyForMethod(Method) : GrammarRuleKey" num="192" count="25" type="method"/>
            <line num="194" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasMethodForRuleKey(Object) : boolean" num="197" count="654" type="method"/>
            <line num="198" count="654" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOptionalRule(Object) : boolean" num="201" count="465" type="method"/>
            <line num="202" count="465" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOneOrMoreRule(Object) : boolean" num="205" count="425" type="method"/>
            <line num="206" count="425" type="stmt"/>
            <line complexity="1" visibility="public" signature="isZeroOrMoreRule(Object) : boolean" num="209" count="424" type="method"/>
            <line num="210" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="DummyGrammarRuleKey(Method)" num="219" count="164" type="method"/>
            <line num="220" count="164" type="stmt"/>
            <line num="221" count="164" type="stmt"/>
            <line num="222" count="164" type="stmt"/>
            <line complexity="1" visibility="public" signature="DummyGrammarRuleKey(String,ParsingExpression)" num="225" count="65" type="method"/>
            <line num="226" count="65" type="stmt"/>
            <line num="227" count="65" type="stmt"/>
            <line num="228" count="65" type="stmt"/>
            <line complexity="4" visibility="public" signature="toString() : String" num="231" count="229" type="method"/>
            <line num="233" count="229" type="stmt"/>
            <line falsecount="164" truecount="65" num="233" type="cond"/>
            <line num="234" count="65" type="stmt"/>
            <line num="237" count="164" type="stmt"/>
            <line num="238" count="164" type="stmt"/>
            <line num="239" count="164" type="stmt"/>
            <line num="240" count="164" type="stmt"/>
            <line num="242" count="164" type="stmt"/>
            <line num="243" count="164" type="stmt"/>
            <line falsecount="164" truecount="53" num="243" type="cond"/>
            <line num="244" count="53" type="stmt"/>
            <line num="245" count="53" type="stmt"/>
            <line num="247" count="164" type="stmt"/>
            <line falsecount="6" truecount="158" num="247" type="cond"/>
            <line num="248" count="158" type="stmt"/>
            <line num="251" count="164" type="stmt"/>
            <line num="253" count="164" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/typed/ReflectionUtils.java" name="ReflectionUtils.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="7" loc="58" coveredmethods="2" methods="4" elements="15" classes="1" ncloc="31" statements="11" conditionals="0" coveredstatements="6"/>
            <class name="ReflectionUtils">
               <metrics coveredelements="8" coveredconditionals="0" complexity="7" coveredmethods="2" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="private" signature="ReflectionUtils()" num="28" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="invokeMethod(Method,Object,Object) : Object" num="32" count="314" type="method"/>
            <line num="33" count="314" type="stmt"/>
            <line num="34" count="314" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getField(Class&lt;?&gt;,String) : Field" num="40" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setField(Field,Object,Object) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/impl/typed/SyntaxTreeCreator.java" name="SyntaxTreeCreator.java">
            <metrics coveredelements="89" coveredconditionals="26" complexity="21" loc="154" coveredmethods="6" methods="6" elements="98" classes="1" ncloc="115" statements="62" conditionals="30" coveredstatements="57"/>
            <class name="SyntaxTreeCreator">
               <metrics coveredelements="89" coveredconditionals="26" complexity="21" coveredmethods="6" methods="6" elements="98" statements="62" conditionals="30" coveredstatements="57"/>
            </class>
            <line complexity="1" visibility="public" signature="SyntaxTreeCreator(Object,GrammarBuilderInterceptor,NodeBuilder)" num="52" count="22" type="method"/>
            <line num="53" count="22" type="stmt"/>
            <line num="54" count="22" type="stmt"/>
            <line num="55" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(ParseNode,Input) : T" num="58" count="49" type="method"/>
            <line num="59" count="49" type="stmt"/>
            <line num="60" count="49" type="stmt"/>
            <line num="61" count="49" type="stmt"/>
            <line complexity="2" visibility="private" signature="visit(ParseNode) : Object" num="64" count="924" type="method"/>
            <line num="65" count="924" type="stmt"/>
            <line falsecount="270" truecount="654" num="65" type="cond"/>
            <line num="66" count="654" type="stmt"/>
            <line num="68" count="270" type="stmt"/>
            <line complexity="10" visibility="private" signature="visitNonTerminal(ParseNode) : Object" num="72" count="654" type="method"/>
            <line num="73" count="654" type="stmt"/>
            <line num="74" count="654" type="stmt"/>
            <line num="75" count="654" type="stmt"/>
            <line num="77" count="654" type="stmt"/>
            <line num="79" count="654" type="stmt"/>
            <line falsecount="465" truecount="189" num="79" type="cond"/>
            <line num="82" count="189" type="stmt"/>
            <line falsecount="189" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="189" type="stmt"/>
            <line num="87" count="465" type="stmt"/>
            <line falsecount="427" truecount="38" num="87" type="cond"/>
            <line num="89" count="38" type="stmt"/>
            <line falsecount="38" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="38" type="stmt"/>
            <line falsecount="30" truecount="8" num="92" type="cond"/>
            <line num="93" count="8" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line num="99" count="427" type="stmt"/>
            <line num="100" count="427" type="stmt"/>
            <line num="101" count="656" type="stmt"/>
            <line num="103" count="425" type="stmt"/>
            <line falsecount="424" truecount="1" num="103" type="cond"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="424" type="stmt"/>
            <line falsecount="422" truecount="2" num="105" type="cond"/>
            <line num="106" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="106" type="cond"/>
            <line num="107" count="422" type="stmt"/>
            <line falsecount="157" truecount="265" num="107" type="cond"/>
            <line num="108" count="265" type="stmt"/>
            <line num="110" count="157" type="stmt"/>
            <line num="113" count="651" type="stmt"/>
            <line complexity="6" visibility="private" signature="visitTerminal(ParseNode) : Object" num="116" count="270" type="method"/>
            <line num="117" count="270" type="stmt"/>
            <line num="118" count="270" type="stmt"/>
            <line falsecount="265" truecount="5" num="118" type="cond"/>
            <line num="119" count="5" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="120" type="cond"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="122" type="cond"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="265" type="stmt"/>
            <line falsecount="231" truecount="34" num="128" type="cond"/>
            <line num="129" count="34" type="stmt"/>
            <line num="130" count="34" type="stmt"/>
            <line num="131" count="34" type="stmt"/>
            <line falsecount="34" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="265" type="stmt"/>
            <line num="137" count="265" type="stmt"/>
            <line num="138" count="265" type="stmt"/>
            <line complexity="1" visibility="private" signature="addComment(ParseNode) : void" num="141" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.matchers">
         <metrics coveredelements="283" complexity="107" loc="896" methods="64" classes="11" statements="223" coveredconditionals="56" coveredmethods="47" elements="365" ncloc="528" files="10" conditionals="78" coveredstatements="180"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/AstCreator.java" name="AstCreator.java">
            <metrics coveredelements="96" coveredconditionals="20" complexity="24" loc="187" coveredmethods="9" methods="11" elements="111" classes="1" ncloc="144" statements="76" conditionals="24" coveredstatements="67"/>
            <class name="AstCreator">
               <metrics coveredelements="96" coveredconditionals="20" complexity="24" coveredmethods="9" methods="11" elements="111" statements="76" conditionals="24" coveredstatements="67"/>
            </class>
            <line complexity="2" visibility="package" signature="&lt;clinit&gt;, line 43()" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(ParsingResult,LocatedText) : AstNode" num="56" count="7" type="method"/>
            <line num="57" count="7" type="stmt"/>
            <line num="59" count="7" type="stmt"/>
            <line num="60" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="AstCreator(LocatedText)" num="63" count="7" type="method"/>
            <line num="64" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="visit(ParseNode) : AstNode" num="67" count="110" type="method"/>
            <line num="68" count="110" type="stmt"/>
            <line falsecount="40" truecount="70" num="68" type="cond"/>
            <line num="69" count="70" type="stmt"/>
            <line num="71" count="40" type="stmt"/>
            <line complexity="6" visibility="private" signature="visitTerminal(ParseNode) : AstNode" num="75" count="40" type="method"/>
            <line num="76" count="40" type="stmt"/>
            <line falsecount="20" truecount="20" num="76" type="cond"/>
            <line num="77" count="20" type="stmt"/>
            <line num="78" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="80" type="cond"/>
            <line num="81" count="20" type="stmt"/>
            <line num="82" count="20" type="stmt"/>
            <line num="83" count="20" type="stmt"/>
            <line num="84" count="20" type="stmt"/>
            <line num="85" count="20" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="93" type="cond"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="18" type="stmt"/>
            <line num="100" count="18" type="stmt"/>
            <line num="102" count="19" type="stmt"/>
            <line num="103" count="19" type="stmt"/>
            <line num="104" count="19" type="stmt"/>
            <line num="105" count="19" type="stmt"/>
            <line num="106" count="19" type="stmt"/>
            <line num="107" count="19" type="stmt"/>
            <line complexity="3" visibility="private" signature="updateTokenPositionAndValue(ParseNode) : void" num="110" count="40" type="method"/>
            <line num="111" count="40" type="stmt"/>
            <line num="112" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="40" type="stmt"/>
            <line num="120" count="40" type="stmt"/>
            <line num="121" count="40" type="stmt"/>
            <line num="122" count="40" type="stmt"/>
            <line falsecount="7" truecount="33" num="122" type="cond"/>
            <line num="123" count="40" type="stmt"/>
            <line num="126" count="40" type="stmt"/>
            <line num="127" count="40" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitNonTerminal(ParseNode) : AstNode" num="130" count="70" type="method"/>
            <line num="131" count="70" type="stmt"/>
            <line num="132" count="70" type="stmt"/>
            <line num="133" count="70" type="stmt"/>
            <line num="134" count="103" type="stmt"/>
            <line num="135" count="103" type="stmt"/>
            <line falsecount="21" truecount="82" num="135" type="cond"/>
            <line num="136" count="82" type="stmt"/>
            <line falsecount="57" truecount="25" num="136" type="cond"/>
            <line num="137" count="25" type="stmt"/>
            <line num="139" count="57" type="stmt"/>
            <line num="144" count="70" type="stmt"/>
            <line num="145" count="70" type="stmt"/>
            <line num="146" count="45" type="stmt"/>
            <line falsecount="0" truecount="45" num="146" type="cond"/>
            <line num="147" count="45" type="stmt"/>
            <line num="148" count="45" type="stmt"/>
            <line num="152" count="70" type="stmt"/>
            <line num="153" count="70" type="stmt"/>
            <line num="154" count="61" type="stmt"/>
            <line num="156" count="70" type="stmt"/>
            <line num="157" count="70" type="stmt"/>
            <line num="158" count="70" type="stmt"/>
            <line complexity="2" visibility="private" signature="getValue(ParseNode) : String" num="161" count="40" type="method"/>
            <line num="162" count="40" type="stmt"/>
            <line num="163" count="40" type="stmt"/>
            <line falsecount="40" truecount="42" num="163" type="cond"/>
            <line num="164" count="42" type="stmt"/>
            <line num="166" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="171" count="19" type="method"/>
            <line num="173" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/ImmutableInputBuffer.java" name="ImmutableInputBuffer.java">
            <metrics coveredelements="36" coveredconditionals="8" complexity="12" loc="98" coveredmethods="6" methods="8" elements="40" classes="1" ncloc="57" statements="24" conditionals="8" coveredstatements="22"/>
            <class name="ImmutableInputBuffer">
               <metrics coveredelements="36" coveredconditionals="8" complexity="12" coveredmethods="6" methods="8" elements="40" statements="24" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="4" visibility="public" signature="ImmutableInputBuffer(char[])" num="35" count="245" type="method"/>
            <line num="36" count="245" type="stmt"/>
            <line num="38" count="245" type="stmt"/>
            <line num="39" count="245" type="stmt"/>
            <line num="40" count="245" type="stmt"/>
            <line num="41" count="245" type="stmt"/>
            <line falsecount="245" truecount="201816" num="41" type="cond"/>
            <line num="42" count="201816" type="stmt"/>
            <line falsecount="201801" truecount="15" num="42" type="cond"/>
            <line num="43" count="15" type="stmt"/>
            <line num="45" count="201816" type="stmt"/>
            <line num="47" count="245" type="stmt"/>
            <line num="48" count="245" type="stmt"/>
            <line num="49" count="245" type="stmt"/>
            <line falsecount="245" truecount="505" num="49" type="cond"/>
            <line num="50" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEndOfLine(char[],int) : boolean" num="69" count="201816" type="method"/>
            <line num="70" count="201816" type="stmt"/>
            <line complexity="1" visibility="public" signature="extractLine(int) : String" num="74" count="34" type="method"/>
            <line num="76" count="34" type="stmt"/>
            <line num="77" count="34" type="stmt"/>
            <line num="78" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLineCount() : int" num="81" count="71" type="method"/>
            <line num="83" count="71" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLineNumber(int) : int" num="86" count="48" type="method"/>
            <line num="87" count="48" type="stmt"/>
            <line num="88" count="48" type="stmt"/>
            <line falsecount="13" truecount="35" num="88" type="cond"/>
            <line complexity="1" visibility="public" signature="getPosition(int) : Position" num="91" count="48" type="method"/>
            <line num="93" count="48" type="stmt"/>
            <line num="94" count="48" type="stmt"/>
            <line num="95" count="48" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/InputBuffer.java" name="InputBuffer.java">
            <metrics coveredelements="20" coveredconditionals="4" complexity="8" loc="91" coveredmethods="5" methods="6" elements="22" classes="2" ncloc="42" statements="12" conditionals="4" coveredstatements="11"/>
            <class name="InputBuffer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InputBuffer.Position">
               <metrics coveredelements="20" coveredconditionals="4" complexity="8" coveredmethods="5" methods="6" elements="22" statements="12" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="Position(int,int)" num="53" count="79" type="method"/>
            <line num="54" count="79" type="stmt"/>
            <line num="55" count="79" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLine() : int" num="58" count="74" type="method"/>
            <line num="59" count="74" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumn() : int" num="62" count="110" type="method"/>
            <line num="63" count="110" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="66" count="31" type="method"/>
            <line num="68" count="31" type="stmt"/>
            <line falsecount="30" truecount="1" num="68" type="cond"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="30" type="stmt"/>
            <line falsecount="29" truecount="1" num="71" type="cond"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="29" type="stmt"/>
            <line num="75" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/LexerfulAstCreator.java" name="LexerfulAstCreator.java">
            <metrics coveredelements="40" coveredconditionals="7" complexity="11" loc="91" coveredmethods="5" methods="5" elements="44" classes="1" ncloc="56" statements="29" conditionals="10" coveredstatements="28"/>
            <class name="LexerfulAstCreator">
               <metrics coveredelements="40" coveredconditionals="7" complexity="11" coveredmethods="5" methods="5" elements="44" statements="29" conditionals="10" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="create(ParseNode,List&lt;Token&gt;) : AstNode" num="32" count="45" type="method"/>
            <line num="33" count="45" type="stmt"/>
            <line num="35" count="45" type="stmt"/>
            <line num="36" count="45" type="stmt"/>
            <line complexity="1" visibility="private" signature="LexerfulAstCreator(List&lt;Token&gt;)" num="41" count="45" type="method"/>
            <line num="42" count="45" type="stmt"/>
            <line complexity="2" visibility="private" signature="visit(ParseNode) : AstNode" num="45" count="2823" type="method"/>
            <line num="46" count="2823" type="stmt"/>
            <line falsecount="845" truecount="1978" num="46" type="cond"/>
            <line num="47" count="1978" type="stmt"/>
            <line num="49" count="845" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitNonTerminal(ParseNode) : AstNode" num="53" count="1978" type="method"/>
            <line num="54" count="1978" type="stmt"/>
            <line num="55" count="1978" type="stmt"/>
            <line num="56" count="2778" type="stmt"/>
            <line num="57" count="2778" type="stmt"/>
            <line falsecount="2778" truecount="0" num="57" type="cond"/>
            <line num="59" count="2778" type="stmt"/>
            <line falsecount="1904" truecount="874" num="59" type="cond"/>
            <line num="60" count="874" type="stmt"/>
            <line num="62" count="1904" type="stmt"/>
            <line num="66" count="1978" type="stmt"/>
            <line num="68" count="1978" type="stmt"/>
            <line falsecount="0" truecount="1977" num="68" type="cond"/>
            <line num="69" count="1978" type="stmt"/>
            <line num="70" count="1978" type="stmt"/>
            <line num="71" count="2778" type="stmt"/>
            <line num="73" count="1978" type="stmt"/>
            <line num="74" count="1978" type="stmt"/>
            <line num="76" count="1978" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitTerminal(ParseNode) : AstNode" num="79" count="845" type="method"/>
            <line num="80" count="845" type="stmt"/>
            <line num="82" count="845" type="stmt"/>
            <line falsecount="845" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="845" type="stmt"/>
            <line num="86" count="845" type="stmt"/>
            <line num="87" count="845" type="stmt"/>
            <line num="88" count="845" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/LocatedText.java" name="LocatedText.java">
            <metrics coveredelements="42" coveredconditionals="9" complexity="20" loc="124" coveredmethods="9" methods="11" elements="59" classes="1" ncloc="78" statements="32" conditionals="16" coveredstatements="24"/>
            <class name="LocatedText">
               <metrics coveredelements="42" coveredconditionals="9" complexity="20" coveredmethods="9" methods="11" elements="59" statements="32" conditionals="16" coveredstatements="24"/>
            </class>
            <line complexity="2" visibility="public" signature="LocatedText(File,char[])" num="44" count="8" type="method"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="46" type="cond"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="51" count="126" type="method"/>
            <line num="53" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="toChars() : char[]" num="56" count="4" type="method"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="62" count="42" type="method"/>
            <line num="64" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="getLocation(int) : TextLocation" num="77" count="40" type="method"/>
            <line num="78" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="40" type="stmt"/>
            <line num="82" count="40" type="stmt"/>
            <line num="83" count="40" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLineNumber(int) : int" num="86" count="40" type="method"/>
            <line num="87" count="40" type="stmt"/>
            <line num="88" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="88" type="cond"/>
            <line complexity="2" visibility="private" signature="getLineStart(int) : int" num="91" count="40" type="method"/>
            <line num="92" count="40" type="stmt"/>
            <line falsecount="0" truecount="40" num="92" type="cond"/>
            <line complexity="5" visibility="private" signature="computeLines(char[]) : int[]" num="95" count="8" type="method"/>
            <line num="96" count="8" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line falsecount="8" truecount="45" num="98" type="cond"/>
            <line num="99" count="45" type="stmt"/>
            <line falsecount="45" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="45" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="104" type="cond"/>
            <line num="105" count="8" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEndOfLine(char[],int) : boolean" num="119" count="45" type="method"/>
            <line num="120" count="45" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/Matcher.java" name="Matcher.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Matcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/MatcherPathElement.java" name="MatcherPathElement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="67" coveredmethods="0" methods="6" elements="23" classes="1" ncloc="38" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="MatcherPathElement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="23" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MatcherPathElement(Matcher,int,int)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMatcher() : Matcher" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartIndex() : int" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndIndex() : int" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/ParseNode.java" name="ParseNode.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="72" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="34" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="ParseNode">
               <metrics coveredelements="18" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="ParseNode(int,int,List&lt;ParseNode&gt;,Matcher)" num="36" count="3544857" type="method"/>
            <line num="37" count="3544857" type="stmt"/>
            <line num="38" count="3544857" type="stmt"/>
            <line num="39" count="3544857" type="stmt"/>
            <line num="40" count="3544857" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParseNode(int,int,Matcher)" num="46" count="5248637" type="method"/>
            <line num="47" count="5248637" type="stmt"/>
            <line num="48" count="5248637" type="stmt"/>
            <line num="49" count="5248637" type="stmt"/>
            <line num="50" count="5248637" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartIndex() : int" num="53" count="8505" type="method"/>
            <line num="54" count="8505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndIndex() : int" num="60" count="692316" type="method"/>
            <line num="61" count="692316" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildren() : List&lt;ParseNode&gt;" num="64" count="3162" type="method"/>
            <line num="65" count="3162" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMatcher() : Matcher" num="68" count="4825793" type="method"/>
            <line num="69" count="4825793" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/TextLocation.java" name="TextLocation.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="10" loc="85" coveredmethods="4" methods="8" elements="28" classes="1" ncloc="50" statements="16" conditionals="4" coveredstatements="7"/>
            <class name="TextLocation">
               <metrics coveredelements="11" coveredconditionals="0" complexity="10" coveredmethods="4" methods="8" elements="28" statements="16" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="TextLocation(File,URI,int,int)" num="35" count="40" type="method"/>
            <line num="36" count="40" type="stmt"/>
            <line num="37" count="40" type="stmt"/>
            <line num="38" count="40" type="stmt"/>
            <line num="39" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFile() : File" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFileURI() : URI" num="49" count="47" type="method"/>
            <line num="50" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLine() : int" num="53" count="40" type="method"/>
            <line num="54" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumn() : int" num="57" count="40" type="method"/>
            <line num="58" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/matchers/TextUtils.java" name="TextUtils.java">
            <metrics coveredelements="20" coveredconditionals="8" complexity="8" loc="57" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="26" statements="9" conditionals="8" coveredstatements="9"/>
            <class name="TextUtils">
               <metrics coveredelements="20" coveredconditionals="8" complexity="8" coveredmethods="3" methods="3" elements="20" statements="9" conditionals="8" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="TextUtils()" num="24" count="1" type="method"/>
            <line complexity="3" visibility="public" signature="escape(char) : String" num="37" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line falsecount="1" truecount="20" num="38" type="cond"/>
            <line num="39" count="20" type="stmt"/>
            <line falsecount="15" truecount="5" num="39" type="cond"/>
            <line num="40" count="5" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="trimTrailingLineSeparatorFrom(String) : String" num="47" count="20" type="method"/>
            <line num="48" count="20" type="stmt"/>
            <line num="49" count="20" type="stmt"/>
            <line falsecount="4" truecount="21" num="49" type="cond"/>
            <line num="50" count="21" type="stmt"/>
            <line falsecount="5" truecount="16" num="50" type="cond"/>
            <line num="51" count="16" type="stmt"/>
            <line num="54" count="20" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.parser">
         <metrics coveredelements="129" complexity="48" loc="580" methods="36" classes="7" statements="88" coveredconditionals="19" coveredmethods="33" elements="146" ncloc="273" files="7" conditionals="22" coveredstatements="77"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/GrammarOperators.java" name="GrammarOperators.java">
            <metrics coveredelements="62" coveredconditionals="12" complexity="24" loc="198" coveredmethods="17" methods="17" elements="66" classes="1" ncloc="109" statements="35" conditionals="14" coveredstatements="33"/>
            <class name="GrammarOperators">
               <metrics coveredelements="62" coveredconditionals="12" complexity="24" coveredmethods="17" methods="17" elements="66" statements="35" conditionals="14" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="private" signature="GrammarOperators()" num="48" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="sequence(Object) : Object" num="54" count="558" type="method"/>
            <line num="56" count="558" type="stmt"/>
            <line complexity="2" visibility="public" signature="firstOf(Object) : Object" num="62" count="45" type="method"/>
            <line num="64" count="45" type="stmt"/>
            <line num="66" count="45" type="stmt"/>
            <line falsecount="44" truecount="1" num="66" type="cond"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional(Object) : Object" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore(Object) : Object" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore(Object) : Object" num="91" count="29" type="method"/>
            <line num="93" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="next(Object) : Object" num="99" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextNot(Object) : Object" num="107" count="3" type="method"/>
            <line num="109" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="regexp(String) : Object" num="115" count="43" type="method"/>
            <line num="117" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfInput() : Object" num="123" count="16" type="method"/>
            <line num="125" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : Object" num="131" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="token(TokenType,Object) : Object" num="139" count="2" type="method"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="commentTrivia(Object) : Object" num="148" count="15" type="method"/>
            <line num="150" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="skippedTrivia(Object) : Object" num="157" count="2" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertToSingleExpression(Object) : ParsingExpression" num="162" count="594" type="method"/>
            <line num="163" count="594" type="stmt"/>
            <line num="165" count="594" type="stmt"/>
            <line falsecount="363" truecount="231" num="165" type="cond"/>
            <line num="166" count="231" type="stmt"/>
            <line num="168" count="363" type="stmt"/>
            <line complexity="3" visibility="private" signature="convertToExpressions(Object) : ParsingExpression[]" num="171" count="407" type="method"/>
            <line num="172" count="407" type="stmt"/>
            <line num="173" count="407" type="stmt"/>
            <line falsecount="407" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="407" type="stmt"/>
            <line num="178" count="407" type="stmt"/>
            <line falsecount="407" truecount="856" num="178" type="cond"/>
            <line num="179" count="856" type="stmt"/>
            <line num="181" count="407" type="stmt"/>
            <line complexity="4" visibility="private" signature="convertToExpression(Object) : ParsingExpression" num="184" count="1107" type="method"/>
            <line num="185" count="1107" type="stmt"/>
            <line num="187" count="1107" type="stmt"/>
            <line falsecount="109" truecount="998" num="187" type="cond"/>
            <line num="188" count="998" type="stmt"/>
            <line num="189" count="109" type="stmt"/>
            <line falsecount="86" truecount="23" num="189" type="cond"/>
            <line num="190" count="23" type="stmt"/>
            <line num="191" count="86" type="stmt"/>
            <line falsecount="0" truecount="85" num="191" type="cond"/>
            <line num="192" count="85" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/LexerlessGrammar.java" name="LexerlessGrammar.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LexerlessGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/ParseError.java" name="ParseError.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="52" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ParseError">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ParseError(InputBuffer,int)" num="39" count="44" type="method"/>
            <line num="40" count="44" type="stmt"/>
            <line num="41" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInputBuffer() : InputBuffer" num="44" count="22" type="method"/>
            <line num="45" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getErrorIndex() : int" num="48" count="31" type="method"/>
            <line num="49" count="31" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/ParseErrorFormatter.java" name="ParseErrorFormatter.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="5" loc="72" coveredmethods="2" methods="2" elements="26" classes="1" ncloc="35" statements="18" conditionals="6" coveredstatements="18"/>
            <class name="ParseErrorFormatter">
               <metrics coveredelements="26" coveredconditionals="6" complexity="5" coveredmethods="2" methods="2" elements="26" statements="18" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="format(ParseError) : String" num="42" count="17" type="method"/>
            <line num="43" count="17" type="stmt"/>
            <line num="45" count="17" type="stmt"/>
            <line num="46" count="17" type="stmt"/>
            <line num="47" count="17" type="stmt"/>
            <line num="48" count="17" type="stmt"/>
            <line num="51" count="17" type="stmt"/>
            <line num="52" count="17" type="stmt"/>
            <line complexity="4" visibility="private" signature="appendSnippet(StringBuilder,InputBuffer,Position) : void" num="55" count="17" type="method"/>
            <line num="56" count="17" type="stmt"/>
            <line num="57" count="17" type="stmt"/>
            <line num="58" count="17" type="stmt"/>
            <line num="59" count="17" type="stmt"/>
            <line num="60" count="17" type="stmt"/>
            <line falsecount="17" truecount="18" num="60" type="cond"/>
            <line num="61" count="18" type="stmt"/>
            <line num="62" count="18" type="stmt"/>
            <line num="63" count="18" type="stmt"/>
            <line falsecount="1" truecount="17" num="63" type="cond"/>
            <line num="64" count="17" type="stmt"/>
            <line falsecount="17" truecount="76" num="64" type="cond"/>
            <line num="65" count="76" type="stmt"/>
            <line num="67" count="17" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/ParseRunner.java" name="ParseRunner.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ParseRunner">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ParseRunner(Rule)" num="41" count="214" type="method"/>
            <line num="42" count="214" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(char[]) : ParsingResult" num="45" count="239" type="method"/>
            <line num="46" count="239" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/ParserAdapter.java" name="ParserAdapter.java">
            <metrics coveredelements="19" coveredconditionals="1" complexity="9" loc="110" coveredmethods="5" methods="7" elements="30" classes="1" ncloc="63" statements="21" conditionals="2" coveredstatements="13"/>
            <class name="ParserAdapter">
               <metrics coveredelements="19" coveredconditionals="1" complexity="9" coveredmethods="5" methods="7" elements="30" statements="21" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ParserAdapter(Charset,G)" num="51" count="9" type="method"/>
            <line num="52" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : AstNode" num="61" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(File) : AstNode" num="72" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="fileToCharArray(File,Charset) : char[]" num="78" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="parse(LocatedText) : AstNode" num="86" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line falsecount="0" truecount="3" num="89" type="cond"/>
            <line num="90" count="3" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(List&lt;Token&gt;) : AstNode" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : RuleDefinition" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/parser/ParsingResult.java" name="ParsingResult.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="66" coveredmethods="4" methods="5" elements="13" classes="1" ncloc="29" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="ParsingResult">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ParsingResult(InputBuffer,boolean,ParseNode,ParseError)" num="42" count="238" type="method"/>
            <line num="43" count="238" type="stmt"/>
            <line num="44" count="238" type="stmt"/>
            <line num="45" count="238" type="stmt"/>
            <line num="46" count="238" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInputBuffer() : InputBuffer" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isMatched() : boolean" num="53" count="234" type="method"/>
            <line num="54" count="234" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParseError() : ParseError" num="57" count="16" type="method"/>
            <line num="58" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParseTreeRoot() : ParseNode" num="62" count="63" type="method"/>
            <line num="63" count="63" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.vm.lexerful">
         <metrics coveredelements="182" complexity="60" loc="552" methods="30" classes="10" statements="121" coveredconditionals="43" coveredmethods="28" elements="197" ncloc="307" files="9" conditionals="46" coveredstatements="111"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/AdjacentExpression.java" name="AdjacentExpression.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="6" loc="54" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="28" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="AdjacentExpression">
               <metrics coveredelements="16" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="AdjacentExpression()" num="30" count="1" type="method"/>
            <line complexity="4" visibility="public" signature="execute(Machine) : void" num="33" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="35" type="cond"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="41" type="cond"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/AnyTokenExpression.java" name="AnyTokenExpression.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="4" loc="48" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="22" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="AnyTokenExpression">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="AnyTokenExpression()" num="30" count="1" type="method"/>
            <line complexity="2" visibility="public" signature="execute(Machine) : void" num="33" count="3" type="method"/>
            <line num="35" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="35" type="cond"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="43" count="9" type="method"/>
            <line num="45" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/LexerfulParseErrorFormatter.java" name="LexerfulParseErrorFormatter.java">
            <metrics coveredelements="45" coveredconditionals="9" complexity="12" loc="112" coveredmethods="4" methods="6" elements="60" classes="2" ncloc="77" statements="42" conditionals="12" coveredstatements="32"/>
            <class name="LexerfulParseErrorFormatter">
               <metrics coveredelements="45" coveredconditionals="9" complexity="11" coveredmethods="4" methods="5" elements="58" statements="41" conditionals="12" coveredstatements="32"/>
            </class>
            <class name="LexerfulParseErrorFormatter.Pos">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="format(List&lt;Token&gt;,int) : String" num="33" count="7" type="method"/>
            <line num="34" count="7" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="35" type="cond"/>
            <line num="38" count="7" type="stmt"/>
            <line num="41" count="7" type="stmt"/>
            <line num="42" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getTokenStart(Token) : Pos" num="55" count="7" type="method"/>
            <line num="56" count="7" type="stmt"/>
            <line num="57" count="7" type="stmt"/>
            <line num="58" count="7" type="stmt"/>
            <line num="59" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="getTokenEnd(Token) : Pos" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="appendSnippet(StringBuilder,List&lt;Token&gt;,int,int) : void" num="76" count="7" type="method"/>
            <line num="77" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
            <line num="81" count="7" type="stmt"/>
            <line num="82" count="7" type="stmt"/>
            <line num="83" count="7" type="stmt"/>
            <line num="84" count="7" type="stmt"/>
            <line num="85" count="23" type="stmt"/>
            <line falsecount="23" truecount="2" num="85" type="cond"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="23" type="stmt"/>
            <line falsecount="23" truecount="12" num="90" type="cond"/>
            <line num="91" count="12" type="stmt"/>
            <line num="92" count="12" type="stmt"/>
            <line num="94" count="23" type="stmt"/>
            <line num="95" count="23" type="stmt"/>
            <line num="96" count="23" type="stmt"/>
            <line num="97" count="23" type="stmt"/>
            <line falsecount="23" truecount="2" num="97" type="cond"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="103" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="formatLineNumber(int,int) : String" num="106" count="11" type="method"/>
            <line num="107" count="11" type="stmt"/>
            <line falsecount="4" truecount="7" num="107" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/TillNewLineExpression.java" name="TillNewLineExpression.java">
            <metrics coveredelements="19" coveredconditionals="6" complexity="7" loc="55" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="29" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="TillNewLineExpression">
               <metrics coveredelements="19" coveredconditionals="6" complexity="7" coveredmethods="3" methods="3" elements="19" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="private" signature="TillNewLineExpression()" num="32" count="1" type="method"/>
            <line complexity="5" visibility="public" signature="execute(Machine) : void" num="35" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="37" type="cond"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="40" type="cond"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="44" type="cond"/>
            <line num="45" count="4" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/TokenTypeClassExpression.java" name="TokenTypeClassExpression.java">
            <metrics coveredelements="12" coveredconditionals="2" complexity="5" loc="49" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="23" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="TokenTypeClassExpression">
               <metrics coveredelements="12" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="TokenTypeClassExpression(Class)" num="30" count="7" type="method"/>
            <line num="31" count="7" type="stmt"/>
            <line complexity="3" visibility="public" signature="execute(Machine) : void" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="36" type="cond"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/TokenTypeExpression.java" name="TokenTypeExpression.java">
            <metrics coveredelements="12" coveredconditionals="2" complexity="5" loc="50" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="24" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="TokenTypeExpression">
               <metrics coveredelements="12" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="TokenTypeExpression(TokenType)" num="31" count="361" type="method"/>
            <line num="32" count="361" type="stmt"/>
            <line complexity="3" visibility="public" signature="execute(Machine) : void" num="35" count="5966" type="method"/>
            <line num="37" count="5966" type="stmt"/>
            <line falsecount="1140" truecount="4826" num="37" type="cond"/>
            <line num="38" count="4826" type="stmt"/>
            <line num="39" count="4826" type="stmt"/>
            <line num="41" count="1140" type="stmt"/>
            <line num="42" count="1140" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/TokenTypesExpression.java" name="TokenTypesExpression.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="5" loc="55" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="28" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="TokenTypesExpression">
               <metrics coveredelements="13" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="TokenTypesExpression(TokenType)" num="35" count="7" type="method"/>
            <line num="36" count="7" type="stmt"/>
            <line num="37" count="7" type="stmt"/>
            <line complexity="3" visibility="public" signature="execute(Machine) : void" num="40" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="42" type="cond"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/TokenValueExpression.java" name="TokenValueExpression.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="6" loc="55" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="29" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="TokenValueExpression">
               <metrics coveredelements="17" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="TokenValueExpression(String)" num="31" count="40" type="method"/>
            <line num="32" count="40" type="stmt"/>
            <line complexity="4" visibility="public" signature="execute(Machine) : void" num="35" count="73" type="method"/>
            <line num="37" count="73" type="stmt"/>
            <line falsecount="72" truecount="1" num="37" type="cond"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="72" type="stmt"/>
            <line num="42" count="72" type="stmt"/>
            <line falsecount="62" truecount="10" num="42" type="cond"/>
            <line num="43" count="10" type="stmt"/>
            <line num="44" count="10" type="stmt"/>
            <line num="46" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/lexerful/TokensBridgeExpression.java" name="TokensBridgeExpression.java">
            <metrics coveredelements="38" coveredconditionals="12" complexity="10" loc="74" coveredmethods="3" methods="3" elements="38" classes="1" ncloc="47" statements="23" conditionals="12" coveredstatements="23"/>
            <class name="TokensBridgeExpression">
               <metrics coveredelements="38" coveredconditionals="12" complexity="10" coveredmethods="3" methods="3" elements="38" statements="23" conditionals="12" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="TokensBridgeExpression(TokenType,TokenType)" num="33" count="8" type="method"/>
            <line num="34" count="8" type="stmt"/>
            <line num="35" count="8" type="stmt"/>
            <line complexity="8" visibility="public" signature="execute(Machine) : void" num="38" count="8" type="method"/>
            <line num="40" count="8" type="stmt"/>
            <line num="41" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="41" type="cond"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="15" type="stmt"/>
            <line num="50" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="13" type="stmt"/>
            <line num="55" count="13" type="stmt"/>
            <line falsecount="9" truecount="4" num="55" type="cond"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="9" type="stmt"/>
            <line falsecount="2" truecount="7" num="57" type="cond"/>
            <line num="58" count="7" type="stmt"/>
            <line falsecount="4" truecount="9" num="62" type="cond"/>
            <line num="63" count="4" type="stmt"/>
            <line falsecount="4" truecount="14" num="63" type="cond"/>
            <line num="64" count="14" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.channel">
         <metrics coveredelements="262" complexity="106" loc="1054" methods="68" classes="13" statements="192" coveredconditionals="42" coveredmethods="56" elements="306" ncloc="469" files="10" conditionals="46" coveredstatements="164"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/Channel.java" name="Channel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Channel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/ChannelCodeReaderFilter.java" name="ChannelCodeReaderFilter.java">
            <metrics coveredelements="33" coveredconditionals="9" complexity="9" loc="101" coveredmethods="3" methods="4" elements="37" classes="1" ncloc="47" statements="23" conditionals="10" coveredstatements="21"/>
            <class name="ChannelCodeReaderFilter">
               <metrics coveredelements="33" coveredconditionals="9" complexity="9" coveredmethods="3" methods="4" elements="37" statements="23" conditionals="10" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="ChannelCodeReaderFilter(Channel&lt;O&gt;)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ChannelCodeReaderFilter(O,Channel&lt;O&gt;)" num="57" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReader(Reader) : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="read(char[],int,int) : int" num="74" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="77" type="cond"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="0" truecount="22" num="81" type="cond"/>
            <line num="82" count="22" type="stmt"/>
            <line falsecount="21" truecount="1" num="82" type="cond"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="21" type="stmt"/>
            <line num="86" count="21" type="stmt"/>
            <line num="87" count="21" type="stmt"/>
            <line falsecount="13" truecount="8" num="87" type="cond"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="92" count="21" type="stmt"/>
            <line falsecount="8" truecount="13" num="92" type="cond"/>
            <line num="93" count="13" type="stmt"/>
            <line num="94" count="13" type="stmt"/>
            <line num="95" count="13" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/ChannelDispatcher.java" name="ChannelDispatcher.java">
            <metrics coveredelements="41" coveredconditionals="7" complexity="13" loc="104" coveredmethods="9" methods="9" elements="43" classes="2" ncloc="63" statements="26" conditionals="8" coveredstatements="25"/>
            <class name="ChannelDispatcher">
               <metrics coveredelements="28" coveredconditionals="7" complexity="8" coveredmethods="4" methods="4" elements="30" statements="18" conditionals="8" coveredstatements="17"/>
            </class>
            <class name="ChannelDispatcher.Builder">
               <metrics coveredelements="13" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="private" signature="ChannelDispatcher(Builder)" num="31" count="42" type="method"/>
            <line num="32" count="42" type="stmt"/>
            <line num="33" count="42" type="stmt"/>
            <line complexity="5" visibility="public" signature="consume(CodeReader,O) : boolean" num="36" count="97" type="method"/>
            <line num="38" count="97" type="stmt"/>
            <line num="39" count="97" type="stmt"/>
            <line falsecount="93" truecount="1502" num="39" type="cond"/>
            <line num="40" count="1502" type="stmt"/>
            <line num="41" count="1502" type="stmt"/>
            <line num="42" count="5384" type="stmt"/>
            <line falsecount="3886" truecount="1498" num="42" type="cond"/>
            <line num="43" count="1498" type="stmt"/>
            <line num="44" count="1498" type="stmt"/>
            <line num="47" count="1502" type="stmt"/>
            <line falsecount="1498" truecount="4" num="47" type="cond"/>
            <line num="48" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="48" type="cond"/>
            <line num="49" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="1498" type="stmt"/>
            <line num="57" count="93" type="stmt"/>
            <line complexity="1" visibility="package" signature="getChannels() : Channel[]" num="60" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder() : Builder" num="67" count="42" type="method"/>
            <line num="68" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder()" num="76" count="42" type="method"/>
            <line complexity="1" visibility="public" signature="addChannel(Channel) : Builder" num="79" count="77" type="method"/>
            <line num="80" count="77" type="stmt"/>
            <line num="81" count="77" type="stmt"/>
            <line complexity="1" visibility="public" signature="addChannels(Channel) : Builder" num="84" count="38" type="method"/>
            <line num="85" count="38" type="stmt"/>
            <line num="86" count="73" type="stmt"/>
            <line num="88" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="failIfNoChannelToConsumeOneCharacter() : Builder" num="94" count="20" type="method"/>
            <line num="95" count="20" type="stmt"/>
            <line num="96" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : ChannelDispatcher&lt;O&gt;" num="99" count="42" type="method"/>
            <line num="100" count="42" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/ChannelException.java" name="ChannelException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="36" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ChannelException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ChannelException(String,Exception)" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ChannelException(String)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ChannelException(String,Throwable)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/CodeBuffer.java" name="CodeBuffer.java">
            <metrics coveredelements="94" coveredconditionals="12" complexity="41" loc="290" coveredmethods="20" methods="26" elements="117" classes="3" ncloc="170" statements="77" conditionals="14" coveredstatements="62"/>
            <class name="CodeBuffer">
               <metrics coveredelements="73" coveredconditionals="10" complexity="32" coveredmethods="15" methods="19" elements="91" statements="60" conditionals="12" coveredstatements="48"/>
            </class>
            <class name="CodeBuffer.Cursor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="CodeBuffer.Filter">
               <metrics coveredelements="10" coveredconditionals="2" complexity="5" coveredmethods="2" methods="4" elements="14" statements="8" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="CodeBuffer(String,CodeReaderConfiguration)" num="50" count="56" type="method"/>
            <line num="51" count="56" type="stmt"/>
            <line complexity="6" visibility="protected" signature="CodeBuffer(Reader,CodeReaderConfiguration)" num="57" count="157" type="method"/>
            <line num="60" count="157" type="stmt"/>
            <line num="60" count="157" type="stmt"/>
            <line num="61" count="157" type="stmt"/>
            <line num="62" count="157" type="stmt"/>
            <line num="63" count="157" type="stmt"/>
            <line num="65" count="157" type="stmt"/>
            <line num="68" count="157" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="73" count="157" type="stmt"/>
            <line num="73" count="157" type="stmt"/>
            <line num="74" count="157" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="read(Reader) : char[]" num="82" count="157" type="method"/>
            <line num="83" count="157" type="stmt"/>
            <line num="84" count="157" type="stmt"/>
            <line num="85" count="157" type="stmt"/>
            <line num="86" count="157" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="185" type="stmt"/>
            <line num="89" count="157" type="stmt"/>
            <line complexity="3" visibility="public" signature="pop() : int" num="97" count="103385" type="method"/>
            <line num="98" count="103385" type="stmt"/>
            <line falsecount="103383" truecount="2" num="98" type="cond"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="103383" type="stmt"/>
            <line num="102" count="103383" type="stmt"/>
            <line num="103" count="103383" type="stmt"/>
            <line num="104" count="103383" type="stmt"/>
            <line falsecount="103381" truecount="2" num="104" type="cond"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="103383" type="stmt"/>
            <line num="108" count="103383" type="stmt"/>
            <line complexity="5" visibility="private" signature="updateCursorPosition(int) : void" num="111" count="103383" type="method"/>
            <line num="113" count="103383" type="stmt"/>
            <line falsecount="103080" truecount="303" num="113" type="cond"/>
            <line num="114" count="303" type="stmt"/>
            <line num="115" count="303" type="stmt"/>
            <line num="116" count="103080" type="stmt"/>
            <line falsecount="103077" truecount="3" num="116" type="cond"/>
            <line num="117" count="3" type="stmt"/>
            <line num="119" count="103077" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastChar() : int" num="128" count="4" type="method"/>
            <line num="129" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : int" num="137" count="1686" type="method"/>
            <line num="138" count="1686" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLinePosition() : int" num="144" count="552" type="method"/>
            <line num="145" count="552" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCursor() : Cursor" num="148" count="1074" type="method"/>
            <line num="149" count="1074" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumnPosition() : int" num="155" count="573" type="method"/>
            <line num="156" count="573" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumnPosition(int) : CodeBuffer" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLinePosition(int) : void" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="startRecording() : void" num="174" count="1" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stopRecording() : CharSequence" num="178" count="3" type="method"/>
            <line num="179" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="193" count="110985" type="method"/>
            <line num="195" count="110985" type="stmt"/>
            <line complexity="2" visibility="protected" signature="intAt(int) : int" num="198" count="115800" type="method"/>
            <line num="199" count="115800" type="stmt"/>
            <line falsecount="115604" truecount="196" num="199" type="cond"/>
            <line num="200" count="196" type="stmt"/>
            <line num="202" count="115604" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="208" count="4376" type="method"/>
            <line num="210" count="4376" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLine() : int" num="234" count="460" type="method"/>
            <line num="235" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumn() : int" num="238" count="460" type="method"/>
            <line num="239" count="460" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : Cursor" num="242" count="1072" type="method"/>
            <line num="244" count="1072" type="stmt"/>
            <line num="246" count="1072" type="stmt"/>
            <line num="247" count="1072" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="1072" type="stmt"/>
            <line num="253" count="1072" type="stmt"/>
            <line num="255" count="1072" type="stmt"/>
            <line complexity="1" visibility="public" signature="Filter(Reader,CodeReaderFilter&lt;?&gt;,CodeReaderConfiguration)" num="266" count="5" type="method"/>
            <line num="267" count="5" type="stmt"/>
            <line num="268" count="5" type="stmt"/>
            <line num="269" count="5" type="stmt"/>
            <line num="270" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="read() : int" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(char[],int,int) : int" num="278" count="9" type="method"/>
            <line num="280" count="9" type="stmt"/>
            <line num="281" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="281" type="cond"/>
            <line complexity="1" visibility="public" signature="skip(long) : long" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/CodeReader.java" name="CodeReader.java">
            <metrics coveredelements="59" coveredconditionals="12" complexity="23" loc="189" coveredmethods="10" methods="10" elements="64" classes="1" ncloc="87" statements="42" conditionals="12" coveredstatements="37"/>
            <class name="CodeReader">
               <metrics coveredelements="59" coveredconditionals="12" complexity="23" coveredmethods="10" methods="10" elements="64" statements="42" conditionals="12" coveredstatements="37"/>
            </class>
            <line complexity="1" visibility="public" signature="CodeReader(Reader)" num="37" count="7" type="method"/>
            <line num="38" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="CodeReader(String)" num="44" count="41" type="method"/>
            <line num="45" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="CodeReader(Reader,CodeReaderConfiguration)" num="57" count="94" type="method"/>
            <line num="58" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="CodeReader(String,CodeReaderConfiguration)" num="69" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="pop(Appendable) : void" num="79" count="2" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="peek(int) : char[]" num="94" count="1049" type="method"/>
            <line num="95" count="1049" type="stmt"/>
            <line num="96" count="1049" type="stmt"/>
            <line num="97" count="1049" type="stmt"/>
            <line num="98" count="1049" type="stmt"/>
            <line falsecount="1049" truecount="2065" num="98" type="cond"/>
            <line num="99" count="2065" type="stmt"/>
            <line num="100" count="2065" type="stmt"/>
            <line num="101" count="2065" type="stmt"/>
            <line num="103" count="1049" type="stmt"/>
            <line complexity="4" visibility="public" signature="peekTo(EndMatcher,Appendable) : void" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line falsecount="2" truecount="12" num="118" type="cond"/>
            <line num="119" count="12" type="stmt"/>
            <line num="120" count="12" type="stmt"/>
            <line num="121" count="12" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="popTo(Matcher,Appendable) : int" num="137" count="4362" type="method"/>
            <line num="138" count="4362" type="stmt"/>
            <line complexity="8" visibility="public" signature="popTo(Matcher,Matcher,Appendable) : int" num="153" count="4364" type="method"/>
            <line num="154" count="4364" type="stmt"/>
            <line num="155" count="4364" type="stmt"/>
            <line num="156" count="4364" type="stmt"/>
            <line falsecount="3290" truecount="1073" num="156" type="cond"/>
            <line num="157" count="1073" type="stmt"/>
            <line falsecount="1071" truecount="2" num="157" type="cond"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="160" type="cond"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1072" type="stmt"/>
            <line num="165" count="1072" type="stmt"/>
            <line falsecount="1072" truecount="102816" num="165" type="cond"/>
            <line num="166" count="102816" type="stmt"/>
            <line num="168" count="1072" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="4364" type="stmt"/>
            <line num="183" count="3290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreviousCursor() : Cursor" num="186" count="918" type="method"/>
            <line num="187" count="918" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/CodeReaderConfiguration.java" name="CodeReaderConfiguration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="84" coveredmethods="5" methods="6" elements="14" classes="1" ncloc="30" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="CodeReaderConfiguration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="getTabWidth() : int" num="40" count="157" type="method"/>
            <line num="41" count="157" type="stmt"/>
            <line complexity="1" visibility="public" signature="setTabWidth(int) : void" num="48" count="6" type="method"/>
            <line num="49" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCodeReaderFilters() : CodeReaderFilter[]" num="55" count="157" type="method"/>
            <line num="57" count="157" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCodeReaderFilters(CodeReaderFilter&lt;?&gt;) : void" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCodeReaderFilters(CodeReaderFilter&lt;?&gt;) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cloneWithoutCodeReaderFilters() : CodeReaderConfiguration" num="78" count="5" type="method"/>
            <line num="79" count="5" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
            <line num="81" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/CodeReaderFilter.java" name="CodeReaderFilter.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="8" loc="126" coveredmethods="7" methods="8" elements="15" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="CodeReaderFilter">
               <metrics coveredelements="13" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="15" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="CodeReaderFilter()" num="39" count="4" type="method"/>
            <line complexity="1" visibility="public" signature="CodeReaderFilter(O)" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReader() : Reader" num="51" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReader(Reader) : void" num="61" count="5" type="method"/>
            <line num="62" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutput() : O" num="70" count="21" type="method"/>
            <line num="71" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOutput(O) : void" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConfiguration() : CodeReaderConfiguration" num="89" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setConfiguration(CodeReaderConfiguration) : void" num="99" count="5" type="method"/>
            <line num="100" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/EndMatcher.java" name="EndMatcher.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EndMatcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/channel/RegexChannel.java" name="RegexChannel.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="3" loc="64" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="20" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="RegexChannel">
               <metrics coveredelements="10" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="RegexChannel(String)" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="consume(CodeReader,O) : boolean" num="43" count="4" type="method"/>
            <line num="45" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="45" type="cond"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.grammar">
         <metrics coveredelements="184" complexity="70" loc="938" methods="54" classes="7" statements="116" coveredconditionals="26" coveredmethods="52" elements="202" ncloc="339" files="6" conditionals="32" coveredstatements="106"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/grammar/GrammarBuilder.java" name="GrammarBuilder.java">
            <metrics coveredelements="66" coveredconditionals="5" complexity="27" loc="327" coveredmethods="24" methods="24" elements="68" classes="2" ncloc="115" statements="38" conditionals="6" coveredstatements="37"/>
            <class name="GrammarBuilder">
               <metrics coveredelements="47" coveredconditionals="4" complexity="19" coveredmethods="17" methods="17" elements="47" statements="26" conditionals="4" coveredstatements="26"/>
            </class>
            <class name="GrammarBuilder.RuleBuilder">
               <metrics coveredelements="19" coveredconditionals="1" complexity="8" coveredmethods="7" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="sequence(Object,Object) : Object" num="59" count="46" type="method"/>
            <line num="60" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="sequence(Object,Object,Object) : Object" num="72" count="30" type="method"/>
            <line num="73" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOf(Object,Object) : Object" num="87" count="61" type="method"/>
            <line num="88" count="61" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOf(Object,Object,Object) : Object" num="100" count="77" type="method"/>
            <line num="101" count="77" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional(Object) : Object" num="114" count="148" type="method"/>
            <line num="115" count="148" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional(Object,Object) : Object" num="128" count="41" type="method"/>
            <line num="129" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore(Object) : Object" num="146" count="31" type="method"/>
            <line num="147" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore(Object,Object) : Object" num="160" count="8" type="method"/>
            <line num="161" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore(Object) : Object" num="178" count="51" type="method"/>
            <line num="179" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore(Object,Object) : Object" num="192" count="40" type="method"/>
            <line num="193" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="next(Object) : Object" num="204" count="2" type="method"/>
            <line num="205" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="next(Object,Object) : Object" num="218" count="3" type="method"/>
            <line num="219" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextNot(Object) : Object" num="230" count="12" type="method"/>
            <line num="231" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextNot(Object,Object) : Object" num="244" count="3" type="method"/>
            <line num="245" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : Object" num="252" count="4" type="method"/>
            <line num="253" count="4" type="stmt"/>
            <line complexity="2" visibility="package" signature="convertToExpressions(Object,Object[]) : ParsingExpression[]" num="258" count="421" type="method"/>
            <line num="259" count="421" type="stmt"/>
            <line num="260" count="421" type="stmt"/>
            <line num="261" count="421" type="stmt"/>
            <line falsecount="421" truecount="688" num="261" type="cond"/>
            <line num="262" count="688" type="stmt"/>
            <line num="264" count="421" type="stmt"/>
            <line complexity="2" visibility="private" signature="convertToExpressions(Object,Object,Object[]) : ParsingExpression[]" num="267" count="107" type="method"/>
            <line num="268" count="107" type="stmt"/>
            <line num="269" count="107" type="stmt"/>
            <line num="270" count="107" type="stmt"/>
            <line num="271" count="107" type="stmt"/>
            <line falsecount="107" truecount="262" num="271" type="cond"/>
            <line num="272" count="262" type="stmt"/>
            <line num="274" count="107" type="stmt"/>
            <line complexity="1" visibility="public" signature="RuleBuilder(GrammarBuilder,CompilableGrammarRule)" num="285" count="1969" type="method"/>
            <line num="286" count="1969" type="stmt"/>
            <line num="287" count="1969" type="stmt"/>
            <line complexity="2" visibility="public" signature="is(Object) : GrammarRuleBuilder" num="290" count="989" type="method"/>
            <line num="292" count="989" type="stmt"/>
            <line falsecount="983" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="983" type="stmt"/>
            <line num="296" count="983" type="stmt"/>
            <line complexity="1" visibility="public" signature="is(Object,Object) : GrammarRuleBuilder" num="299" count="324" type="method"/>
            <line num="301" count="324" type="stmt"/>
            <line complexity="1" visibility="public" signature="override(Object) : GrammarRuleBuilder" num="304" count="2" type="method"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="override(Object,Object) : GrammarRuleBuilder" num="310" count="1" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skip() : void" num="315" count="24" type="method"/>
            <line num="317" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipIfOneChild() : void" num="320" count="41" type="method"/>
            <line num="322" count="41" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/grammar/GrammarException.java" name="GrammarException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="40" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="GrammarException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GrammarException(String)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GrammarException(Throwable,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/grammar/GrammarRuleBuilder.java" name="GrammarRuleBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="89" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GrammarRuleBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/grammar/GrammarRuleKey.java" name="GrammarRuleKey.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GrammarRuleKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/grammar/LexerfulGrammarBuilder.java" name="LexerfulGrammarBuilder.java">
            <metrics coveredelements="68" coveredconditionals="11" complexity="24" loc="276" coveredmethods="17" methods="17" elements="76" classes="1" ncloc="122" statements="45" conditionals="14" coveredstatements="40"/>
            <class name="LexerfulGrammarBuilder">
               <metrics coveredelements="68" coveredconditionals="11" complexity="24" coveredmethods="17" methods="17" elements="76" statements="45" conditionals="14" coveredstatements="40"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : LexerfulGrammarBuilder" num="63" count="16" type="method"/>
            <line num="64" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="LexerfulGrammarBuilder()" num="67" count="16" type="method"/>
            <line complexity="2" visibility="public" signature="rule(GrammarRuleKey) : GrammarRuleBuilder" num="73" count="629" type="method"/>
            <line num="75" count="629" type="stmt"/>
            <line num="76" count="629" type="stmt"/>
            <line falsecount="381" truecount="248" num="76" type="cond"/>
            <line num="77" count="248" type="stmt"/>
            <line num="78" count="248" type="stmt"/>
            <line num="80" count="629" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRootRule(GrammarRuleKey) : void" num="86" count="8" type="method"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : Grammar" num="99" count="11" type="method"/>
            <line num="100" count="11" type="stmt"/>
            <line num="101" count="246" type="stmt"/>
            <line falsecount="243" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildWithMemoizationOfMatchesForAllRules() : Grammar" num="115" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="adjacent(Object) : Object" num="129" count="1" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyTokenButNot(Object) : Object" num="141" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOneOfThem(TokenType,TokenType) : Object" num="154" count="1" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bridge(TokenType,TokenType) : Object" num="176" count="1" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="everything() : Object" num="183" count="1" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyToken() : Object" num="193" count="1" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tillNewLine() : Object" num="203" count="1" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="till(Object) : Object" num="215" count="1" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exclusiveTill(Object) : Object" num="234" count="2" type="method"/>
            <line num="235" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="exclusiveTill(Object,Object) : Object" num="250" count="1" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="6" visibility="protected" signature="convertToExpression(Object) : ParsingExpression" num="254" count="1059" type="method"/>
            <line num="256" count="1059" type="stmt"/>
            <line num="257" count="1058" type="stmt"/>
            <line num="258" count="1058" type="stmt"/>
            <line falsecount="711" truecount="347" num="258" type="cond"/>
            <line num="259" count="347" type="stmt"/>
            <line num="260" count="711" type="stmt"/>
            <line falsecount="338" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="338" type="stmt"/>
            <line falsecount="13" truecount="325" num="264" type="cond"/>
            <line num="265" count="325" type="stmt"/>
            <line num="266" count="13" type="stmt"/>
            <line falsecount="2" truecount="11" num="266" type="cond"/>
            <line num="267" count="11" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="268" type="cond"/>
            <line num="269" count="1" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="1057" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/grammar/LexerlessGrammarBuilder.java" name="LexerlessGrammarBuilder.java">
            <metrics coveredelements="50" coveredconditionals="10" complexity="17" loc="168" coveredmethods="11" methods="11" elements="54" classes="1" ncloc="80" statements="31" conditionals="12" coveredstatements="29"/>
            <class name="LexerlessGrammarBuilder">
               <metrics coveredelements="50" coveredconditionals="10" complexity="17" coveredmethods="11" methods="11" elements="54" statements="31" conditionals="12" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : LexerlessGrammarBuilder" num="56" count="72" type="method"/>
            <line num="57" count="72" type="stmt"/>
            <line complexity="1" visibility="private" signature="LexerlessGrammarBuilder()" num="60" count="72" type="method"/>
            <line complexity="2" visibility="public" signature="rule(GrammarRuleKey) : GrammarRuleBuilder" num="66" count="1333" type="method"/>
            <line num="68" count="1333" type="stmt"/>
            <line num="69" count="1333" type="stmt"/>
            <line falsecount="590" truecount="743" num="69" type="cond"/>
            <line num="70" count="743" type="stmt"/>
            <line num="71" count="743" type="stmt"/>
            <line num="73" count="1333" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRootRule(GrammarRuleKey) : void" num="79" count="29" type="method"/>
            <line num="81" count="29" type="stmt"/>
            <line num="82" count="29" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : LexerlessGrammar" num="91" count="58" type="method"/>
            <line num="92" count="58" type="stmt"/>
            <line num="93" count="736" type="stmt"/>
            <line falsecount="731" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="regexp(String) : Object" num="106" count="166" type="method"/>
            <line num="107" count="166" type="stmt"/>
            <line complexity="1" visibility="public" signature="endOfInput() : Object" num="114" count="30" type="method"/>
            <line num="115" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="token(TokenType,Object) : Object" num="124" count="23" type="method"/>
            <line num="125" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="commentTrivia(Object) : Object" num="134" count="24" type="method"/>
            <line num="135" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="skippedTrivia(Object) : Object" num="144" count="22" type="method"/>
            <line num="145" count="22" type="stmt"/>
            <line complexity="5" visibility="protected" signature="convertToExpression(Object) : ParsingExpression" num="148" count="2047" type="method"/>
            <line num="150" count="2047" type="stmt"/>
            <line num="151" count="2046" type="stmt"/>
            <line num="152" count="2046" type="stmt"/>
            <line falsecount="823" truecount="1223" num="152" type="cond"/>
            <line num="153" count="1223" type="stmt"/>
            <line num="154" count="823" type="stmt"/>
            <line falsecount="377" truecount="446" num="154" type="cond"/>
            <line num="155" count="446" type="stmt"/>
            <line num="156" count="446" type="stmt"/>
            <line num="157" count="446" type="stmt"/>
            <line num="158" count="377" type="stmt"/>
            <line falsecount="101" truecount="276" num="158" type="cond"/>
            <line num="159" count="276" type="stmt"/>
            <line num="160" count="101" type="stmt"/>
            <line falsecount="0" truecount="100" num="160" type="cond"/>
            <line num="161" count="100" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="2045" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.ast.select">
         <metrics coveredelements="274" complexity="95" loc="587" methods="60" classes="4" statements="157" coveredconditionals="61" coveredmethods="58" elements="279" ncloc="415" files="4" conditionals="62" coveredstatements="155"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/ast/select/AstSelectFactory.java" name="AstSelectFactory.java">
            <metrics coveredelements="16" coveredconditionals="6" complexity="7" loc="55" coveredmethods="3" methods="4" elements="17" classes="1" ncloc="25" statements="7" conditionals="6" coveredstatements="7"/>
            <class name="AstSelectFactory">
               <metrics coveredelements="16" coveredconditionals="6" complexity="7" coveredmethods="3" methods="4" elements="17" statements="7" conditionals="6" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="private" signature="AstSelectFactory()" num="34" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="select(AstNode) : AstSelect" num="37" count="30" type="method"/>
            <line num="38" count="30" type="stmt"/>
            <line falsecount="24" truecount="6" num="38" type="cond"/>
            <line complexity="3" visibility="public" signature="create(List&lt;AstNode&gt;) : AstSelect" num="41" count="107" type="method"/>
            <line num="42" count="107" type="stmt"/>
            <line falsecount="57" truecount="50" num="42" type="cond"/>
            <line num="43" count="50" type="stmt"/>
            <line num="44" count="57" type="stmt"/>
            <line falsecount="35" truecount="22" num="44" type="cond"/>
            <line num="45" count="22" type="stmt"/>
            <line num="47" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : AstSelect" num="51" count="55" type="method"/>
            <line num="52" count="55" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/ast/select/EmptyAstSelect.java" name="EmptyAstSelect.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="18" loc="125" coveredmethods="17" methods="18" elements="36" classes="1" ncloc="81" statements="18" conditionals="0" coveredstatements="17"/>
            <class name="EmptyAstSelect">
               <metrics coveredelements="34" coveredconditionals="0" complexity="18" coveredmethods="17" methods="18" elements="36" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="children() : AstSelect" num="35" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="children(AstNodeType) : AstSelect" num="40" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="children(AstNodeType) : AstSelect" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextSibling() : AstSelect" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousSibling() : AstSelect" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent() : AstSelect" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstAncestor(AstNodeType) : AstSelect" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstAncestor(AstNodeType) : AstSelect" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants(AstNodeType) : AstSelect" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants(AstNodeType) : AstSelect" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="85" count="13" type="method"/>
            <line num="87" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEmpty() : boolean" num="90" count="10" type="method"/>
            <line num="92" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(AstNodeType) : AstSelect" num="95" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(AstNodeType) : AstSelect" num="100" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(Predicate&lt;AstNode&gt;) : AstSelect" num="105" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="110" count="2" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : AstNode" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;AstNode&gt;" num="120" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/ast/select/ListAstSelect.java" name="ListAstSelect.java">
            <metrics coveredelements="122" coveredconditionals="24" complexity="33" loc="222" coveredmethods="19" methods="19" elements="122" classes="1" ncloc="173" statements="79" conditionals="24" coveredstatements="79"/>
            <class name="ListAstSelect">
               <metrics coveredelements="122" coveredconditionals="24" complexity="33" coveredmethods="19" methods="19" elements="122" statements="79" conditionals="24" coveredstatements="79"/>
            </class>
            <line complexity="1" visibility="public" signature="ListAstSelect(List&lt;AstNode&gt;)" num="38" count="49" type="method"/>
            <line num="39" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="children() : AstSelect" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="children(AstNodeType) : AstSelect" num="51" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line num="54" count="6" type="stmt"/>
            <line num="56" count="12" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="58" type="cond"/>
            <line num="59" count="4" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="children(AstNodeType) : AstSelect" num="66" count="6" type="method"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="72" type="cond"/>
            <line num="73" count="4" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="nextSibling() : AstSelect" num="80" count="5" type="method"/>
            <line num="82" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line num="84" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="85" type="cond"/>
            <line num="86" count="6" type="stmt"/>
            <line num="89" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="previousSibling() : AstSelect" num="92" count="5" type="method"/>
            <line num="94" count="5" type="stmt"/>
            <line num="95" count="5" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="97" type="cond"/>
            <line num="98" count="6" type="stmt"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="parent() : AstSelect" num="104" count="5" type="method"/>
            <line num="106" count="5" type="stmt"/>
            <line num="107" count="5" type="stmt"/>
            <line num="108" count="10" type="stmt"/>
            <line num="109" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="109" type="cond"/>
            <line num="110" count="6" type="stmt"/>
            <line num="113" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="firstAncestor(AstNodeType) : AstSelect" num="116" count="5" type="method"/>
            <line num="118" count="5" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
            <line num="120" count="10" type="stmt"/>
            <line num="121" count="10" type="stmt"/>
            <line falsecount="10" truecount="4" num="121" type="cond"/>
            <line num="122" count="4" type="stmt"/>
            <line num="124" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="124" type="cond"/>
            <line num="125" count="6" type="stmt"/>
            <line num="128" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="firstAncestor(AstNodeType) : AstSelect" num="131" count="5" type="method"/>
            <line num="133" count="5" type="stmt"/>
            <line num="134" count="5" type="stmt"/>
            <line num="135" count="10" type="stmt"/>
            <line num="136" count="10" type="stmt"/>
            <line falsecount="10" truecount="4" num="136" type="cond"/>
            <line num="137" count="4" type="stmt"/>
            <line num="139" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="139" type="cond"/>
            <line num="140" count="6" type="stmt"/>
            <line num="143" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants(AstNodeType) : AstSelect" num="146" count="1" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants(AstNodeType) : AstSelect" num="155" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="164" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEmpty() : boolean" num="169" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="filter(AstNodeType) : AstSelect" num="174" count="5" type="method"/>
            <line num="176" count="5" type="stmt"/>
            <line num="177" count="5" type="stmt"/>
            <line num="178" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="178" type="cond"/>
            <line num="179" count="6" type="stmt"/>
            <line num="182" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="filter(AstNodeType) : AstSelect" num="185" count="5" type="method"/>
            <line num="187" count="5" type="stmt"/>
            <line num="188" count="5" type="stmt"/>
            <line num="189" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="189" type="cond"/>
            <line num="190" count="6" type="stmt"/>
            <line num="193" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="filter(Predicate&lt;AstNode&gt;) : AstSelect" num="196" count="5" type="method"/>
            <line num="198" count="5" type="stmt"/>
            <line num="199" count="5" type="stmt"/>
            <line num="200" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="200" type="cond"/>
            <line num="201" count="6" type="stmt"/>
            <line num="204" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="207" count="9" type="method"/>
            <line num="209" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : AstNode" num="212" count="3" type="method"/>
            <line num="214" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;AstNode&gt;" num="217" count="15" type="method"/>
            <line num="219" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/ast/select/SingleAstSelect.java" name="SingleAstSelect.java">
            <metrics coveredelements="102" coveredconditionals="31" complexity="37" loc="185" coveredmethods="19" methods="19" elements="104" classes="1" ncloc="136" statements="53" conditionals="32" coveredstatements="52"/>
            <class name="SingleAstSelect">
               <metrics coveredelements="102" coveredconditionals="31" complexity="37" coveredmethods="19" methods="19" elements="104" statements="53" conditionals="32" coveredstatements="52"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAstSelect(AstNode)" num="39" count="107" type="method"/>
            <line num="40" count="107" type="stmt"/>
            <line complexity="3" visibility="public" signature="children() : AstSelect" num="43" count="11" type="method"/>
            <line num="45" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="45" type="cond"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="47" type="cond"/>
            <line num="48" count="9" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="children(AstNodeType) : AstSelect" num="54" count="66" type="method"/>
            <line num="56" count="66" type="stmt"/>
            <line falsecount="43" truecount="23" num="56" type="cond"/>
            <line num="57" count="23" type="stmt"/>
            <line num="58" count="23" type="stmt"/>
            <line falsecount="10" truecount="13" num="58" type="cond"/>
            <line num="59" count="13" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line num="62" count="43" type="stmt"/>
            <line falsecount="1" truecount="42" num="62" type="cond"/>
            <line num="63" count="42" type="stmt"/>
            <line num="65" count="42" type="stmt"/>
            <line num="67" count="128" type="stmt"/>
            <line falsecount="99" truecount="29" num="67" type="cond"/>
            <line num="68" count="29" type="stmt"/>
            <line num="71" count="42" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="children(AstNodeType) : AstSelect" num="77" count="6" type="method"/>
            <line num="79" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="79" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="81" type="cond"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="89" type="cond"/>
            <line num="90" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextSibling() : AstSelect" num="99" count="3" type="method"/>
            <line num="101" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="previousSibling() : AstSelect" num="104" count="3" type="method"/>
            <line num="106" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent() : AstSelect" num="109" count="3" type="method"/>
            <line num="111" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="firstAncestor(AstNodeType) : AstSelect" num="114" count="3" type="method"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line falsecount="3" truecount="2" num="117" type="cond"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="firstAncestor(AstNodeType) : AstSelect" num="123" count="3" type="method"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line falsecount="3" truecount="2" num="126" type="cond"/>
            <line num="127" count="2" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants(AstNodeType) : AstSelect" num="132" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="descendants(AstNodeType) : AstSelect" num="137" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="142" count="6" type="method"/>
            <line num="144" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEmpty() : boolean" num="147" count="5" type="method"/>
            <line num="149" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="filter(AstNodeType) : AstSelect" num="152" count="2" type="method"/>
            <line num="154" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="154" type="cond"/>
            <line complexity="2" visibility="public" signature="filter(AstNodeType) : AstSelect" num="157" count="2" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="159" type="cond"/>
            <line complexity="2" visibility="public" signature="filter(Predicate&lt;AstNode&gt;) : AstSelect" num="162" count="2" type="method"/>
            <line num="164" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="164" type="cond"/>
            <line complexity="1" visibility="public" signature="size() : int" num="167" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : AstNode" num="172" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="174" type="cond"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;AstNode&gt;" num="180" count="24" type="method"/>
            <line num="182" count="24" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.api.typed">
         <metrics coveredelements="154" complexity="53" loc="593" methods="39" classes="11" statements="103" coveredconditionals="23" coveredmethods="34" elements="166" ncloc="330" files="7" conditionals="24" coveredstatements="97"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/ActionParser.java" name="ActionParser.java">
            <metrics coveredelements="48" coveredconditionals="5" complexity="11" loc="139" coveredmethods="7" methods="7" elements="50" classes="2" ncloc="90" statements="37" conditionals="6" coveredstatements="36"/>
            <class name="ActionParser">
               <metrics coveredelements="41" coveredconditionals="4" complexity="8" coveredmethods="5" methods="5" elements="41" statements="32" conditionals="4" coveredstatements="32"/>
            </class>
            <class name="ActionParser.ActionMethodInterceptor">
               <metrics coveredelements="7" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="ActionParser(Charset,LexerlessGrammarBuilder,Class,Object,NodeBuilder,GrammarRuleKey)" num="55" count="22" type="method"/>
            <line num="56" count="22" type="stmt"/>
            <line num="58" count="22" type="stmt"/>
            <line num="59" count="22" type="stmt"/>
            <line num="60" count="22" type="stmt"/>
            <line num="61" count="22" type="stmt"/>
            <line num="63" count="22" type="stmt"/>
            <line num="64" count="22" type="stmt"/>
            <line num="65" count="22" type="stmt"/>
            <line num="66" count="22" type="stmt"/>
            <line num="68" count="22" type="stmt"/>
            <line num="72" count="22" type="stmt"/>
            <line num="73" count="355" type="stmt"/>
            <line falsecount="157" truecount="198" num="73" type="cond"/>
            <line num="74" count="198" type="stmt"/>
            <line num="77" count="157" type="stmt"/>
            <line num="80" count="22" type="stmt"/>
            <line num="82" count="22" type="stmt"/>
            <line num="83" count="22" type="stmt"/>
            <line num="84" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="parse(File) : N" num="87" count="2" type="method"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : N" num="96" count="52" type="method"/>
            <line num="97" count="52" type="stmt"/>
            <line complexity="2" visibility="private" signature="parse(Input) : N" num="100" count="53" type="method"/>
            <line num="101" count="53" type="stmt"/>
            <line num="103" count="53" type="stmt"/>
            <line falsecount="49" truecount="4" num="103" type="cond"/>
            <line num="104" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line num="111" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="rootRule() : GrammarRuleKey" num="114" count="1" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ActionMethodInterceptor(GrammarBuilderInterceptor)" num="122" count="22" type="method"/>
            <line num="123" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="intercept(Object,Method,Object[],MethodProxy) : Object" num="126" count="158" type="method"/>
            <line num="128" count="158" type="stmt"/>
            <line falsecount="158" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="158" type="stmt"/>
            <line num="134" count="158" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/AstNodeBuilder.java" name="AstNodeBuilder.java">
            <metrics coveredelements="31" coveredconditionals="4" complexity="9" loc="100" coveredmethods="6" methods="6" elements="31" classes="2" ncloc="63" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="AstNodeBuilder">
               <metrics coveredelements="23" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="23" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <class name="AstNodeBuilder.UndefinedTokenType">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="createNonTerminal(GrammarRuleKey,Rule,List&lt;Object&gt;,int,int) : AstNode" num="38" count="18" type="method"/>
            <line num="40" count="18" type="stmt"/>
            <line num="42" count="18" type="stmt"/>
            <line num="43" count="22" type="stmt"/>
            <line falsecount="4" truecount="18" num="43" type="cond"/>
            <line num="44" count="18" type="stmt"/>
            <line num="45" count="18" type="stmt"/>
            <line num="48" count="18" type="stmt"/>
            <line num="49" count="18" type="stmt"/>
            <line num="50" count="22" type="stmt"/>
            <line num="53" count="18" type="stmt"/>
            <line num="54" count="18" type="stmt"/>
            <line num="56" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="createTerminal(Input,int,int,List&lt;Trivia&gt;,TokenType) : AstNode" num="59" count="18" type="method"/>
            <line num="61" count="18" type="stmt"/>
            <line num="62" count="18" type="stmt"/>
            <line falsecount="1" truecount="17" num="63" type="cond"/>
            <line num="71" count="18" type="stmt"/>
            <line num="72" count="18" type="stmt"/>
            <line num="73" count="18" type="stmt"/>
            <line num="74" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="79" count="18" type="method"/>
            <line num="81" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/GrammarBuilder.java" name="GrammarBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GrammarBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/Input.java" name="Input.java">
            <metrics coveredelements="45" coveredconditionals="12" complexity="15" loc="99" coveredmethods="9" methods="9" elements="45" classes="1" ncloc="59" statements="24" conditionals="12" coveredstatements="24"/>
            <class name="Input">
               <metrics coveredelements="45" coveredconditionals="12" complexity="15" coveredmethods="9" methods="9" elements="45" statements="24" conditionals="12" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="Input(char[])" num="39" count="62" type="method"/>
            <line num="40" count="62" type="stmt"/>
            <line complexity="4" visibility="public" signature="Input(char[],URI)" num="43" count="64" type="method"/>
            <line num="44" count="64" type="stmt"/>
            <line num="45" count="64" type="stmt"/>
            <line num="47" count="64" type="stmt"/>
            <line num="48" count="64" type="stmt"/>
            <line falsecount="64" truecount="400" num="48" type="cond"/>
            <line num="49" count="400" type="stmt"/>
            <line falsecount="396" truecount="4" num="49" type="cond"/>
            <line num="50" count="4" type="stmt"/>
            <line num="53" count="64" type="stmt"/>
            <line num="54" count="64" type="stmt"/>
            <line falsecount="64" truecount="4" num="54" type="cond"/>
            <line num="55" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="input() : char[]" num="59" count="54" type="method"/>
            <line num="60" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : URI" num="63" count="20" type="method"/>
            <line num="64" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="substring(int,int) : String" num="67" count="273" type="method"/>
            <line num="68" count="273" type="stmt"/>
            <line num="69" count="273" type="stmt"/>
            <line falsecount="273" truecount="361" num="69" type="cond"/>
            <line num="70" count="361" type="stmt"/>
            <line num="72" count="273" type="stmt"/>
            <line complexity="1" visibility="public" signature="lineAndColumnAt(int) : int[]" num="75" count="27" type="method"/>
            <line num="76" count="27" type="stmt"/>
            <line num="77" count="27" type="stmt"/>
            <line num="78" count="27" type="stmt"/>
            <line num="79" count="27" type="stmt"/>
            <line complexity="2" visibility="private" signature="lineAt(int) : int" num="82" count="27" type="method"/>
            <line num="83" count="27" type="stmt"/>
            <line num="84" count="27" type="stmt"/>
            <line falsecount="23" truecount="4" num="84" type="cond"/>
            <line complexity="2" visibility="private" signature="lineStartIndex(int) : int" num="87" count="27" type="method"/>
            <line num="88" count="27" type="stmt"/>
            <line falsecount="4" truecount="23" num="88" type="cond"/>
            <line complexity="1" visibility="private" signature="isNewLine(char[],int) : boolean" num="94" count="400" type="method"/>
            <line num="95" count="400" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/NodeBuilder.java" name="NodeBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NodeBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/NonterminalBuilder.java" name="NonterminalBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NonterminalBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/com/sonar/sslr/api/typed/Optional.java" name="Optional.java">
            <metrics coveredelements="30" coveredconditionals="2" complexity="18" loc="140" coveredmethods="12" methods="17" elements="40" classes="3" ncloc="90" statements="21" conditionals="2" coveredstatements="16"/>
            <class name="Optional">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="Optional.Present">
               <metrics coveredelements="22" coveredconditionals="2" complexity="9" coveredmethods="8" methods="8" elements="22" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <class name="Optional.Absent">
               <metrics coveredelements="4" coveredconditionals="0" complexity="7" coveredmethods="2" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="absent() : Optional&lt;T&gt;" num="33" count="13" type="method"/>
            <line num="35" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(T) : Optional&lt;T&gt;" num="38" count="37" type="method"/>
            <line num="39" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="Present(T)" num="54" count="37" type="method"/>
            <line num="55" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPresent() : boolean" num="58" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="63" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(Object) : T" num="68" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orNull() : T" num="74" count="30" type="method"/>
            <line num="77" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPresent() : boolean" num="103" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Object" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(Object) : Object" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="orNull() : Object" num="118" count="7" type="method"/>
            <line num="121" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.grammar">
         <metrics coveredelements="45" complexity="20" loc="188" methods="19" classes="2" statements="26" coveredconditionals="1" coveredmethods="19" elements="47" ncloc="122" files="2" conditionals="2" coveredstatements="25"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/grammar/MutableGrammar.java" name="MutableGrammar.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="49" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MutableGrammar">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="MutableGrammar(Map&lt;GrammarRuleKey, ? extends CompilableGrammarRule&gt;,GrammarRuleKey)" num="34" count="62" type="method"/>
            <line num="35" count="62" type="stmt"/>
            <line num="36" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule(GrammarRuleKey) : Rule" num="39" count="94" type="method"/>
            <line num="41" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="44" count="51" type="method"/>
            <line num="46" count="51" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/grammar/MutableParsingRule.java" name="MutableParsingRule.java">
            <metrics coveredelements="38" coveredconditionals="1" complexity="17" loc="139" coveredmethods="16" methods="16" elements="40" classes="1" ncloc="100" statements="22" conditionals="2" coveredstatements="21"/>
            <class name="MutableParsingRule">
               <metrics coveredelements="38" coveredconditionals="1" complexity="17" coveredmethods="16" methods="16" elements="40" statements="22" conditionals="2" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="MutableParsingRule(String)" num="52" count="236" type="method"/>
            <line num="53" count="236" type="stmt"/>
            <line num="54" count="236" type="stmt"/>
            <line complexity="1" visibility="public" signature="MutableParsingRule(GrammarRuleKey)" num="57" count="1065" type="method"/>
            <line num="58" count="1065" type="stmt"/>
            <line num="59" count="1065" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="62" count="120" type="method"/>
            <line num="63" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealAstNodeType() : AstNodeType" num="66" count="115" type="method"/>
            <line num="67" count="115" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRuleKey() : GrammarRuleKey" num="70" count="6682" type="method"/>
            <line num="72" count="6682" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpression() : ParsingExpression" num="75" count="3069" type="method"/>
            <line num="77" count="3069" type="stmt"/>
            <line complexity="2" visibility="public" signature="is(Object) : Rule" num="80" count="552" type="method"/>
            <line num="82" count="552" type="stmt"/>
            <line falsecount="551" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="551" type="stmt"/>
            <line num="86" count="551" type="stmt"/>
            <line complexity="1" visibility="public" signature="override(Object) : Rule" num="89" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="mock() : void" num="95" count="2" type="method"/>
            <line num="97" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExpression(ParsingExpression) : void" num="104" count="1289" type="method"/>
            <line num="106" count="1289" type="stmt"/>
            <line complexity="1" visibility="public" signature="skip() : void" num="109" count="38" type="method"/>
            <line num="111" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipIfOneChild() : void" num="114" count="5" type="method"/>
            <line num="116" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="119" count="117" type="method"/>
            <line num="121" count="117" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="124" count="2245" type="method"/>
            <line num="126" count="2245" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="129" count="7" type="method"/>
            <line num="131" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldMemoize() : boolean" num="134" count="3542387" type="method"/>
            <line num="136" count="3542387" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.vm">
         <metrics coveredelements="582" complexity="207" loc="2083" methods="168" classes="39" statements="390" coveredconditionals="56" coveredmethods="164" elements="624" ncloc="1077" files="27" conditionals="66" coveredstatements="362"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/CompilableGrammarRule.java" name="CompilableGrammarRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CompilableGrammarRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/CompilationHandler.java" name="CompilationHandler.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="28" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CompilationHandler">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="compile(ParsingExpression) : Instruction[]" num="24" count="48" type="method"/>
            <line num="25" count="48" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/CompiledGrammar.java" name="CompiledGrammar.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="57" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="28" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="CompiledGrammar">
               <metrics coveredelements="13" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="CompiledGrammar(Instruction[],Map&lt;GrammarRuleKey, CompilableGrammarRule&gt;,GrammarRuleKey,int)" num="34" count="264" type="method"/>
            <line num="35" count="264" type="stmt"/>
            <line num="36" count="264" type="stmt"/>
            <line num="37" count="264" type="stmt"/>
            <line num="38" count="264" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInstructions() : Instruction[]" num="41" count="341" type="method"/>
            <line num="42" count="341" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMatcher(GrammarRuleKey) : Matcher" num="45" count="290" type="method"/>
            <line num="46" count="290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRuleKey() : GrammarRuleKey" num="49" count="290" type="method"/>
            <line num="50" count="290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRuleOffset() : int" num="53" count="290" type="method"/>
            <line num="54" count="290" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/EndOfInputExpression.java" name="EndOfInputExpression.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="43" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="18" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="EndOfInputExpression">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="EndOfInputExpression()" num="26" count="5" type="method"/>
            <line complexity="2" visibility="public" signature="execute(Machine) : void" num="29" count="212" type="method"/>
            <line num="31" count="212" type="stmt"/>
            <line falsecount="28" truecount="184" num="31" type="cond"/>
            <line num="32" count="184" type="stmt"/>
            <line num="34" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/ErrorLocatingHandler.java" name="ErrorLocatingHandler.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="3" loc="37" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="13" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="ErrorLocatingHandler">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="onBacktrack(Machine) : void" num="26" count="1152392" type="method"/>
            <line num="28" count="1152392" type="stmt"/>
            <line falsecount="1151403" truecount="989" num="28" type="cond"/>
            <line num="29" count="989" type="stmt"/>
            <line complexity="1" visibility="public" signature="getErrorIndex() : int" num="33" count="52" type="method"/>
            <line num="34" count="52" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/ErrorTreeNode.java" name="ErrorTreeNode.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="65" coveredmethods="0" methods="2" elements="30" classes="1" ncloc="39" statements="22" conditionals="6" coveredstatements="0"/>
            <class name="ErrorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="30" statements="22" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="buildTree(List&lt;List&lt;MatcherPathElement&gt;&gt;) : ErrorTreeNode" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="addToTree(ErrorTreeNode,List&lt;MatcherPathElement&gt;) : void" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/FirstOfExpression.java" name="FirstOfExpression.java">
            <metrics coveredelements="24" coveredconditionals="4" complexity="5" loc="76" coveredmethods="3" methods="3" elements="24" classes="1" ncloc="32" statements="17" conditionals="4" coveredstatements="17"/>
            <class name="FirstOfExpression">
               <metrics coveredelements="24" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="24" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="FirstOfExpression(ParsingExpression)" num="28" count="245" type="method"/>
            <line num="29" count="245" type="stmt"/>
            <line complexity="3" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="48" count="793" type="method"/>
            <line num="50" count="793" type="stmt"/>
            <line num="51" count="793" type="stmt"/>
            <line num="52" count="793" type="stmt"/>
            <line falsecount="793" truecount="2596" num="52" type="cond"/>
            <line num="53" count="2596" type="stmt"/>
            <line num="54" count="2596" type="stmt"/>
            <line num="56" count="793" type="stmt"/>
            <line num="58" count="793" type="stmt"/>
            <line num="59" count="793" type="stmt"/>
            <line falsecount="793" truecount="1803" num="59" type="cond"/>
            <line num="60" count="1803" type="stmt"/>
            <line num="61" count="1803" type="stmt"/>
            <line num="62" count="1803" type="stmt"/>
            <line num="63" count="1803" type="stmt"/>
            <line num="64" count="1803" type="stmt"/>
            <line num="66" count="793" type="stmt"/>
            <line num="68" count="793" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="71" count="3" type="method"/>
            <line num="73" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/Instruction.java" name="Instruction.java">
            <metrics coveredelements="143" coveredconditionals="3" complexity="60" loc="392" coveredmethods="58" methods="58" elements="145" classes="13" ncloc="286" statements="83" conditionals="4" coveredstatements="82"/>
            <class name="Instruction">
               <metrics coveredelements="27" coveredconditionals="0" complexity="13" coveredmethods="13" methods="13" elements="27" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="Instruction.JumpInstruction">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="Instruction.CallInstruction">
               <metrics coveredelements="16" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <class name="Instruction.ChoiceInstruction">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="Instruction.IgnoreErrorsInstruction">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="Instruction.PredicateChoiceInstruction">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="Instruction.CommitInstruction">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="Instruction.CommitVerifyInstruction">
               <metrics coveredelements="14" coveredconditionals="1" complexity="6" coveredmethods="5" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="8"/>
            </class>
            <class name="Instruction.RetInstruction">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="Instruction.BacktrackInstruction">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="Instruction.EndInstruction">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="Instruction.FailTwiceInstruction">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="Instruction.BackCommitInstruction">
               <metrics coveredelements="14" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="addAll(List&lt;Instruction&gt;,Instruction[]) : void" num="36" count="9264" type="method"/>
            <line num="37" count="9264" type="stmt"/>
            <line num="38" count="26133" type="stmt"/>
            <line complexity="1" visibility="public" signature="jump(int) : Instruction" num="42" count="186" type="method"/>
            <line num="43" count="186" type="stmt"/>
            <line complexity="1" visibility="public" signature="call(int,Matcher) : Instruction" num="46" count="4413" type="method"/>
            <line num="47" count="4413" type="stmt"/>
            <line complexity="1" visibility="public" signature="ret() : Instruction" num="50" count="3055" type="method"/>
            <line num="51" count="3055" type="stmt"/>
            <line complexity="1" visibility="public" signature="backtrack() : Instruction" num="54" count="120" type="method"/>
            <line num="55" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="end() : Instruction" num="58" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="choice(int) : Instruction" num="62" count="2857" type="method"/>
            <line num="63" count="2857" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicateChoice(int) : Instruction" num="66" count="84" type="method"/>
            <line num="67" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="commit(int) : Instruction" num="70" count="2358" type="method"/>
            <line num="71" count="2358" type="stmt"/>
            <line complexity="1" visibility="public" signature="commitVerify(int) : Instruction" num="74" count="385" type="method"/>
            <line num="75" count="385" type="stmt"/>
            <line complexity="1" visibility="public" signature="failTwice() : Instruction" num="78" count="83" type="method"/>
            <line num="79" count="83" type="stmt"/>
            <line complexity="1" visibility="public" signature="backCommit(int) : Instruction" num="82" count="16" type="method"/>
            <line num="83" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoreErrors() : Instruction" num="86" count="80" type="method"/>
            <line num="87" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="JumpInstruction(int)" num="98" count="186" type="method"/>
            <line num="99" count="186" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="102" count="193" type="method"/>
            <line num="104" count="193" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="112" count="6" type="method"/>
            <line num="114" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="117" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="CallInstruction(int,Matcher)" num="127" count="4413" type="method"/>
            <line num="128" count="4413" type="stmt"/>
            <line num="129" count="4413" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="132" count="5385321" type="method"/>
            <line num="134" count="5385321" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="137" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="142" count="6" type="method"/>
            <line num="144" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="144" type="cond"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="5" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="152" count="1" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ChoiceInstruction(int)" num="161" count="2857" type="method"/>
            <line num="162" count="2857" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="165" count="4466295" type="method"/>
            <line num="167" count="4466295" type="stmt"/>
            <line num="168" count="4466295" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="171" count="1" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="176" count="10" type="method"/>
            <line num="178" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="181" count="1" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="188" count="155" type="method"/>
            <line num="190" count="155" type="stmt"/>
            <line num="191" count="155" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="194" count="1" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PredicateChoiceInstruction(int)" num="207" count="84" type="method"/>
            <line num="208" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="211" count="124" type="method"/>
            <line num="213" count="124" type="stmt"/>
            <line num="214" count="124" type="stmt"/>
            <line num="215" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="218" count="1" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="223" count="4" type="method"/>
            <line num="225" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="228" count="1" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="CommitInstruction(int)" num="237" count="2358" type="method"/>
            <line num="238" count="2358" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="241" count="2165582" type="method"/>
            <line num="244" count="2165582" type="stmt"/>
            <line num="246" count="2165582" type="stmt"/>
            <line num="247" count="2165582" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="250" count="1" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="255" count="6" type="method"/>
            <line num="257" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="260" count="1" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="CommitVerifyInstruction(int)" num="269" count="385" type="method"/>
            <line num="270" count="385" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(Machine) : void" num="273" count="301" type="method"/>
            <line num="275" count="301" type="stmt"/>
            <line falsecount="296" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="280" count="296" type="stmt"/>
            <line num="282" count="296" type="stmt"/>
            <line num="283" count="296" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="286" count="1" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="291" count="5" type="method"/>
            <line num="293" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="296" count="1" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="303" count="3544846" type="method"/>
            <line num="305" count="3544846" type="stmt"/>
            <line num="306" count="3544846" type="stmt"/>
            <line num="307" count="3544846" type="stmt"/>
            <line num="308" count="3544846" type="stmt"/>
            <line num="309" count="3544846" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="312" count="1" type="method"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="319" count="16" type="method"/>
            <line num="321" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="324" count="1" type="method"/>
            <line num="326" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="331" count="1" type="method"/>
            <line num="333" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="336" count="1" type="method"/>
            <line num="338" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="343" count="52" type="method"/>
            <line num="347" count="52" type="stmt"/>
            <line num="350" count="52" type="stmt"/>
            <line num="351" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="354" count="1" type="method"/>
            <line num="356" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BackCommitInstruction(int)" num="363" count="16" type="method"/>
            <line num="364" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="367" count="7" type="method"/>
            <line num="369" count="7" type="stmt"/>
            <line num="370" count="7" type="stmt"/>
            <line num="371" count="7" type="stmt"/>
            <line num="372" count="7" type="stmt"/>
            <line num="373" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="376" count="1" type="method"/>
            <line num="378" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="381" count="4" type="method"/>
            <line num="383" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="386" count="1" type="method"/>
            <line num="388" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/Machine.java" name="Machine.java">
            <metrics coveredelements="154" coveredconditionals="25" complexity="48" loc="305" coveredmethods="29" methods="30" elements="161" classes="1" ncloc="218" statements="103" conditionals="28" coveredstatements="100"/>
            <class name="Machine">
               <metrics coveredelements="154" coveredconditionals="25" complexity="48" coveredmethods="29" methods="30" elements="161" statements="103" conditionals="28" coveredstatements="100"/>
            </class>
            <line complexity="4" visibility="public" signature="parse(List&lt;Token&gt;,CompiledGrammar) : ParseNode" num="56" count="51" type="method"/>
            <line num="57" count="51" type="stmt"/>
            <line num="59" count="51" type="stmt"/>
            <line num="60" count="51" type="stmt"/>
            <line num="61" count="51" type="stmt"/>
            <line num="63" count="51" type="stmt"/>
            <line falsecount="6" truecount="45" num="63" type="cond"/>
            <line num="64" count="45" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line num="71" count="6" type="stmt"/>
            <line num="72" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="72" type="cond"/>
            <line num="73" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="parse(char[],CompiledGrammar) : ParsingResult" num="78" count="239" type="method"/>
            <line num="79" count="239" type="stmt"/>
            <line num="81" count="239" type="stmt"/>
            <line num="82" count="239" type="stmt"/>
            <line num="83" count="239" type="stmt"/>
            <line num="85" count="235" type="stmt"/>
            <line falsecount="43" truecount="192" num="85" type="cond"/>
            <line num="86" count="192" type="stmt"/>
            <line num="93" count="43" type="stmt"/>
            <line num="94" count="43" type="stmt"/>
            <line num="95" count="43" type="stmt"/>
            <line complexity="1" visibility="private" signature="execute(Matcher,int,Instruction[]) : void" num="99" count="290" type="method"/>
            <line num="101" count="290" type="stmt"/>
            <line num="102" count="290" type="stmt"/>
            <line num="103" count="290" type="stmt"/>
            <line num="105" count="290" type="stmt"/>
            <line complexity="3" visibility="public" signature="execute(String,Instruction[]) : boolean" num="109" count="33" type="method"/>
            <line num="110" count="33" type="stmt"/>
            <line num="111" count="33" type="stmt"/>
            <line falsecount="31" truecount="167" num="111" type="cond"/>
            <line num="112" count="167" type="stmt"/>
            <line num="114" count="31" type="stmt"/>
            <line complexity="3" visibility="public" signature="execute(Instruction[],Token) : boolean" num="118" count="15" type="method"/>
            <line num="119" count="15" type="stmt"/>
            <line num="120" count="15" type="stmt"/>
            <line falsecount="15" truecount="18" num="120" type="cond"/>
            <line num="121" count="18" type="stmt"/>
            <line num="123" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="Machine(String,Instruction[],MachineHandler)" num="126" count="48" type="method"/>
            <line num="127" count="48" type="stmt"/>
            <line complexity="2" visibility="private" signature="Machine(char[],Token[],Instruction[],MachineHandler)" num="130" count="353" type="method"/>
            <line num="131" count="353" type="stmt"/>
            <line num="132" count="353" type="stmt"/>
            <line num="133" count="353" type="stmt"/>
            <line falsecount="66" truecount="287" num="133" type="cond"/>
            <line num="134" count="287" type="stmt"/>
            <line num="136" count="66" type="stmt"/>
            <line num="139" count="353" type="stmt"/>
            <line num="140" count="353" type="stmt"/>
            <line num="141" count="353" type="stmt"/>
            <line num="142" count="353" type="stmt"/>
            <line num="143" count="353" type="stmt"/>
            <line num="144" count="353" type="stmt"/>
            <line num="145" count="353" type="stmt"/>
            <line complexity="1" visibility="public" signature="onBacktrack(Machine) : void" num="149" count="9" type="method"/>
            <line complexity="1" visibility="public" signature="Machine(String,Instruction[])" num="156" count="48" type="method"/>
            <line num="157" count="48" type="stmt"/>
            <line complexity="2" visibility="private" signature="execute(Instruction[]) : void" num="160" count="290" type="method"/>
            <line num="161" count="290" type="stmt"/>
            <line falsecount="286" truecount="23111979" num="161" type="cond"/>
            <line num="162" count="23111979" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAddress() : int" num="166" count="10" type="method"/>
            <line num="167" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAddress(int) : void" num="170" count="3544845" type="method"/>
            <line num="171" count="3544845" type="stmt"/>
            <line complexity="1" visibility="public" signature="jump(int) : void" num="174" count="11881751" type="method"/>
            <line num="175" count="11881751" type="stmt"/>
            <line complexity="1" visibility="private" signature="push(int) : void" num="178" count="9163685" type="method"/>
            <line num="179" count="9163685" type="stmt"/>
            <line num="180" count="9163685" type="stmt"/>
            <line num="181" count="9163685" type="stmt"/>
            <line num="182" count="9163685" type="stmt"/>
            <line num="183" count="9163685" type="stmt"/>
            <line complexity="1" visibility="public" signature="popReturn() : void" num="186" count="4697246" type="method"/>
            <line num="187" count="4697246" type="stmt"/>
            <line num="188" count="4697246" type="stmt"/>
            <line complexity="4" visibility="public" signature="pushReturn(int,Matcher,int) : void" num="191" count="5385335" type="method"/>
            <line num="192" count="5385335" type="stmt"/>
            <line num="193" count="5385335" type="stmt"/>
            <line falsecount="4696972" truecount="688363" num="193" type="cond"/>
            <line num="194" count="688363" type="stmt"/>
            <line num="195" count="688363" type="stmt"/>
            <line num="196" count="688363" type="stmt"/>
            <line num="198" count="4696972" type="stmt"/>
            <line num="199" count="4696972" type="stmt"/>
            <line num="200" count="4696972" type="stmt"/>
            <line num="202" count="4696972" type="stmt"/>
            <line falsecount="4696969" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="4696969" type="stmt"/>
            <line num="207" count="4696969" type="stmt"/>
            <line num="208" count="4696969" type="stmt"/>
            <line complexity="1" visibility="public" signature="pushBacktrack(int) : void" num="212" count="4466423" type="method"/>
            <line num="213" count="4466423" type="stmt"/>
            <line num="214" count="4466423" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : void" num="217" count="2165934" type="method"/>
            <line num="218" count="2165934" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : MachineStack" num="221" count="7876981" type="method"/>
            <line num="222" count="7876981" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIgnoreErrors(boolean) : void" num="225" count="3545128" type="method"/>
            <line num="226" count="3545128" type="stmt"/>
            <line complexity="4" visibility="public" signature="backtrack() : void" num="229" count="2300543" type="method"/>
            <line num="231" count="2300543" type="stmt"/>
            <line falsecount="2300543" truecount="1152401" num="231" type="cond"/>
            <line num="234" count="1152401" type="stmt"/>
            <line num="235" count="1152401" type="stmt"/>
            <line falsecount="3" truecount="1152398" num="235" type="cond"/>
            <line num="236" count="1152398" type="stmt"/>
            <line num="239" count="1152401" type="stmt"/>
            <line num="242" count="2300543" type="stmt"/>
            <line falsecount="2300479" truecount="64" num="242" type="cond"/>
            <line num="244" count="64" type="stmt"/>
            <line num="245" count="64" type="stmt"/>
            <line num="248" count="2300479" type="stmt"/>
            <line num="249" count="2300479" type="stmt"/>
            <line num="250" count="2300479" type="stmt"/>
            <line num="251" count="2300479" type="stmt"/>
            <line complexity="3" visibility="public" signature="createNode() : void" num="255" count="3544849" type="method"/>
            <line num="256" count="3544849" type="stmt"/>
            <line num="257" count="3544849" type="stmt"/>
            <line num="258" count="3544849" type="stmt"/>
            <line falsecount="2460" truecount="3542389" num="258" type="cond"/>
            <line num="259" count="3542389" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLeafNode(Matcher,int) : void" num="263" count="5248637" type="method"/>
            <line num="264" count="5248637" type="stmt"/>
            <line num="265" count="5248637" type="stmt"/>
            <line num="266" count="5248637" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="269" count="1153684" type="method"/>
            <line num="270" count="1153684" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIndex(int) : void" num="273" count="57" type="method"/>
            <line num="274" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="advanceIndex(int) : void" num="277" count="11" type="method"/>
            <line num="278" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="length() : int" num="281" count="7549285" type="method"/>
            <line num="283" count="7549285" type="stmt"/>
            <line complexity="1" visibility="public" signature="charAt(int) : char" num="286" count="7314201" type="method"/>
            <line num="288" count="7314201" type="stmt"/>
            <line complexity="1" visibility="public" signature="subSequence(int,int) : CharSequence" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokenAt(int) : Token" num="301" count="6052" type="method"/>
            <line num="302" count="6052" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/MachineHandler.java" name="MachineHandler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MachineHandler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/MachineStack.java" name="MachineStack.java">
            <metrics coveredelements="45" coveredconditionals="2" complexity="20" loc="129" coveredmethods="19" methods="19" elements="45" classes="1" ncloc="81" statements="24" conditionals="2" coveredstatements="24"/>
            <class name="MachineStack">
               <metrics coveredelements="45" coveredconditionals="2" complexity="20" coveredmethods="19" methods="19" elements="45" statements="24" conditionals="2" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="MachineStack()" num="44" count="356" type="method"/>
            <line num="45" count="356" type="stmt"/>
            <line num="46" count="356" type="stmt"/>
            <line num="47" count="356" type="stmt"/>
            <line complexity="1" visibility="private" signature="MachineStack(MachineStack)" num="50" count="203547" type="method"/>
            <line num="51" count="203547" type="stmt"/>
            <line num="52" count="203547" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent() : MachineStack" num="55" count="14874390" type="method"/>
            <line num="56" count="14874390" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOrCreateChild() : MachineStack" num="59" count="9164041" type="method"/>
            <line num="60" count="9164041" type="stmt"/>
            <line falsecount="8960494" truecount="203547" num="60" type="cond"/>
            <line num="61" count="203547" type="stmt"/>
            <line num="63" count="9164041" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReturn() : boolean" num="66" count="3452944" type="method"/>
            <line num="67" count="3452944" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="73" count="2300544" type="method"/>
            <line num="74" count="2300544" type="stmt"/>
            <line complexity="1" visibility="public" signature="address() : int" num="77" count="5845326" type="method"/>
            <line num="78" count="5845326" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAddress(int) : void" num="81" count="9163685" type="method"/>
            <line num="82" count="9163685" type="stmt"/>
            <line complexity="1" visibility="public" signature="index() : int" num="85" count="9388077" type="method"/>
            <line num="86" count="9388077" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIndex(int) : void" num="89" count="9164039" type="method"/>
            <line num="90" count="9164039" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIgnoreErrors() : boolean" num="93" count="6997731" type="method"/>
            <line num="94" count="6997731" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIgnoreErrors(boolean) : void" num="97" count="9163685" type="method"/>
            <line num="98" count="9163685" type="stmt"/>
            <line complexity="1" visibility="public" signature="matcher() : Matcher" num="101" count="10634452" type="method"/>
            <line num="102" count="10634452" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMatcher(Matcher) : void" num="105" count="9163685" type="method"/>
            <line num="106" count="9163685" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftRecursion() : int" num="109" count="4697248" type="method"/>
            <line num="110" count="4697248" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLeftRecursion(int) : void" num="113" count="4696969" type="method"/>
            <line num="114" count="4696969" type="stmt"/>
            <line complexity="1" visibility="public" signature="calledAddress() : int" num="117" count="4697248" type="method"/>
            <line num="118" count="4697248" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalledAddress(int) : void" num="121" count="4696969" type="method"/>
            <line num="122" count="4696969" type="stmt"/>
            <line complexity="1" visibility="public" signature="subNodes() : List&lt;ParseNode&gt;" num="125" count="26522382" type="method"/>
            <line num="126" count="26522382" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/MemoParsingExpression.java" name="MemoParsingExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MemoParsingExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/MutableGrammarCompiler.java" name="MutableGrammarCompiler.java">
            <metrics coveredelements="39" coveredconditionals="10" complexity="8" loc="88" coveredmethods="3" methods="3" elements="39" classes="1" ncloc="52" statements="26" conditionals="10" coveredstatements="26"/>
            <class name="MutableGrammarCompiler">
               <metrics coveredelements="39" coveredconditionals="10" complexity="8" coveredmethods="3" methods="3" elements="39" statements="26" conditionals="10" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="compile(CompilableGrammarRule) : CompiledGrammar" num="33" count="264" type="method"/>
            <line num="34" count="264" type="stmt"/>
            <line complexity="4" visibility="private" signature="doCompile(CompilableGrammarRule) : CompiledGrammar" num="41" count="264" type="method"/>
            <line num="42" count="264" type="stmt"/>
            <line num="46" count="264" type="stmt"/>
            <line num="47" count="264" type="stmt"/>
            <line num="49" count="264" type="stmt"/>
            <line falsecount="264" truecount="2975" num="49" type="cond"/>
            <line num="50" count="2975" type="stmt"/>
            <line num="51" count="2975" type="stmt"/>
            <line num="53" count="2975" type="stmt"/>
            <line num="54" count="2975" type="stmt"/>
            <line num="55" count="2975" type="stmt"/>
            <line num="60" count="264" type="stmt"/>
            <line num="61" count="264" type="stmt"/>
            <line falsecount="264" truecount="17681" num="61" type="cond"/>
            <line num="62" count="17681" type="stmt"/>
            <line num="63" count="17681" type="stmt"/>
            <line falsecount="13350" truecount="4331" num="63" type="cond"/>
            <line num="64" count="4331" type="stmt"/>
            <line num="65" count="4331" type="stmt"/>
            <line num="66" count="4331" type="stmt"/>
            <line num="67" count="4331" type="stmt"/>
            <line num="71" count="264" type="stmt"/>
            <line complexity="3" visibility="public" signature="compile(ParsingExpression) : Instruction[]" num="74" count="17355" type="method"/>
            <line num="76" count="17355" type="stmt"/>
            <line falsecount="13024" truecount="4331" num="76" type="cond"/>
            <line num="77" count="4331" type="stmt"/>
            <line num="78" count="4331" type="stmt"/>
            <line falsecount="1620" truecount="2711" num="78" type="cond"/>
            <line num="79" count="2711" type="stmt"/>
            <line num="80" count="2711" type="stmt"/>
            <line num="82" count="4331" type="stmt"/>
            <line num="84" count="13024" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/NativeExpression.java" name="NativeExpression.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="29" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NativeExpression">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="24" count="8560" type="method"/>
            <line num="26" count="8560" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/NextExpression.java" name="NextExpression.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="66" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="21" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="NextExpression">
               <metrics coveredelements="12" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="NextExpression(ParsingExpression)" num="26" count="10" type="method"/>
            <line num="27" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="50" count="12" type="method"/>
            <line num="52" count="12" type="stmt"/>
            <line num="53" count="12" type="stmt"/>
            <line num="54" count="12" type="stmt"/>
            <line num="55" count="12" type="stmt"/>
            <line num="56" count="12" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/NextNotExpression.java" name="NextNotExpression.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="63" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="20" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="NextNotExpression">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="NextNotExpression(ParsingExpression)" num="26" count="29" type="method"/>
            <line num="27" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="48" count="80" type="method"/>
            <line num="50" count="80" type="stmt"/>
            <line num="51" count="80" type="stmt"/>
            <line num="52" count="80" type="stmt"/>
            <line num="53" count="80" type="stmt"/>
            <line num="54" count="80" type="stmt"/>
            <line num="55" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="58" count="9" type="method"/>
            <line num="60" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/NothingExpression.java" name="NothingExpression.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="39" coveredmethods="3" methods="3" elements="5" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NothingExpression">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="NothingExpression()" num="26" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/OneOrMoreExpression.java" name="OneOrMoreExpression.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="69" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="23" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="OneOrMoreExpression">
               <metrics coveredelements="14" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="14" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="OneOrMoreExpression(ParsingExpression)" num="26" count="46" type="method"/>
            <line num="27" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="51" count="104" type="method"/>
            <line num="53" count="104" type="stmt"/>
            <line num="54" count="104" type="stmt"/>
            <line num="55" count="104" type="stmt"/>
            <line num="56" count="104" type="stmt"/>
            <line num="57" count="104" type="stmt"/>
            <line num="58" count="104" type="stmt"/>
            <line num="59" count="104" type="stmt"/>
            <line num="60" count="104" type="stmt"/>
            <line num="61" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/OptionalExpression.java" name="OptionalExpression.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="20" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="OptionalExpression">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="OptionalExpression(ParsingExpression)" num="26" count="196" type="method"/>
            <line num="27" count="196" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="39" count="549" type="method"/>
            <line num="42" count="549" type="stmt"/>
            <line num="43" count="549" type="stmt"/>
            <line num="44" count="549" type="stmt"/>
            <line num="45" count="549" type="stmt"/>
            <line num="46" count="549" type="stmt"/>
            <line num="47" count="549" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/ParsingExpression.java" name="ParsingExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParsingExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/PatternExpression.java" name="PatternExpression.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="6" loc="75" coveredmethods="4" methods="4" elements="19" classes="1" ncloc="35" statements="13" conditionals="2" coveredstatements="12"/>
            <class name="PatternExpression">
               <metrics coveredelements="18" coveredconditionals="2" complexity="6" coveredmethods="4" methods="4" elements="19" statements="13" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="PatternExpression(String)" num="34" count="237" type="method"/>
            <line num="35" count="237" type="stmt"/>
            <line complexity="3" visibility="public" signature="execute(Machine) : void" num="41" count="697" type="method"/>
            <line num="43" count="697" type="stmt"/>
            <line num="44" count="697" type="stmt"/>
            <line num="45" count="697" type="stmt"/>
            <line num="46" count="697" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="696" type="stmt"/>
            <line falsecount="236" truecount="460" num="51" type="cond"/>
            <line num="53" count="460" type="stmt"/>
            <line num="54" count="460" type="stmt"/>
            <line num="56" count="236" type="stmt"/>
            <line num="60" count="696" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="63" count="29" type="method"/>
            <line num="65" count="29" type="stmt"/>
            <line complexity="1" visibility="package" signature="getMatcher() : Matcher" num="71" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/RuleRefExpression.java" name="RuleRefExpression.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="46" coveredmethods="3" methods="4" elements="8" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="RuleRefExpression">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RuleRefExpression(GrammarRuleKey)" num="28" count="4333" type="method"/>
            <line num="29" count="4333" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRuleKey() : GrammarRuleKey" num="32" count="4332" type="method"/>
            <line num="33" count="4332" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/SequenceExpression.java" name="SequenceExpression.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="57" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="SequenceExpression">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="SequenceExpression(ParsingExpression)" num="30" count="962" type="method"/>
            <line num="31" count="962" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="43" count="2541" type="method"/>
            <line num="45" count="2541" type="stmt"/>
            <line num="46" count="2541" type="stmt"/>
            <line num="47" count="6289" type="stmt"/>
            <line num="49" count="2541" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="52" count="13" type="method"/>
            <line num="54" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/StringExpression.java" name="StringExpression.java">
            <metrics coveredelements="20" coveredconditionals="6" complexity="6" loc="53" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="27" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="StringExpression">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="StringExpression(String)" num="28" count="509" type="method"/>
            <line num="29" count="509" type="stmt"/>
            <line complexity="4" visibility="public" signature="execute(Machine) : void" num="32" count="7542340" type="method"/>
            <line num="34" count="7542340" type="stmt"/>
            <line falsecount="7312636" truecount="229704" num="34" type="cond"/>
            <line num="35" count="229704" type="stmt"/>
            <line num="36" count="229704" type="stmt"/>
            <line num="38" count="7312636" type="stmt"/>
            <line falsecount="5247015" truecount="7312929" num="38" type="cond"/>
            <line num="39" count="7312929" type="stmt"/>
            <line falsecount="5247308" truecount="2065621" num="39" type="cond"/>
            <line num="40" count="2065621" type="stmt"/>
            <line num="41" count="2065621" type="stmt"/>
            <line num="44" count="5247015" type="stmt"/>
            <line num="45" count="5247015" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="48" count="9" type="method"/>
            <line num="50" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/TokenExpression.java" name="TokenExpression.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="5" loc="74" coveredmethods="5" methods="5" elements="18" classes="1" ncloc="32" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TokenExpression">
               <metrics coveredelements="18" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="18" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="TokenExpression(TokenType,ParsingExpression)" num="30" count="28" type="method"/>
            <line num="31" count="28" type="stmt"/>
            <line num="32" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenType() : TokenType" num="35" count="71" type="method"/>
            <line num="36" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="49" count="5" type="method"/>
            <line num="51" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="compile(CompilationHandler,Matcher,ParsingExpression) : Instruction[]" num="57" count="76" type="method"/>
            <line num="59" count="76" type="stmt"/>
            <line num="60" count="76" type="stmt"/>
            <line num="61" count="76" type="stmt"/>
            <line num="62" count="76" type="stmt"/>
            <line num="63" count="76" type="stmt"/>
            <line num="64" count="76" type="stmt"/>
            <line num="65" count="76" type="stmt"/>
            <line num="66" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/TriviaExpression.java" name="TriviaExpression.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="59" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="TriviaExpression">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="TriviaExpression(TriviaKind,ParsingExpression)" num="30" count="87" type="method"/>
            <line num="31" count="87" type="stmt"/>
            <line num="32" count="87" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTriviaKind() : TriviaKind" num="35" count="53" type="method"/>
            <line num="36" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="49" count="71" type="method"/>
            <line num="51" count="71" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="54" count="12" type="method"/>
            <line num="56" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/main/java/org/sonar/sslr/internal/vm/ZeroOrMoreExpression.java" name="ZeroOrMoreExpression.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="20" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="ZeroOrMoreExpression">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="ZeroOrMoreExpression(ParsingExpression)" num="26" count="134" type="method"/>
            <line num="27" count="134" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="39" count="275" type="method"/>
            <line num="42" count="275" type="stmt"/>
            <line num="43" count="275" type="stmt"/>
            <line num="44" count="275" type="stmt"/>
            <line num="45" count="275" type="stmt"/>
            <line num="46" count="275" type="stmt"/>
            <line num="47" count="275" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="6" type="method"/>
            <line num="52" count="6" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="SonarSource :: Language Recognizer 1.24-SNAPSHOT (Aggregated)" timestamp="1594121238629">
      <metrics coveredelements="3793" complexity="710" loc="11468" methods="675" classes="144" statements="3536" packages="29" coveredconditionals="43" coveredmethods="570" elements="4259" ncloc="7515" files="114" conditionals="48" coveredstatements="3180"/>
      <package name="org.sonar.sslr.test.channel">
         <metrics coveredelements="20" complexity="4" loc="63" methods="3" classes="1" statements="15" coveredconditionals="2" coveredmethods="3" elements="20" ncloc="37" files="1" conditionals="2" coveredstatements="15"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/test/java/org/sonar/sslr/test/channel/ChannelMatchersTest.java" name="ChannelMatchersTest.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="4" loc="63" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="37" statements="15" conditionals="2" coveredstatements="15"/>
            <class name="ChannelMatchersTest">
               <metrics coveredelements="20" complexity="4" methods="3" testruns="2" statements="15" coveredconditionals="2" coveredmethods="3" elements="20" testfailures="0" testduration="0.019999999999999997" conditionals="2" coveredstatements="15" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testConsumeMatcher() : void" num="34" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="consume(CodeReader,StringBuilder) : boolean" num="38" count="4" type="method"/>
            <line num="40" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="40" type="cond"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasNextChar() : void" num="58" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.test.minic">
         <metrics coveredelements="44" complexity="5" loc="96" methods="5" classes="1" statements="39" coveredconditionals="0" coveredmethods="5" elements="44" ncloc="67" files="1" conditionals="0" coveredstatements="39"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/test/minic/MiniCLexerTest.java" name="MiniCLexerTest.java">
            <metrics coveredelements="44" coveredconditionals="0" complexity="5" loc="96" coveredmethods="5" methods="5" elements="44" classes="1" ncloc="67" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="MiniCLexerTest">
               <metrics coveredelements="44" complexity="5" methods="5" testruns="5" statements="39" coveredconditionals="0" coveredmethods="5" elements="44" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="39" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="lexIdentifiers() : void" num="37" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lexIntegers() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lexKeywords() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lexComments() : void" num="65" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lexPunctuators() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.tests">
         <metrics coveredelements="31" complexity="23" loc="317" methods="23" classes="4" statements="59" coveredconditionals="0" coveredmethods="11" elements="82" ncloc="200" files="4" conditionals="0" coveredstatements="20"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/test/java/org/sonar/sslr/tests/AssertionsTest.java" name="AssertionsTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="20" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="AssertionsTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="private_constructor() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/test/java/org/sonar/sslr/tests/ParserAssertTest.java" name="ParserAssertTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="10" loc="126" coveredmethods="3" methods="10" elements="40" classes="1" ncloc="93" statements="30" conditionals="0" coveredstatements="6"/>
            <class name="ParserAssertTest">
               <metrics coveredelements="9" complexity="10" methods="10" testruns="8" statements="30" coveredconditionals="0" coveredmethods="3" elements="40" testfailures="7" testduration="0.029000000000000005" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="42" count="8" type="method"/>
            <line num="44" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="51" count="16" type="method"/>
            <line num="53" count="16" type="stmt"/>
            <line num="56" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="59" testsuccess="true" count="1" testduration="0.024" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_matches_failure() : void" num="67" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2_matches_failure() : void" num="75" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_notMatches_failure() : void" num="83" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_notMatches_failure2() : void" num="91" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_accept_null() : void" num="99" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_accept_null_root_rule() : void" num="106" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_lexer_failure() : void" num="114" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/test/java/org/sonar/sslr/tests/ParsingResultComparisonFailureTest.java" name="ParsingResultComparisonFailureTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="47" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ParsingResultComparisonFailureTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.019" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test_implicit_message() : void" num="29" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_explicit_message() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-testing-harness/src/test/java/org/sonar/sslr/tests/RuleAssertTest.java" name="RuleAssertTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="9" loc="98" coveredmethods="4" methods="9" elements="28" classes="1" ncloc="65" statements="19" conditionals="0" coveredstatements="4"/>
            <class name="RuleAssertTest">
               <metrics coveredelements="8" complexity="9" methods="9" testruns="8" statements="19" coveredconditionals="0" coveredmethods="4" elements="28" testfailures="5" testduration="0.051000000000000004" conditionals="0" coveredstatements="4" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="8" type="method"/>
            <line num="37" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="40" testsuccess="true" count="1" testduration="0.033" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_matches_failure() : void" num="47" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_notMatches_failure() : void" num="55" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_accept_null() : void" num="63" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="notMatches_should_not_accept_prefix_match() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesPrefix_ok() : void" num="76" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesPrefix_full_mistmatch() : void" num="82" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesPrefix_wrong_prefix() : void" num="90" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.examples.grammars.typed">
         <metrics coveredelements="70" complexity="9" loc="146" methods="9" classes="1" statements="61" coveredconditionals="0" coveredmethods="9" elements="70" ncloc="108" files="1" conditionals="0" coveredstatements="61"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/typed/JsonGrammarTest.java" name="JsonGrammarTest.java">
            <metrics coveredelements="70" coveredconditionals="0" complexity="9" loc="146" coveredmethods="9" methods="9" elements="70" classes="1" ncloc="108" statements="61" conditionals="0" coveredstatements="61"/>
            <class name="JsonGrammarTest">
               <metrics coveredelements="70" complexity="9" methods="9" testruns="7" statements="61" coveredconditionals="0" coveredmethods="9" elements="70" testfailures="0" testduration="0.032" conditionals="0" coveredstatements="61" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="number() : void" num="47" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="number_not_parsed() : void" num="59" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string() : void" num="64" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : void" num="79" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : void" num="90" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array() : void" num="108" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="json() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertValue(String,Class) : void" num="133" count="7" type="method"/>
            <line num="134" count="7" type="stmt"/>
            <line num="135" count="7" type="stmt"/>
            <line num="136" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertLiteral(String) : void" num="139" count="19" type="method"/>
            <line num="140" count="19" type="stmt"/>
            <line num="141" count="19" type="stmt"/>
            <line num="142" count="19" type="stmt"/>
            <line num="143" count="19" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.examples.grammars">
         <metrics coveredelements="86" complexity="35" loc="690" methods="32" classes="9" statements="85" coveredconditionals="4" coveredmethods="24" elements="121" ncloc="413" files="9" conditionals="4" coveredstatements="58"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/AbcGrammarTest.java" name="AbcGrammarTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AbcGrammarTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/ExpressionGrammarTest.java" name="ExpressionGrammarTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="2" loc="68" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="33" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="ExpressionGrammarTest">
               <metrics coveredelements="14" complexity="2" methods="2" testruns="2" statements="12" coveredconditionals="0" coveredmethods="2" elements="14" testfailures="0" testduration="0.042" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="rules() : void" num="40" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ast() : void" num="51" testsuccess="true" count="1" testduration="0.033" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/IncorrectGrammarTest.java" name="IncorrectGrammarTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="77" coveredmethods="0" methods="6" elements="24" classes="1" ncloc="47" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="IncorrectGrammarTest">
               <metrics coveredelements="0" complexity="6" methods="6" testruns="6" statements="18" coveredconditionals="0" coveredmethods="0" elements="24" testfailures="6" testduration="0.009000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="undefined_rule() : void" num="35" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reference_to_undefined_rule() : void" num="42" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule_defined_twice() : void" num="49" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incorrect_regular_expression() : void" num="56" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="infinite_zero_or_more_expression() : void" num="63" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="infinite_one_or_more_expression() : void" num="70" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/JsonGrammarTest.java" name="JsonGrammarTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="102" coveredmethods="7" methods="7" elements="14" classes="1" ncloc="71" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="JsonGrammarTest">
               <metrics coveredelements="14" complexity="7" methods="7" testruns="7" statements="7" coveredconditionals="0" coveredmethods="7" elements="14" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="7" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="whitespace() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="number() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : void" num="79" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="array() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="json() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/LeftRecursiveGrammarTest.java" name="LeftRecursiveGrammarTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="80" coveredmethods="2" methods="4" elements="16" classes="1" ncloc="52" statements="12" conditionals="0" coveredstatements="4"/>
            <class name="LeftRecursiveGrammarTest">
               <metrics coveredelements="6" complexity="4" methods="4" testruns="4" statements="12" coveredconditionals="0" coveredmethods="2" elements="16" testfailures="2" testduration="0.005" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="should_detect_immediate_left_recursion() : void" num="36" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eliminated_immediate_left_recursion() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_detect_indirect_left_recursion() : void" num="60" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eliminated_indirect_left_recursion() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/MemoizationGrammarTest.java" name="MemoizationGrammarTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="MemoizationGrammarTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="3" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="9.882" conditionals="0" coveredstatements="6" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_be_slow_to_fail_to_parse_gramar_requiring_negative_memoization() : void" num="29" testsuccess="true" count="1" testduration="0.651" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_be_fast_on_grammar_requiring_positive_memoization() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_be_slow_on_grammar_requiring_positive_memoization_on_more_than_just_the_last_rule() : void" num="47" testsuccess="true" count="1" testduration="9.23" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/PegGrammarTest.java" name="PegGrammarTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="1" loc="65" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="40" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="PegGrammarTest">
               <metrics coveredelements="14" complexity="1" methods="1" testruns="1" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="13" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/RecursiveGrammarTest.java" name="RecursiveGrammarTest.java">
            <metrics coveredelements="11" coveredconditionals="4" complexity="3" loc="43" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="18" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="RecursiveGrammarTest">
               <metrics coveredelements="11" complexity="3" methods="1" testruns="1" statements="6" coveredconditionals="4" coveredmethods="1" elements="11" testfailures="0" testduration="0.642" conditionals="4" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.642" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line falsecount="1" truecount="100000" num="34" type="cond"/>
            <line num="35" count="100000" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line falsecount="1" truecount="100000" num="37" type="cond"/>
            <line num="38" count="100000" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-examples/src/test/java/org/sonar/sslr/examples/grammars/RegularExpressionGrammarTest.java" name="RegularExpressionGrammarTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="8" loc="155" coveredmethods="7" methods="7" elements="17" classes="1" ncloc="102" statements="10" conditionals="0" coveredstatements="9"/>
            <class name="RegularExpressionGrammarTest">
               <metrics coveredelements="16" complexity="8" methods="7" testruns="5" statements="10" coveredconditionals="0" coveredmethods="7" elements="17" testfailures="0" testduration="0.013000000000000001" conditionals="0" coveredstatements="9" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="character_class() : void" num="34" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="atom() : void" num="67" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="term() : void" num="90" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="alternation() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="quantifier() : void" num="116" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="incorrect(String) : String" num="142" count="13" type="method"/>
            <line num="143" count="13" type="stmt"/>
            <line num="144" count="13" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="correct(String) : String" num="151" count="29" type="method"/>
            <line num="152" count="29" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.xpath.api">
         <metrics coveredelements="112" complexity="14" loc="218" methods="14" classes="2" statements="98" coveredconditionals="0" coveredmethods="14" elements="112" ncloc="150" files="1" conditionals="0" coveredstatements="98"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-xpath/src/test/java/com/sonar/sslr/xpath/api/AstNodeXPathQueryTest.java" name="AstNodeXPathQueryTest.java">
            <metrics coveredelements="112" coveredconditionals="0" complexity="14" loc="218" coveredmethods="14" methods="14" elements="112" classes="2" ncloc="150" statements="98" conditionals="0" coveredstatements="98"/>
            <class name="AstNodeXPathQueryTest">
               <metrics coveredelements="112" complexity="14" methods="14" testruns="14" statements="98" coveredconditionals="0" coveredmethods="14" elements="112" testfailures="0" testduration="0.063" conditionals="0" coveredstatements="98" testpasses="14"/>
            </class>
            <class name="AstNodeXPathQueryTest.NodeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="selectSingleNodeTest() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="selectSingleNodeNoResultTest() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="selectNodesTest() : void" num="51" testsuccess="true" count="1" testduration="0.053" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="selectNodesNoResultTest() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relativePathTest() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parentPathTest() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parentAndDescendingPathTest() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="absolutePathTest() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentPathTest() : void" num="130" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentPathWithDescendantTest() : void" num="143" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleDocumentRoot() : void" num="156" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relativeNamePredicate() : void" num="169" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="relativeCountPredicate() : void" num="177" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCacheTest() : void" num="193" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.xpath">
         <metrics coveredelements="71" complexity="30" loc="256" methods="30" classes="1" statements="74" coveredconditionals="0" coveredmethods="20" elements="104" ncloc="188" files="1" conditionals="0" coveredstatements="51"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-xpath/src/test/java/com/sonar/sslr/impl/xpath/AstNodeNavigatorTest.java" name="AstNodeNavigatorTest.java">
            <metrics coveredelements="71" coveredconditionals="0" complexity="30" loc="256" coveredmethods="20" methods="30" elements="104" classes="1" ncloc="188" statements="74" conditionals="0" coveredstatements="51"/>
            <class name="AstNodeNavigatorTest">
               <metrics coveredelements="71" complexity="30" methods="30" testruns="29" statements="74" coveredconditionals="0" coveredmethods="20" elements="104" testfailures="10" testduration="0.879" conditionals="0" coveredstatements="51" testpasses="19"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="44" count="29" type="method"/>
            <line num="46" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTextStringValue() : void" num="49" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCommentStringValue() : void" num="55" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeStringValue() : void" num="61" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeStringValue2() : void" num="75" testsuccess="false" count="0" testduration="0.018" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementStringValue() : void" num="83" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNamespacePrefix() : void" num="92" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNamespaceStringValue() : void" num="98" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeName() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeQName() : void" num="113" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeNamespaceUri() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementName() : void" num="127" testsuccess="true" count="1" testduration="0.21" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementQName() : void" num="134" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementNamespaceUri() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAttribute() : void" num="148" testsuccess="true" count="1" testduration="0.63" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isComment() : void" num="154" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDocument() : void" num="159" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDocument2() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isElement() : void" num="174" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNamespace() : void" num="180" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isProcessingInstruction() : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isText() : void" num="190" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDocumentNode() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildAxisIterator() : void" num="208" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildAxisIterator2() : void" num="214" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParentNode() : void" num="220" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParentNode2() : void" num="231" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParentAxisIterator() : void" num="237" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeAxisIterator() : void" num="243" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseXPath() : void" num="251" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="253" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.ast">
         <metrics coveredelements="51" complexity="16" loc="161" methods="11" classes="2" statements="32" coveredconditionals="8" coveredmethods="11" elements="51" ncloc="97" files="2" conditionals="8" coveredstatements="32"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/org/sonar/sslr/ast/CollapsibleIfSelectTest.java" name="CollapsibleIfSelectTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="6" loc="77" coveredmethods="5" methods="5" elements="21" classes="1" ncloc="46" statements="14" conditionals="2" coveredstatements="14"/>
            <class name="CollapsibleIfSelectTest">
               <metrics coveredelements="21" complexity="6" methods="5" testruns="1" statements="14" coveredconditionals="2" coveredmethods="5" elements="21" testfailures="0" testduration="0.019" conditionals="2" coveredstatements="14" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="41" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="48" type="cond"/>
            <line num="49" count="2" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="visit(AstNode) : boolean" num="55" count="13" type="method"/>
            <line num="56" count="13" type="stmt"/>
            <line num="57" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasNoElseClause(AstSelect) : boolean" num="60" count="17" type="method"/>
            <line num="61" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasIfStatementWithoutElseInCompoundStatement(AstSelect) : boolean" num="64" count="9" type="method"/>
            <line num="65" count="9" type="stmt"/>
            <line num="68" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasIfStatementWithoutElse(AstSelect) : boolean" num="72" count="13" type="method"/>
            <line num="73" count="13" type="stmt"/>
            <line num="74" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/org/sonar/sslr/ast/CollapsibleIfVisitorTest.java" name="CollapsibleIfVisitorTest.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="10" loc="84" coveredmethods="6" methods="6" elements="30" classes="1" ncloc="51" statements="18" conditionals="6" coveredstatements="18"/>
            <class name="CollapsibleIfVisitorTest">
               <metrics coveredelements="30" complexity="10" methods="6" testruns="1" statements="18" coveredconditionals="6" coveredmethods="6" elements="30" testfailures="0" testduration="0.013" conditionals="6" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="41" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="48" type="cond"/>
            <line num="49" count="2" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="visit(AstNode) : boolean" num="55" count="13" type="method"/>
            <line num="56" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasElseClause(AstNode) : boolean" num="59" count="17" type="method"/>
            <line num="60" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasCollapsibleIfStatement(AstNode) : boolean" num="63" count="10" type="method"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="isIfStatementWithoutElse(AstNode) : boolean" num="68" count="12" type="method"/>
            <line num="69" count="12" type="stmt"/>
            <line complexity="4" visibility="private" signature="isIfStatementWithoutElseInCompoundStatement(AstNode) : boolean" num="72" count="9" type="method"/>
            <line num="73" count="9" type="stmt"/>
            <line falsecount="3" truecount="6" num="73" type="cond"/>
            <line num="74" count="6" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="77" type="cond"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.channel">
         <metrics coveredelements="109" complexity="30" loc="523" methods="30" classes="10" statements="87" coveredconditionals="0" coveredmethods="26" elements="117" ncloc="286" files="8" conditionals="0" coveredstatements="83"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/BlackHoleChannelTest.java" name="BlackHoleChannelTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="25" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BlackHoleChannelTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="2" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testConsumeOneCharacter() : void" num="36" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="consumeSeveralCharacters() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/BomCharacterChannelTest.java" name="BomCharacterChannelTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="BomCharacterChannelTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldConsumeBomCharacter() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldNotConsumeOtherCharacters() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/CommentChannelTest.java" name="CommentChannelTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="48" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="CommentChannelTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCommentRegexp() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/IdentifierAndKeywordChannelTest.java" name="IdentifierAndKeywordChannelTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="8" loc="114" coveredmethods="6" methods="8" elements="39" classes="2" ncloc="77" statements="31" conditionals="0" coveredstatements="29"/>
            <class name="IdentifierAndKeywordChannelTest">
               <metrics coveredelements="33" complexity="5" methods="5" testruns="5" statements="28" coveredconditionals="0" coveredmethods="5" elements="33" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="28" testpasses="5"/>
            </class>
            <class name="IdentifierAndKeywordChannelTest.MyKeywords">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testConsumeWord() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConsumeCaseSensitiveKeywords() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConsumeNotCaseSensitiveKeywords() : void" num="63" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testColumnAndLineNumbers() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotConsumNumber() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="102" count="8" type="method"/>
            <line num="104" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/PunctuatorChannelTest.java" name="PunctuatorChannelTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="89" coveredmethods="4" methods="6" elements="22" classes="2" ncloc="52" statements="16" conditionals="0" coveredstatements="14"/>
            <class name="PunctuatorChannelTest">
               <metrics coveredelements="14" complexity="2" methods="2" testruns="2" statements="12" coveredconditionals="0" coveredmethods="2" elements="14" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <class name="PunctuatorChannelTest.MyPunctuatorAndOperator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testConsumeSpecialCharacters() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotConsumeWord() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="MyPunctuatorAndOperator(String)" num="69" count="6" type="method"/>
            <line num="70" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="78" count="81" type="method"/>
            <line num="80" count="81" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/RegexpChannelBuilderTest.java" name="RegexpChannelBuilderTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="61" coveredmethods="6" methods="6" elements="13" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RegexpChannelBuilderTest">
               <metrics coveredelements="13" complexity="6" methods="6" testruns="6" statements="7" coveredconditionals="0" coveredmethods="6" elements="13" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="7" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testOpt() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOne2n() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testO2n() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testg() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOr() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnyButNot() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/RegexpChannelTest.java" name="RegexpChannelTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="27" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RegexpChannelTest">
               <metrics coveredelements="9" complexity="2" methods="2" testruns="2" statements="7" coveredconditionals="0" coveredmethods="2" elements="9" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testRegexpToHandleNumber() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testColumnNumber() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/channel/UnknownCharacterChannelTest.java" name="UnknownCharacterChannelTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="62" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="32" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="UnknownCharacterChannelTest">
               <metrics coveredelements="11" complexity="3" methods="3" testruns="2" statements="8" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldConsumeAnyCharacter() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldConsumeEofCharacter() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="check(String,Channel&lt;Lexer&gt;,TokenType,String,Lexer) : void" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.xpath">
         <metrics coveredelements="77" complexity="19" loc="255" methods="19" classes="3" statements="58" coveredconditionals="0" coveredmethods="19" elements="77" ncloc="153" files="3" conditionals="0" coveredstatements="58"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/xpath/BasicQueriesTest.java" name="BasicQueriesTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="13" loc="123" coveredmethods="13" methods="13" elements="46" classes="1" ncloc="85" statements="33" conditionals="0" coveredstatements="33"/>
            <class name="BasicQueriesTest">
               <metrics coveredelements="46" complexity="13" methods="13" testruns="12" statements="33" coveredconditionals="0" coveredmethods="13" elements="46" testfailures="0" testduration="0.09700000000000002" conditionals="0" coveredstatements="33" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="38" count="12" type="method"/>
            <line num="40" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="compilationUnitTest() : void" num="43" testsuccess="true" count="1" testduration="0.08" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyCompilationUnitTest() : void" num="49" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="compilationUnitWithPredicateWithEOFTest() : void" num="55" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="compilationUnitWithPredicateWithoutEOFTest() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="EOFTest() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyEOFTest() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenValueAttributeTest() : void" num="79" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenLineAttributeTest() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenColumnAttributeTest() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDeclarationTest() : void" num="97" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifiersCountTest() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIdentifiersTest() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/xpath/IdentifiersTooLongTest.java" name="IdentifiersTooLongTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="3" loc="65" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="33" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="IdentifiersTooLongTest">
               <metrics coveredelements="16" complexity="3" methods="3" testruns="2" statements="13" coveredconditionals="0" coveredmethods="3" elements="16" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesTest() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noResultValuesTest() : void" num="56" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/xpath/IfSMustUseBracesTest.java" name="IfSMustUseBracesTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="67" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="35" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="IfSMustUseBracesTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="2" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstValueEqualsOnlyValueTest() : void" num="42" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesTest() : void" num="53" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl">
         <metrics coveredelements="10" complexity="6" loc="93" methods="6" classes="2" statements="8" coveredconditionals="0" coveredmethods="4" elements="14" ncloc="42" files="2" conditionals="0" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/MockTokenType.java" name="MockTokenType.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="43" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="MockTokenType">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : String" num="29" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/ParserTest.java" name="ParserTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="50" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ParserTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="3" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="5" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="lexerErrorStringWrappedInRecognitionException() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lexerErrorFileWrappedInRecognitionException() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.matcher">
         <metrics coveredelements="65" complexity="14" loc="277" methods="14" classes="3" statements="78" coveredconditionals="0" coveredmethods="8" elements="92" ncloc="171" files="3" conditionals="0" coveredstatements="57"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/matcher/RuleDefinitionTest.java" name="RuleDefinitionTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="4" loc="78" coveredmethods="2" methods="4" elements="28" classes="1" ncloc="48" statements="24" conditionals="0" coveredstatements="15"/>
            <class name="RuleDefinitionTest">
               <metrics coveredelements="17" complexity="4" methods="4" testruns="4" statements="24" coveredconditionals="0" coveredmethods="2" elements="28" testfailures="2" testduration="0.005" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testEmptyIs() : void" num="36" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoreThanOneDefinitionForASigleRuleWithIs() : void" num="44" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipFromAst() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSkipFromAstIf() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/matcher/RuleMatcherTest.java" name="RuleMatcherTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="53" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RuleMatcherTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="2" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getToString() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/impl/matcher/GrammarFunctionsTest.java" name="GrammarFunctionsTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="7" loc="146" coveredmethods="3" methods="7" elements="56" classes="1" ncloc="97" statements="49" conditionals="0" coveredstatements="37"/>
            <class name="GrammarFunctionsTest">
               <metrics coveredelements="40" complexity="7" methods="7" testruns="6" statements="49" coveredconditionals="0" coveredmethods="3" elements="56" testfailures="4" testduration="0.085" conditionals="0" coveredstatements="37" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="1" testduration="0.08" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOf_requires_at_least_one_argument() : void" num="102" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and_requires_at_least_one_argument() : void" num="109" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOneOfThem_requires_at_least_one_argument() : void" num="116" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_incorrect_type_of_parsing_expression() : void" num="123" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="private_constructors() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasPrivateConstructor(Class) : boolean" num="138" count="4" type="method"/>
            <line num="139" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.test.minic.integration">
         <metrics coveredelements="6" complexity="2" loc="51" methods="1" classes="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" ncloc="25" files="1" conditionals="0" coveredstatements="5"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/test/minic/integration/MiniCOwnExamplesTest.java" name="MiniCOwnExamplesTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="51" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="5"/>
            <class name="MiniCOwnExamplesTest">
               <metrics coveredelements="6" complexity="2" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="37" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.api">
         <metrics coveredelements="199" complexity="32" loc="448" methods="32" classes="7" statements="180" coveredconditionals="0" coveredmethods="27" elements="212" ncloc="324" files="2" conditionals="0" coveredstatements="172"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/api/AstNodeTest.java" name="AstNodeTest.java">
            <metrics coveredelements="181" coveredconditionals="0" complexity="23" loc="324" coveredmethods="23" methods="23" elements="181" classes="2" ncloc="238" statements="158" conditionals="0" coveredstatements="158"/>
            <class name="AstNodeTest">
               <metrics coveredelements="176" complexity="20" methods="20" testruns="24" statements="156" coveredconditionals="0" coveredmethods="20" elements="176" testfailures="0" testduration="0.015000000000000001" conditionals="0" coveredstatements="156" testpasses="24"/>
            </class>
            <class name="AstNodeTest.NodeType">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testAddChild() : void" num="33" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddNullChild() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddChildWhichMustBeSkippedFromAst() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddMatcherChildWithoutChildren() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasChildren() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetChild() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetLastToken() : void" num="95" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetTokens() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetChildWithBadIndex() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNextSibling() : void" num="131" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPreviousSibling() : void" num="144" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindFirstDirectChild() : void" num="157" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIs() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsNot() : void" num="181" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindChildren() : void" num="191" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindDirectChildren() : void" num="211" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindFirstChildAndHasChildren() : void" num="225" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHasParents() : void" num="241" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetLastChild() : void" num="254" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_getDescendants() : void" num="275" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="NodeType()" num="309" count="46" type="method"/>
            <line complexity="1" visibility="public" signature="NodeType(boolean)" num="313" count="3" type="method"/>
            <line num="314" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="317" count="31" type="method"/>
            <line num="319" count="31" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/api/GrammarTest.java" name="GrammarTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="9" loc="124" coveredmethods="4" methods="9" elements="31" classes="5" ncloc="86" statements="22" conditionals="0" coveredstatements="14"/>
            <class name="GrammarTest">
               <metrics coveredelements="18" complexity="6" methods="6" testruns="6" statements="19" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="2" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="4"/>
            </class>
            <class name="GrammarTest.MyBaseGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GrammarTest.MyGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GrammarTest.MyLexerlessGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GrammarTest.IllegalGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetRuleFields() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetAllRuleFields() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="method_rule_should_throw_exception_by_default() : void" num="53" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_automatically_instanciate_lexerful_rules() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_automatically_instanciate_lexerless_rules() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_throw_exception() : void" num="79" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.ast">
         <metrics coveredelements="72" complexity="14" loc="324" methods="14" classes="6" statements="62" coveredconditionals="0" coveredmethods="12" elements="76" ncloc="177" files="5" conditionals="0" coveredstatements="60"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/ast/AstWalkerTest.java" name="AstWalkerTest.java">
            <metrics coveredelements="44" coveredconditionals="0" complexity="5" loc="125" coveredmethods="5" methods="5" elements="44" classes="1" ncloc="85" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="AstWalkerTest">
               <metrics coveredelements="44" complexity="5" methods="5" testruns="4" statements="39" coveredconditionals="0" coveredmethods="5" elements="44" testfailures="0" testduration="0.047" conditionals="0" coveredstatements="39" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="61" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVisitFileAndLeaveFileCalls() : void" num="78" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVisitToken() : void" num="88" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVisitNodeAndLeaveNodeCalls() : void" num="98" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddVisitor() : void" num="109" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/impl/ast/AstXmlPrinterTest.java" name="AstXmlPrinterTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="85" coveredmethods="4" methods="6" elements="20" classes="2" ncloc="52" statements="14" conditionals="0" coveredstatements="12"/>
            <class name="AstXmlPrinterTest">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="3" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="11" testpasses="3"/>
            </class>
            <class name="AstXmlPrinterTest.WordTokenType">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrintRuleAstNode() : void" num="33" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintWordAstNode() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintFullAstNode() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="68" count="5" type="method"/>
            <line num="70" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/impl/ast/AlwaysSkipFromAstTest.java" name="AlwaysSkipFromAstTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="AlwaysSkipFromAstTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/impl/ast/NeverSkipFromAstTest.java" name="NeverSkipFromAstTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="36" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NeverSkipFromAstTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/impl/ast/SkipFromAstIfOnlyOneChildTest.java" name="SkipFromAstIfOnlyOneChildTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="SkipFromAstIfOnlyOneChildTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testHasToBeSkippedFromAst() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.test.minic.rules">
         <metrics coveredelements="8" complexity="5" loc="137" methods="5" classes="3" statements="5" coveredconditionals="0" coveredmethods="4" elements="10" ncloc="62" files="3" conditionals="0" coveredstatements="4"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/test/minic/rules/ExpressionTest.java" name="ExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="56" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="31" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.027" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="30" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reallife() : void" num="36" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/test/minic/rules/RuleTest.java" name="RuleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="38" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RuleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getTestedRule() : Rule" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-tests/src/test/java/com/sonar/sslr/test/minic/rules/StructTest.java" name="StructTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="StructTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="30" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reallife() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.benchmarks">
         <metrics coveredelements="20" complexity="4" loc="149" methods="4" classes="4" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" ncloc="48" files="4" conditionals="0" coveredstatements="16"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/test/java/org/sonar/sslr/benchmarks/MemoizationOfMismatchesBenchmarkTest.java" name="MemoizationOfMismatchesBenchmarkTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="38" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MemoizationOfMismatchesBenchmarkTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.035" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.035" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/test/java/org/sonar/sslr/benchmarks/OneOrMoreExpressionBenchmarkTest.java" name="OneOrMoreExpressionBenchmarkTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="OneOrMoreExpressionBenchmarkTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/test/java/org/sonar/sslr/benchmarks/RecursiveRuleBenchmarkTest.java" name="RecursiveRuleBenchmarkTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="RecursiveRuleBenchmarkTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-benchmarks/src/test/java/org/sonar/sslr/benchmarks/ZeroOrMoreExpressionBenchmarkTest.java" name="ZeroOrMoreExpressionBenchmarkTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ZeroOrMoreExpressionBenchmarkTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.058" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.058" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.toolkit">
         <metrics coveredelements="107" complexity="27" loc="305" methods="25" classes="4" statements="92" coveredconditionals="2" coveredmethods="21" elements="121" ncloc="199" files="3" conditionals="4" coveredstatements="84"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/test/java/org/sonar/sslr/toolkit/AbstractConfigurationModelTest.java" name="AbstractConfigurationModelTest.java">
            <metrics coveredelements="52" coveredconditionals="0" complexity="11" loc="130" coveredmethods="10" methods="11" elements="54" classes="2" ncloc="88" statements="43" conditionals="0" coveredstatements="42"/>
            <class name="AbstractConfigurationModelTest">
               <metrics coveredelements="44" complexity="6" methods="6" testruns="6" statements="38" coveredconditionals="0" coveredmethods="6" elements="44" testfailures="0" testduration="0.765" conditionals="0" coveredstatements="38" testpasses="6"/>
            </class>
            <class name="AbstractConfigurationModelTest.MyConfigurationModel">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="getParser_should_return_parser_instance() : void" num="34" testsuccess="true" count="1" testduration="0.655" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParser_should_return_same_parser_instance_when_flag_not_set() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParser_should_return_different_parser_instance_when_flag_set() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenizers_should_return_parser_instance() : void" num="67" testsuccess="true" count="1" testduration="0.11" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenizers_should_return_same_parser_instance_when_flag_not_set() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTokenizers_should_return_different_parser_instance_when_flag_set() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProperties() : List&lt;ConfigurationProperty&gt;" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParser(Parser&lt;? extends Grammar&gt;) : void" num="110" count="5" type="method"/>
            <line num="111" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGetParser() : Parser&lt;? extends Grammar&gt;" num="114" count="8" type="method"/>
            <line num="116" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="setTokenizers(List&lt;Tokenizer&gt;) : void" num="119" count="5" type="method"/>
            <line num="120" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGetTokenizers() : List&lt;Tokenizer&gt;" num="123" count="8" type="method"/>
            <line num="125" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/test/java/org/sonar/sslr/toolkit/ConfigurationPropertyTest.java" name="ConfigurationPropertyTest.java">
            <metrics coveredelements="27" coveredconditionals="2" complexity="10" loc="90" coveredmethods="6" methods="8" elements="35" classes="1" ncloc="58" statements="23" conditionals="4" coveredstatements="19"/>
            <class name="ConfigurationPropertyTest">
               <metrics coveredelements="27" complexity="10" methods="8" testruns="6" statements="23" coveredconditionals="2" coveredmethods="6" elements="35" testfailures="1" testduration="0.003" conditionals="4" coveredstatements="19" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : void" num="33" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validate() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(String) : String" num="51" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="53" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue_should_succeed_if_validation_passes() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue_should_fail_if_validation_fails() : void" num="67" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(String) : String" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line complexity="1" visibility="public" signature="getValue() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/test/java/org/sonar/sslr/toolkit/ValidatorsTest.java" name="ValidatorsTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="6" loc="85" coveredmethods="5" methods="6" elements="32" classes="1" ncloc="53" statements="26" conditionals="0" coveredstatements="23"/>
            <class name="ValidatorsTest">
               <metrics coveredelements="28" complexity="6" methods="6" testruns="6" statements="26" coveredconditionals="0" coveredmethods="5" elements="32" testfailures="1" testduration="0.046" conditionals="0" coveredstatements="23" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="charsetValidator() : void" num="33" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="charsetValidator_single_instance() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRangeValidator() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerRangeValidator_should_fail_with_upper_smaller_than_lower_bound() : void" num="64" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanValidator() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanValidator_single_instance() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.toolkit">
         <metrics coveredelements="295" complexity="34" loc="640" methods="32" classes="3" statements="288" coveredconditionals="0" coveredmethods="27" elements="320" ncloc="449" files="3" conditionals="0" coveredstatements="268"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/test/java/org/sonar/sslr/internal/toolkit/CssLoaderTest.java" name="CssLoaderTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CssLoaderTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getCss() : void" num="30" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/test/java/org/sonar/sslr/internal/toolkit/LineOffsetsTest.java" name="LineOffsetsTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="12" loc="150" coveredmethods="9" methods="11" elements="55" classes="1" ncloc="98" statements="44" conditionals="0" coveredstatements="37"/>
            <class name="LineOffsetsTest">
               <metrics coveredelements="46" complexity="12" methods="11" testruns="10" statements="44" coveredconditionals="0" coveredmethods="9" elements="55" testfailures="2" testduration="0.010000000000000002" conditionals="0" coveredstatements="37" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="getStartOffset() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndOffsetSingleLine() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndOffsetMultiLine() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndOffsetMultiLineRNSingleOffsetIncrement() : void" num="73" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndOffsetMultiLineRNewLine() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffset() : void" num="95" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetCariageReturnAsNewLine() : void" num="104" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetCariageReturnAndLineFeedAsSingleOffset() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetBadLine() : void" num="120" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetBadColumn() : void" num="128" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mockToken(int,int,String) : Token" num="136" count="10" type="method"/>
            <line num="137" count="10" type="stmt"/>
            <line num="138" count="10" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-toolkit/src/test/java/org/sonar/sslr/internal/toolkit/ToolkitPresenterTest.java" name="ToolkitPresenterTest.java">
            <metrics coveredelements="247" coveredconditionals="0" complexity="21" loc="455" coveredmethods="17" methods="20" elements="263" classes="1" ncloc="341" statements="243" conditionals="0" coveredstatements="230"/>
            <class name="ToolkitPresenterTest">
               <metrics coveredelements="247" complexity="21" methods="20" testruns="20" statements="243" coveredconditionals="0" coveredmethods="17" elements="263" testfailures="3" testduration="0.491" conditionals="0" coveredstatements="230" testpasses="17"/>
            </class>
            <line complexity="1" visibility="public" signature="checkInitializedBad() : void" num="55" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkInitializedGood() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initUncaughtExceptionsHandler() : void" num="71" testsuccess="true" count="1" testduration="0.044" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initConfigurationTab() : void" num="91" testsuccess="true" count="1" testduration="0.04" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="124" testsuccess="true" count="1" testduration="0.123" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run_should_call_initConfigurationTab() : void" num="142" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runFailsWithoutView() : void" num="159" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeOpenButtonClick() : void" num="165" testsuccess="true" count="1" testduration="0.166" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="onSourceCodeOpenButtonClick_with_parse_error_should_clear_console_and_display_code() : void" num="193" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeOpenButtonClick_should_no_operation_when_no_file() : void" num="213" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeParseButtonClick() : void" num="236" testsuccess="true" count="1" testduration="0.043" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onXPathEvaluateButtonClickAstNodeResults() : void" num="264" testsuccess="true" count="1" testduration="0.055" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onXPathEvaluateButtonClickScrollToFirstAstNode() : void" num="286" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onXPathEvaluateButtonClickStringResult() : void" num="308" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeKeyTyped() : void" num="341" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="343" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onSourceCodeTextCursorMoved() : void" num="356" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onAstSelectionChanged() : void" num="372" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onConfigurationPropertyFocusLost_when_validation_successes() : void" num="394" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="396" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onConfigurationPropertyFocusLost_when_validation_fails() : void" num="418" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="420" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onConfigurationPropertyFocusLost_with_invalid_name() : void" num="442" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.impl.typed">
         <metrics coveredelements="31" complexity="5" loc="107" methods="5" classes="1" statements="32" coveredconditionals="0" coveredmethods="3" elements="37" ncloc="66" files="1" conditionals="0" coveredstatements="28"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/impl/typed/DelayedRuleInvocationExpressionTest.java" name="DelayedRuleInvocationExpressionTest.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="5" loc="107" coveredmethods="3" methods="5" elements="37" classes="1" ncloc="66" statements="32" conditionals="0" coveredstatements="28"/>
            <class name="DelayedRuleInvocationExpressionTest">
               <metrics coveredelements="31" complexity="5" methods="5" testruns="4" statements="32" coveredconditionals="0" coveredmethods="3" elements="37" testfailures="1" testduration="0.092" conditionals="0" coveredstatements="28" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile_rule_keys() : void" num="45" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_compile_methods() : void" num="63" testsuccess="true" count="1" testduration="0.054" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_when_method_is_not_mapped() : void" num="84" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_toString() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="FOO() : void" num="104" count="0" type="method"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.matchers">
         <metrics coveredelements="284" complexity="34" loc="629" methods="28" classes="6" statements="246" coveredconditionals="11" coveredmethods="28" elements="286" ncloc="411" files="6" conditionals="12" coveredstatements="245"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/matchers/AstCreatorTest.java" name="AstCreatorTest.java">
            <metrics coveredelements="90" coveredconditionals="0" complexity="5" loc="165" coveredmethods="5" methods="5" elements="90" classes="1" ncloc="118" statements="85" conditionals="0" coveredstatements="85"/>
            <class name="AstCreatorTest">
               <metrics coveredelements="90" complexity="5" methods="5" testruns="3" statements="85" coveredconditionals="0" coveredmethods="5" elements="90" testfailures="0" testduration="0.10200000000000001" conditionals="0" coveredstatements="85" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_create_tokens_and_trivias() : void" num="44" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_create_tokens_without_TokenMatcher() : void" num="89" testsuccess="true" count="1" testduration="0.08" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_skip_nodes() : void" num="130" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="mockRuleMatcher(String) : MutableParsingRule" num="157" count="4" type="method"/>
            <line num="158" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="mockTokenMatcher(TokenType) : TokenExpression" num="161" count="2" type="method"/>
            <line num="162" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/matchers/ExpressionGrammar.java" name="ExpressionGrammar.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="2" loc="81" coveredmethods="2" methods="2" elements="18" classes="1" ncloc="46" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="ExpressionGrammar">
               <metrics coveredelements="18" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="18" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpressionGrammar()" num="51" count="14" type="method"/>
            <line num="52" count="14" type="stmt"/>
            <line num="54" count="14" type="stmt"/>
            <line num="55" count="14" type="stmt"/>
            <line num="56" count="14" type="stmt"/>
            <line num="57" count="14" type="stmt"/>
            <line num="58" count="14" type="stmt"/>
            <line num="59" count="14" type="stmt"/>
            <line num="60" count="14" type="stmt"/>
            <line num="61" count="14" type="stmt"/>
            <line num="62" count="14" type="stmt"/>
            <line num="69" count="14" type="stmt"/>
            <line num="70" count="14" type="stmt"/>
            <line num="71" count="14" type="stmt"/>
            <line num="72" count="14" type="stmt"/>
            <line num="73" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="76" count="8" type="method"/>
            <line num="78" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/matchers/ExpressionGrammarTest.java" name="ExpressionGrammarTest.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="6" loc="116" coveredmethods="6" methods="6" elements="56" classes="1" ncloc="82" statements="50" conditionals="0" coveredstatements="50"/>
            <class name="ExpressionGrammarTest">
               <metrics coveredelements="56" complexity="6" methods="6" testruns="5" statements="50" coveredconditionals="0" coveredmethods="6" elements="56" testfailures="0" testduration="0.013999999999999999" conditionals="0" coveredstatements="50" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="38" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="match() : void" num="43" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="mismatch() : void" num="54" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefix_match() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_mock() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_create_ast() : void" num="88" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/matchers/ImmutableInputBufferTest.java" name="ImmutableInputBufferTest.java">
            <metrics coveredelements="68" coveredconditionals="0" complexity="7" loc="136" coveredmethods="7" methods="7" elements="68" classes="1" ncloc="88" statements="61" conditionals="0" coveredstatements="61"/>
            <class name="ImmutableInputBufferTest">
               <metrics coveredelements="68" complexity="7" methods="7" testruns="7" statements="61" coveredconditionals="0" coveredmethods="7" elements="68" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="61" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_single_line() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty_lines_with_LF() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty_lines_with_CR() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty_lines_with_CRLF() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equality_and_hash_code_of_positions() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/matchers/ParseTreePrinter.java" name="ParseTreePrinter.java">
            <metrics coveredelements="37" coveredconditionals="11" complexity="11" loc="77" coveredmethods="5" methods="5" elements="39" classes="1" ncloc="50" statements="22" conditionals="12" coveredstatements="21"/>
            <class name="ParseTreePrinter">
               <metrics coveredelements="37" coveredconditionals="11" complexity="11" coveredmethods="5" methods="5" elements="39" statements="22" conditionals="12" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="leafsToString(ParseNode,char[]) : String" num="27" count="2" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="printLeafs(ParseNode,char[],StringBuilder) : void" num="33" count="76" type="method"/>
            <line num="34" count="76" type="stmt"/>
            <line falsecount="49" truecount="27" num="34" type="cond"/>
            <line num="35" count="27" type="stmt"/>
            <line falsecount="27" truecount="34" num="35" type="cond"/>
            <line num="36" count="34" type="stmt"/>
            <line num="39" count="49" type="stmt"/>
            <line num="40" count="74" type="stmt"/>
            <line complexity="1" visibility="public" signature="print(ParseNode,char[]) : void" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="print(ParseNode,int,char[]) : void" num="49" count="76" type="method"/>
            <line num="50" count="76" type="stmt"/>
            <line falsecount="76" truecount="373" num="50" type="cond"/>
            <line num="51" count="373" type="stmt"/>
            <line num="53" count="76" type="stmt"/>
            <line num="54" count="76" type="stmt"/>
            <line falsecount="76" truecount="210" num="54" type="cond"/>
            <line num="55" count="210" type="stmt"/>
            <line num="57" count="76" type="stmt"/>
            <line num="62" count="76" type="stmt"/>
            <line num="63" count="74" type="stmt"/>
            <line complexity="3" visibility="private" signature="matcherToString(Matcher) : String" num="67" count="76" type="method"/>
            <line num="68" count="76" type="stmt"/>
            <line falsecount="36" truecount="40" num="68" type="cond"/>
            <line num="69" count="40" type="stmt"/>
            <line num="70" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="36" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/matchers/TextUtilsTest.java" name="TextUtilsTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="54" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="27" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="TextUtilsTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="3" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="12" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_escape() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_trim_trailing_line_separator() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="private_constructor() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.parser">
         <metrics coveredelements="136" complexity="30" loc="487" methods="30" classes="7" statements="134" coveredconditionals="0" coveredmethods="22" elements="164" ncloc="320" files="5" conditionals="0" coveredstatements="114"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/parser/GrammarOperatorsTest.java" name="GrammarOperatorsTest.java">
            <metrics coveredelements="38" coveredconditionals="0" complexity="6" loc="122" coveredmethods="5" methods="6" elements="42" classes="1" ncloc="81" statements="36" conditionals="0" coveredstatements="33"/>
            <class name="GrammarOperatorsTest">
               <metrics coveredelements="38" complexity="6" methods="6" testruns="6" statements="36" coveredconditionals="0" coveredmethods="5" elements="42" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="33" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_token() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_commentTrivia() : void" num="91" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_skippedTrivia() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="illegal_argument() : void" num="107" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="private_constructor() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/parser/LexerlessGrammarTest.java" name="LexerlessGrammarTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="68" coveredmethods="2" methods="4" elements="12" classes="3" ncloc="38" statements="8" conditionals="0" coveredstatements="4"/>
            <class name="LexerlessGrammarTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="1" testduration="0.014" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="LexerlessGrammarTest.TestGrammar">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="LexerlessGrammarTest.IllegalGrammar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="should_instanciate_rule_fields() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_throw_exception() : void" num="43" testsuccess="false" count="0" testduration="0.014" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : Rule" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/parser/ParseErrorFormatterTest.java" name="ParseErrorFormatterTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="54" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ParseErrorFormatterTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/parser/ParseRunnerTest.java" name="ParseRunnerTest.java">
            <metrics coveredelements="71" coveredconditionals="0" complexity="9" loc="136" coveredmethods="8" methods="9" elements="74" classes="1" ncloc="103" statements="65" conditionals="0" coveredstatements="63"/>
            <class name="ParseRunnerTest">
               <metrics coveredelements="71" complexity="9" methods="9" testruns="9" statements="65" coveredconditionals="0" coveredmethods="8" elements="74" testfailures="1" testduration="0.08099999999999999" conditionals="0" coveredstatements="63" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="should_not_accept_null() : void" num="35" testsuccess="false" count="0" testduration="0.015" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_report_error_at_rule_level() : void" num="41" testsuccess="true" count="1" testduration="0.053" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_report_error_at_end_of_input() : void" num="52" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_report_error_inside_of_predicate_not() : void" num="64" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_report_error_at_correct_index() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_report_error_inside_of_predicate_next() : void" num="87" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_report_error_inside_of_token() : void" num="99" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_report_error_inside_of_trivia() : void" num="111" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_report_error_at_several_paths() : void" num="123" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/parser/ParserAdapterTest.java" name="ParserAdapterTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="9" loc="107" coveredmethods="5" methods="9" elements="28" classes="1" ncloc="71" statements="19" conditionals="0" coveredstatements="8"/>
            <class name="ParserAdapterTest">
               <metrics coveredelements="13" complexity="9" methods="9" testruns="8" statements="19" coveredconditionals="0" coveredmethods="5" elements="28" testfailures="4" testduration="0.016" conditionals="0" coveredstatements="8" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="52" count="8" type="method"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_return_grammar() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_parse_string() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_parse_invalid_string() : void" num="68" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_parse_file() : void" num="75" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_parse_invalid_file() : void" num="82" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder_should_not_create_new_instance_from_adapter() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse_tokens_unsupported() : void" num="94" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule_unsupported() : void" num="101" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.vm.lexerful">
         <metrics coveredelements="390" complexity="47" loc="978" methods="47" classes="10" statements="343" coveredconditionals="0" coveredmethods="47" elements="390" ncloc="681" files="10" conditionals="0" coveredstatements="343"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/AdjacentExpressionTest.java" name="AdjacentExpressionTest.java">
            <metrics coveredelements="64" coveredconditionals="0" complexity="5" loc="123" coveredmethods="5" methods="5" elements="64" classes="1" ncloc="93" statements="59" conditionals="0" coveredstatements="59"/>
            <class name="AdjacentExpressionTest">
               <metrics coveredelements="64" complexity="5" methods="5" testruns="5" statements="59" coveredconditionals="0" coveredmethods="5" elements="64" testfailures="0" testduration="0.11" conditionals="0" coveredstatements="59" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="44" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="50" testsuccess="true" count="1" testduration="0.097" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="71" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="92" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack3() : void" num="113" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/AnyTokenExpressionTest.java" name="AnyTokenExpressionTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="3" loc="73" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="45" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="AnyTokenExpressionTest">
               <metrics coveredelements="20" complexity="3" methods="3" testruns="3" statements="17" coveredconditionals="0" coveredmethods="3" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="17" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/LexerfulMachineIntegrationTest.java" name="LexerfulMachineIntegrationTest.java">
            <metrics coveredelements="49" coveredconditionals="0" complexity="10" loc="119" coveredmethods="10" methods="10" elements="49" classes="1" ncloc="85" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="LexerfulMachineIntegrationTest">
               <metrics coveredelements="49" complexity="10" methods="10" testruns="7" statements="39" coveredconditionals="0" coveredmethods="10" elements="49" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="39" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="tokenType() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokenTypes() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokenValue() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyToken() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokensBridge() : void" num="70" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokenTypeClass() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="adjacent() : void" num="90" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="token(TokenType) : Token" num="103" count="18" type="method"/>
            <line num="104" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="token(String) : Token" num="107" count="3" type="method"/>
            <line num="108" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="token(int,int,String) : Token" num="111" count="4" type="method"/>
            <line num="112" count="4" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/LexerfulParseErrorFormatterTest.java" name="LexerfulParseErrorFormatterTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="60" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="34" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="LexerfulParseErrorFormatterTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="1" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="token(int,int,String) : Token" num="52" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/TillNewLineExpressionTest.java" name="TillNewLineExpressionTest.java">
            <metrics coveredelements="44" coveredconditionals="0" complexity="4" loc="99" coveredmethods="4" methods="4" elements="44" classes="1" ncloc="69" statements="40" conditionals="0" coveredstatements="40"/>
            <class name="TillNewLineExpressionTest">
               <metrics coveredelements="44" complexity="4" methods="4" testruns="3" statements="40" coveredconditionals="0" coveredmethods="4" elements="44" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="40" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="48" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match2() : void" num="68" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="token(TokenType,int) : Token" num="92" count="7" type="method"/>
            <line num="93" count="7" type="stmt"/>
            <line num="94" count="7" type="stmt"/>
            <line num="95" count="7" type="stmt"/>
            <line num="96" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/TokenTypeClassTest.java" name="TokenTypeClassTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="91" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="62" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="TokenTypeClassTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="4" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/TokenTypeExpressionTest.java" name="TokenTypeExpressionTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="91" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="62" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="TokenTypeExpressionTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="4" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/TokenTypesExpressionTest.java" name="TokenTypesExpressionTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="92" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="63" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="TokenTypesExpressionTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="4" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/TokenValueExpressionTest.java" name="TokenValueExpressionTest.java">
            <metrics coveredelements="44" coveredconditionals="0" complexity="5" loc="103" coveredmethods="5" methods="5" elements="44" classes="1" ncloc="73" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="TokenValueExpressionTest">
               <metrics coveredelements="44" complexity="5" methods="5" testruns="5" statements="39" coveredconditionals="0" coveredmethods="5" elements="44" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="39" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack3() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/lexerful/TokensBridgeExpressionTest.java" name="TokensBridgeExpressionTest.java">
            <metrics coveredelements="60" coveredconditionals="0" complexity="6" loc="127" coveredmethods="6" methods="6" elements="60" classes="1" ncloc="95" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="TokensBridgeExpressionTest">
               <metrics coveredelements="60" complexity="6" methods="6" testruns="5" statements="54" coveredconditionals="0" coveredmethods="6" elements="60" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="54" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="55" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="92" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack3() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="token(TokenType) : Token" num="121" count="8" type="method"/>
            <line num="122" count="8" type="stmt"/>
            <line num="123" count="8" type="stmt"/>
            <line num="124" count="8" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.channel">
         <metrics coveredelements="306" complexity="46" loc="634" methods="38" classes="13" statements="273" coveredconditionals="10" coveredmethods="36" elements="323" ncloc="472" files="4" conditionals="12" coveredstatements="260"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/channel/ChannelDispatcherTest.java" name="ChannelDispatcherTest.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="6" loc="75" coveredmethods="4" methods="5" elements="23" classes="3" ncloc="46" statements="16" conditionals="2" coveredstatements="14"/>
            <class name="ChannelDispatcherTest">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="3" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.019" conditionals="0" coveredstatements="10" testpasses="3"/>
            </class>
            <class name="ChannelDispatcherTest.SpaceDeletionChannel">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="ChannelDispatcherTest.FakeChannel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldRemoveSpacesFromString() : void" num="33" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldAddChannels() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldThrowExceptionWhenNoChannelToConsumeNextCharacter() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="consume(CodeReader,StringBuilder) : boolean" num="56" count="9" type="method"/>
            <line num="58" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="58" type="cond"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="8" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="consume(CodeReader,StringBuilder) : boolean" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/channel/CodeBufferTest.java" name="CodeBufferTest.java">
            <metrics coveredelements="213" coveredconditionals="8" complexity="23" loc="334" coveredmethods="18" methods="18" elements="213" classes="5" ncloc="275" statements="187" conditionals="8" coveredstatements="187"/>
            <class name="CodeBufferTest">
               <metrics coveredelements="181" complexity="14" methods="14" testruns="14" statements="167" coveredconditionals="0" coveredmethods="14" elements="181" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="167" testpasses="14"/>
            </class>
            <class name="CodeBufferTest.WrongEndOfStreamFilter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CodeBufferTest.ReplaceNumbersFilter">
               <metrics coveredelements="9" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <class name="CodeBufferTest.ReplaceCharFilter">
               <metrics coveredelements="9" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <class name="CodeBufferTest.WindowingChannel">
               <metrics coveredelements="12" coveredconditionals="4" complexity="4" coveredmethods="1" methods="1" elements="12" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="testPop() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeek() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLastCharacter() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetColumnAndLinePosition() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartAndStopRecording() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharAt() : void" num="119" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharAtIndexOutOfBoundsException() : void" num="126" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadWithSpecificTabWidth() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCodeReaderFilter() : void" num="161" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theLengthShouldBeTheSameThanTheStringLength() : void" num="190" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theLengthShouldDecreaseEachTimeTheInputStreamIsConsumed() : void" num="196" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSeveralCodeReaderFilter() : void" num="205" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChannelCodeReaderFilter() : void" num="234" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWrongEndOfStreamFilter() : void" num="270" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read(char[],int,int) : int" num="278" count="1" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(char[],int,int) : int" num="289" count="4" type="method"/>
            <line num="291" count="4" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="293" type="cond"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="297" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(char[],int,int) : int" num="306" count="2" type="method"/>
            <line num="308" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="310" type="cond"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="consume(CodeReader,Object) : boolean" num="321" count="21" type="method"/>
            <line num="323" count="21" type="stmt"/>
            <line num="324" count="21" type="stmt"/>
            <line falsecount="20" truecount="1" num="324" type="cond"/>
            <line num="325" count="1" type="stmt"/>
            <line num="327" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="327" type="cond"/>
            <line num="328" count="8" type="stmt"/>
            <line num="329" count="8" type="stmt"/>
            <line num="331" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/channel/CodeReaderTest.java" name="CodeReaderTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="10" loc="134" coveredmethods="7" methods="8" elements="62" classes="1" ncloc="97" statements="52" conditionals="2" coveredstatements="41"/>
            <class name="CodeReaderTest">
               <metrics coveredelements="48" complexity="10" methods="8" testruns="7" statements="52" coveredconditionals="0" coveredmethods="7" elements="62" testfailures="1" testduration="0.011" conditionals="2" coveredstatements="41" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testPopWithAppendable() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeekACharArray() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPeekTo() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="match(int) : boolean" num="67" count="10" type="method"/>
            <line num="69" count="10" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="peekTo_should_stop_at_end_of_input() : void" num="76" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPopToWithRegex() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStackOverflowError() : void" num="106" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPopToWithRegexAndFollowingMatcher() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/channel/RegexChannelTest.java" name="RegexChannelTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="7" loc="91" coveredmethods="7" methods="7" elements="25" classes="4" ncloc="54" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="RegexChannelTest">
               <metrics coveredelements="14" complexity="2" methods="2" testruns="2" statements="12" coveredconditionals="0" coveredmethods="2" elements="14" testfailures="0" testduration="0.347" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <class name="RegexChannelTest.MyLiteralChannel">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RegexChannelTest.MyWordChannel">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RegexChannelTest.BlackholeChannel">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldMatch() : void" num="35" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldMatchTokenLongerThanBuffer() : void" num="43" testsuccess="true" count="1" testduration="0.345" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyLiteralChannel()" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="consume(CharSequence,StringBuilder) : void" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyWordChannel()" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="consume(CharSequence,StringBuilder) : void" num="76" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="consume(CodeReader,StringBuilder) : boolean" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.grammar">
         <metrics coveredelements="138" complexity="30" loc="511" methods="30" classes="3" statements="208" coveredconditionals="0" coveredmethods="14" elements="238" ncloc="379" files="3" conditionals="0" coveredstatements="124"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/grammar/LexerfulGrammarBuilderTest.java" name="LexerfulGrammarBuilderTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="10" loc="192" coveredmethods="3" methods="10" elements="91" classes="1" ncloc="142" statements="81" conditionals="0" coveredstatements="44"/>
            <class name="LexerfulGrammarBuilderTest">
               <metrics coveredelements="47" complexity="10" methods="10" testruns="10" statements="81" coveredconditionals="0" coveredmethods="3" elements="91" testfailures="7" testduration="0.008" conditionals="0" coveredstatements="44" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_create_expressions() : void" num="55" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_set_root_rule() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_build_with_memoization() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_undefined_root_rule() : void" num="127" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_undefined_rule() : void" num="137" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_used_undefined_rule() : void" num="147" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_incorrect_type_of_parsing_expression() : void" num="158" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_null_parsing_expression() : void" num="165" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_to_redefine() : void" num="172" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_to_redefine2() : void" num="182" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/grammar/LexerlessGrammarBuilderTest.java" name="LexerlessGrammarBuilderTest.java">
            <metrics coveredelements="51" coveredconditionals="0" complexity="13" loc="205" coveredmethods="5" methods="13" elements="99" classes="1" ncloc="155" statements="86" conditionals="0" coveredstatements="46"/>
            <class name="LexerlessGrammarBuilderTest">
               <metrics coveredelements="51" complexity="13" methods="13" testruns="13" statements="86" coveredconditionals="0" coveredmethods="5" elements="99" testfailures="8" testduration="0.005" conditionals="0" coveredstatements="46" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="should_create_expressions() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_token() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_commentTrivia() : void" num="107" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_skippedTrivia() : void" num="115" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_set_root_rule() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_undefined_root_rule() : void" num="133" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_undefined_rule() : void" num="143" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_used_undefined_rule() : void" num="153" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_wrong_regexp() : void" num="164" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_incorrect_type_of_parsing_expression() : void" num="171" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_null_parsing_expression() : void" num="178" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_to_redefine() : void" num="185" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_to_redefine2() : void" num="195" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/grammar/RuleBuilderTest.java" name="RuleBuilderTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="7" loc="114" coveredmethods="6" methods="7" elements="48" classes="1" ncloc="82" statements="41" conditionals="0" coveredstatements="34"/>
            <class name="RuleBuilderTest">
               <metrics coveredelements="40" complexity="7" methods="7" testruns="7" statements="41" coveredconditionals="0" coveredmethods="6" elements="48" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="34" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="test_is() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_is2() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_to_redefine() : void" num="64" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_override() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_override2() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_skip() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_skipIfOneChild() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.sslr.api.typed">
         <metrics coveredelements="158" complexity="55" loc="538" methods="51" classes="11" statements="128" coveredconditionals="4" coveredmethods="47" elements="183" ncloc="373" files="3" conditionals="4" coveredstatements="107"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/api/typed/ActionParserTest.java" name="ActionParserTest.java">
            <metrics coveredelements="119" coveredconditionals="4" complexity="46" loc="352" coveredmethods="41" methods="42" elements="125" classes="9" ncloc="264" statements="79" conditionals="4" coveredstatements="74"/>
            <class name="ActionParserTest">
               <metrics coveredelements="62" complexity="21" methods="19" testruns="15" statements="49" coveredconditionals="0" coveredmethods="18" elements="68" testfailures="1" testduration="0.17300000000000001" conditionals="0" coveredstatements="44" testpasses="14"/>
            </class>
            <class name="ActionParserTest.MyGrammarKeys">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ActionParserTest.MyGrammar">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="ActionParserTest.MyTree">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ActionParserTest.Numeric">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ActionParserTest.Operator">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="ActionParserTest.UnaryExp">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="ActionParserTest.NumericList">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="ActionParserTest.MyTreeFactory">
               <metrics coveredelements="14" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="14" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="not_matching() : void" num="52" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="basic() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOf() : void" num="62" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional() : void" num="69" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore() : void" num="75" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore() : void" num="81" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipped_astnode() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="undefined_token_type() : void" num="92" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="comment() : void" num="101" testsuccess="true" count="1" testduration="0.142" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipped_text() : void" num="109" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_trivia() : void" num="114" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rootRule() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse_file() : void" num="126" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="unknown_file() : void" num="133" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="more_than_one_call_to_the_same_action_method() : void" num="144" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(GrammarRuleKey,String,Class&lt;T&gt;) : T" num="150" count="15" type="method"/>
            <line num="152" count="15" type="stmt"/>
            <line num="153" count="14" type="stmt"/>
            <line num="154" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(GrammarRuleKey,String) : AstNode" num="157" count="18" type="method"/>
            <line num="158" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="parser(GrammarRuleKey) : ActionParser&lt;AstNode&gt;" num="161" count="21" type="method"/>
            <line num="162" count="21" type="stmt"/>
            <line num="163" count="21" type="stmt"/>
            <line num="164" count="21" type="stmt"/>
            <line num="165" count="21" type="stmt"/>
            <line num="170" count="21" type="stmt"/>
            <line num="171" count="21" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertNotParse(GrammarRuleKey,String) : void" num="174" count="2" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyGrammar(GrammarBuilder&lt;AstNode&gt;,MyTreeFactory)" num="194" count="21" type="method"/>
            <line num="195" count="21" type="stmt"/>
            <line num="196" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="NUMERIC() : Numeric" num="199" count="21" type="method"/>
            <line num="200" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="NUMERIC2() : Numeric" num="205" count="21" type="method"/>
            <line num="206" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="OPERATOR() : Operator" num="210" count="21" type="method"/>
            <line num="211" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="UNARY_EXP() : UnaryExp" num="219" count="21" type="method"/>
            <line num="220" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="NUMERIC_LIST() : AstNode" num="227" count="21" type="method"/>
            <line num="228" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="POTENTIALLY_EMPTY_EXP_LIST() : AstNode" num="233" count="21" type="method"/>
            <line num="234" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="NUMERIC_WITH_EOF() : AstNode" num="239" count="21" type="method"/>
            <line num="240" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyTree(AstNodeType)" num="251" count="22" type="method"/>
            <line num="252" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="Numeric(AstNode)" num="261" count="14" type="method"/>
            <line num="262" count="14" type="stmt"/>
            <line num="263" count="14" type="stmt"/>
            <line num="264" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="267" count="11" type="method"/>
            <line num="269" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="Operator(AstNode)" num="278" count="2" type="method"/>
            <line num="279" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="283" count="2" type="method"/>
            <line num="285" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnaryExp(Optional&lt;AstNode&gt;,Numeric)" num="295" count="3" type="method"/>
            <line num="296" count="3" type="stmt"/>
            <line num="297" count="3" type="stmt"/>
            <line num="298" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="301" count="2" type="method"/>
            <line num="303" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="303" type="cond"/>
            <line complexity="1" visibility="public" signature="NumericList(List&lt;Numeric&gt;)" num="312" count="3" type="method"/>
            <line num="313" count="3" type="stmt"/>
            <line num="314" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="317" count="3" type="method"/>
            <line num="319" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="unaryExp(Optional&lt;AstNode&gt;,Numeric) : UnaryExp" num="326" count="3" type="method"/>
            <line num="327" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="numericList(List&lt;Numeric&gt;) : AstNode" num="330" count="1" type="method"/>
            <line num="331" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="numericList(Optional&lt;List&lt;Numeric&gt;&gt;) : AstNode" num="334" count="2" type="method"/>
            <line num="335" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="335" type="cond"/>
            <line complexity="1" visibility="public" signature="operator(AstNode) : Operator" num="338" count="2" type="method"/>
            <line num="339" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="numeric(AstNode) : Numeric" num="342" count="14" type="method"/>
            <line num="343" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="numeric(Numeric,AstNode) : Numeric" num="346" count="1" type="method"/>
            <line num="347" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/api/typed/InputTest.java" name="InputTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="5" loc="96" coveredmethods="5" methods="5" elements="28" classes="1" ncloc="60" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="InputTest">
               <metrics coveredelements="28" complexity="5" methods="5" testruns="4" statements="23" coveredconditionals="0" coveredmethods="5" elements="28" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="23" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="input() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="substring() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="lineAndColumnAt() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertLineAndColumn(String,int,int,int) : void" num="90" count="8" type="method"/>
            <line num="91" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/com/sonar/sslr/api/typed/OptionalTest.java" name="OptionalTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="90" coveredmethods="1" methods="4" elements="30" classes="1" ncloc="49" statements="26" conditionals="0" coveredstatements="10"/>
            <class name="OptionalTest">
               <metrics coveredelements="11" complexity="4" methods="4" testruns="4" statements="26" coveredconditionals="0" coveredmethods="1" elements="30" testfailures="3" testduration="0.001" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="present() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="absent() : void" num="56" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="present_or_null() : void" num="76" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="absent_or_null() : void" num="83" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.grammar">
         <metrics coveredelements="40" complexity="7" loc="140" methods="7" classes="2" statements="40" coveredconditionals="0" coveredmethods="6" elements="47" ncloc="86" files="2" conditionals="0" coveredstatements="34"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/grammar/MutableGrammarTest.java" name="MutableGrammarTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="19" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="MutableGrammarTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/grammar/MutableParsingRuleTest.java" name="MutableParsingRuleTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="6" loc="97" coveredmethods="5" methods="6" elements="39" classes="1" ncloc="67" statements="33" conditionals="0" coveredstatements="27"/>
            <class name="MutableParsingRuleTest">
               <metrics coveredelements="32" complexity="6" methods="6" testruns="6" statements="33" coveredconditionals="0" coveredmethods="5" elements="39" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="27" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="should_not_allow_redefinition() : void" num="40" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_override() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_skip_from_AST() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_skip_from_AST() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_skip_from_AST_if_one_child() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_return_real_AstNodeType() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.vm">
         <metrics coveredelements="527" complexity="80" loc="1571" methods="77" classes="20" statements="502" coveredconditionals="2" coveredmethods="67" elements="581" ncloc="1012" files="19" conditionals="2" coveredstatements="458"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/EndOfInputExpressionTest.java" name="EndOfInputExpressionTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="3" loc="62" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="35" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="EndOfInputExpressionTest">
               <metrics coveredelements="17" complexity="3" methods="3" testruns="3" statements="14" coveredconditionals="0" coveredmethods="3" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="14" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_stop() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/ErrorLocatingHandlerTest.java" name="ErrorLocatingHandlerTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="1" loc="46" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="21" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="ErrorLocatingHandlerTest">
               <metrics coveredelements="11" complexity="1" methods="1" testruns="1" statements="10" coveredconditionals="0" coveredmethods="1" elements="11" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_find_location_of_error() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/FirstOfExpressionTest.java" name="FirstOfExpressionTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="50" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="26" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FirstOfExpressionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/InstructionTest.java" name="InstructionTest.java">
            <metrics coveredelements="166" coveredconditionals="0" complexity="13" loc="282" coveredmethods="12" methods="13" elements="175" classes="1" ncloc="232" statements="162" conditionals="0" coveredstatements="154"/>
            <class name="InstructionTest">
               <metrics coveredelements="166" complexity="13" methods="13" testruns="13" statements="162" coveredconditionals="0" coveredmethods="12" elements="175" testfailures="1" testduration="0.064" conditionals="0" coveredstatements="154" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="jump() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : void" num="72" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="choice() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="predicateChoice() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commit() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commitVerify() : void" num="145" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commitVerify_should_throw_exception() : void" num="167" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ret() : void" num="179" testsuccess="true" count="1" testduration="0.042" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="backtrack() : void" num="200" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="end() : void" num="213" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failTwice() : void" num="226" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="backCommit() : void" num="245" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoreErrors() : void" num="269" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/MachineIntegrationTest.java" name="MachineIntegrationTest.java">
            <metrics coveredelements="49" coveredconditionals="0" complexity="13" loc="149" coveredmethods="11" methods="13" elements="59" classes="1" ncloc="110" statements="46" conditionals="0" coveredstatements="38"/>
            <class name="MachineIntegrationTest">
               <metrics coveredelements="49" complexity="13" methods="13" testruns="13" statements="46" coveredconditionals="0" coveredmethods="11" elements="59" testfailures="2" testduration="0.002" conditionals="0" coveredstatements="38" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="pattern() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="string() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sequence() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstOf() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optional() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextNot() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroOrMore_should_not_cause_infinite_loop() : void" num="105" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore() : void" num="116" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneOrMore_should_not_cause_infinite_loop() : void" num="124" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="trivia() : void" num="142" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/MachineTest.java" name="MachineTest.java">
            <metrics coveredelements="141" coveredconditionals="0" complexity="15" loc="249" coveredmethods="13" methods="15" elements="159" classes="1" ncloc="203" statements="144" conditionals="0" coveredstatements="128"/>
            <class name="MachineTest">
               <metrics coveredelements="141" complexity="15" methods="15" testruns="15" statements="144" coveredconditionals="0" coveredmethods="13" elements="159" testfailures="2" testduration="0.017" conditionals="0" coveredstatements="128" testpasses="13"/>
            </class>
            <line complexity="1" visibility="public" signature="subSequence_not_supported() : void" num="38" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_initial_state() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_jump() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_advanceIndex() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_pushReturn() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_detect_left_recursion() : void" num="98" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_pushBacktrack() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_pop() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail() : void" num="144" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="155" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_createLeafNode() : void" num="168" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_createNode() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_use_memo() : void" num="199" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_memorize() : void" num="216" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_not_use_memo() : void" num="232" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/NextExpressionTest.java" name="NextExpressionTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NextExpressionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/NextNotExpressionTest.java" name="NextNotExpressionTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NextNotExpressionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/NothingExpressionTest.java" name="NothingExpressionTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="47" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="NothingExpressionTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/OneOrMoreExpressionTest.java" name="OneOrMoreExpressionTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="OneOrMoreExpressionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/OptionalExpressionTest.java" name="OptionalExpressionTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="OptionalExpressionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/PatternExpressionTest.java" name="PatternExpressionTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="6" loc="105" coveredmethods="3" methods="4" elements="40" classes="1" ncloc="72" statements="36" conditionals="0" coveredstatements="29"/>
            <class name="PatternExpressionTest">
               <metrics coveredelements="32" complexity="6" methods="4" testruns="4" statements="36" coveredconditionals="0" coveredmethods="3" elements="40" testfailures="1" testduration="0.008" conditionals="0" coveredstatements="29" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="should_match() : void" num="50" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="should_backtrack() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_catch_StackOverflowError() : void" num="95" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/RuleRefExpressionTest.java" name="RuleRefExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="52" coveredmethods="1" methods="2" elements="7" classes="1" ncloc="25" statements="5" conditionals="0" coveredstatements="3"/>
            <class name="RuleRefExpressionTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="can_not_be_executed() : void" num="46" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/SequenceExpressionTest.java" name="SequenceExpressionTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="SequenceExpressionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/StringExpressionTest.java" name="StringExpressionTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="86" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="57" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="StringExpressionTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="4" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="29" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_match() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_backtrack2() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/SubExpression.java" name="SubExpression.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="10" loc="79" coveredmethods="6" methods="9" elements="23" classes="2" ncloc="44" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="SubExpression">
               <metrics coveredelements="13" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <class name="SubExpression.MockInstruction">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SubExpression(int)" num="29" count="12" type="method"/>
            <line num="30" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="compile(CompilationHandler) : Instruction[]" num="33" count="12" type="method"/>
            <line num="35" count="12" type="stmt"/>
            <line num="36" count="12" type="stmt"/>
            <line falsecount="12" truecount="23" num="36" type="cond"/>
            <line num="37" count="23" type="stmt"/>
            <line num="39" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="mockInstruction(int) : Instruction" num="42" count="46" type="method"/>
            <line num="43" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="MockInstruction(int)" num="49" count="46" type="method"/>
            <line num="50" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Machine) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="63" count="23" type="method"/>
            <line num="65" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="11" type="method"/>
            <line num="76" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/TokenExpressionTest.java" name="TokenExpressionTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="57" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TokenExpressionTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.018" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="35" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_implement_Matcher() : void" num="50" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/TriviaExpressionTest.java" name="TriviaExpressionTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="57" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TriviaExpressionTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_implement_Matcher() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/vm/ZeroOrMoreExpressionTest.java" name="ZeroOrMoreExpressionTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ZeroOrMoreExpressionTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="should_compile() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.sslr.internal.ast">
         <metrics coveredelements="330" complexity="53" loc="724" methods="53" classes="4" statements="286" coveredconditionals="0" coveredmethods="50" elements="339" ncloc="519" files="4" conditionals="0" coveredstatements="280"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/ast/AstSelectFactoryTest.java" name="AstSelectFactoryTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="58" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="31" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="AstSelectFactoryTest">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="3" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test_select() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_create() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/ast/EmptyAstSelectTest.java" name="EmptyAstSelectTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="12" loc="109" coveredmethods="11" methods="12" elements="31" classes="1" ncloc="71" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="EmptyAstSelectTest">
               <metrics coveredelements="28" complexity="12" methods="12" testruns="12" statements="19" coveredconditionals="0" coveredmethods="11" elements="31" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="17" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="test_children() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nextSibling() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_previousSibling() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_parent() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_firstAncestor() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_descendants() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isEmpty() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isNotEmpty() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_get_non_existing() : void" num="93" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_size() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_iterator() : void" num="104" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="106" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/ast/ListAstSelectTest.java" name="ListAstSelectTest.java">
            <metrics coveredelements="163" coveredconditionals="0" complexity="19" loc="301" coveredmethods="18" methods="19" elements="166" classes="1" ncloc="227" statements="147" conditionals="0" coveredstatements="145"/>
            <class name="ListAstSelectTest">
               <metrics coveredelements="163" complexity="19" methods="19" testruns="18" statements="147" coveredconditionals="0" coveredmethods="18" elements="166" testfailures="1" testduration="0.008" conditionals="0" coveredstatements="145" testpasses="17"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="49" count="18" type="method"/>
            <line num="51" count="18" type="stmt"/>
            <line num="52" count="18" type="stmt"/>
            <line num="53" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_children_when_no_children() : void" num="56" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_children_when_one_child() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_chilren_when_more_than_one_child() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nextSibling() : void" num="134" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_previousSibling() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_parent() : void" num="164" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_firstAncestor_by_type() : void" num="179" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_firstAncestor_by_types() : void" num="199" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_descendants() : void" num="220" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isEmpty() : void" num="226" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isNotEmpty() : void" num="231" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter_by_type() : void" num="236" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter_by_types() : void" num="250" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter() : void" num="265" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_get() : void" num="279" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_get_non_existing() : void" num="285" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_size() : void" num="291" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_iterator() : void" num="296" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sslr-core/src/test/java/org/sonar/sslr/internal/ast/SingleAstSelectTest.java" name="SingleAstSelectTest.java">
            <metrics coveredelements="127" coveredconditionals="0" complexity="19" loc="256" coveredmethods="18" methods="19" elements="130" classes="1" ncloc="190" statements="111" conditionals="0" coveredstatements="109"/>
            <class name="SingleAstSelectTest">
               <metrics coveredelements="127" complexity="19" methods="19" testruns="18" statements="111" coveredconditionals="0" coveredmethods="18" elements="130" testfailures="1" testduration="0.04300000000000001" conditionals="0" coveredstatements="109" testpasses="17"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="48" count="18" type="method"/>
            <line num="50" count="18" type="stmt"/>
            <line num="51" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_children_when_no_children() : void" num="54" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_children_when_one_child() : void" num="61" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_chilren_when_more_than_one_child() : void" num="92" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nextSibling() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_previousSibling() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_parent() : void" num="152" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_firstAncestor_by_type() : void" num="162" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_firstAncestor_by_types() : void" num="176" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_descendants() : void" num="191" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isEmpty() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isNotEmpty() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter_by_type() : void" num="207" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter_by_types() : void" num="216" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_filter() : void" num="226" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_get0() : void" num="235" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_get_non_existing() : void" num="240" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_size() : void" num="246" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="248" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_iterator() : void" num="251" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="253" count="1" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>