# Workflow for testing Sorald.
#
# Note that actions are specified by commit hash. This is to avoid the security
# risk of someone injecting malicious code into a release and then simply
# changing a tag.

name: tests

on:
  pull_request:
  push:
    branches: master 
  schedule:
  - cron: "0 0 * * *"

env:
  JAVA_DISTRIBUTION: 'adopt'

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - name: Disable Git's autocrlf on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --global core.autocrlf false

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          fetch-depth: 0  # SonarCloud prefers non-shallow clones
      - uses: actions/setup-java@860f60056505705214d223b91ed7a30f173f6142 # tag=v3.3.0
        with:
          java-version: 11
          java-package: jdk
          architecture: x64
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Get date for cache # see https://github.com/actions/cache README
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Use Maven dependency cache
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # tag=v3.0.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Use SonarCloud package cache
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # tag=v3.0.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Check formatting with spotless
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: mvn spotless:check
      - name: Build project
        run: |
          mvn -B package -DskipTests
          mvn -B test-compile
      - name: Fetch final dependencies
        # this is a hack to fetch some test runtime dependencies
        run: timeout 10 mvn -B test || echo "Done fetching dependencies"
        shell: bash
      - name: Run tests
        run: mvn test -pl sorald -Dtest=WarningMinerTest#canDetectRuleViolation_thatRequiresClasspath_whenResolvingClasspathInMavenProject
